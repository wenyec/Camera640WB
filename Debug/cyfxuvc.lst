
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f144  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  40012144  40012144  00012144  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  40012294  40012294  00012294  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  4001232c  4001232c  0001232c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  40012798  40012798  00012798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  400127c4  400127c4  000127c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  400128bc  400128bc  000128bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  400128c8  400128c8  000128c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  400128d4  400128d4  000128d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  400128fc  400128fc  000128fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  4001290c  4001290c  0001290c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  4001291c  4001291c  0001291c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  4001292c  4001292c  0001292c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012940  40012940  00012940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012950  40012950  00012950  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  4001295c  4001295c  0001295c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012970  40012970  00012970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  400129ac  400129ac  000129ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  400129d4  400129d4  000129d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012a0c  40012a0c  00012a0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012a40  40012a40  00012a40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012a58  40012a58  00012a58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012a70  40012a70  00012a70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012a8c  40012a8c  00012a8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012b10  40012b10  00012b10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40012be4  40012be4  00012be4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  40012c2c  40012c2c  00012c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  40012dbc  40012dbc  00012dbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  40012e3c  40012e3c  00012e3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  40012e4c  40012e4c  00012e4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  40013080  40013080  00013080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  40013178  40013178  00013178  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  40013410  40013410  00013410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  40013448  40013448  00013448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  400134a4  400134a4  000134a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  400134c4  400134c4  000134c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  40013520  40013520  00013520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  40013544  40013544  00013544  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  40013564  40013564  00013564  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  40013658  40013658  00013658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  400136e4  400136e4  000136e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  400136e8  400136e8  000136e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  4001370c  4001370c  0001370c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013820  40013820  00013820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  400138c0  400138c0  000138c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013918  40013918  00013918  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013968  40013968  00013968  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013a64  40013a64  00013a64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013b14  40013b14  00013b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40013bc8  40013bc8  00013bc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40013bf0  40013bf0  00013bf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  40013c00  40013c00  00013c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40013da0  40013da0  00013da0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40013eb8  40013eb8  00013eb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  40013f08  40013f08  00013f08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  40014078  40014078  00014078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  40014150  40014150  00014150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  400141d4  400141d4  000141d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  400141ec  400141ec  000141ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  4001436c  4001436c  0001436c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  400143ac  400143ac  000143ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  400143bc  400143bc  000143bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  400143cc  400143cc  000143cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  400143dc  400143dc  000143dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  400143ec  400143ec  000143ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  400144bc  400144bc  000144bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  400146ec  400146ec  000146ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  4001477c  4001477c  0001477c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  400147f0  400147f0  000147f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014818  40014818  00014818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014854  40014854  00014854  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  4001487c  4001487c  0001487c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  400148a4  400148a4  000148a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  400148cc  400148cc  000148cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  400148f4  400148f4  000148f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  4001491c  4001491c  0001491c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014944  40014944  00014944  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014970  40014970  00014970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  400149d8  400149d8  000149d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  400149ec  400149ec  000149ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014a40  40014a40  00014a40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014aa0  40014aa0  00014aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014b40  40014b40  00014b40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  40014c20  40014c20  00014c20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  40014d00  40014d00  00014d00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  40014d48  40014d48  00014d48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40014df4  40014df4  00014df4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  40014e38  40014e38  00014e38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  40014eac  40014eac  00014eac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  40015010  40015010  00015010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  40015064  40015064  00015064  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  400150b8  400150b8  000150b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  400153a8  400153a8  000153a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  40015438  40015438  00015438  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  400156a4  400156a4  000156a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015a8c  40015a8c  00015a8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015b3c  40015b3c  00015b3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  40015c10  40015c10  00015c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40015dc4  40015dc4  00015dc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  400160f8  400160f8  000160f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  40016218  40016218  00016218  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  40016284  40016284  00016284  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  4001637c  4001637c  0001637c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  40016458  40016458  00016458  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  400165f8  400165f8  000165f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  400167e4  400167e4  000167e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016a04  40016a04  00016a04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  40016c3c  40016c3c  00016c3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  40016d6c  40016d6c  00016d6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  40016f10  40016f10  00016f10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  40017010  40017010  00017010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  4001712c  4001712c  0001712c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  40017180  40017180  00017180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  40017540  40017540  00017540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  4001782c  4001782c  0001782c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017b24  40017b24  00017b24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  40018268  40018268  00018268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  400183bc  400183bc  000183bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  400184ec  400184ec  000184ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  4001861c  4001861c  0001861c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  40018758  40018758  00018758  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  400189c8  400189c8  000189c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40018c24  40018c24  00018c24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40018da4  40018da4  00018da4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  40018f2c  40018f2c  00018f2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  40018fe0  40018fe0  00018fe0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  40019098  40019098  00019098  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  40019134  40019134  00019134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  400191d4  400191d4  000191d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  40019540  40019540  00019540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019ad0  40019ad0  00019ad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a0b0  4001a0b0  0001a0b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001a738  4001a738  0001a738  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001a79c  4001a79c  0001a79c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001a7ec  4001a7ec  0001a7ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001a8e4  4001a8e4  0001a8e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001a9fc  4001a9fc  0001a9fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001aa78  4001aa78  0001aa78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001abac  4001abac  0001abac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001ad10  4001ad10  0001ad10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001ad60  4001ad60  0001ad60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b010  4001b010  0001b010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b194  4001b194  0001b194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b1d4  4001b1d4  0001b1d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b28c  4001b28c  0001b28c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b31c  4001b31c  0001b31c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001b5a4  4001b5a4  0001b5a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001b5b4  4001b5b4  0001b5b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001b708  4001b708  0001b708  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001b888  4001b888  0001b888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001baec  4001baec  0001baec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bafc  4001bafc  0001bafc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001bbc8  4001bbc8  0001bbc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001bc88  4001bc88  0001bc88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001bc98  4001bc98  0001bc98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c290  4001c290  0001c290  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c314  4001c314  0001c314  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c4dc  4001c4dc  0001c4dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001c600  4001c600  0001c600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001c748  4001c748  0001c748  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001c8bc  4001c8bc  0001c8bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001c988  4001c988  0001c988  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001cb50  4001cb50  0001cb50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001cb60  4001cb60  0001cb60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001cb70  4001cb70  0001cb70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001cbbc  4001cbbc  0001cbbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001cc28  4001cc28  0001cc28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001cca4  4001cca4  0001cca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001cd58  4001cd58  0001cd58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001cf30  4001cf30  0001cf30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d250  4001d250  0001d250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d25c  4001d25c  0001d25c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d340  4001d340  0001d340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d518  4001d518  0001d518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001d60c  4001d60c  0001d60c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001d6fc  4001d6fc  0001d6fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001d8d4  4001d8d4  0001d8d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001da98  4001da98  0001da98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001dbec  4001dbec  0001dbec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001df7c  4001df7c  0001df7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e2f4  4001e2f4  0001e2f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e36c  4001e36c  0001e36c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e3e4  4001e3e4  0001e3e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001e580  4001e580  0001e580  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001e764  4001e764  0001e764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001e9d4  4001e9d4  0001e9d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001ea8c  4001ea8c  0001ea8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001eabc  4001eabc  0001eabc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001eb5c  4001eb5c  0001eb5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001ef3c  4001ef3c  0001ef3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f028  4001f028  0001f028  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001f644  4001f644  0001f644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001f6e0  4001f6e0  0001f6e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001f750  4001f750  0001f750  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001f7cc  4001f7cc  0001f7cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001f940  4001f940  0001f940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001f9ac  4001f9ac  0001f9ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  4001fbe0  4001fbe0  0001fbe0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  4001fbfc  4001fbfc  0001fbfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  4001fdf4  4001fdf4  0001fdf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  40020068  40020068  00020068  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  40020120  40020120  00020120  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  40020238  40020238  00020238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020634  40020634  00020634  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  4002072c  4002072c  0002072c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  40020838  40020838  00020838  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020a04  40020a04  00020a04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020a58  40020a58  00020a58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020ab8  40020ab8  00020ab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  40020bfc  40020bfc  00020bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  40020c4c  40020c4c  00020c4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  40020e40  40020e40  00020e40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  40020fd0  40020fd0  00020fd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  40021168  40021168  00021168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  40021378  40021378  00021378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40021b84  40021b84  00021b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40021bd4  40021bd4  00021bd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40021cd8  40021cd8  00021cd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  40021dec  40021dec  00021dec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  40021df8  40021df8  00021df8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  40021e08  40021e08  00021e08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  40021e1c  40021e1c  00021e1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  40021e30  40021e30  00021e30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  40021e40  40021e40  00021e40  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40021e80  40021e80  00021e80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40021e98  40021e98  00021e98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40021eb0  40021eb0  00021eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  40021eec  40021eec  00021eec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  40021f1c  40021f1c  00021f1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  40021f48  40021f48  00021f48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40021fc8  40021fc8  00021fc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  4002205c  4002205c  0002205c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  400221ac  400221ac  000221ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  40022238  40022238  00022238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  40022318  40022318  00022318  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  40022328  40022328  00022328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  4002237c  4002237c  0002237c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  40022418  40022418  00022418  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  40022484  40022484  00022484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  400224f0  400224f0  000224f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022668  40022668  00022668  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  40022784  40022784  00022784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022948  40022948  00022948  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022a38  40022a38  00022a38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022b10  40022b10  00022b10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40022b94  40022b94  00022b94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40022ba4  40022ba4  00022ba4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40022bb4  40022bb4  00022bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40022c10  40022c10  00022c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40022cf8  40022cf8  00022cf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40022db0  40022db0  00022db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  40022df4  40022df4  00022df4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023010  40023010  00023010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  40023060  40023060  00023060  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  400231ec  400231ec  000231ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  40023248  40023248  00023248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  4002333c  4002333c  0002333c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  4002342c  4002342c  0002342c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  400235e8  400235e8  000235e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  4002362c  4002362c  0002362c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023844  40023844  00023844  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023a74  40023a74  00023a74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023a84  40023a84  00023a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f04  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          00002324  40030f20  40030f20  00028f04  2**5
                  ALLOC
266 .debug_abbrev 00001159  00000000  00000000  00028f04  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d2a0  00000000  00000000  0002a05d  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   0002301f  00000000  00000000  000a72fd  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca31c  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d61c1  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d61f8  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d63a8  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    000042c0  00000000  00000000  000d6fb1  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000e864  00000000  00000000  000db271  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 00007643  00000000  00000000  000e9ad5  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f1118  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a710  00000000  00000000  000f11b8  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 00000528  00000000  00000000  000fb8c8  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fbdf0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031600 	.word	0x40031600

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp_.debug_frame$20>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp_.debug_frame$20>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp_.debug_frame$20+0x4>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp_.debug_frame$20+0x8>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$52+0xa>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <__ARM_grp_.debug_frame$20+0x18>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$27+0x30>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp_.debug_frame$20+0x10>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20+0x48>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp_.debug_frame$20+0x10>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$34+0xc>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$34+0x38>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$41+0xc>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_frame$41+0x38>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$48+0x20>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x4c>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_pubnames$24+0x9>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_frame$62+0x8>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp_.debug_frame$20+0x4>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_pubnames$38+0x13>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp_.debug_frame$20+0x4>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_frame$69>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_pubnames$45+0x24>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp_.debug_frame$20+0xc>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$66+0x24>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp_.debug_frame$20+0x4>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp_.debug_frame$20+0x18>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$66+0x18>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp_.debug_frame$20+0x18>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$73+0x2c>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp_.debug_frame$20+0x18>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$73+0x20>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp_.debug_frame$20+0x18>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x9>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x21>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x20>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp_.debug_frame$20+0x4>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x1e>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp_.debug_frame$20+0x4>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp_.debug_frame$13>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp_.debug_frame$20+0x4>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x13>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp_.debug_frame$20+0x4>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp_.debug_frame$20+0x14>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d38 	.word	0x40030d38
     af8:	40030d20 	.word	0x40030d20
     afc:	40031a3c 	.word	0x40031a3c
     b00:	4003196c 	.word	0x4003196c
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d34 	.word	0x40030d34
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d3c 	.word	0x40030d3c

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x1f>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp..debug_macinfo$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$31+0x24>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp_.debug_frame$41+0x10>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0xf>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$20+0x20>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$55+0x1c>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$20+0x20>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$55+0x1c>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_pubnames$31+0x3>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_frame$13+0x18>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_frame$13+0x4>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_frame$111+0x20>
     ca0:	ea00003a 	b	d90 <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x8>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_frame$76+0x28>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_pubnames$115>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_pubnames$10+0xe>
     cbc:	ea000000 	b	cc4 <__ARM_grp_.debug_pubnames$17+0x1>
     cc0:	ea000001 	b	ccc <__ARM_grp_.debug_pubnames$17+0x9>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_pubnames$31+0xb>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_pubnames$24+0x1d>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_pubnames$31+0xb>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_pubnames$31+0xf>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_pubnames$31+0x13>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_frame$76+0x24>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_pubnames$31+0x17>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_frame$76+0x24>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_pubnames$31+0x17>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_pubnames$31+0xb>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_pubnames$31+0xb>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_pubnames$31+0xf>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x1b>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$59+0x1c>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$59+0x1c>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_pubnames$31+0x13>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_pubnames$87+0x5>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_pubnames$31+0x1f>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_frame$104>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_pubnames$31+0x1f>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_frame$104>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_frame$27>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_pubnames$87+0x5>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_pubnames$87+0x5>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_pubnames$80+0x1b>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_pubnames$87+0x5>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_frame$27>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_frame$111+0x1c>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_frame$27+0x4>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$108+0x7>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_pubnames$31+0x13>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_frame$125+0x10>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_pubnames$31+0xb>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_pubnames$31+0xf>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_frame$27+0x4>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_frame$27+0x8>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_pubnames$24+0x5>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_frame$20>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_pubnames$24+0x1>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_pubnames$31+0x3>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_pubnames$24+0x19>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$31+0x18>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_pubnames$38>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$31+0x24>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$31+0x24>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$31+0x24>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_pubnames$31+0x3>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_frame$41+0x4>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_frame$48+0xc>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x1f>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x26>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0xf>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x23>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp_.debug_frame$62+0x10>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_pubnames$38+0x4>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp_.debug_frame$62+0x2c>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_pubnames$38+0x4>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_pubnames$31+0x10>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$20+0x1c>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_pubnames$31+0x4>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x1b>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_pubnames$31+0x4>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_frame$27+0xc>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_pubnames$31+0x4>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_frame$41>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_frame$27>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_frame$55+0x18>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_pubnames$38+0x8>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_frame$27>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x1b>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_frame$48+0x18>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_frame$48+0x18>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_frame$48+0x18>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_pubnames$31+0x13>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_frame$48+0x18>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_frame$55+0x4>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_frame$55+0x10>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_pubnames$101+0x2>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x26>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_frame$20+0x18>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x26>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_pubnames$31+0x17>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x26>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_pubnames$31+0x17>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_pubnames$38+0xf>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_pubnames$129+0xa>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_frame$83+0x4>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_pubnames$38+0x10>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_pubnames$38+0x14>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0xe>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_pubnames$38+0x18>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp_.debug_frame$90+0xc>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x6>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x32>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp_.debug_frame$97+0x10>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp_.debug_pubnames$17+0x12>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_pubnames$24+0x9>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x26>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$38+0xc>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_pubnames$31+0x17>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x26>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x26>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_pubnames$31+0x17>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_pubnames$38+0xf>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$45+0xb>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_pubnames$52+0x12>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_frame$118+0x14>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$66+0x1f>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_pubnames$80>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_frame$132>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_frame$132+0x2c>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$139+0xc>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$139+0x38>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_frame$20+0x14>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_pubnames$38+0x1c>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_pubnames$38+0x1c>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_frame$20+0x10>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_pubnames$38+0x1c>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_pubnames$31+0x7>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_pubnames$31+0x3>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$20+0x1c>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d40 	.word	0x40031d40
    17cc:	40030d84 	.word	0x40030d84
    17d0:	40030d64 	.word	0x40030d64
    17d4:	40031eb8 	.word	0x40031eb8
    17d8:	40030d70 	.word	0x40030d70
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d6c 	.word	0x40030d6c
    17e4:	40030d9c 	.word	0x40030d9c
    17e8:	40030d40 	.word	0x40030d40
    17ec:	40030da4 	.word	0x40030da4
    17f0:	40030db4 	.word	0x40030db4
    17f4:	40030d74 	.word	0x40030d74
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d68 	.word	0x40030d68
    1800:	80008000 	.word	0x80008000
    1804:	40030db0 	.word	0x40030db0
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a78 	.word	0x40031a78
    1810:	40031b18 	.word	0x40031b18
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_pubnames$59+0x1d>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_pubnames$59+0x21>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_pubnames$59+0x25>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_pubnames$59+0x29>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_pubnames$66+0x3>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_pubnames$66+0x7>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_pubnames$66+0xb>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_pubnames$66+0xf>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_pubnames$66+0x13>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_frame$48>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_frame$48+0x4>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_frame$48+0x8>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_frame$48+0xc>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_frame$48+0x10>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_frame$48+0x14>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_pubnames$73+0x2>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_pubnames$73+0x6>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_pubnames$73+0xa>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_pubnames$73+0xe>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	400120f8 	.word	0x400120f8
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_pubnames$87>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_pubnames$87>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_pubnames$87>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_pubnames$87+0x4>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp_.debug_pubnames$66+0xc>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp_.debug_pubnames$66+0xc>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp_.debug_pubnames$66+0x10>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030dbc 	.word	0x40030dbc

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp..debug_line$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x9>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp..debug_line$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x9>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315b0 	.word	0x400315b0

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x21>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_frame$20+0x8>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_frame$20>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <CyU3PLppDmaIntHandler+0x14>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x25>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x5>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_pubnames$101+0xa>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_pubnames$101+0x2>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_pubnames$94+0x12>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_frame$34+0xc>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_frame$34+0x4>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp_.debug_pubnames$108+0x11>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x15>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_frame$27>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$122>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_pubnames$115+0x21>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_pubnames$115+0x9>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_pubnames$157+0x3>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_pubnames$143+0x1>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$129+0x21>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$129+0x19>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_pubnames$129+0x1>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_pubnames$157+0x7>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x1d>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x15>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0xd>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_frame$20+0x10>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000ac3c 	.word	0x4000ac3c

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__CyU3PBusyWait_veneer+0x4>
    1fb4:	40013410 	.word	0x40013410

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	40021e98 	.word	0x40021e98

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a3d0 	.word	0x4000a3d0

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	40021e08 	.word	0x40021e08

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <__ARM_grp..debug_line$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x1>
    1fd4:	4000ad2c 	.word	0x4000ad2c

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40021fc8 	.word	0x40021fc8

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	400141d4 	.word	0x400141d4

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <__ARM_grp_.debug_frame$34>
    1fec:	4000ae44 	.word	0x4000ae44

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000ae68 	.word	0x4000ae68

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	40021dec 	.word	0x40021dec

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__CyU3PUsbAddToEventLog_veneer+0x4>
    2004:	4001f940 	.word	0x4001f940

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000abe8 	.word	0x4000abe8

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <__ARM_grp_.debug_pubnames$178>
    2014:	4000a290 	.word	0x4000a290

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	40009d04 	.word	0x40009d04

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__CyU3PLppEventSend_veneer+0x4>
    2024:	40013bc8 	.word	0x40013bc8

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__CyU3PUsbAckSetup_veneer+0x4>
    202c:	4001c4dc 	.word	0x4001c4dc

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__CyU3PMboxReset_veneer+0x4>
    2034:	4001b194 	.word	0x4001b194

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__CyU3PDmaIntHandler_veneer+0x4>
    203c:	400224f0 	.word	0x400224f0

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__ARM_grp_.debug_pubnames$185>
    2044:	40020e40 	.word	0x40020e40

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	400160f8 	.word	0x400160f8

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260,
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea003f8e 	b	40012e4c <CyU3PDebugPrint>
40003010:	40010ac0 	.word	0x40010ac0

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb003f85 	bl	40012e4c <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb003f78 	bl	40012e4c <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb003f6a 	bl	40012e4c <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb003f5d 	bl	40012e4c <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb003f50 	bl	40012e4c <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb003f43 	bl	40012e4c <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb003f35 	bl	40012e4c <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb003f28 	bl	40012e4c <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb003f1b 	bl	40012e4c <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb003f0e 	bl	40012e4c <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb003f01 	bl	40012e4c <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb003ef4 	bl	40012e4c <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb003ee7 	bl	40012e4c <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb003eda 	bl	40012e4c <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003ecd 	bl	40012e4c <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003ec0 	bl	40012e4c <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003eb3 	bl	40012e4c <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003ea7 	bl	40012e4c <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010ad8 	.word	0x40010ad8
400033b8:	40010af4 	.word	0x40010af4
400033bc:	40010b54 	.word	0x40010b54

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001a5f 	bl	40009d6c <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010bac 	.word	0x40010bac

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb001523 	bl	40008924 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb00151f 	bl	40008924 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003e44 	bl	40012e4c <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010a40 	.word	0x40010a40
40003548:	40010bc0 	.word	0x40010bc0

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea00676b 	b	4001d340 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f20 	.word	0x40030f20

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea0013ff 	b	4000860c <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f20 	.word	0x40030f20
40003614:	40033244 	.word	0x40033244

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea003fce 	b	40013564 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb001861 	bl	400097e8 <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f40 	.word	0x40030f40
4000366c:	40032e8c 	.word	0x40032e8c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb001422 	bl	40008710 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb00180e 	bl	400096d8 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032e8c 	.word	0x40032e8c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea0018cf 	b	400099f8 <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb00185d 	bl	40009d6c <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb0012c1 	bl	40008710 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb0016ad 	bl	400096d8 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb00187a 	bl	40009ee4 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f40 	.word	0x40030f40
40003d00:	40030f44 	.word	0x40030f44
40003d04:	40032e8c 	.word	0x40032e8c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb00127e 	bl	40008710 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb00188f 	bl	40009f64 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb00172e 	bl	400099f8 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb0018b8 	bl	4000a038 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea001860 	b	40009ee4 <_txe_mutex_delete>
40003d60:	40030f44 	.word	0x40030f44
40003d64:	40030f40 	.word	0x40030f40

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb001266 	bl	40008710 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb001877 	bl	40009f64 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb001879 	bl	4000a038 <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb001854 	bl	4000a038 <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f44 	.word	0x40030f44
40003ef0:	40030f40 	.word	0x40030f40

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb001203 	bl	40008710 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb001814 	bl	40009f64 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb00183f 	bl	4000a038 <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f44 	.word	0x40030f44
40004024:	40030f40 	.word	0x40030f40

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb0011b7 	bl	40008710 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb0017c8 	bl	40009f64 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb001666 	bl	400099f8 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb0017f0 	bl	4000a038 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb001799 	bl	40009ee4 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb00163c 	bl	40009978 <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f44 	.word	0x40030f44
40004094:	40030f40 	.word	0x40030f40
40004098:	40032e8c 	.word	0x40032e8c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007dd8 	bl	40023844 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001b 	bne	40004158 <SensorRead2B.clone.1+0xbc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
400040e8:	e3a00064 	mov	r0, #100	; 0x64
400040ec:	eb003cc7 	bl	40013410 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004118:	eb007cc3 	bl	4002342c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
40004124:	e3a00064 	mov	r0, #100	; 0x64
40004128:	eb003cb8 	bl	40013410 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f102c 	ldr	r1, [pc, #44]	; 40004174 <SensorRead2B.clone.1+0xd8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003b3d 	bl	40012e4c <CyU3PDebugPrint>
40004154:	eafffff4 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004158:	e5d4c001 	ldrb	ip, [r4, #1]
4000415c:	e5d43000 	ldrb	r3, [r4]
40004160:	e59f1010 	ldr	r1, [pc, #16]	; 40004178 <SensorRead2B.clone.1+0xdc>
40004164:	e3a00004 	mov	r0, #4
40004168:	e58dc000 	str	ip, [sp]
4000416c:	eb003b36 	bl	40012e4c <CyU3PDebugPrint>
40004170:	eaffffde 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004174:	40010ec0 	.word	0x40010ec0
40004178:	40010ea4 	.word	0x40010ea4

4000417c <SensorWrite2B>:
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
4000417c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004180:	e35000a0 	cmp	r0, #160	; 0xa0
40004184:	13500070 	cmpne	r0, #112	; 0x70
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004188:	e24dd014 	sub	sp, sp, #20
4000418c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	03a0e000 	moveq	lr, #0
40004194:	13a0e001 	movne	lr, #1
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004198:	e1a07001 	mov	r7, r1
4000419c:	e1a06002 	mov	r6, r2
400041a0:	e1a05003 	mov	r5, r3
400041a4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a8:	1a000022 	bne	40004238 <SensorWrite2B+0xbc>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041ac:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041b0:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041b4:	e3a0c003 	mov	ip, #3
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041b8:	e28d100c 	add	r1, sp, #12
400041bc:	e3a02001 	mov	r2, #1
400041c0:	e1a0300e 	mov	r3, lr
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
400041c4:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = lowAddr;
400041c8:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
400041cc:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
400041d4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041d8:	eb007d99 	bl	40023844 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041dc:	e3500000 	cmp	r0, #0
400041e0:	0a000011 	beq	4000422c <SensorWrite2B+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041e4:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400041e8:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041ec:	e1a0000d 	mov	r0, sp
400041f0:	e28d100c 	add	r1, sp, #12
400041f4:	e1a0200c 	mov	r2, ip
400041f8:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400041fc:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004200:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004204:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004208:	eb007d8d 	bl	40023844 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000420c:	e2504000 	subs	r4, r0, #0
40004210:	0a000002 	beq	40004220 <SensorWrite2B+0xa4>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004214:	e1a00004 	mov	r0, r4
40004218:	e28dd014 	add	sp, sp, #20
4000421c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
40004220:	e3a00064 	mov	r0, #100	; 0x64
40004224:	eb003c79 	bl	40013410 <CyU3PBusyWait>
40004228:	eafffff9 	b	40004214 <SensorWrite2B+0x98>
4000422c:	e3a00064 	mov	r0, #100	; 0x64
40004230:	eb003c76 	bl	40013410 <CyU3PBusyWait>
40004234:	eaffffea 	b	400041e4 <SensorWrite2B+0x68>
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004238:	e3a00004 	mov	r0, #4
4000423c:	e59f1008 	ldr	r1, [pc, #8]	; 4000424c <SensorWrite2B+0xd0>
40004240:	eb003b01 	bl	40012e4c <CyU3PDebugPrint>
		return 1;
40004244:	e3a04001 	mov	r4, #1
40004248:	eafffff1 	b	40004214 <SensorWrite2B+0x98>
4000424c:	40010edc 	.word	0x40010edc

40004250 <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004250:	e35000a0 	cmp	r0, #160	; 0xa0
40004254:	13500070 	cmpne	r0, #112	; 0x70
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004258:	e92d4010 	push	{r4, lr}
4000425c:	e1a0c000 	mov	ip, r0
40004260:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004264:	03a0e000 	moveq	lr, #0
40004268:	13a0e001 	movne	lr, #1
4000426c:	1a00001a 	bne	400042dc <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
40004270:	e3530040 	cmp	r3, #64	; 0x40
40004274:	8a000013 	bhi	400042c8 <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
40004278:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
4000427c:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004280:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004284:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
40004288:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
4000428c:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004290:	e28d0004 	add	r0, sp, #4
40004294:	e59d1018 	ldr	r1, [sp, #24]
40004298:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
4000429c:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
400042a0:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
400042a4:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
400042a8:	eb007d65 	bl	40023844 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042ac:	e2504000 	subs	r4, r0, #0
400042b0:	1a000001 	bne	400042bc <SensorWrite+0x6c>
	{
		CyU3PBusyWait(100); //change into 100us.
400042b4:	e3a00064 	mov	r0, #100	; 0x64
400042b8:	eb003c54 	bl	40013410 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400042bc:	e1a00004 	mov	r0, r4
400042c0:	e28dd010 	add	sp, sp, #16
400042c4:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400042c8:	e3a00004 	mov	r0, #4
400042cc:	e59f101c 	ldr	r1, [pc, #28]	; 400042f0 <SensorWrite+0xa0>
400042d0:	eb003add 	bl	40012e4c <CyU3PDebugPrint>
		return 1;
400042d4:	e3a04001 	mov	r4, #1
400042d8:	eafffff7 	b	400042bc <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400042dc:	e3a00004 	mov	r0, #4
400042e0:	e59f100c 	ldr	r1, [pc, #12]	; 400042f4 <SensorWrite+0xa4>
400042e4:	eb003ad8 	bl	40012e4c <CyU3PDebugPrint>
		return 1;
400042e8:	e3a04001 	mov	r4, #1
400042ec:	eafffff2 	b	400042bc <SensorWrite+0x6c>
400042f0:	40010f00 	.word	0x40010f00
400042f4:	40010edc 	.word	0x40010edc

400042f8 <SensorRead2B>:
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400042f8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400042fc:	e35000a1 	cmp	r0, #161	; 0xa1
40004300:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004304:	e24dd01c 	sub	sp, sp, #28
40004308:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000430c:	03a0c000 	moveq	ip, #0
40004310:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004314:	e1a06001 	mov	r6, r1
40004318:	e1a0e002 	mov	lr, r2
4000431c:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004320:	1a000021 	bne	400043ac <SensorRead2B+0xb4>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
40004324:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004328:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000432c:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
40004330:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004334:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
40004338:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000433c:	e1a01005 	mov	r1, r5
40004340:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004344:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
40004348:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
4000434c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
40004350:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004354:	eb007d3a 	bl	40023844 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004358:	e2502000 	subs	r2, r0, #0
4000435c:	1a000017 	bne	400043c0 <SensorRead2B+0xc8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
40004360:	e3a00064 	mov	r0, #100	; 0x64
40004364:	eb003c29 	bl	40013410 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004368:	e3a0e001 	mov	lr, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
4000436c:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004370:	e28d000c 	add	r0, sp, #12
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004374:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004378:	e1a01005 	mov	r1, r5
4000437c:	e1a0200e 	mov	r2, lr
40004380:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004384:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004388:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
4000438c:	eb007c26 	bl	4002342c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004390:	e2504000 	subs	r4, r0, #0
40004394:	1a000010 	bne	400043dc <SensorRead2B+0xe4>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
40004398:	e3a00064 	mov	r0, #100	; 0x64
4000439c:	eb003c1b 	bl	40013410 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
400043a0:	e1a00004 	mov	r0, r4
400043a4:	e28dd01c 	add	sp, sp, #28
400043a8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400043ac:	e3a00004 	mov	r0, #4
400043b0:	e59f1044 	ldr	r1, [pc, #68]	; 400043fc <SensorRead2B+0x104>
400043b4:	eb003aa4 	bl	40012e4c <CyU3PDebugPrint>
		return 1;
400043b8:	e3a04001 	mov	r4, #1
400043bc:	eafffff7 	b	400043a0 <SensorRead2B+0xa8>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043c0:	e5d5c001 	ldrb	ip, [r5, #1]
400043c4:	e5d53000 	ldrb	r3, [r5]
400043c8:	e59f1030 	ldr	r1, [pc, #48]	; 40004400 <SensorRead2B+0x108>
400043cc:	e3a00004 	mov	r0, #4
400043d0:	e58dc000 	str	ip, [sp]
400043d4:	eb003a9c 	bl	40012e4c <CyU3PDebugPrint>
400043d8:	eaffffe2 	b	40004368 <SensorRead2B+0x70>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043dc:	e5d5c001 	ldrb	ip, [r5, #1]
400043e0:	e5d53000 	ldrb	r3, [r5]
400043e4:	e59f1018 	ldr	r1, [pc, #24]	; 40004404 <SensorRead2B+0x10c>
400043e8:	e1a02004 	mov	r2, r4
400043ec:	e3a00004 	mov	r0, #4
400043f0:	e58dc000 	str	ip, [sp]
400043f4:	eb003a94 	bl	40012e4c <CyU3PDebugPrint>
400043f8:	eaffffe8 	b	400043a0 <SensorRead2B+0xa8>
400043fc:	40010edc 	.word	0x40010edc
40004400:	40010ea4 	.word	0x40010ea4
40004404:	40010ec0 	.word	0x40010ec0

40004408 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004408:	e35000a1 	cmp	r0, #161	; 0xa1
4000440c:	13500071 	cmpne	r0, #113	; 0x71
#endif
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004410:	e92d4030 	push	{r4, r5, lr}
40004414:	e1a0c000 	mov	ip, r0
40004418:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000441c:	03a0e000 	moveq	lr, #0
40004420:	13a0e001 	movne	lr, #1
40004424:	1a00001c 	bne	4000449c <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004428:	e3530040 	cmp	r3, #64	; 0x40
4000442c:	8a000015 	bhi	40004488 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004430:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004434:	e1a02003 	mov	r2, r3
40004438:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000443c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004440:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004444:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004448:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000444c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004450:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004454:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
40004458:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
4000445c:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
40004460:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
40004464:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004468:	eb007bef 	bl	4002342c <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000446c:	e2504000 	subs	r4, r0, #0
40004470:	1a000001 	bne	4000447c <SensorRead+0x74>
	{
		CyU3PBusyWait(100); //change into 100us.
40004474:	e3a00064 	mov	r0, #100	; 0x64
40004478:	eb003be4 	bl	40013410 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
4000447c:	e1a00004 	mov	r0, r4
40004480:	e28dd014 	add	sp, sp, #20
40004484:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
40004488:	e3a00004 	mov	r0, #4
4000448c:	e59f101c 	ldr	r1, [pc, #28]	; 400044b0 <SensorRead+0xa8>
40004490:	eb003a6d 	bl	40012e4c <CyU3PDebugPrint>
		return 1;
40004494:	e3a04001 	mov	r4, #1
40004498:	eafffff7 	b	4000447c <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
4000449c:	e3a00004 	mov	r0, #4
400044a0:	e59f100c 	ldr	r1, [pc, #12]	; 400044b4 <SensorRead+0xac>
400044a4:	eb003a68 	bl	40012e4c <CyU3PDebugPrint>
		return 1;
400044a8:	e3a04001 	mov	r4, #1
400044ac:	eafffff2 	b	4000447c <SensorRead+0x74>
400044b0:	40010f00 	.word	0x40010f00
400044b4:	40010edc 	.word	0x40010edc

400044b8 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
400044b8:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
400044bc:	e3a00016 	mov	r0, #22
400044c0:	e3a01000 	mov	r1, #0
400044c4:	eb00795b 	bl	40022a38 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
400044c8:	e2502000 	subs	r2, r0, #0
400044cc:	1a000022 	bne	4000455c <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
400044d0:	e59f1094 	ldr	r1, [pc, #148]	; 4000456c <SensorReset+0xb4>
400044d4:	e3a00004 	mov	r0, #4
400044d8:	eb003a5b 	bl	40012e4c <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
400044dc:	eb001302 	bl	400090ec <_tx_time_get>
400044e0:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
400044e4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400044e8:	eb00110d 	bl	40008924 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
400044ec:	eb0012fe 	bl	400090ec <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
400044f0:	e1a04804 	lsl	r4, r4, #16
400044f4:	e1a02824 	lsr	r2, r4, #16
400044f8:	e59f1070 	ldr	r1, [pc, #112]	; 40004570 <SensorReset+0xb8>
400044fc:	e1a00800 	lsl	r0, r0, #16
40004500:	e1a03820 	lsr	r3, r0, #16
40004504:	e3a00004 	mov	r0, #4
40004508:	eb003a4f 	bl	40012e4c <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000450c:	eb0012f6 	bl	400090ec <_tx_time_get>
40004510:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004514:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004518:	eb001101 	bl	40008924 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000451c:	eb0012f2 	bl	400090ec <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004520:	e1a02804 	lsl	r2, r4, #16
40004524:	e1a02822 	lsr	r2, r2, #16
40004528:	e59f1040 	ldr	r1, [pc, #64]	; 40004570 <SensorReset+0xb8>
4000452c:	e1a03800 	lsl	r3, r0, #16
40004530:	e1a03823 	lsr	r3, r3, #16
40004534:	e3a00004 	mov	r0, #4
40004538:	eb003a43 	bl	40012e4c <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000453c:	e3a00016 	mov	r0, #22
40004540:	e3a01001 	mov	r1, #1
40004544:	eb00793b 	bl	40022a38 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004548:	e2502000 	subs	r2, r0, #0
4000454c:	1a000002 	bne	4000455c <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004550:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004554:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004558:	ea0010f1 	b	40008924 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
4000455c:	e59f1010 	ldr	r1, [pc, #16]	; 40004574 <SensorReset+0xbc>
40004560:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004564:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
40004568:	ea003a37 	b	40012e4c <CyU3PDebugPrint>
4000456c:	40010f48 	.word	0x40010f48
40004570:	40010f5c 	.word	0x40010f5c
40004574:	40010f20 	.word	0x40010f20

40004578 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
40004578:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000457c:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004580:	e3a00052 	mov	r0, #82	; 0x52
40004584:	e3a01030 	mov	r1, #48	; 0x30
40004588:	e3a020f2 	mov	r2, #242	; 0xf2
4000458c:	e28d3004 	add	r3, sp, #4
40004590:	ebfffec1 	bl	4000409c <SensorRead2B.clone.1>
40004594:	e3500000 	cmp	r0, #0
40004598:	1a000002 	bne	400045a8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
4000459c:	e5dd3004 	ldrb	r3, [sp, #4]
400045a0:	e3530056 	cmp	r3, #86	; 0x56
400045a4:	0a000002 	beq	400045b4 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400045a8:	e3a00004 	mov	r0, #4
400045ac:	e59f1008 	ldr	r1, [pc, #8]	; 400045bc <SensorInit+0x44>
400045b0:	eb003a25 	bl	40012e4c <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
400045b4:	e28dd00c 	add	sp, sp, #12
400045b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400045bc:	40010f70 	.word	0x40010f70

400045c0 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400045c4:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400045c8:	e3a00052 	mov	r0, #82	; 0x52
400045cc:	e3a01030 	mov	r1, #48	; 0x30
400045d0:	e3a020f2 	mov	r2, #242	; 0xf2
400045d4:	e28d3004 	add	r3, sp, #4
400045d8:	ebfffeaf 	bl	4000409c <SensorRead2B.clone.1>
400045dc:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
400045e0:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400045e4:	1a000002 	bne	400045f4 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045e8:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
400045ec:	e2500056 	subs	r0, r0, #86	; 0x56
400045f0:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
400045f4:	e28dd00c 	add	sp, sp, #12
400045f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400045fc <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
400045fc:	e92d4010 	push	{r4, lr}
40004600:	e24dd008 	sub	sp, sp, #8
40004604:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, buf);
40004608:	e1a02000 	mov	r2, r0
4000460c:	e28d3004 	add	r3, sp, #4
40004610:	e3a00053 	mov	r0, #83	; 0x53
40004614:	ebfffea0 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004618:	e59f1018 	ldr	r1, [pc, #24]	; 40004638 <SensorGetControl+0x3c>
4000461c:	e1a02004 	mov	r2, r4
40004620:	e5dd3004 	ldrb	r3, [sp, #4]
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003a07 	bl	40012e4c <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000462c:	e5dd0004 	ldrb	r0, [sp, #4]
40004630:	e28dd008 	add	sp, sp, #8
40004634:	e8bd8010 	pop	{r4, pc}
40004638:	40010f94 	.word	0x40010f94

4000463c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000463c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004640:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004644:	e24dd014 	sub	sp, sp, #20
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004648:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000464c:	e1a04000 	mov	r4, r0
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
40004650:	e5cd1002 	strb	r1, [sp, #2]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004654:	e5cde000 	strb	lr, [sp]
	preamble.buffer[1] = highAddr;
40004658:	e5cdc001 	strb	ip, [sp, #1]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
4000465c:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004660:	e3a0c003 	mov	ip, #3
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004664:	e1a05002 	mov	r5, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004668:	e1a0000d 	mov	r0, sp
4000466c:	e28d100c 	add	r1, sp, #12
40004670:	e3a02001 	mov	r2, #1
40004674:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004678:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
4000467c:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
40004680:	e5cd400c 	strb	r4, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004684:	eb007c6e 	bl	40023844 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004688:	e3500000 	cmp	r0, #0
4000468c:	0a000016 	beq	400046ec <SensorSetControl+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004690:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004694:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004698:	e1a0000d 	mov	r0, sp
4000469c:	e28d100c 	add	r1, sp, #12
400046a0:	e1a0200c 	mov	r2, ip
400046a4:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400046a8:	e5cd500c 	strb	r5, [sp, #12]
	preamble.ctrlMask = 0x0000;
400046ac:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
400046b0:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400046b4:	eb007c62 	bl	40023844 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400046b8:	e3500000 	cmp	r0, #0
400046bc:	0a000007 	beq	400046e0 <SensorSetControl+0xa4>

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, value);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
400046c0:	e59f1030 	ldr	r1, [pc, #48]	; 400046f8 <SensorSetControl+0xbc>
400046c4:	e1a02004 	mov	r2, r4
400046c8:	e1a03005 	mov	r3, r5
400046cc:	e3a00004 	mov	r0, #4
400046d0:	eb0039dd 	bl	40012e4c <CyU3PDebugPrint>
//#endif
	return 0;
};
400046d4:	e3a00000 	mov	r0, #0
400046d8:	e28dd014 	add	sp, sp, #20
400046dc:	e8bd8030 	pop	{r4, r5, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
400046e0:	e3a00064 	mov	r0, #100	; 0x64
400046e4:	eb003b49 	bl	40013410 <CyU3PBusyWait>
400046e8:	eafffff4 	b	400046c0 <SensorSetControl+0x84>
400046ec:	e3a00064 	mov	r0, #100	; 0x64
400046f0:	eb003b46 	bl	40013410 <CyU3PBusyWait>
400046f4:	eaffffe5 	b	40004690 <SensorSetControl+0x54>
400046f8:	40010fb4 	.word	0x40010fb4

400046fc <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
400046fc:	e1a0c000 	mov	ip, r0
40004700:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004704:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, buf);
40004708:	e28d3004 	add	r3, sp, #4
4000470c:	e1a00002 	mov	r0, r2
40004710:	e1a0200c 	mov	r2, ip
40004714:	ebfffe60 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004718:	e5dd0004 	ldrb	r0, [sp, #4]
4000471c:	e28dd00c 	add	sp, sp, #12
40004720:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40004724 <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004724:	e92d4010 	push	{r4, lr}
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004728:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000472c:	e24dd010 	sub	sp, sp, #16
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004730:	e5cd3001 	strb	r3, [sp, #1]
	preamble.buffer[2] = lowAddr;
40004734:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
40004738:	e5cd000c 	strb	r0, [sp, #12]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
4000473c:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004740:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004744:	e3a0c003 	mov	ip, #3
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004748:	e1a04002 	mov	r4, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000474c:	e1a0000d 	mov	r0, sp
40004750:	e28d100c 	add	r1, sp, #12
40004754:	e3a02001 	mov	r2, #1
40004758:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
4000475c:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
40004760:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004764:	eb007c36 	bl	40023844 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004768:	e3500000 	cmp	r0, #0
4000476c:	0a000011 	beq	400047b8 <SensorSetIrisControl+0x94>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004770:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004774:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004778:	e1a0000d 	mov	r0, sp
4000477c:	e28d100c 	add	r1, sp, #12
40004780:	e1a0200c 	mov	r2, ip
40004784:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004788:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
4000478c:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004790:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004794:	eb007c2a 	bl	40023844 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004798:	e3500000 	cmp	r0, #0
4000479c:	0a000002 	beq	400047ac <SensorSetIrisControl+0x88>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, value);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
400047a0:	e3a00000 	mov	r0, #0
400047a4:	e28dd010 	add	sp, sp, #16
400047a8:	e8bd8010 	pop	{r4, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(100); //change into 100us.
400047ac:	e3a00064 	mov	r0, #100	; 0x64
400047b0:	eb003b16 	bl	40013410 <CyU3PBusyWait>
400047b4:	eafffff9 	b	400047a0 <SensorSetIrisControl+0x7c>
400047b8:	e3a00064 	mov	r0, #100	; 0x64
400047bc:	eb003b13 	bl	40013410 <CyU3PBusyWait>
400047c0:	eaffffea 	b	40004770 <SensorSetIrisControl+0x4c>

400047c4 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047c4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047c8:	e59f2210 	ldr	r2, [pc, #528]	; 400049e0 <I2cAppThread_Entry+0x21c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047cc:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047d0:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047d4:	e3a0effa 	mov	lr, #1000	; 0x3e8
400047d8:	e284c02c 	add	ip, r4, #44	; 0x2c
400047dc:	e3a0300b 	mov	r3, #11
400047e0:	e1a01004 	mov	r1, r4
400047e4:	e59f01f8 	ldr	r0, [pc, #504]	; 400049e4 <I2cAppThread_Entry+0x220>
400047e8:	e58de000 	str	lr, [sp]
400047ec:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047f0:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047f4:	e58d4004 	str	r4, [sp, #4]
400047f8:	e58d4008 	str	r4, [sp, #8]
400047fc:	eb001848 	bl	4000a924 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
40004800:	eb001239 	bl	400090ec <_tx_time_get>
40004804:	e59f11dc 	ldr	r1, [pc, #476]	; 400049e8 <I2cAppThread_Entry+0x224>
40004808:	e59f51dc 	ldr	r5, [pc, #476]	; 400049ec <I2cAppThread_Entry+0x228>
4000480c:	e1a02000 	mov	r2, r0
40004810:	e3a00004 	mov	r0, #4
40004814:	eb00398c 	bl	40012e4c <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004818:	e3a00032 	mov	r0, #50	; 0x32
4000481c:	eb001040 	bl	40008924 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
40004820:	e59f01bc 	ldr	r0, [pc, #444]	; 400049e4 <I2cAppThread_Entry+0x220>
40004824:	eb00180c 	bl	4000a85c <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004828:	ea000000 	b	40004830 <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
4000482c:	eb0017ed 	bl	4000a7e8 <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004830:	e5d5201a 	ldrb	r2, [r5, #26]
40004834:	e3520000 	cmp	r2, #0
40004838:	0afffffb 	beq	4000482c <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
4000483c:	e59f01a8 	ldr	r0, [pc, #424]	; 400049ec <I2cAppThread_Entry+0x228>
40004840:	e59f11a8 	ldr	r1, [pc, #424]	; 400049f0 <I2cAppThread_Entry+0x22c>
40004844:	e5903010 	ldr	r3, [r0, #16]
40004848:	e3a00004 	mov	r0, #4
4000484c:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
40004850:	eb00397d 	bl	40012e4c <CyU3PDebugPrint>
40004854:	e59f7198 	ldr	r7, [pc, #408]	; 400049f4 <I2cAppThread_Entry+0x230>
40004858:	e59fb198 	ldr	fp, [pc, #408]	; 400049f8 <I2cAppThread_Entry+0x234>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
4000485c:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
40004860:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
40004864:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004868:	e3a02003 	mov	r2, #3
4000486c:	e28d3014 	add	r3, sp, #20
40004870:	e3a01020 	mov	r1, #32
40004874:	e59f0180 	ldr	r0, [pc, #384]	; 400049fc <I2cAppThread_Entry+0x238>
40004878:	e58d6000 	str	r6, [sp]
4000487c:	eb0014f0 	bl	40009c44 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004880:	e1a01006 	mov	r1, r6
40004884:	e597001c 	ldr	r0, [r7, #28]
40004888:	eb0015b5 	bl	40009f64 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
4000488c:	e597001c 	ldr	r0, [r7, #28]
40004890:	eb0015e8 	bl	4000a038 <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004894:	e595001c 	ldr	r0, [r5, #28]
40004898:	e1a01006 	mov	r1, r6
4000489c:	eb0015b0 	bl	40009f64 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
400048a0:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048a4:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400048a8:	e3520000 	cmp	r2, #0
400048ac:	1a000008 	bne	400048d4 <I2cAppThread_Entry+0x110>
400048b0:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400048b4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400048b8:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048bc:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
400048c0:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048c4:	e353003f 	cmp	r3, #63	; 0x3f
400048c8:	93520000 	cmpls	r2, #0
400048cc:	0afffff8 	beq	400048b4 <I2cAppThread_Entry+0xf0>
400048d0:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
400048d4:	e3520000 	cmp	r2, #0
400048d8:	0a00002d 	beq	40004994 <I2cAppThread_Entry+0x1d0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048dc:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048e0:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048e4:	e083e083 	add	lr, r3, r3, lsl #1
400048e8:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048ec:	e242c014 	sub	ip, r2, #20
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048f0:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
400048f4:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
400048f8:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
400048fc:	e1daa0b8 	ldrh	sl, [sl, #8]
					switch(lcCmdDes->CmdID){
40004900:	e35c0003 	cmp	ip, #3
40004904:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004908:	ea00001a 	b	40004978 <I2cAppThread_Entry+0x1b4>
4000490c:	40004984 	.word	0x40004984
40004910:	40004968 	.word	0x40004968
40004914:	4000491c 	.word	0x4000491c
40004918:	4000491c 	.word	0x4000491c
						case 22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
4000491c:	e3a03082 	mov	r3, #130	; 0x82
40004920:	ebffff7f 	bl	40004724 <SensorSetIrisControl>
							delaytime = 300;
							break;
40004924:	e3a01f4b 	mov	r1, #300	; 0x12c
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
							break;
					}
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004928:	e3a02000 	mov	r2, #0
4000492c:	e59f00b0 	ldr	r0, [pc, #176]	; 400049e4 <I2cAppThread_Entry+0x220>
40004930:	eb0017d9 	bl	4000a89c <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004934:	e59f00a8 	ldr	r0, [pc, #168]	; 400049e4 <I2cAppThread_Entry+0x220>
40004938:	eb0017c7 	bl	4000a85c <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
4000493c:	e5d40001 	ldrb	r0, [r4, #1]
40004940:	e5d41002 	ldrb	r1, [r4, #2]
40004944:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004948:	12800001 	addne	r0, r0, #1
4000494c:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
40004950:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004954:	0a000014 	beq	400049ac <I2cAppThread_Entry+0x1e8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004958:	e595001c 	ldr	r0, [r5, #28]
4000495c:	eb0015b5 	bl	4000a038 <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
40004960:	eb0017a0 	bl	4000a7e8 <_txe_thread_relinquish>
		}
40004964:	eaffffbf 	b	40004868 <I2cAppThread_Entry+0xa4>
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004968:	e3a03052 	mov	r3, #82	; 0x52
4000496c:	ebffff6c 	bl	40004724 <SensorSetIrisControl>
							delaytime = 500;
							break;
40004970:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004974:	eaffffeb 	b	40004928 <I2cAppThread_Entry+0x164>
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004978:	ebffff2f 	bl	4000463c <SensorSetControl>
4000497c:	e1a0100a 	mov	r1, sl
							break;
40004980:	eaffffe8 	b	40004928 <I2cAppThread_Entry+0x164>
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
40004984:	e3a03082 	mov	r3, #130	; 0x82
40004988:	ebffff65 	bl	40004724 <SensorSetIrisControl>
							delaytime = 500;
							break;
4000498c:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004990:	eaffffe4 	b	40004928 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004994:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004998:	e59f0044 	ldr	r0, [pc, #68]	; 400049e4 <I2cAppThread_Entry+0x220>
4000499c:	eb0017be 	bl	4000a89c <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
400049a0:	e59f003c 	ldr	r0, [pc, #60]	; 400049e4 <I2cAppThread_Entry+0x220>
400049a4:	eb0017ac 	bl	4000a85c <_txe_timer_activate>
400049a8:	eaffffea 	b	40004958 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
400049ac:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
400049b0:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
400049b4:	e35c001f 	cmp	ip, #31
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
400049b8:	824cc020 	subhi	ip, ip, #32
400049bc:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049c0:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
400049c4:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049c8:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
400049cc:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049d0:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
400049d4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
400049d8:	e5854010 	str	r4, [r5, #16]
400049dc:	eaffffdd 	b	40004958 <I2cAppThread_Entry+0x194>
400049e0:	40004a00 	.word	0x40004a00
400049e4:	40032fc4 	.word	0x40032fc4
400049e8:	40011020 	.word	0x40011020
400049ec:	40032ec4 	.word	0x40032ec4
400049f0:	40011034 	.word	0x40011034
400049f4:	40033110 	.word	0x40033110
400049f8:	40030000 	.word	0x40030000
400049fc:	40030f90 	.word	0x40030f90

40004a00 <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
40004a00:	e59f0008 	ldr	r0, [pc, #8]	; 40004a10 <I2CCmdCb+0x10>
40004a04:	e3a01020 	mov	r1, #32
40004a08:	e3a02000 	mov	r2, #0
40004a0c:	ea0014bc 	b	40009d04 <_txe_event_flags_set>
40004a10:	40030f90 	.word	0x40030f90

40004a14 <CyFxUvcApplnDmaCallback>:
        )
{
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a14:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004a18:	e92d4030 	push	{r4, r5, lr}
40004a1c:	e1a04002 	mov	r4, r2
40004a20:	e24dd00c 	sub	sp, sp, #12
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a24:	0a00000b 	beq	40004a58 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
                        status, input->buffer_p.count, prodCount - consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004a28:	e3510010 	cmp	r1, #16
40004a2c:	1a000007 	bne	40004a50 <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004a30:	e59f3104 	ldr	r3, [pc, #260]	; 40004b3c <CyFxUvcApplnDmaCallback+0x128>
        streamingStarted = CyTrue;
40004a34:	e3a02001 	mov	r2, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a38:	e1d3c3b0 	ldrh	ip, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
40004a3c:	e5832034 	str	r2, [r3, #52]	; 0x34
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a40:	e08c0002 	add	r0, ip, r2
40004a44:	e1a01800 	lsl	r1, r0, #16
40004a48:	e1a02821 	lsr	r2, r1, #16
40004a4c:	e1c323b0 	strh	r2, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
    }
}
40004a50:	e28dd00c 	add	sp, sp, #12
40004a54:	e8bd8030 	pop	{r4, r5, pc}
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004a58:	e1d220b4 	ldrh	r2, [r2, #4]
40004a5c:	e59f30dc 	ldr	r3, [pc, #220]	; 40004b40 <CyFxUvcApplnDmaCallback+0x12c>
40004a60:	e1520003 	cmp	r2, r3
40004a64:	0a000029 	beq	40004b10 <CyFxUvcApplnDmaCallback+0xfc>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004a68:	e5945000 	ldr	r5, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004a6c:	e59f10d0 	ldr	r1, [pc, #208]	; 40004b44 <CyFxUvcApplnDmaCallback+0x130>
40004a70:	e245000c 	sub	r0, r5, #12
40004a74:	e3a0200c 	mov	r2, #12
40004a78:	ebfffb95 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a7c:	e555c00b 	ldrb	ip, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a80:	e59f30b4 	ldr	r3, [pc, #180]	; 40004b3c <CyFxUvcApplnDmaCallback+0x128>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a84:	e38c1002 	orr	r1, ip, #2
40004a88:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a8c:	e1d302ba 	ldrh	r0, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a90:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a94:	e2802001 	add	r2, r0, #1
40004a98:	e1c322ba 	strh	r2, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a9c:	e1c312bc 	strh	r1, [r3, #44]	; 0x2c
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004aa0:	e1d3e2be 	ldrh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004aa4:	e281100c 	add	r1, r1, #12
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004aa8:	e28ec001 	add	ip, lr, #1
40004aac:	e1a0080c 	lsl	r0, ip, #16
40004ab0:	e1a0e820 	lsr	lr, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004ab4:	e1a02801 	lsl	r2, r1, #16
40004ab8:	e1a01822 	lsr	r1, r2, #16
40004abc:	e59f0084 	ldr	r0, [pc, #132]	; 40004b48 <CyFxUvcApplnDmaCallback+0x134>
40004ac0:	e3a02000 	mov	r2, #0
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004ac4:	e1c3e2be 	strh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004ac8:	eb0049ac 	bl	40017180 <CyU3PDmaMultiChannelCommitBuffer>
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004acc:	e59f1068 	ldr	r1, [pc, #104]	; 40004b3c <CyFxUvcApplnDmaCallback+0x128>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
40004ad0:	e2502000 	subs	r2, r0, #0
40004ad4:	0affffdd 	beq	40004a50 <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004ad8:	e1d1c2be 	ldrh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004adc:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
            {
                prodCount--;
40004ae0:	e24c0001 	sub	r0, ip, #1
40004ae4:	e1a0e800 	lsl	lr, r0, #16
40004ae8:	e1a0c82e 	lsr	ip, lr, #16
40004aec:	e1c1c2be 	strh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004af0:	e1d1e2be 	ldrh	lr, [r1, #46]	; 0x2e
40004af4:	e1d103b0 	ldrh	r0, [r1, #48]	; 0x30
40004af8:	e59f104c 	ldr	r1, [pc, #76]	; 40004b4c <CyFxUvcApplnDmaCallback+0x138>
40004afc:	e060c00e 	rsb	ip, r0, lr
40004b00:	e3a00004 	mov	r0, #4
40004b04:	e58dc000 	str	ip, [sp]
40004b08:	eb0038cf 	bl	40012e4c <CyU3PDebugPrint>
40004b0c:	eaffffcf 	b	40004a50 <CyFxUvcApplnDmaCallback+0x3c>
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004b10:	e594e000 	ldr	lr, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004b14:	e59f1028 	ldr	r1, [pc, #40]	; 40004b44 <CyFxUvcApplnDmaCallback+0x130>
40004b18:	e24e000c 	sub	r0, lr, #12
40004b1c:	e3a0200c 	mov	r2, #12
40004b20:	ebfffb6b 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004b24:	e59f3010 	ldr	r3, [pc, #16]	; 40004b3c <CyFxUvcApplnDmaCallback+0x128>
40004b28:	e1d410b4 	ldrh	r1, [r4, #4]
40004b2c:	e1d3c2b8 	ldrh	ip, [r3, #40]	; 0x28
40004b30:	e28c0001 	add	r0, ip, #1
40004b34:	e1c302b8 	strh	r0, [r3, #40]	; 0x28
40004b38:	eaffffd8 	b	40004aa0 <CyFxUvcApplnDmaCallback+0x8c>
40004b3c:	40030f90 	.word	0x40030f90
40004b40:	00003ff0 	.word	0x00003ff0
40004b44:	40030480 	.word	0x40030480
40004b48:	40032ee4 	.word	0x40032ee4
40004b4c:	40011058 	.word	0x40011058

40004b50 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004b50:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004b54:	e92d4070 	push	{r4, r5, r6, lr}
40004b58:	e1a03001 	mov	r3, r1
40004b5c:	e24dd010 	sub	sp, sp, #16
40004b60:	e1a04000 	mov	r4, r0
    switch (evtype)
40004b64:	0a000036 	beq	40004c44 <CyFxUVCApplnUSBEventCB+0xf4>
40004b68:	e3500004 	cmp	r0, #4
40004b6c:	0a00001f 	beq	40004bf0 <CyFxUVCApplnUSBEventCB+0xa0>
40004b70:	e3500001 	cmp	r0, #1
40004b74:	0a000001 	beq	40004b80 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004b78:	e28dd010 	add	sp, sp, #16
40004b7c:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b80:	e59f5128 	ldr	r5, [pc, #296]	; 40004cb0 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004b84:	e1a02000 	mov	r2, r0
40004b88:	e59f1124 	ldr	r1, [pc, #292]	; 40004cb4 <CyFxUVCApplnUSBEventCB+0x164>
40004b8c:	e3a00004 	mov	r0, #4
40004b90:	eb0038ad 	bl	40012e4c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004b94:	e1a00004 	mov	r0, r4
40004b98:	eb0059bb 	bl	4001b28c <CyU3PGpifDisable>
            gpif_initialized = 0;
40004b9c:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ba0:	e1a01004 	mov	r1, r4
40004ba4:	e1a00005 	mov	r0, r5
40004ba8:	e3a02002 	mov	r2, #2
40004bac:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004bb0:	e585c038 	str	ip, [r5, #56]	; 0x38
            isUsbConnected = CyFalse;
40004bb4:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004bb8:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004bbc:	e58dc000 	str	ip, [sp]
40004bc0:	eb00141f 	bl	40009c44 <_txe_event_flags_get>
40004bc4:	e2504000 	subs	r4, r0, #0
40004bc8:	1affffea 	bne	40004b78 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004bcc:	e3e01001 	mvn	r1, #1
40004bd0:	e3a02002 	mov	r2, #2
40004bd4:	e1a00005 	mov	r0, r5
40004bd8:	eb001449 	bl	40009d04 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004bdc:	e1a00005 	mov	r0, r5
40004be0:	e3a01002 	mov	r1, #2
40004be4:	e1a02004 	mov	r2, r4
40004be8:	eb001445 	bl	40009d04 <_txe_event_flags_set>
40004bec:	eaffffe1 	b	40004b78 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004bf0:	e59f50b8 	ldr	r5, [pc, #184]	; 40004cb0 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004bf4:	e59f10bc 	ldr	r1, [pc, #188]	; 40004cb8 <CyFxUVCApplnUSBEventCB+0x168>
40004bf8:	e1a02000 	mov	r2, r0
40004bfc:	eb003892 	bl	40012e4c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c00:	e3a00001 	mov	r0, #1
40004c04:	eb0059a0 	bl	4001b28c <CyU3PGpifDisable>
            gpif_initialized = 0;
40004c08:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c0c:	e3a01001 	mov	r1, #1
40004c10:	e3a02002 	mov	r2, #2
40004c14:	e1a00005 	mov	r0, r5
40004c18:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c1c:	e585c038 	str	ip, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c20:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c24:	e58dc000 	str	ip, [sp]
40004c28:	eb001405 	bl	40009c44 <_txe_event_flags_get>
40004c2c:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c30:	01a00005 	moveq	r0, r5
40004c34:	03e01001 	mvneq	r1, #1
40004c38:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c3c:	1affffcd 	bne	40004b78 <CyFxUVCApplnUSBEventCB+0x28>
40004c40:	eaffffe4 	b	40004bd8 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c44:	e59f5064 	ldr	r5, [pc, #100]	; 40004cb0 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004c48:	e1a02000 	mov	r2, r0
40004c4c:	e59f1068 	ldr	r1, [pc, #104]	; 40004cbc <CyFxUVCApplnUSBEventCB+0x16c>
40004c50:	e3a00004 	mov	r0, #4
40004c54:	eb00387c 	bl	40012e4c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c58:	e3a00001 	mov	r0, #1
40004c5c:	eb00598a 	bl	4001b28c <CyU3PGpifDisable>
            gpif_initialized = 0;
40004c60:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c64:	e1a00005 	mov	r0, r5
40004c68:	e3a01001 	mov	r1, #1
40004c6c:	e1a02004 	mov	r2, r4
40004c70:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c74:	e5856038 	str	r6, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c78:	e5856034 	str	r6, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c7c:	e58d6000 	str	r6, [sp]
40004c80:	eb0013ef 	bl	40009c44 <_txe_event_flags_get>
40004c84:	e2506000 	subs	r6, r0, #0
40004c88:	1affffba 	bne	40004b78 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c8c:	e1a02004 	mov	r2, r4
40004c90:	e1a00005 	mov	r0, r5
40004c94:	e3e01001 	mvn	r1, #1
40004c98:	eb001419 	bl	40009d04 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004c9c:	e1a00005 	mov	r0, r5
40004ca0:	e1a01004 	mov	r1, r4
40004ca4:	e1a02006 	mov	r2, r6
40004ca8:	eb001415 	bl	40009d04 <_txe_event_flags_set>
40004cac:	eaffffb1 	b	40004b78 <CyFxUVCApplnUSBEventCB+0x28>
40004cb0:	40030f90 	.word	0x40030f90
40004cb4:	400110e4 	.word	0x400110e4
40004cb8:	400110a0 	.word	0x400110a0
40004cbc:	400110c0 	.word	0x400110c0

40004cc0 <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cc0:	e59f32c0 	ldr	r3, [pc, #704]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004cc4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cc8:	e59fc2bc 	ldr	ip, [pc, #700]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004ccc:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cd0:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cd4:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cd8:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cdc:	e59f22ac 	ldr	r2, [pc, #684]	; 40004f90 <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ce0:	e59f02ac 	ldr	r0, [pc, #684]	; 40004f94 <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004ce4:	e59f32ac 	ldr	r3, [pc, #684]	; 40004f98 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ce8:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cec:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cf0:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cf4:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004cf8:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004cfc:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004d00:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004d04:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004d08:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004d0c:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d10:	0a00004f 	beq	40004e54 <CyFxUVCApplnUSBSetupCB+0x194>
40004d14:	9a000006 	bls	40004d34 <CyFxUVCApplnUSBSetupCB+0x74>
40004d18:	e3540021 	cmp	r4, #33	; 0x21
40004d1c:	0a00003a 	beq	40004e0c <CyFxUVCApplnUSBSetupCB+0x14c>
40004d20:	e35400a1 	cmp	r4, #161	; 0xa1
40004d24:	0a000038 	beq	40004e0c <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004d28:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004d2c:	e28dd010 	add	sp, sp, #16
40004d30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d34:	e3540001 	cmp	r4, #1
40004d38:	1afffffa 	bne	40004d28 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004d3c:	e358000b 	cmp	r8, #11
40004d40:	1afffff8 	bne	40004d28 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004d44:	e3550001 	cmp	r5, #1
40004d48:	1afffff6 	bne	40004d28 <CyFxUVCApplnUSBSetupCB+0x68>
40004d4c:	e3570000 	cmp	r7, #0
40004d50:	1afffff4 	bne	40004d28 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d54:	e59f4240 	ldr	r4, [pc, #576]	; 40004f9c <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004d58:	e59f1240 	ldr	r1, [pc, #576]	; 40004fa0 <CyFxUVCApplnUSBSetupCB+0x2e0>
40004d5c:	e3a00004 	mov	r0, #4
40004d60:	eb003839 	bl	40012e4c <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004d64:	e1a00005 	mov	r0, r5
40004d68:	eb005947 	bl	4001b28c <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d6c:	e1a01005 	mov	r1, r5
40004d70:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d74:	e5847038 	str	r7, [r4, #56]	; 0x38
                    streamingStarted = CyFalse;
40004d78:	e5847034 	str	r7, [r4, #52]	; 0x34
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d7c:	eb0062d4 	bl	4001d8d4 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d80:	e3a00064 	mov	r0, #100	; 0x64
40004d84:	eb0039a1 	bl	40013410 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004d88:	e59f0214 	ldr	r0, [pc, #532]	; 40004fa4 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004d8c:	eb004d35 	bl	40018268 <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004d90:	e3a00083 	mov	r0, #131	; 0x83
40004d94:	eb005ec8 	bl	4001c8bc <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004d98:	e1a01007 	mov	r1, r7
40004d9c:	e3a00083 	mov	r0, #131	; 0x83
40004da0:	eb0062cb 	bl	4001d8d4 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004da4:	e3a00064 	mov	r0, #100	; 0x64
40004da8:	eb003998 	bl	40013410 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004dac:	e1a01007 	mov	r1, r7
40004db0:	e1a02005 	mov	r2, r5
40004db4:	e3a00083 	mov	r0, #131	; 0x83
40004db8:	eb00638b 	bl	4001dbec <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004dbc:	eb005dc6 	bl	4001c4dc <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004dc0:	e5845040 	str	r5, [r4, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004dc4:	e1a00004 	mov	r0, r4
40004dc8:	e1a01005 	mov	r1, r5
40004dcc:	e3a02002 	mov	r2, #2
40004dd0:	e28d300c 	add	r3, sp, #12
40004dd4:	e58d7000 	str	r7, [sp]
40004dd8:	eb001399 	bl	40009c44 <_txe_event_flags_get>
40004ddc:	e2506000 	subs	r6, r0, #0
40004de0:	1a00002e 	bne	40004ea0 <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004de4:	e3e01001 	mvn	r1, #1
40004de8:	e3a02002 	mov	r2, #2
40004dec:	e1a00004 	mov	r0, r4
40004df0:	eb0013c3 	bl	40009d04 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004df4:	e1a00004 	mov	r0, r4
40004df8:	e3a01002 	mov	r1, #2
40004dfc:	e1a02006 	mov	r2, r6
40004e00:	eb0013bf 	bl	40009d04 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004e04:	e1a00005 	mov	r0, r5
40004e08:	eaffffc7 	b	40004d2c <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004e0c:	e21550ff 	ands	r5, r5, #255	; 0xff
40004e10:	1a00001a 	bne	40004e80 <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004e14:	e1a02005 	mov	r2, r5
40004e18:	e59f017c 	ldr	r0, [pc, #380]	; 40004f9c <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e1c:	e3a01004 	mov	r1, #4
40004e20:	eb0013b7 	bl	40009d04 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e24:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e28:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e2c:	0affffbe 	beq	40004d2c <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004e30:	e59f1170 	ldr	r1, [pc, #368]	; 40004fa8 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004e34:	e3a00004 	mov	r0, #4
40004e38:	eb003803 	bl	40012e4c <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004e3c:	e1a00005 	mov	r0, r5
40004e40:	e3a01001 	mov	r1, #1
40004e44:	e1a02005 	mov	r2, r5
40004e48:	eb006367 	bl	4001dbec <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e4c:	e3a00001 	mov	r0, #1
40004e50:	eaffffb5 	b	40004d2c <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004e54:	e3580001 	cmp	r8, #1
40004e58:	1affffb2 	bne	40004d28 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004e5c:	e3550083 	cmp	r5, #131	; 0x83
40004e60:	1affffb0 	bne	40004d28 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004e64:	e59f7130 	ldr	r7, [pc, #304]	; 40004f9c <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e68:	e5976034 	ldr	r6, [r7, #52]	; 0x34
40004e6c:	e3560001 	cmp	r6, #1
40004e70:	0a000015 	beq	40004ecc <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004e74:	eb005d98 	bl	4001c4dc <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004e78:	e1a00008 	mov	r0, r8
40004e7c:	eaffffaa 	b	40004d2c <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004e80:	e3550001 	cmp	r5, #1
40004e84:	1affffa7 	bne	40004d28 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004e88:	e3a02000 	mov	r2, #0
40004e8c:	e59f0108 	ldr	r0, [pc, #264]	; 40004f9c <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e90:	e3a01008 	mov	r1, #8
40004e94:	eb00139a 	bl	40009d04 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e98:	e2502000 	subs	r2, r0, #0
40004e9c:	1a000001 	bne	40004ea8 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004ea0:	e1a00005 	mov	r0, r5
40004ea4:	eaffffa0 	b	40004d2c <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004ea8:	e59f10fc 	ldr	r1, [pc, #252]	; 40004fac <CyFxUVCApplnUSBSetupCB+0x2ec>
40004eac:	e3a00004 	mov	r0, #4
40004eb0:	eb0037e5 	bl	40012e4c <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004eb4:	e3a00000 	mov	r0, #0
40004eb8:	e1a01005 	mov	r1, r5
40004ebc:	e1a02000 	mov	r2, r0
40004ec0:	eb006349 	bl	4001dbec <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004ec4:	e1a00005 	mov	r0, r5
40004ec8:	eaffff97 	b	40004d2c <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40004ecc:	e59f10dc 	ldr	r1, [pc, #220]	; 40004fb0 <CyFxUVCApplnUSBSetupCB+0x2f0>
40004ed0:	e3a00004 	mov	r0, #4
40004ed4:	eb0037dc 	bl	40012e4c <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004ed8:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40004edc:	e1a00006 	mov	r0, r6
40004ee0:	eb0058e9 	bl	4001b28c <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ee4:	e1a01006 	mov	r1, r6
40004ee8:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004eec:	e5878038 	str	r8, [r7, #56]	; 0x38
                        streamingStarted = CyFalse;
40004ef0:	e5878034 	str	r8, [r7, #52]	; 0x34

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ef4:	eb006276 	bl	4001d8d4 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004ef8:	e3a00064 	mov	r0, #100	; 0x64
40004efc:	eb003943 	bl	40013410 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004f00:	e59f009c 	ldr	r0, [pc, #156]	; 40004fa4 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004f04:	eb004cd7 	bl	40018268 <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004f08:	e1a00005 	mov	r0, r5
40004f0c:	eb005e6a 	bl	4001c8bc <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004f10:	e1a01008 	mov	r1, r8
40004f14:	e1a00005 	mov	r0, r5
40004f18:	eb00626d 	bl	4001d8d4 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004f1c:	e3a00064 	mov	r0, #100	; 0x64
40004f20:	eb00393a 	bl	40013410 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004f24:	e1a01008 	mov	r1, r8
40004f28:	e1a02006 	mov	r2, r6
40004f2c:	e1a00005 	mov	r0, r5
40004f30:	eb00632d 	bl	4001dbec <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
40004f34:	eb005d68 	bl	4001c4dc <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40004f38:	e5876040 	str	r6, [r7, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f3c:	e1a00007 	mov	r0, r7
40004f40:	e1a01006 	mov	r1, r6
40004f44:	e1a02004 	mov	r2, r4
40004f48:	e28d300c 	add	r3, sp, #12
40004f4c:	e58d8000 	str	r8, [sp]
40004f50:	eb00133b 	bl	40009c44 <_txe_event_flags_get>
40004f54:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f58:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f5c:	1affff72 	bne	40004d2c <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004f60:	e3e01001 	mvn	r1, #1
40004f64:	e1a02004 	mov	r2, r4
40004f68:	e1a00007 	mov	r0, r7
40004f6c:	eb001364 	bl	40009d04 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004f70:	e1a00007 	mov	r0, r7
40004f74:	e1a01004 	mov	r1, r4
40004f78:	e1a02005 	mov	r2, r5
40004f7c:	eb001360 	bl	40009d04 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f80:	e1a00006 	mov	r0, r6
40004f84:	eaffff68 	b	40004d2c <CyFxUVCApplnUSBSetupCB+0x6c>
40004f88:	40032ec0 	.word	0x40032ec0
40004f8c:	4003310c 	.word	0x4003310c
40004f90:	40032fc0 	.word	0x40032fc0
40004f94:	40032ff0 	.word	0x40032ff0
40004f98:	40032ff2 	.word	0x40032ff2
40004f9c:	40030f90 	.word	0x40030f90
40004fa0:	40011170 	.word	0x40011170
40004fa4:	40032ee4 	.word	0x40032ee4
40004fa8:	40011104 	.word	0x40011104
40004fac:	4001113c 	.word	0x4001113c
40004fb0:	40011188 	.word	0x40011188

40004fb4 <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fb4:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40004fb8:	e92d4010 	push	{r4, lr}
40004fbc:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fc0:	18bd8010 	popne	{r4, pc}
    {
        hitFV = CyTrue;
40004fc4:	e59f10d0 	ldr	r1, [pc, #208]	; 4000509c <CyFxGpifCB+0xe8>
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fc8:	e5d13048 	ldrb	r3, [r1, #72]	; 0x48
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
40004fcc:	e5810044 	str	r0, [r1, #68]	; 0x44
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fd0:	e3530003 	cmp	r3, #3
40004fd4:	0a000028 	beq	4000507c <CyFxGpifCB+0xc8>
                /* Unexpected current state. Return error. */
                return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40004fd8:	e3530002 	cmp	r3, #2
40004fdc:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40004fe0:	e2420008 	sub	r0, r2, #8
40004fe4:	e350000a 	cmp	r0, #10
40004fe8:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40004fec:	ea00001b 	b	40005060 <CyFxGpifCB+0xac>
40004ff0:	40005020 	.word	0x40005020
40004ff4:	40005060 	.word	0x40005060
40004ff8:	40005060 	.word	0x40005060
40004ffc:	4000501c 	.word	0x4000501c
40005000:	40005060 	.word	0x40005060
40005004:	40005060 	.word	0x40005060
40005008:	40005060 	.word	0x40005060
4000500c:	40005058 	.word	0x40005058
40005010:	40005060 	.word	0x40005060
40005014:	40005060 	.word	0x40005060
40005018:	4000501c 	.word	0x4000501c
4000501c:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
40005020:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
40005024:	e59f0074 	ldr	r0, [pc, #116]	; 400050a0 <CyFxGpifCB+0xec>
40005028:	eb004fbf 	bl	40018f2c <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
4000502c:	e2502000 	subs	r2, r0, #0
40005030:	0afffff9 	beq	4000501c <CyFxGpifCB+0x68>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
40005034:	e3a00004 	mov	r0, #4
40005038:	e59f1064 	ldr	r1, [pc, #100]	; 400050a4 <CyFxGpifCB+0xf0>
4000503c:	eb003782 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40005040:	e59f1060 	ldr	r1, [pc, #96]	; 400050a8 <CyFxGpifCB+0xf4>
40005044:	e3a00004 	mov	r0, #4
40005048:	eb00377f 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000504c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40005050:	eb000e33 	bl	40008924 <_tx_thread_sleep>
40005054:	eafffff9 	b	40005040 <CyFxGpifCB+0x8c>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
40005058:	e3a01001 	mov	r1, #1
4000505c:	eafffff0 	b	40005024 <CyFxGpifCB+0x70>
                socket = 1;
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
40005060:	e59f1044 	ldr	r1, [pc, #68]	; 400050ac <CyFxGpifCB+0xf8>
40005064:	e3a00001 	mov	r0, #1
40005068:	eb003777 	bl	40012e4c <CyU3PDebugPrint>
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (0||CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS) //temp for test
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
4000506c:	e59f103c 	ldr	r1, [pc, #60]	; 400050b0 <CyFxGpifCB+0xfc>
40005070:	e3a00004 	mov	r0, #4
    }
}
40005074:	e8bd4010 	pop	{r4, lr}
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (0||CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS) //temp for test
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40005078:	ea003773 	b	40012e4c <CyU3PDebugPrint>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
4000507c:	e242300b 	sub	r3, r2, #11
40005080:	e3530003 	cmp	r3, #3
40005084:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40005088:	eafffff4 	b	40005060 <CyFxGpifCB+0xac>
4000508c:	40005020 	.word	0x40005020
40005090:	40005058 	.word	0x40005058
40005094:	4000501c 	.word	0x4000501c
40005098:	4000501c 	.word	0x4000501c
4000509c:	40030f90 	.word	0x40030f90
400050a0:	40032ee4 	.word	0x40032ee4
400050a4:	400111c4 	.word	0x400111c4
400050a8:	400111f4 	.word	0x400111f4
400050ac:	400111ac 	.word	0x400111ac
400050b0:	40011208 	.word	0x40011208

400050b4 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050b4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050b8:	e59f4150 	ldr	r4, [pc, #336]	; 40005210 <I2CCmdHandler+0x15c>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050bc:	e24dd03c 	sub	sp, sp, #60	; 0x3c
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050c0:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050c4:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050c8:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
400050cc:	e5d46054 	ldrb	r6, [r4, #84]	; 0x54
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050d0:	e5d4704e 	ldrb	r7, [r4, #78]	; 0x4e
400050d4:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
400050d8:	e5d48050 	ldrb	r8, [r4, #80]	; 0x50
400050dc:	e5d4a051 	ldrb	sl, [r4, #81]	; 0x51
400050e0:	e5d49052 	ldrb	r9, [r4, #82]	; 0x52
400050e4:	e5d4b053 	ldrb	fp, [r4, #83]	; 0x53
400050e8:	e58d201c 	str	r2, [sp, #28]
400050ec:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
400050f0:	e3a00004 	mov	r0, #4
400050f4:	e59f1118 	ldr	r1, [pc, #280]	; 40005214 <I2CCmdHandler+0x160>
400050f8:	e1a02005 	mov	r2, r5
400050fc:	e88d4080 	stm	sp, {r7, lr}
40005100:	e58d8008 	str	r8, [sp, #8]
40005104:	e58da00c 	str	sl, [sp, #12]
40005108:	e58d9010 	str	r9, [sp, #16]
4000510c:	e58db014 	str	fp, [sp, #20]
40005110:	e58d6018 	str	r6, [sp, #24]
40005114:	e58dc020 	str	ip, [sp, #32]
40005118:	eb00374b 	bl	40012e4c <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
4000511c:	e3550000 	cmp	r5, #0
40005120:	0a000010 	beq	40005168 <I2CCmdHandler+0xb4>
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
40005124:	e3550001 	cmp	r5, #1
40005128:	0a000001 	beq	40005134 <I2CCmdHandler+0x80>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
4000512c:	e28dd03c 	add	sp, sp, #60	; 0x3c
40005130:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
40005134:	e5d4204f 	ldrb	r2, [r4, #79]	; 0x4f
40005138:	e20210fe 	and	r1, r2, #254	; 0xfe
4000513c:	e3510082 	cmp	r1, #130	; 0x82
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
40005140:	15d45050 	ldrbne	r5, [r4, #80]	; 0x50
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
40005144:	0a00001a 	beq	400051b4 <I2CCmdHandler+0x100>
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
40005148:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[9]);
4000514c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005150:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
40005154:	e1a02005 	mov	r2, r5
40005158:	e20000fe 	and	r0, r0, #254	; 0xfe
4000515c:	e58de000 	str	lr, [sp]
40005160:	ebfffc05 	bl	4000417c <SensorWrite2B>
40005164:	eafffff0 	b	4000512c <I2CCmdHandler+0x78>
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
40005168:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
4000516c:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005170:	e3a0e00f 	mov	lr, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
40005174:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
40005178:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
4000517c:	e5c4e057 	strb	lr, [r4, #87]	; 0x57
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
40005180:	e28dc034 	add	ip, sp, #52	; 0x34
40005184:	e3800001 	orr	r0, r0, #1
40005188:	e3811001 	orr	r1, r1, #1
4000518c:	e58dc000 	str	ip, [sp]
40005190:	ebfffc58 	bl	400042f8 <SensorRead2B>
			I2CCMDArry[9] = buf[0];
40005194:	e5dd0034 	ldrb	r0, [sp, #52]	; 0x34
			if(CmdDataLen == 2){
40005198:	e3560002 	cmp	r6, #2

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
			I2CCMDArry[9] = buf[0];
4000519c:	e5c40055 	strb	r0, [r4, #85]	; 0x55
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
400051a0:	05dd0035 	ldrbeq	r0, [sp, #53]	; 0x35
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400051a4:	e3e03000 	mvn	r3, #0
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
			I2CCMDArry[9] = buf[0];
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
400051a8:	05c40056 	strbeq	r0, [r4, #86]	; 0x56
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400051ac:	e5c43057 	strb	r3, [r4, #87]	; 0x57
400051b0:	eaffffdd 	b	4000512c <I2CCmdHandler+0x78>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400051b4:	e5d45050 	ldrb	r5, [r4, #80]	; 0x50
400051b8:	e3550030 	cmp	r5, #48	; 0x30
400051bc:	1affffe1 	bne	40005148 <I2CCmdHandler+0x94>
400051c0:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
400051c4:	e3530010 	cmp	r3, #16
400051c8:	1affffdf 	bne	4000514c <I2CCmdHandler+0x98>
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
400051cc:	e59f4044 	ldr	r4, [pc, #68]	; 40005218 <I2CCmdHandler+0x164>
400051d0:	e3e01000 	mvn	r1, #0
400051d4:	e594001c 	ldr	r0, [r4, #28]
400051d8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400051dc:	eb001360 	bl	40009f64 <_txe_mutex_get>
				cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
400051e0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400051e4:	e3a0c000 	mov	ip, #0
400051e8:	e1a02003 	mov	r2, r3
400051ec:	e1a00004 	mov	r0, r4
400051f0:	e3a01017 	mov	r1, #23
400051f4:	e1a03005 	mov	r3, r5
400051f8:	e58dc000 	str	ip, [sp]
400051fc:	e58dc004 	str	ip, [sp, #4]
40005200:	ebfff8ac 	bl	400034b8 <cmdSet>
				CyU3PMutexPut(cmdQuptr->ringMux);
40005204:	e594001c 	ldr	r0, [r4, #28]
40005208:	eb00138a 	bl	4000a038 <_txe_mutex_put>
4000520c:	eaffffc6 	b	4000512c <I2CCmdHandler+0x78>
40005210:	40030f90 	.word	0x40030f90
40005214:	4001121c 	.word	0x4001121c
40005218:	40032ec4 	.word	0x40032ec4

4000521c <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
4000521c:	e92d4070 	push	{r4, r5, r6, lr}
40005220:	e1a06001 	mov	r6, r1
40005224:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005228:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
4000522c:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005230:	e3e01000 	mvn	r1, #0
40005234:	e590001c 	ldr	r0, [r0, #28]
40005238:	eb001349 	bl	40009f64 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
4000523c:	e0650006 	rsb	r0, r5, r6
40005240:	e270c000 	rsbs	ip, r0, #0
40005244:	e0acc000 	adc	ip, ip, r0
40005248:	e3a01014 	mov	r1, #20
4000524c:	e3a02027 	mov	r2, #39	; 0x27
40005250:	e3a03030 	mov	r3, #48	; 0x30
40005254:	e1a00004 	mov	r0, r4
40005258:	e58dc000 	str	ip, [sp]
4000525c:	e58d5004 	str	r5, [sp, #4]
40005260:	ebfff894 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40005264:	e1560005 	cmp	r6, r5
40005268:	03a06002 	moveq	r6, #2
4000526c:	11a06005 	movne	r6, r5
40005270:	e1a00004 	mov	r0, r4
40005274:	e3a01015 	mov	r1, #21
40005278:	e3a02025 	mov	r2, #37	; 0x25
4000527c:	e3a03030 	mov	r3, #48	; 0x30
40005280:	e58d6000 	str	r6, [sp]
40005284:	e58d5004 	str	r5, [sp, #4]
40005288:	ebfff88a 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000528c:	e594001c 	ldr	r0, [r4, #28]
}
40005290:	e28dd008 	add	sp, sp, #8
40005294:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005298:	ea001366 	b	4000a038 <_txe_mutex_put>

4000529c <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
4000529c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400052a0:	e350001f 	cmp	r0, #31
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400052a4:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400052a8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
400052ac:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400052b0:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400052b4:	9a000023 	bls	40005348 <ControlHandle+0xac>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400052b8:	e59f6ec0 	ldr	r6, [pc, #3776]	; 40006180 <ControlHandle+0xee4>
400052bc:	e0872087 	add	r2, r7, r7, lsl #1
400052c0:	e1a02182 	lsl	r2, r2, #3
400052c4:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
400052c8:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
400052cc:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
400052d0:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052d4:	e59f3ea8 	ldr	r3, [pc, #3752]	; 40006184 <ControlHandle+0xee8>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400052d8:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052dc:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400052e0:	e3550083 	cmp	r5, #131	; 0x83
400052e4:	0a000022 	beq	40005374 <ControlHandle+0xd8>
400052e8:	9a00002b 	bls	4000539c <ControlHandle+0x100>
400052ec:	e3550085 	cmp	r5, #133	; 0x85
400052f0:	0a000084 	beq	40005508 <ControlHandle+0x26c>
400052f4:	3a000072 	bcc	400054c4 <ControlHandle+0x228>
400052f8:	e3550086 	cmp	r5, #134	; 0x86
400052fc:	0a0000bd 	beq	400055f8 <ControlHandle+0x35c>
40005300:	e3550087 	cmp	r5, #135	; 0x87
40005304:	0a0000b1 	beq	400055d0 <ControlHandle+0x334>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40005308:	e3a00000 	mov	r0, #0
4000530c:	e3a01001 	mov	r1, #1
40005310:	e1a02000 	mov	r2, r0
40005314:	eb006234 	bl	4001dbec <CyU3PUsbStall>
			  break;
40005318:	e3a0e0ff 	mov	lr, #255	; 0xff
4000531c:	e1a0400e 	mov	r4, lr
40005320:	e1a0c00e 	mov	ip, lr
40005324:	e1a0300e 	mov	r3, lr
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
40005328:	e59f1e58 	ldr	r1, [pc, #3672]	; 40006188 <ControlHandle+0xeec>
4000532c:	e1a02005 	mov	r2, r5
40005330:	e3a00004 	mov	r0, #4
40005334:	e58dc000 	str	ip, [sp]
40005338:	e98d4010 	stmib	sp, {r4, lr}
4000533c:	eb0036c2 	bl	40012e4c <CyU3PDebugPrint>
}
40005340:	e28dd02c 	add	sp, sp, #44	; 0x2c
40005344:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005348:	e59f6e30 	ldr	r6, [pc, #3632]	; 40006180 <ControlHandle+0xee4>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000534c:	e59f3e30 	ldr	r3, [pc, #3632]	; 40006184 <ControlHandle+0xee8>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005350:	e0805080 	add	r5, r0, r0, lsl #1
40005354:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005358:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
4000535c:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005360:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
40005364:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
40005368:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
4000536c:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005370:	1affffdc 	bne	400052e8 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005374:	e354001f 	cmp	r4, #31
40005378:	9a0000bc 	bls	40005670 <ControlHandle+0x3d4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
4000537c:	e0877087 	add	r7, r7, r7, lsl #1
40005380:	e0866187 	add	r6, r6, r7, lsl #3
40005384:	e59fae00 	ldr	sl, [pc, #3584]	; 4000618c <ControlHandle+0xef0>
40005388:	e5d60005 	ldrb	r0, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
4000538c:	e5d6c006 	ldrb	ip, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005390:	e5ca0058 	strb	r0, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005394:	e5cac059 	strb	ip, [sl, #89]	; 0x59
40005398:	ea00000b 	b	400053cc <ControlHandle+0x130>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000539c:	e3550081 	cmp	r5, #129	; 0x81
400053a0:	0a000064 	beq	40005538 <ControlHandle+0x29c>
400053a4:	9a000010 	bls	400053ec <ControlHandle+0x150>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
400053a8:	e354001f 	cmp	r4, #31
400053ac:	9a0000a3 	bls	40005640 <ControlHandle+0x3a4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400053b0:	e0877087 	add	r7, r7, r7, lsl #1
400053b4:	e0866187 	add	r6, r6, r7, lsl #3
400053b8:	e59fadcc 	ldr	sl, [pc, #3532]	; 4000618c <ControlHandle+0xef0>
400053bc:	e5d64003 	ldrb	r4, [r6, #3]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400053c0:	e5d6e004 	ldrb	lr, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400053c4:	e5ca4058 	strb	r4, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400053c8:	e5cae059 	strb	lr, [sl, #89]	; 0x59
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400053cc:	e1a00008 	mov	r0, r8
400053d0:	e59f1db8 	ldr	r1, [pc, #3512]	; 40006190 <ControlHandle+0xef4>
400053d4:	eb005fd9 	bl	4001d340 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400053d8:	e3a0e0ff 	mov	lr, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400053dc:	e5da4058 	ldrb	r4, [sl, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400053e0:	e1a0c00e 	mov	ip, lr
400053e4:	e1a0300e 	mov	r3, lr
400053e8:	eaffffce 	b	40005328 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400053ec:	e3550001 	cmp	r5, #1
400053f0:	1affffc4 	bne	40005308 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400053f4:	e59f1d90 	ldr	r1, [pc, #3472]	; 4000618c <ControlHandle+0xef0>
400053f8:	e28d2026 	add	r2, sp, #38	; 0x26
400053fc:	e3a00020 	mov	r0, #32
40005400:	e2811058 	add	r1, r1, #88	; 0x58
40005404:	eb005d5f 	bl	4001c988 <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
40005408:	e2502000 	subs	r2, r0, #0
4000540c:	1a000320 	bne	40006094 <ControlHandle+0xdf8>
			   {
				  Data0 = glEp0Buffer[0];
40005410:	e59fed74 	ldr	lr, [pc, #3444]	; 4000618c <ControlHandle+0xef0>
40005414:	e5de3058 	ldrb	r3, [lr, #88]	; 0x58
				  Data1 = glEp0Buffer[1];
40005418:	e59fed6c 	ldr	lr, [pc, #3436]	; 4000618c <ControlHandle+0xef0>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
4000541c:	e58d3018 	str	r3, [sp, #24]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005420:	e5de005a 	ldrb	r0, [lr, #90]	; 0x5a
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
40005424:	e5dec059 	ldrb	ip, [lr, #89]	; 0x59
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005428:	e58d001c 	str	r0, [sp, #28]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
4000542c:	e3540022 	cmp	r4, #34	; 0x22
40005430:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
40005434:	ea0002fd 	b	40006030 <ControlHandle+0xd94>
40005438:	40005fe0 	.word	0x40005fe0
4000543c:	40005f24 	.word	0x40005f24
40005440:	40006030 	.word	0x40006030
40005444:	40006030 	.word	0x40006030
40005448:	40005ec0 	.word	0x40005ec0
4000544c:	40005d7c 	.word	0x40005d7c
40005450:	40005cfc 	.word	0x40005cfc
40005454:	40006030 	.word	0x40006030
40005458:	40006030 	.word	0x40006030
4000545c:	40006030 	.word	0x40006030
40005460:	40006030 	.word	0x40006030
40005464:	40005c78 	.word	0x40005c78
40005468:	40006030 	.word	0x40006030
4000546c:	40006030 	.word	0x40006030
40005470:	40006030 	.word	0x40006030
40005474:	40006030 	.word	0x40006030
40005478:	40005b80 	.word	0x40005b80
4000547c:	40006030 	.word	0x40006030
40005480:	40006030 	.word	0x40006030
40005484:	40006030 	.word	0x40006030
40005488:	40006030 	.word	0x40006030
4000548c:	40006030 	.word	0x40006030
40005490:	40006030 	.word	0x40006030
40005494:	40006030 	.word	0x40006030
40005498:	40006030 	.word	0x40006030
4000549c:	40005ac4 	.word	0x40005ac4
400054a0:	40006030 	.word	0x40006030
400054a4:	40006030 	.word	0x40006030
400054a8:	40005c08 	.word	0x40005c08
400054ac:	40006030 	.word	0x40006030
400054b0:	40005a68 	.word	0x40005a68
400054b4:	400059e4 	.word	0x400059e4
400054b8:	4000594c 	.word	0x4000594c
400054bc:	40005934 	.word	0x40005934
400054c0:	400058d0 	.word	0x400058d0
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400054c4:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400054c8:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054cc:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400054d0:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054d4:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400054d8:	859facac 	ldrhi	sl, [pc, #3244]	; 4000618c <ControlHandle+0xef0>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054dc:	959faca8 	ldrls	sl, [pc, #3240]	; 4000618c <ControlHandle+0xef0>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400054e0:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
400054e4:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054e8:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400054ec:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
400054f0:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054f4:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400054f8:	e5ca2059 	strb	r2, [sl, #89]	; 0x59
			  glEp0Buffer[2] = 0;
400054fc:	e5ca305a 	strb	r3, [sl, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
40005500:	e5ca305b 	strb	r3, [sl, #91]	; 0x5b
40005504:	eaffffb0 	b	400053cc <ControlHandle+0x130>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005508:	e59f4c7c 	ldr	r4, [pc, #3196]	; 4000618c <ControlHandle+0xef0>
			  glEp0Buffer[1] = 0;
4000550c:	e3a0c000 	mov	ip, #0
40005510:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005514:	e2841058 	add	r1, r4, #88	; 0x58
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005518:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000551c:	e3a00002 	mov	r0, #2
40005520:	eb005f86 	bl	4001d340 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005524:	e3a0e0ff 	mov	lr, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005528:	e5d44058 	ldrb	r4, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
4000552c:	e1a0c00e 	mov	ip, lr
40005530:	e1a0300e 	mov	r3, lr
40005534:	eaffff7b 	b	40005328 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
40005538:	e2441001 	sub	r1, r4, #1
4000553c:	e3510021 	cmp	r1, #33	; 0x21
40005540:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40005544:	ea0000d8 	b	400058ac <ControlHandle+0x610>
40005548:	40005868 	.word	0x40005868
4000554c:	400058ac 	.word	0x400058ac
40005550:	400058ac 	.word	0x400058ac
40005554:	400058ac 	.word	0x400058ac
40005558:	40005848 	.word	0x40005848
4000555c:	400058ac 	.word	0x400058ac
40005560:	400058ac 	.word	0x400058ac
40005564:	400058ac 	.word	0x400058ac
40005568:	400058ac 	.word	0x400058ac
4000556c:	400058ac 	.word	0x400058ac
40005570:	40005824 	.word	0x40005824
40005574:	400058ac 	.word	0x400058ac
40005578:	400058ac 	.word	0x400058ac
4000557c:	400058ac 	.word	0x400058ac
40005580:	400058ac 	.word	0x400058ac
40005584:	400058ac 	.word	0x400058ac
40005588:	400058ac 	.word	0x400058ac
4000558c:	400058ac 	.word	0x400058ac
40005590:	400058ac 	.word	0x400058ac
40005594:	400058ac 	.word	0x400058ac
40005598:	400058ac 	.word	0x400058ac
4000559c:	400058ac 	.word	0x400058ac
400055a0:	400058ac 	.word	0x400058ac
400055a4:	400058ac 	.word	0x400058ac
400055a8:	400057e8 	.word	0x400057e8
400055ac:	400058ac 	.word	0x400058ac
400055b0:	400058ac 	.word	0x400058ac
400055b4:	400057c0 	.word	0x400057c0
400055b8:	400058ac 	.word	0x400058ac
400055bc:	400058ac 	.word	0x400058ac
400055c0:	40005724 	.word	0x40005724
400055c4:	400056ec 	.word	0x400056ec
400055c8:	400056ec 	.word	0x400056ec
400055cc:	400056ec 	.word	0x400056ec
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400055d0:	e354001f 	cmp	r4, #31
400055d4:	9a000031 	bls	400056a0 <ControlHandle+0x404>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400055d8:	e0877087 	add	r7, r7, r7, lsl #1
400055dc:	e0866187 	add	r6, r6, r7, lsl #3
400055e0:	e59faba4 	ldr	sl, [pc, #2980]	; 4000618c <ControlHandle+0xef0>
400055e4:	e5d6200b 	ldrb	r2, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055e8:	e5d6100c 	ldrb	r1, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400055ec:	e5ca2058 	strb	r2, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055f0:	e5ca1059 	strb	r1, [sl, #89]	; 0x59
400055f4:	eaffff74 	b	400053cc <ControlHandle+0x130>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400055f8:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055fc:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005600:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005604:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005608:	80866187 	addhi	r6, r6, r7, lsl #3
4000560c:	859f8b78 	ldrhi	r8, [pc, #2936]	; 4000618c <ControlHandle+0xef0>
40005610:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005614:	959f8b70 	ldrls	r8, [pc, #2928]	; 4000618c <ControlHandle+0xef0>
40005618:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000561c:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005620:	e5c83058 	strb	r3, [r8, #88]	; 0x58
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005624:	e59f1b64 	ldr	r1, [pc, #2916]	; 40006190 <ControlHandle+0xef4>
40005628:	eb005f44 	bl	4001d340 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000562c:	e3a0e0ff 	mov	lr, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005630:	e5d84058 	ldrb	r4, [r8, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005634:	e1a0c00e 	mov	ip, lr
40005638:	e1a0300e 	mov	r3, lr
4000563c:	eaffff39 	b	40005328 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005640:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005644:	10844084 	addne	r4, r4, r4, lsl #1
40005648:	10866184 	addne	r6, r6, r4, lsl #3
4000564c:	159fab38 	ldrne	sl, [pc, #2872]	; 4000618c <ControlHandle+0xef0>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005650:	059fab34 	ldreq	sl, [pc, #2868]	; 4000618c <ControlHandle+0xef0>
40005654:	059f3b38 	ldreq	r3, [pc, #2872]	; 40006194 <ControlHandle+0xef8>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005658:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
4000565c:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005660:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005664:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005668:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
4000566c:	eaffff56 	b	400053cc <ControlHandle+0x130>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
40005670:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005674:	10844084 	addne	r4, r4, r4, lsl #1
40005678:	10866184 	addne	r6, r6, r4, lsl #3
4000567c:	159fab08 	ldrne	sl, [pc, #2824]	; 4000618c <ControlHandle+0xef0>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005680:	059fab04 	ldreq	sl, [pc, #2820]	; 4000618c <ControlHandle+0xef0>
40005684:	059f3b0c 	ldreq	r3, [pc, #2828]	; 40006198 <ControlHandle+0xefc>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005688:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
4000568c:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005690:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005694:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005698:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
4000569c:	eaffff4a 	b	400053cc <ControlHandle+0x130>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
400056a0:	e354000b 	cmp	r4, #11
400056a4:	0a000007 	beq	400056c8 <ControlHandle+0x42c>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056a8:	e084a084 	add	sl, r4, r4, lsl #1
400056ac:	e086618a 	add	r6, r6, sl, lsl #3
400056b0:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
400056b4:	e59faad0 	ldr	sl, [pc, #2768]	; 4000618c <ControlHandle+0xef0>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400056b8:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056bc:	e5ca3058 	strb	r3, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400056c0:	e5ca0059 	strb	r0, [sl, #89]	; 0x59
400056c4:	eaffff40 	b	400053cc <ControlHandle+0x130>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056c8:	e59faabc 	ldr	sl, [pc, #2748]	; 4000618c <ControlHandle+0xef0>
400056cc:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400056d0:	e5d64294 	ldrb	r4, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
400056d4:	e3a0e000 	mov	lr, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056d8:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				  glEp0Buffer[1] = 0;
400056dc:	e5cae059 	strb	lr, [sl, #89]	; 0x59
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400056e0:	e5ca405a 	strb	r4, [sl, #90]	; 0x5a
				  glEp0Buffer[3] = 0;
400056e4:	e5cae05b 	strb	lr, [sl, #91]	; 0x5b
400056e8:	eaffff37 	b	400053cc <ControlHandle+0x130>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400056ec:	e0877087 	add	r7, r7, r7, lsl #1
400056f0:	e0866187 	add	r6, r6, r7, lsl #3
400056f4:	e59fea90 	ldr	lr, [pc, #2704]	; 4000618c <ControlHandle+0xef0>
400056f8:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056fc:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
40005700:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
40005704:	e5ce6059 	strb	r6, [lr, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005708:	e1a00008 	mov	r0, r8
4000570c:	e59f1a7c 	ldr	r1, [pc, #2684]	; 40006190 <ControlHandle+0xef4>
40005710:	eb005f0a 	bl	4001d340 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005714:	e3a0c0ff 	mov	ip, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005718:	e1a0e006 	mov	lr, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
4000571c:	e1a0300c 	mov	r3, ip
40005720:	eaffff00 	b	40005328 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005724:	e3580000 	cmp	r8, #0
40005728:	0a00028d 	beq	40006164 <ControlHandle+0xec8>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
4000572c:	e1a0e128 	lsr	lr, r8, #2
40005730:	e35e0000 	cmp	lr, #0
40005734:	13580003 	cmpne	r8, #3
40005738:	83a02000 	movhi	r2, #0
4000573c:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005740:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005744:	9a00028a 	bls	40006174 <ControlHandle+0xed8>
40005748:	e59f1a40 	ldr	r1, [pc, #2624]	; 40006190 <ControlHandle+0xef4>
4000574c:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005750:	e4904004 	ldr	r4, [r0], #4
40005754:	e282c001 	add	ip, r2, #1
40005758:	e20c20ff 	and	r2, ip, #255	; 0xff
4000575c:	e15e0002 	cmp	lr, r2
40005760:	e4814004 	str	r4, [r1], #4
40005764:	8afffff9 	bhi	40005750 <ControlHandle+0x4b4>
40005768:	e1580003 	cmp	r8, r3
4000576c:	159f0a18 	ldrne	r0, [pc, #2584]	; 4000618c <ControlHandle+0xef0>
40005770:	0a00027b 	beq	40006164 <ControlHandle+0xec8>
40005774:	e080e003 	add	lr, r0, r3
40005778:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
4000577c:	e2836001 	add	r6, r3, #1
40005780:	e20630ff 	and	r3, r6, #255	; 0xff
40005784:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005788:	e5ce1058 	strb	r1, [lr, #88]	; 0x58
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
4000578c:	8afffff8 	bhi	40005774 <ControlHandle+0x4d8>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005790:	e5d02057 	ldrb	r2, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005794:	e59f39f0 	ldr	r3, [pc, #2544]	; 4000618c <ControlHandle+0xef0>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005798:	e35200ff 	cmp	r2, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
4000579c:	e5d04061 	ldrb	r4, [r0, #97]	; 0x61
			 		 sendData1 = glEp0Buffer[10];
400057a0:	e5d06062 	ldrb	r6, [r0, #98]	; 0x62
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400057a4:	0affffd7 	beq	40005708 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
400057a8:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
400057ac:	e59f19e8 	ldr	r1, [pc, #2536]	; 4000619c <ControlHandle+0xf00>
400057b0:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
400057b4:	e3a00004 	mov	r0, #4
400057b8:	eb0035a3 	bl	40012e4c <CyU3PDebugPrint>
400057bc:	eaffffd1 	b	40005708 <ControlHandle+0x46c>
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
400057c0:	e59f79c4 	ldr	r7, [pc, #2500]	; 4000618c <ControlHandle+0xef0>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
400057c4:	e5d6442d 	ldrb	r4, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
400057c8:	e5d72078 	ldrb	r2, [r7, #120]	; 0x78
400057cc:	e3520001 	cmp	r2, #1
400057d0:	0a000237 	beq	400060b4 <ControlHandle+0xe18>
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
400057d4:	e3a00000 	mov	r0, #0
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
400057d8:	e5c74058 	strb	r4, [r7, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057dc:	e5c70059 	strb	r0, [r7, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400057e0:	e3a060ff 	mov	r6, #255	; 0xff
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400057e4:	eaffffc7 	b	40005708 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057e8:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
400057ec:	e59fc998 	ldr	ip, [pc, #2456]	; 4000618c <ControlHandle+0xef0>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400057f0:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
400057f4:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057f8:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057fc:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
40005800:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005804:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005808:	e59f1990 	ldr	r1, [pc, #2448]	; 400061a0 <ControlHandle+0xf04>
4000580c:	e1a02004 	mov	r2, r4
40005810:	e1a0300e 	mov	r3, lr
40005814:	e3a00004 	mov	r0, #4
40005818:	e88d4040 	stm	sp, {r6, lr}
4000581c:	eb00358a 	bl	40012e4c <CyU3PDebugPrint>
					 break;
40005820:	eaffffb8 	b	40005708 <ControlHandle+0x46c>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005824:	e59f0960 	ldr	r0, [pc, #2400]	; 4000618c <ControlHandle+0xef0>
40005828:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
4000582c:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
40005830:	e3a0c000 	mov	ip, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005834:	e5c04058 	strb	r4, [r0, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005838:	e5c0c059 	strb	ip, [r0, #89]	; 0x59
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
4000583c:	e5c0605a 	strb	r6, [r0, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005840:	e5c0c05b 	strb	ip, [r0, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005844:	eaffffaf 	b	40005708 <ControlHandle+0x46c>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005848:	e5d64205 	ldrb	r4, [r6, #517]	; 0x205
4000584c:	e59fe938 	ldr	lr, [pc, #2360]	; 4000618c <ControlHandle+0xef0>
40005850:	e2244080 	eor	r4, r4, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005854:	e3a02000 	mov	r2, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005858:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
					 glEp0Buffer[1] = 0;
4000585c:	e5ce2059 	strb	r2, [lr, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005860:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005864:	eaffffa7 	b	40005708 <ControlHandle+0x46c>
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005868:	e5d611a6 	ldrb	r1, [r6, #422]	; 0x1a6
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
4000586c:	e5d661a5 	ldrb	r6, [r6, #421]	; 0x1a5
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005870:	e3110002 	tst	r1, #2
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005874:	01a06126 	lsreq	r6, r6, #2
40005878:	01e06c86 	mvneq	r6, r6, lsl #25
4000587c:	01e06ca6 	mvneq	r6, r6, lsr #25
					 }
					 glEp0Buffer[0] = Data1;
40005880:	e59f3904 	ldr	r3, [pc, #2308]	; 4000618c <ControlHandle+0xef0>

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005884:	11a01301 	lslne	r1, r1, #6
40005888:	12014040 	andne	r4, r1, #64	; 0x40
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
4000588c:	01861301 	orreq	r1, r6, r1, lsl #6

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005890:	11844126 	orrne	r4, r4, r6, lsr #2
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005894:	020140ff 	andeq	r4, r1, #255	; 0xff
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
40005898:	e3a00000 	mov	r0, #0
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
4000589c:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400058a0:	e5c30059 	strb	r0, [r3, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400058a4:	e3a060ff 	mov	r6, #255	; 0xff
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
400058a8:	eaffff96 	b	40005708 <ControlHandle+0x46c>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
400058ac:	e0842084 	add	r2, r4, r4, lsl #1
400058b0:	e0866182 	add	r6, r6, r2, lsl #3
400058b4:	e59f38d0 	ldr	r3, [pc, #2256]	; 4000618c <ControlHandle+0xef0>
400058b8:	e5d6418d 	ldrb	r4, [r6, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
400058bc:	e3a01000 	mov	r1, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400058c0:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
400058c4:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400058c8:	e5c31059 	strb	r1, [r3, #89]	; 0x59
					 sendData = glEp0Buffer[0];
					 break;
400058cc:	eaffff8d 	b	40005708 <ControlHandle+0x46c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400058d0:	e59f48cc 	ldr	r4, [pc, #2252]	; 400061a4 <ControlHandle+0xf08>
400058d4:	e3e01000 	mvn	r1, #0
400058d8:	e594001c 	ldr	r0, [r4, #28]
400058dc:	eb0011a0 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
400058e0:	e3a01022 	mov	r1, #34	; 0x22
400058e4:	e59dc018 	ldr	ip, [sp, #24]
400058e8:	e3a0e000 	mov	lr, #0
400058ec:	e1a0300a 	mov	r3, sl
400058f0:	e1a02009 	mov	r2, r9
400058f4:	e1a00004 	mov	r0, r4
400058f8:	e88d5000 	stm	sp, {ip, lr}
400058fc:	ebfff6ed 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005900:	e594001c 	ldr	r0, [r4, #28]
40005904:	eb0011cb 	bl	4000a038 <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005908:	e59d1018 	ldr	r1, [sp, #24]
4000590c:	e0877087 	add	r7, r7, r7, lsl #1
40005910:	e0866187 	add	r6, r6, r7, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005914:	e3a03001 	mov	r3, #1
							 break;
40005918:	e3a0e0ff 	mov	lr, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
4000591c:	e5c63010 	strb	r3, [r6, #16]
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005920:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005924:	e1a03001 	mov	r3, r1
40005928:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
4000592c:	e1a0400e 	mov	r4, lr
40005930:	eafffe7c 	b	40005328 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID1: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005934:	e59f4868 	ldr	r4, [pc, #2152]	; 400061a4 <ControlHandle+0xf08>
40005938:	e3e01000 	mvn	r1, #0
4000593c:	e594001c 	ldr	r0, [r4, #28]
40005940:	eb001187 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005944:	e3a01021 	mov	r1, #33	; 0x21
40005948:	eaffffe5 	b	400058e4 <ControlHandle+0x648>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000594c:	e59f4850 	ldr	r4, [pc, #2128]	; 400061a4 <ControlHandle+0xf08>
40005950:	e3e01000 	mvn	r1, #0
40005954:	e594001c 	ldr	r0, [r4, #28]
40005958:	e58dc014 	str	ip, [sp, #20]
4000595c:	eb001180 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005960:	e59d2018 	ldr	r2, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005964:	e3a0e000 	mov	lr, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005968:	e202807f 	and	r8, r2, #127	; 0x7f
4000596c:	e58d801c 	str	r8, [sp, #28]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005970:	e59dc01c 	ldr	ip, [sp, #28]
40005974:	e3a01020 	mov	r1, #32
40005978:	e1a02009 	mov	r2, r9
4000597c:	e1a0300a 	mov	r3, sl
40005980:	e1a00004 	mov	r0, r4
40005984:	e88d5000 	stm	sp, {ip, lr}
40005988:	ebfff6ca 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
4000598c:	e59dc014 	ldr	ip, [sp, #20]
40005990:	e1a0300a 	mov	r3, sl
40005994:	e3a08001 	mov	r8, #1
40005998:	e3a01020 	mov	r1, #32
4000599c:	e1a0200b 	mov	r2, fp
400059a0:	e1a00004 	mov	r0, r4
400059a4:	e58dc000 	str	ip, [sp]
400059a8:	e58d8004 	str	r8, [sp, #4]
400059ac:	ebfff6c1 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400059b0:	e594001c 	ldr	r0, [r4, #28]
400059b4:	eb00119f 	bl	4000a038 <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
400059b8:	e59d001c 	ldr	r0, [sp, #28]
400059bc:	e0877087 	add	r7, r7, r7, lsl #1
400059c0:	e0866187 	add	r6, r6, r7, lsl #3
400059c4:	e5c6000d 	strb	r0, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
400059c8:	e59dc014 	ldr	ip, [sp, #20]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
400059cc:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
							 ExUCtrlParArry[locCtrlID][14] = Data1;
400059d0:	e5c6c00e 	strb	ip, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400059d4:	e5c68010 	strb	r8, [r6, #16]
400059d8:	e59d3018 	ldr	r3, [sp, #24]
							 break;
400059dc:	e1a0400e 	mov	r4, lr
400059e0:	eafffe50 	b	40005328 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
400059e4:	e3580000 	cmp	r8, #0
400059e8:	0a000018 	beq	40005a50 <ControlHandle+0x7b4>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400059ec:	e1a0e128 	lsr	lr, r8, #2
400059f0:	e35e0000 	cmp	lr, #0
400059f4:	13580003 	cmpne	r8, #3
400059f8:	83a02000 	movhi	r2, #0
400059fc:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005a00:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005a04:	9a0001d8 	bls	4000616c <ControlHandle+0xed0>
40005a08:	e59f1798 	ldr	r1, [pc, #1944]	; 400061a8 <ControlHandle+0xf0c>
40005a0c:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a10:	e4904004 	ldr	r4, [r0], #4
40005a14:	e2822001 	add	r2, r2, #1
40005a18:	e20220ff 	and	r2, r2, #255	; 0xff
40005a1c:	e15e0002 	cmp	lr, r2
40005a20:	e4814004 	str	r4, [r1], #4
40005a24:	8afffff9 	bhi	40005a10 <ControlHandle+0x774>
40005a28:	e1580003 	cmp	r8, r3
40005a2c:	0a000007 	beq	40005a50 <ControlHandle+0x7b4>
40005a30:	e59fc754 	ldr	ip, [pc, #1876]	; 4000618c <ControlHandle+0xef0>
40005a34:	e08ce003 	add	lr, ip, r3
40005a38:	e5de1058 	ldrb	r1, [lr, #88]	; 0x58
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a3c:	e2833001 	add	r3, r3, #1
40005a40:	e20330ff 	and	r3, r3, #255	; 0xff
40005a44:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a48:	e5ce104c 	strb	r1, [lr, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a4c:	8afffff7 	bhi	40005a30 <ControlHandle+0x794>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a50:	ebfffd97 	bl	400050b4 <I2CCmdHandler>
							 break;
40005a54:	e3a0e0ff 	mov	lr, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a58:	e59d3018 	ldr	r3, [sp, #24]
40005a5c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005a60:	e1a0400e 	mov	r4, lr
40005a64:	eafffe2f 	b	40005328 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a68:	e59f4734 	ldr	r4, [pc, #1844]	; 400061a4 <ControlHandle+0xf08>
40005a6c:	e3e01000 	mvn	r1, #0
40005a70:	e594001c 	ldr	r0, [r4, #28]
40005a74:	eb00113a 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005a78:	e59d0018 	ldr	r0, [sp, #24]
40005a7c:	e3a0e000 	mov	lr, #0
40005a80:	e270c001 	rsbs	ip, r0, #1
40005a84:	33a0c000 	movcc	ip, #0
40005a88:	e1a0300a 	mov	r3, sl
40005a8c:	e3a0101e 	mov	r1, #30
40005a90:	e1a02009 	mov	r2, r9
40005a94:	e1a00004 	mov	r0, r4
40005a98:	e88d5000 	stm	sp, {ip, lr}
40005a9c:	ebfff685 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005aa0:	e594001c 	ldr	r0, [r4, #28]
40005aa4:	eb001163 	bl	4000a038 <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
40005aa8:	e3a03001 	mov	r3, #1
							 break;
40005aac:	e3a0e0ff 	mov	lr, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ab0:	e5c63460 	strb	r3, [r6, #1120]	; 0x460
40005ab4:	e59dc01c 	ldr	ip, [sp, #28]
40005ab8:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005abc:	e1a0400e 	mov	r4, lr
40005ac0:	eafffe18 	b	40005328 <ControlHandle+0x8c>
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ac4:	e59f46d8 	ldr	r4, [pc, #1752]	; 400061a4 <ControlHandle+0xf08>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005ac8:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005acc:	e59d301c 	ldr	r3, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ad0:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ad4:	e3e01000 	mvn	r1, #0
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005ad8:	e5c633e6 	strb	r3, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005adc:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ae0:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ae4:	eb00111e 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005ae8:	e59dc018 	ldr	ip, [sp, #24]
40005aec:	e1a00004 	mov	r0, r4
40005af0:	e58dc000 	str	ip, [sp]
40005af4:	e3a01019 	mov	r1, #25
40005af8:	e3a0c000 	mov	ip, #0
40005afc:	e1a02009 	mov	r2, r9
40005b00:	e1a0300a 	mov	r3, sl
40005b04:	e58dc004 	str	ip, [sp, #4]
40005b08:	ebfff66a 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40005b0c:	e59d0018 	ldr	r0, [sp, #24]
40005b10:	e3500000 	cmp	r0, #0
40005b14:	0a000007 	beq	40005b38 <ControlHandle+0x89c>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40005b18:	e59de01c 	ldr	lr, [sp, #28]
40005b1c:	e1a00004 	mov	r0, r4
40005b20:	e3a01019 	mov	r1, #25
40005b24:	e1a0200b 	mov	r2, fp
40005b28:	e1a0300a 	mov	r3, sl
40005b2c:	e58de000 	str	lr, [sp]
40005b30:	e58d7004 	str	r7, [sp, #4]
40005b34:	ebfff65f 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b38:	e594001c 	ldr	r0, [r4, #28]
40005b3c:	eb00113d 	bl	4000a038 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005b40:	e59f0644 	ldr	r0, [pc, #1604]	; 4000618c <ControlHandle+0xef0>
40005b44:	e59f1640 	ldr	r1, [pc, #1600]	; 4000618c <ControlHandle+0xef0>
40005b48:	e5d0c05a 	ldrb	ip, [r0, #90]	; 0x5a
40005b4c:	e5d1405b 	ldrb	r4, [r1, #91]	; 0x5b
40005b50:	e5d03059 	ldrb	r3, [r0, #89]	; 0x59
40005b54:	e5d02058 	ldrb	r2, [r0, #88]	; 0x58
40005b58:	e59f164c 	ldr	r1, [pc, #1612]	; 400061ac <ControlHandle+0xf10>
40005b5c:	e3a00004 	mov	r0, #4
40005b60:	e58dc000 	str	ip, [sp]
40005b64:	e58d4004 	str	r4, [sp, #4]
40005b68:	eb0034b7 	bl	40012e4c <CyU3PDebugPrint>
							 break;
40005b6c:	e3a0e0ff 	mov	lr, #255	; 0xff
							 if(getData != 0){
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005b70:	e59d3018 	ldr	r3, [sp, #24]
40005b74:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005b78:	e1a0400e 	mov	r4, lr
40005b7c:	eafffde9 	b	40005328 <ControlHandle+0x8c>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40005b80:	e2531000 	subs	r1, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005b84:	e5c6130d 	strb	r1, [r6, #781]	; 0x30d
40005b88:	e59f35f0 	ldr	r3, [pc, #1520]	; 40006180 <ControlHandle+0xee4>
							 if(Data0 == 0){//set exposure mode auto
40005b8c:	1a000155 	bne	400060e8 <ControlHandle+0xe4c>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40005b90:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
40005b94:	e3520002 	cmp	r2, #2
40005b98:	13520008 	cmpne	r2, #8
40005b9c:	0a000003 	beq	40005bb0 <ControlHandle+0x914>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40005ba0:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40005ba4:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40005ba8:	13a02002 	movne	r2, #2
40005bac:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005bb0:	e59f45ec 	ldr	r4, [pc, #1516]	; 400061a4 <ControlHandle+0xf08>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005bb4:	e3a02001 	mov	r2, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005bb8:	e3e01000 	mvn	r1, #0
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005bbc:	e5c62310 	strb	r2, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005bc0:	e594001c 	ldr	r0, [r4, #28]
40005bc4:	eb0010e6 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005bc8:	e59dc018 	ldr	ip, [sp, #24]
40005bcc:	e3a01010 	mov	r1, #16
40005bd0:	e58dc000 	str	ip, [sp]
40005bd4:	e1a02009 	mov	r2, r9
40005bd8:	e1a0300a 	mov	r3, sl
40005bdc:	e1a00004 	mov	r0, r4
40005be0:	e3a0c000 	mov	ip, #0
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005be4:	e58dc004 	str	ip, [sp, #4]
40005be8:	ebfff632 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005bec:	e594001c 	ldr	r0, [r4, #28]
40005bf0:	eb001110 	bl	4000a038 <_txe_mutex_put>

					 		 break;
40005bf4:	e3a0e0ff 	mov	lr, #255	; 0xff
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005bf8:	e59d3018 	ldr	r3, [sp, #24]
40005bfc:	e59dc01c 	ldr	ip, [sp, #28]

					 		 break;
40005c00:	e1a0400e 	mov	r4, lr
40005c04:	eafffdc7 	b	40005328 <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
40005c08:	e3530003 	cmp	r3, #3
								 CamMode = 0; //set 1080p flag
40005c0c:	959f2578 	ldrls	r2, [pc, #1400]	; 4000618c <ControlHandle+0xef0>
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005c10:	859fe574 	ldrhi	lr, [pc, #1396]	; 4000618c <ControlHandle+0xef0>
40005c14:	e1a04003 	mov	r4, r3
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005c18:	93a03000 	movls	r3, #0
40005c1c:	95c23078 	strbls	r3, [r2, #120]	; 0x78
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005c20:	83a02001 	movhi	r2, #1
40005c24:	959d2018 	ldrls	r2, [sp, #24]
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005c28:	91a03004 	movls	r3, r4
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005c2c:	85ce2078 	strbhi	r2, [lr, #120]	; 0x78
40005c30:	81a02004 	movhi	r2, r4
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c34:	e59f4568 	ldr	r4, [pc, #1384]	; 400061a4 <ControlHandle+0xf08>
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
40005c38:	82433004 	subhi	r3, r3, #4
							 }
							 CtrlParArry[CtrlID][13] = Data0;
40005c3c:	e5c6242d 	strb	r2, [r6, #1069]	; 0x42d
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c40:	e3a02001 	mov	r2, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c44:	e3e01000 	mvn	r1, #0
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
40005c48:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c4c:	e5c62430 	strb	r2, [r6, #1072]	; 0x430
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c50:	e594001c 	ldr	r0, [r4, #28]
40005c54:	eb0010c2 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c58:	e59dc018 	ldr	ip, [sp, #24]
40005c5c:	e3a0101c 	mov	r1, #28
40005c60:	e58dc000 	str	ip, [sp]
40005c64:	e1a02009 	mov	r2, r9
40005c68:	e1a0300a 	mov	r3, sl
40005c6c:	e1a00004 	mov	r0, r4
40005c70:	e3a0c000 	mov	ip, #0
40005c74:	eaffffda 	b	40005be4 <ControlHandle+0x948>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c78:	e59f4524 	ldr	r4, [pc, #1316]	; 400061a4 <ControlHandle+0xf08>
40005c7c:	e3e01000 	mvn	r1, #0
40005c80:	e594001c 	ldr	r0, [r4, #28]
40005c84:	eb0010b6 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c88:	e59dc018 	ldr	ip, [sp, #24]
40005c8c:	e3a0100b 	mov	r1, #11
40005c90:	e1a02009 	mov	r2, r9
40005c94:	e1a0300a 	mov	r3, sl
40005c98:	e1a00004 	mov	r0, r4
40005c9c:	e58dc000 	str	ip, [sp]
40005ca0:	e3a0c000 	mov	ip, #0
40005ca4:	e58dc004 	str	ip, [sp, #4]
40005ca8:	ebfff602 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005cac:	e59de01c 	ldr	lr, [sp, #28]
40005cb0:	e1a0200b 	mov	r2, fp
40005cb4:	e1a0300a 	mov	r3, sl
40005cb8:	e3a07001 	mov	r7, #1
40005cbc:	e3a0100b 	mov	r1, #11
40005cc0:	e1a00004 	mov	r0, r4
40005cc4:	e58de000 	str	lr, [sp]
40005cc8:	e58d7004 	str	r7, [sp, #4]
40005ccc:	ebfff5f9 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005cd0:	e594001c 	ldr	r0, [r4, #28]
40005cd4:	eb0010d7 	bl	4000a038 <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
							 WBMenuCmpArry[2] = Data1;//using for red part
40005cd8:	e59d201c 	ldr	r2, [sp, #28]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005cdc:	e59d3018 	ldr	r3, [sp, #24]
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ce0:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005ce4:	e5c6348c 	strb	r3, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ce8:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cec:	e5c67298 	strb	r7, [r6, #664]	; 0x298
40005cf0:	e1a0c002 	mov	ip, r2
							 break;
40005cf4:	e1a0400e 	mov	r4, lr
40005cf8:	eafffd8a 	b	40005328 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cfc:	e59f44a0 	ldr	r4, [pc, #1184]	; 400061a4 <ControlHandle+0xf08>
40005d00:	e3e01000 	mvn	r1, #0
40005d04:	e594001c 	ldr	r0, [r4, #28]
40005d08:	eb001095 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005d0c:	e59dc018 	ldr	ip, [sp, #24]
40005d10:	e3a01006 	mov	r1, #6
40005d14:	e1a02009 	mov	r2, r9
40005d18:	e1a0300a 	mov	r3, sl
40005d1c:	e1a00004 	mov	r0, r4
40005d20:	e58dc000 	str	ip, [sp]
40005d24:	e3a0c000 	mov	ip, #0
40005d28:	e58dc004 	str	ip, [sp, #4]
40005d2c:	ebfff5e1 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005d30:	e59de018 	ldr	lr, [sp, #24]
40005d34:	e1a0300a 	mov	r3, sl
40005d38:	e3a07001 	mov	r7, #1
40005d3c:	e3a01006 	mov	r1, #6
40005d40:	e1a0200b 	mov	r2, fp
40005d44:	e1a00004 	mov	r0, r4
40005d48:	e58de000 	str	lr, [sp]
40005d4c:	e58d7004 	str	r7, [sp, #4]
40005d50:	ebfff5d8 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d54:	e594001c 	ldr	r0, [r4, #28]
40005d58:	eb0010b6 	bl	4000a038 <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005d5c:	e59d4018 	ldr	r4, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d60:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005d64:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d68:	e1a03004 	mov	r3, r4
40005d6c:	e5c67220 	strb	r7, [r6, #544]	; 0x220
40005d70:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005d74:	e1a0400e 	mov	r4, lr
40005d78:	eafffd6a 	b	40005328 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d7c:	e59f4420 	ldr	r4, [pc, #1056]	; 400061a4 <ControlHandle+0xf08>
40005d80:	e3e01000 	mvn	r1, #0
40005d84:	e594001c 	ldr	r0, [r4, #28]
40005d88:	eb001075 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005d8c:	e59d1018 	ldr	r1, [sp, #24]
40005d90:	e3a0e000 	mov	lr, #0
40005d94:	e2412080 	sub	r2, r1, #128	; 0x80
40005d98:	e202c0ff 	and	ip, r2, #255	; 0xff
40005d9c:	e3a01005 	mov	r1, #5
40005da0:	e1a02009 	mov	r2, r9
40005da4:	e1a0300a 	mov	r3, sl
40005da8:	e1a00004 	mov	r0, r4
40005dac:	e88d5000 	stm	sp, {ip, lr}
40005db0:	ebfff5c0 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005db4:	e59d0018 	ldr	r0, [sp, #24]
40005db8:	e3a01005 	mov	r1, #5
40005dbc:	e2407076 	sub	r7, r0, #118	; 0x76
40005dc0:	e207c0ff 	and	ip, r7, #255	; 0xff
40005dc4:	e3a020dc 	mov	r2, #220	; 0xdc
40005dc8:	e3a07001 	mov	r7, #1
40005dcc:	e1a0300a 	mov	r3, sl
40005dd0:	e1a00004 	mov	r0, r4
40005dd4:	e58dc000 	str	ip, [sp]
40005dd8:	e58d7004 	str	r7, [sp, #4]
40005ddc:	ebfff5b5 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005de0:	e59d3018 	ldr	r3, [sp, #24]
40005de4:	e3a020de 	mov	r2, #222	; 0xde
40005de8:	e283107e 	add	r1, r3, #126	; 0x7e
40005dec:	e201c0ff 	and	ip, r1, #255	; 0xff
40005df0:	e1a0300a 	mov	r3, sl
40005df4:	e3a01005 	mov	r1, #5
40005df8:	e1a00004 	mov	r0, r4
40005dfc:	e58dc000 	str	ip, [sp]
40005e00:	e3a0c002 	mov	ip, #2
40005e04:	e58dc004 	str	ip, [sp, #4]
40005e08:	ebfff5aa 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005e0c:	e59d2018 	ldr	r2, [sp, #24]
40005e10:	e3a01005 	mov	r1, #5
40005e14:	e2820072 	add	r0, r2, #114	; 0x72
40005e18:	e200c0ff 	and	ip, r0, #255	; 0xff
40005e1c:	e3a020e0 	mov	r2, #224	; 0xe0
40005e20:	e1a0300a 	mov	r3, sl
40005e24:	e1a00004 	mov	r0, r4
40005e28:	e58dc000 	str	ip, [sp]
40005e2c:	e3a0c003 	mov	ip, #3
40005e30:	e58dc004 	str	ip, [sp, #4]
40005e34:	ebfff59f 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40005e38:	e59d3018 	ldr	r3, [sp, #24]
40005e3c:	e3a020dd 	mov	r2, #221	; 0xdd
40005e40:	e243106f 	sub	r1, r3, #111	; 0x6f
40005e44:	e201c0ff 	and	ip, r1, #255	; 0xff
40005e48:	e1a0300a 	mov	r3, sl
40005e4c:	e3a01005 	mov	r1, #5
40005e50:	e1a00004 	mov	r0, r4
40005e54:	e58dc000 	str	ip, [sp]
40005e58:	e3a0c004 	mov	ip, #4
40005e5c:	e58dc004 	str	ip, [sp, #4]
40005e60:	ebfff594 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40005e64:	e59f2320 	ldr	r2, [pc, #800]	; 4000618c <ControlHandle+0xef0>
40005e68:	e3a0e005 	mov	lr, #5
40005e6c:	e5d20058 	ldrb	r0, [r2, #88]	; 0x58
40005e70:	e1a0100e 	mov	r1, lr
40005e74:	e280307f 	add	r3, r0, #127	; 0x7f
40005e78:	e203c0ff 	and	ip, r3, #255	; 0xff
40005e7c:	e1a0200b 	mov	r2, fp
40005e80:	e1a0300a 	mov	r3, sl
40005e84:	e1a00004 	mov	r0, r4
40005e88:	e88d5000 	stm	sp, {ip, lr}
40005e8c:	ebfff589 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005e90:	e594001c 	ldr	r0, [r4, #28]
40005e94:	eb001067 	bl	4000a038 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005e98:	e59f12ec 	ldr	r1, [pc, #748]	; 4000618c <ControlHandle+0xef0>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005e9c:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005ea0:	e5d1c058 	ldrb	ip, [r1, #88]	; 0x58
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ea4:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005ea8:	e24c2080 	sub	r2, ip, #128	; 0x80
40005eac:	e5c62205 	strb	r2, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40005eb0:	e59d3018 	ldr	r3, [sp, #24]
40005eb4:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005eb8:	e1a0400e 	mov	r4, lr
40005ebc:	eafffd19 	b	40005328 <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ec0:	e59f42dc 	ldr	r4, [pc, #732]	; 400061a4 <ControlHandle+0xf08>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
40005ec4:	e2437001 	sub	r7, r3, #1
40005ec8:	e20770ff 	and	r7, r7, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005ecc:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ed0:	e3e01000 	mvn	r1, #0
40005ed4:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005ed8:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005edc:	eb001020 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ee0:	e3a0c000 	mov	ip, #0
40005ee4:	e1a0300a 	mov	r3, sl
40005ee8:	e3a01004 	mov	r1, #4
40005eec:	e1a02009 	mov	r2, r9
40005ef0:	e1a00004 	mov	r0, r4
40005ef4:	e88d1080 	stm	sp, {r7, ip}
40005ef8:	ebfff56e 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005efc:	e594001c 	ldr	r0, [r4, #28]
40005f00:	eb00104c 	bl	4000a038 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005f04:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f08:	e3a00001 	mov	r0, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005f0c:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f10:	e5c601f0 	strb	r0, [r6, #496]	; 0x1f0
40005f14:	e59d3018 	ldr	r3, [sp, #24]
40005f18:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005f1c:	e1a0400e 	mov	r4, lr
40005f20:	eafffd00 	b	40005328 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f24:	e59f7278 	ldr	r7, [pc, #632]	; 400061a4 <ControlHandle+0xf08>
40005f28:	e3e01000 	mvn	r1, #0
40005f2c:	e597001c 	ldr	r0, [r7, #28]
40005f30:	eb00100b 	bl	40009f64 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005f34:	e59d8018 	ldr	r8, [sp, #24]
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f38:	e5d601a6 	ldrb	r0, [r6, #422]	; 0x1a6
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005f3c:	e3180080 	tst	r8, #128	; 0x80
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f40:	01a04328 	lsreq	r4, r8, #6
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f44:	11a04c88 	lslne	r4, r8, #25
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f48:	03844002 	orreq	r4, r4, #2
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f4c:	13c00003 	bicne	r0, r0, #3
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f50:	03c00003 	biceq	r0, r0, #3
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f54:	11804fa4 	orrne	r4, r0, r4, lsr #31
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f58:	01844000 	orreq	r4, r4, r0
							  }
							 Data1 |= ~0x03;
40005f5c:	e1e03f04 	mvn	r3, r4, lsl #30
40005f60:	e1e01f23 	mvn	r1, r3, lsr #30
							 Data1 &= 0xC7;
40005f64:	e201c0c7 	and	ip, r1, #199	; 0xc7
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f68:	e3a0e000 	mov	lr, #0
40005f6c:	e3a01001 	mov	r1, #1
40005f70:	e1a0200b 	mov	r2, fp
40005f74:	e1a0300a 	mov	r3, sl
40005f78:	e59f0224 	ldr	r0, [pc, #548]	; 400061a4 <ControlHandle+0xf08>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f7c:	e1a04001 	mov	r4, r1
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f80:	e88d5000 	stm	sp, {ip, lr}
40005f84:	e58dc014 	str	ip, [sp, #20]
40005f88:	ebfff54a 	bl	400034b8 <cmdSet>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005f8c:	e59d2018 	ldr	r2, [sp, #24]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f90:	e1a01004 	mov	r1, r4
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005f94:	e1a08102 	lsl	r8, r2, #2
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f98:	e1a0300a 	mov	r3, sl
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005f9c:	e20880ff 	and	r8, r8, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005fa0:	e1a02009 	mov	r2, r9
40005fa4:	e59f01f8 	ldr	r0, [pc, #504]	; 400061a4 <ControlHandle+0xf08>
40005fa8:	e58d4004 	str	r4, [sp, #4]
40005fac:	e58d8000 	str	r8, [sp]
40005fb0:	ebfff540 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005fb4:	e597001c 	ldr	r0, [r7, #28]
40005fb8:	eb00101e 	bl	4000a038 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40005fbc:	e5c681a5 	strb	r8, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][14] = Data1;
40005fc0:	e59d0014 	ldr	r0, [sp, #20]
							 CtrlParArry[CtrlID][16] = CyTrue;

							 break;
40005fc4:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fc8:	e5c641a8 	strb	r4, [r6, #424]	; 0x1a8
							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005fcc:	e5c601a6 	strb	r0, [r6, #422]	; 0x1a6
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fd0:	e59d3018 	ldr	r3, [sp, #24]
40005fd4:	e59dc01c 	ldr	ip, [sp, #28]

							 break;
40005fd8:	e1a0400e 	mov	r4, lr
40005fdc:	eafffcd1 	b	40005328 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
40005fe0:	e59f21a4 	ldr	r2, [pc, #420]	; 4000618c <ControlHandle+0xef0>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fe4:	e3a01001 	mov	r1, #1
							 if(CamMode == 1) //mode 720p
40005fe8:	e5d22078 	ldrb	r2, [r2, #120]	; 0x78

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005fec:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
40005ff0:	e3520001 	cmp	r2, #1
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ff4:	e5c61190 	strb	r1, [r6, #400]	; 0x190
40005ff8:	11a07003 	movne	r7, r3
							 if(CamMode == 1) //mode 720p
40005ffc:	0a00004e 	beq	4000613c <ControlHandle+0xea0>
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006000:	e59f419c 	ldr	r4, [pc, #412]	; 400061a4 <ControlHandle+0xf08>
40006004:	e3e01000 	mvn	r1, #0
40006008:	e594001c 	ldr	r0, [r4, #28]
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
4000600c:	e5c6742d 	strb	r7, [r6, #1069]	; 0x42d
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006010:	eb000fd3 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006014:	e3a0c000 	mov	ip, #0
40006018:	e1a0100c 	mov	r1, ip
4000601c:	e1a02009 	mov	r2, r9
40006020:	e1a0300a 	mov	r3, sl
40006024:	e1a00004 	mov	r0, r4
40006028:	e58d7000 	str	r7, [sp]
4000602c:	eafffeec 	b	40005be4 <ControlHandle+0x948>

					 		 break;
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006030:	e59f716c 	ldr	r7, [pc, #364]	; 400061a4 <ControlHandle+0xf08>
40006034:	e3e01000 	mvn	r1, #0
40006038:	e597001c 	ldr	r0, [r7, #28]
4000603c:	eb000fc8 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006040:	e59dc018 	ldr	ip, [sp, #24]
40006044:	e3a0e000 	mov	lr, #0
40006048:	e1a01004 	mov	r1, r4
4000604c:	e1a0300a 	mov	r3, sl
40006050:	e1a02009 	mov	r2, r9
40006054:	e1a00007 	mov	r0, r7
40006058:	e88d5000 	stm	sp, {ip, lr}
4000605c:	ebfff515 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006060:	e597001c 	ldr	r0, [r7, #28]
40006064:	eb000ff3 	bl	4000a038 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40006068:	e59d0018 	ldr	r0, [sp, #24]
4000606c:	e0844084 	add	r4, r4, r4, lsl #1
40006070:	e0866184 	add	r6, r6, r4, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
40006074:	e3a03001 	mov	r3, #1
							 break;
40006078:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
4000607c:	e5c63190 	strb	r3, [r6, #400]	; 0x190

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40006080:	e5c6018d 	strb	r0, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40006084:	e1a03000 	mov	r3, r0
40006088:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
4000608c:	e1a0400e 	mov	r4, lr
40006090:	eafffca4 	b	40005328 <ControlHandle+0x8c>
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
40006094:	e3a00004 	mov	r0, #4
40006098:	e59f1110 	ldr	r1, [pc, #272]	; 400061b0 <ControlHandle+0xf14>
4000609c:	eb00336a 	bl	40012e4c <CyU3PDebugPrint>
400060a0:	e3a0e0ff 	mov	lr, #255	; 0xff
400060a4:	e1a0400e 	mov	r4, lr
400060a8:	e1a0c00e 	mov	ip, lr
400060ac:	e1a0300e 	mov	r3, lr
400060b0:	eafffc9c 	b	40005328 <ControlHandle+0x8c>
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
400060b4:	e3540002 	cmp	r4, #2
400060b8:	92844004 	addls	r4, r4, #4
400060bc:	920440ff 	andls	r4, r4, #255	; 0xff
400060c0:	9afffdc3 	bls	400057d4 <ControlHandle+0x538>
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
400060c4:	e1a03004 	mov	r3, r4
400060c8:	e3a00004 	mov	r0, #4
400060cc:	e59f10e0 	ldr	r1, [pc, #224]	; 400061b4 <ControlHandle+0xf18>
400060d0:	eb00335d 	bl	40012e4c <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
400060d4:	e59f30a4 	ldr	r3, [pc, #164]	; 40006180 <ControlHandle+0xee4>
400060d8:	e3a02000 	mov	r2, #0
400060dc:	e3a04004 	mov	r4, #4
400060e0:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
400060e4:	eafffdba 	b	400057d4 <ControlHandle+0x538>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060e8:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400060ec:	e2414001 	sub	r4, r1, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060f0:	e3520004 	cmp	r2, #4
400060f4:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400060f8:	e20410ff 	and	r1, r4, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060fc:	0a000003 	beq	40006110 <ControlHandle+0xe74>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
40006100:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
40006104:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
40006108:	13a02004 	movne	r2, #4
4000610c:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
40006110:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006114:	959f309c 	ldrls	r3, [pc, #156]	; 400061b8 <ControlHandle+0xf1c>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006118:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
4000611c:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006120:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006124:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006128:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
4000612c:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006130:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006134:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
40006138:	eafffe9c 	b	40005bb0 <ControlHandle+0x914>
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
4000613c:	e3530002 	cmp	r3, #2
					 				 Data0 += 4;
40006140:	92837004 	addls	r7, r3, #4
40006144:	920770ff 	andls	r7, r7, #255	; 0xff
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
40006148:	9affffac 	bls	40006000 <ControlHandle+0xd64>
					 				 Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
4000614c:	e3a00004 	mov	r0, #4
40006150:	e59f105c 	ldr	r1, [pc, #92]	; 400061b4 <ControlHandle+0xf18>
40006154:	e59d3018 	ldr	r3, [sp, #24]
40006158:	eb00333b 	bl	40012e4c <CyU3PDebugPrint>
									Data0 = 4; //set to default.
4000615c:	e3a07004 	mov	r7, #4
40006160:	eaffffa6 	b	40006000 <ControlHandle+0xd64>
40006164:	e59f0020 	ldr	r0, [pc, #32]	; 4000618c <ControlHandle+0xef0>
40006168:	eafffd88 	b	40005790 <ControlHandle+0x4f4>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000616c:	e3a03000 	mov	r3, #0
40006170:	eafffe2e 	b	40005a30 <ControlHandle+0x794>
40006174:	e59f0010 	ldr	r0, [pc, #16]	; 4000618c <ControlHandle+0xef0>
40006178:	e3a03000 	mov	r3, #0
4000617c:	eafffd7c 	b	40005774 <ControlHandle+0x4d8>
40006180:	40030000 	.word	0x40030000
40006184:	4003310c 	.word	0x4003310c
40006188:	40011360 	.word	0x40011360
4000618c:	40030f90 	.word	0x40030f90
40006190:	40030fe8 	.word	0x40030fe8
40006194:	00010001 	.word	0x00010001
40006198:	00ff00ff 	.word	0x00ff00ff
4000619c:	400112a0 	.word	0x400112a0
400061a0:	400112dc 	.word	0x400112dc
400061a4:	40032ec4 	.word	0x40032ec4
400061a8:	40030fdc 	.word	0x40030fdc
400061ac:	40011304 	.word	0x40011304
400061b0:	40011330 	.word	0x40011330
400061b4:	40011268 	.word	0x40011268
400061b8:	40010fd8 	.word	0x40010fd8

400061bc <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
400061bc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400061c0:	e59fa960 	ldr	sl, [pc, #2400]	; 40006b28 <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400061c4:	e59f8960 	ldr	r8, [pc, #2400]	; 40006b2c <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400061c8:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400061cc:	e1a09080 	lsl	r9, r0, #1
400061d0:	e0892000 	add	r2, r9, r0
400061d4:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400061d8:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
400061dc:	e24dd05c 	sub	sp, sp, #92	; 0x5c
400061e0:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400061e4:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
400061e8:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
400061ec:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400061f0:	0a000076 	beq	400063d0 <CTControlHandle+0x214>
400061f4:	9a000021 	bls	40006280 <CTControlHandle+0xc4>
400061f8:	e3550085 	cmp	r5, #133	; 0x85
400061fc:	0a000059 	beq	40006368 <CTControlHandle+0x1ac>
40006200:	3a00004e 	bcc	40006340 <CTControlHandle+0x184>
40006204:	e3550086 	cmp	r5, #134	; 0x86
40006208:	0a000080 	beq	40006410 <CTControlHandle+0x254>
4000620c:	e3550087 	cmp	r5, #135	; 0x87
40006210:	0a000076 	beq	400063f0 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40006214:	e3a00000 	mov	r0, #0
40006218:	e3a01001 	mov	r1, #1
4000621c:	e1a02000 	mov	r2, r0
40006220:	eb005e71 	bl	4001dbec <CyU3PUsbStall>
40006224:	e59f4904 	ldr	r4, [pc, #2308]	; 40006b30 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006228:	e1a02006 	mov	r2, r6
4000622c:	e3a00004 	mov	r0, #4
40006230:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006b34 <CTControlHandle+0x978>
40006234:	e5da3000 	ldrb	r3, [sl]
40006238:	eb003303 	bl	40012e4c <CyU3PDebugPrint>
			  break;
4000623c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006240:	e1a0600c 	mov	r6, ip
40006244:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
40006248:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
4000624c:	e58dc008 	str	ip, [sp, #8]
40006250:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006b38 <CTControlHandle+0x97c>
40006254:	e3a0c0ff 	mov	ip, #255	; 0xff
40006258:	e1a02005 	mov	r2, r5
4000625c:	e1a03008 	mov	r3, r8
40006260:	e3a00004 	mov	r0, #4
40006264:	e88d4040 	stm	sp, {r6, lr}
40006268:	e58dc00c 	str	ip, [sp, #12]
4000626c:	e58de010 	str	lr, [sp, #16]
40006270:	e58d7014 	str	r7, [sp, #20]
40006274:	eb0032f4 	bl	40012e4c <CyU3PDebugPrint>
}
40006278:	e28dd05c 	add	sp, sp, #92	; 0x5c
4000627c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006280:	e3550081 	cmp	r5, #129	; 0x81
40006284:	0a000042 	beq	40006394 <CTControlHandle+0x1d8>
40006288:	9a000011 	bls	400062d4 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
4000628c:	e59f489c 	ldr	r4, [pc, #2204]	; 40006b30 <CTControlHandle+0x974>
40006290:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006294:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006298:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
4000629c:	e5c41058 	strb	r1, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
400062a0:	e5c46059 	strb	r6, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
400062a4:	0a00002c 	beq	4000635c <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
400062a8:	e3a0e000 	mov	lr, #0
400062ac:	e5c4e05a 	strb	lr, [r4, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400062b0:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400062b4:	e1a00007 	mov	r0, r7
400062b8:	e59f187c 	ldr	r1, [pc, #2172]	; 40006b3c <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
400062bc:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
400062c0:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
400062c4:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400062c8:	eb005c1c 	bl	4001d340 <CyU3PUsbSendEP0Data>
400062cc:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400062d0:	eaffffdc 	b	40006248 <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400062d4:	e3550001 	cmp	r5, #1
400062d8:	1affffcd 	bne	40006214 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400062dc:	e59f484c 	ldr	r4, [pc, #2124]	; 40006b30 <CTControlHandle+0x974>
400062e0:	e28d2056 	add	r2, sp, #86	; 0x56
400062e4:	e3a00020 	mov	r0, #32
400062e8:	e2841058 	add	r1, r4, #88	; 0x58
400062ec:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400062f0:	eb0059a4 	bl	4001c988 <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400062f4:	e5d40058 	ldrb	r0, [r4, #88]	; 0x58
			  Data1 = glEp0Buffer[1];
400062f8:	e5d4c059 	ldrb	ip, [r4, #89]	; 0x59
			  value = Data1;

			  switch(CtrlID)
400062fc:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006300:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
40006304:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
40006308:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
4000630c:	e3520009 	cmp	r2, #9
40006310:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006314:	ea000155 	b	40006870 <CTControlHandle+0x6b4>
40006318:	4000682c 	.word	0x4000682c
4000631c:	40006870 	.word	0x40006870
40006320:	4000653c 	.word	0x4000653c
40006324:	40006870 	.word	0x40006870
40006328:	40006870 	.word	0x40006870
4000632c:	40006870 	.word	0x40006870
40006330:	400064b8 	.word	0x400064b8
40006334:	40006870 	.word	0x40006870
40006338:	40006870 	.word	0x40006870
4000633c:	4000643c 	.word	0x4000643c
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006340:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006b30 <CTControlHandle+0x974>
40006344:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006348:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000634c:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006350:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006354:	e5c42059 	strb	r2, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006358:	1affffd2 	bne	400062a8 <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000635c:	e3a01001 	mov	r1, #1
40006360:	e5c4105a 	strb	r1, [r4, #90]	; 0x5a
40006364:	eaffffd1 	b	400062b0 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006368:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006b30 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
4000636c:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006370:	e3a00002 	mov	r0, #2
40006374:	e2841058 	add	r1, r4, #88	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006378:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
4000637c:	e5c47058 	strb	r7, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
40006380:	e5c43059 	strb	r3, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006384:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006388:	eb005bec 	bl	4001d340 <CyU3PUsbSendEP0Data>
4000638c:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006390:	eaffffac 	b	40006248 <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006394:	e59f4794 	ldr	r4, [pc, #1940]	; 40006b30 <CTControlHandle+0x974>
40006398:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
4000639c:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
400063a0:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400063a4:	e1a00007 	mov	r0, r7
400063a8:	e2841058 	add	r1, r4, #88	; 0x58

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063ac:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
400063b0:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
					 glEp0Buffer[2] = 0;
400063b4:	e5c4805a 	strb	r8, [r4, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400063b8:	e5c4805b 	strb	r8, [r4, #91]	; 0x5b
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
400063bc:	e5c4a058 	strb	sl, [r4, #88]	; 0x58
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063c0:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400063c4:	eb005bdd 	bl	4001d340 <CyU3PUsbSendEP0Data>
400063c8:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063cc:	eaffff9d 	b	40006248 <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
400063d0:	e59f4758 	ldr	r4, [pc, #1880]	; 40006b30 <CTControlHandle+0x974>
400063d4:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
400063d8:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063dc:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
400063e0:	e5c43058 	strb	r3, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
400063e4:	e5c4e059 	strb	lr, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063e8:	1affffae 	bne	400062a8 <CTControlHandle+0xec>
400063ec:	eaffffda 	b	4000635c <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400063f0:	e59f4738 	ldr	r4, [pc, #1848]	; 40006b30 <CTControlHandle+0x974>
400063f4:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400063f8:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063fc:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006400:	e5c46058 	strb	r6, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
40006404:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006408:	1affffa6 	bne	400062a8 <CTControlHandle+0xec>
4000640c:	eaffffd2 	b	4000635c <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
40006410:	e59f4718 	ldr	r4, [pc, #1816]	; 40006b30 <CTControlHandle+0x974>
40006414:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
40006418:	e1a01004 	mov	r1, r4
4000641c:	e5e10058 	strb	r0, [r1, #88]!	; 0x58
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006420:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006424:	e3a00001 	mov	r0, #1
40006428:	eb005bc4 	bl	4001d340 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000642c:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006430:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006434:	e3a07001 	mov	r7, #1
40006438:	eaffff82 	b	40006248 <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000643c:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006b40 <CTControlHandle+0x984>
40006440:	e3e01000 	mvn	r1, #0
40006444:	e596001c 	ldr	r0, [r6, #28]
40006448:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000644c:	eb000ec4 	bl	40009f64 <_txe_mutex_get>
					  if(getData == 1)
40006450:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006454:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006458:	e35e0001 	cmp	lr, #1
4000645c:	0a0001a9 	beq	40006b08 <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
40006460:	e35e00ff 	cmp	lr, #255	; 0xff
40006464:	0a00019e 	beq	40006ae4 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx);
40006468:	e3a08000 	mov	r8, #0
4000646c:	e1a00006 	mov	r0, r6
40006470:	e3a01017 	mov	r1, #23
40006474:	e1a0200b 	mov	r2, fp
40006478:	e58d8000 	str	r8, [sp]
4000647c:	e58d8004 	str	r8, [sp, #4]
40006480:	ebfff40c 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006484:	e596001c 	ldr	r0, [r6, #28]
40006488:	eb000eea 	bl	4000a038 <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
4000648c:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40006490:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
40006494:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
40006498:	e3a00004 	mov	r0, #4
4000649c:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006b44 <CTControlHandle+0x988>
400064a0:	e1a02008 	mov	r2, r8
400064a4:	e1a03006 	mov	r3, r6
400064a8:	e58dc000 	str	ip, [sp]
400064ac:	eb003266 	bl	40012e4c <CyU3PDebugPrint>
					  break;
400064b0:	e3a0c0ff 	mov	ip, #255	; 0xff
400064b4:	eaffff63 	b	40006248 <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
400064b8:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
400064bc:	e3580001 	cmp	r8, #1
400064c0:	13580008 	cmpne	r8, #8
400064c4:	13a00000 	movne	r0, #0
400064c8:	03a00001 	moveq	r0, #1
400064cc:	1a000180 	bne	40006ad4 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400064d0:	e59f8668 	ldr	r8, [pc, #1640]	; 40006b40 <CTControlHandle+0x984>
400064d4:	e3e01000 	mvn	r1, #0
400064d8:	e598001c 	ldr	r0, [r8, #28]
400064dc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400064e0:	eb000e9f 	bl	40009f64 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
400064e4:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400064e8:	e3a01016 	mov	r1, #22
400064ec:	e1a0200b 	mov	r2, fp
400064f0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400064f4:	e3a0c000 	mov	ip, #0
400064f8:	e1a00008 	mov	r0, r8
400064fc:	e88d1400 	stm	sp, {sl, ip}
40006500:	ebfff3ec 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006504:	e598001c 	ldr	r0, [r8, #28]
40006508:	eb000eca 	bl	4000a038 <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
4000650c:	e59f0618 	ldr	r0, [pc, #1560]	; 40006b2c <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
40006510:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006514:	e0891006 	add	r1, r9, r6
40006518:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
4000651c:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006520:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
40006524:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
40006528:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
4000652c:	e5d48058 	ldrb	r8, [r4, #88]	; 0x58
40006530:	e5d46059 	ldrb	r6, [r4, #89]	; 0x59
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
40006534:	e3a0c0ff 	mov	ip, #255	; 0xff
40006538:	eaffff42 	b	40006248 <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
4000653c:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
40006540:	e3500001 	cmp	r0, #1
40006544:	13500004 	cmpne	r0, #4
40006548:	1a00015c 	bne	40006ac0 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
4000654c:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
40006550:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006554:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
40006558:	e35200f9 	cmp	r2, #249	; 0xf9
4000655c:	8a000157 	bhi	40006ac0 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006560:	e242a0c8 	sub	sl, r2, #200	; 0xc8
40006564:	e1a0c80a 	lsl	ip, sl, #16
40006568:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
4000656c:	e262a027 	rsb	sl, r2, #39	; 0x27
40006570:	e58da038 	str	sl, [sp, #56]	; 0x38
40006574:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006578:	e26210c8 	rsb	r1, r2, #200	; 0xc8
4000657c:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006580:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
40006584:	e1a01801 	lsl	r1, r1, #16
40006588:	e262e064 	rsb	lr, r2, #100	; 0x64
4000658c:	81a0182a 	lsrhi	r1, sl, #16
40006590:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006594:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006598:	e3520064 	cmp	r2, #100	; 0x64
4000659c:	e1a0080e 	lsl	r0, lr, #16
400065a0:	81a0082c 	lsrhi	r0, ip, #16
400065a4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065a8:	e242a014 	sub	sl, r2, #20
400065ac:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400065b0:	91a00820 	lsrls	r0, r0, #16
400065b4:	e262a014 	rsb	sl, r2, #20
400065b8:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065bc:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
400065c0:	e1510000 	cmp	r1, r0
400065c4:	31a0a001 	movcc	sl, r1
400065c8:	21a0a000 	movcs	sl, r0
400065cc:	e1a0c80c 	lsl	ip, ip, #16
400065d0:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065d4:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400065d8:	91a0e82c 	lsrls	lr, ip, #16
400065dc:	e59fc564 	ldr	ip, [pc, #1380]	; 40006b48 <CTControlHandle+0x98c>
400065e0:	e58da020 	str	sl, [sp, #32]
400065e4:	e06ca001 	rsb	sl, ip, r1
400065e8:	81a0e82e 	lsrhi	lr, lr, #16
400065ec:	e27ac000 	rsbs	ip, sl, #0
400065f0:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065f4:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400065f8:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065fc:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006600:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006604:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
40006608:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000660c:	e242a00a 	sub	sl, r2, #10
40006610:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006614:	e59da020 	ldr	sl, [sp, #32]
40006618:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
4000661c:	e15e000a 	cmp	lr, sl
40006620:	31a0a00e 	movcc	sl, lr
40006624:	e262c00a 	rsb	ip, r2, #10
40006628:	e58dc040 	str	ip, [sp, #64]	; 0x40
4000662c:	e58da038 	str	sl, [sp, #56]	; 0x38
40006630:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006634:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006638:	e3520014 	cmp	r2, #20
4000663c:	91a0a82c 	lsrls	sl, ip, #16
40006640:	81a0a82a 	lsrhi	sl, sl, #16
40006644:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006648:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000664c:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006650:	33a0c001 	movcc	ip, #1
40006654:	e58da03c 	str	sl, [sp, #60]	; 0x3c
40006658:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000665c:	e1a0a801 	lsl	sl, r1, #16
40006660:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
40006664:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006668:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
4000666c:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
40006670:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006674:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
40006678:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
4000667c:	e58d104c 	str	r1, [sp, #76]	; 0x4c
40006680:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
40006684:	e1a00800 	lsl	r0, r0, #16
40006688:	e15c000a 	cmp	ip, sl
4000668c:	21a0c00a 	movcs	ip, sl
40006690:	e352000a 	cmp	r2, #10
40006694:	e59da020 	ldr	sl, [sp, #32]
40006698:	81a00821 	lsrhi	r0, r1, #16
4000669c:	91a00820 	lsrls	r0, r0, #16
400066a0:	e58d0048 	str	r0, [sp, #72]	; 0x48
400066a4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400066a8:	e15e000a 	cmp	lr, sl
400066ac:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066b0:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
400066b4:	e58dc044 	str	ip, [sp, #68]	; 0x44
400066b8:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066bc:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
400066c0:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400066c4:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
400066c8:	e59de048 	ldr	lr, [sp, #72]	; 0x48
400066cc:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
400066d0:	e262a002 	rsb	sl, r2, #2
400066d4:	e15e0000 	cmp	lr, r0
400066d8:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066dc:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400066e0:	e3520005 	cmp	r2, #5
400066e4:	e58da040 	str	sl, [sp, #64]	; 0x40
400066e8:	e1a01801 	lsl	r1, r1, #16
400066ec:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400066f0:	81a0182c 	lsrhi	r1, ip, #16
400066f4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400066f8:	e58de04c 	str	lr, [sp, #76]	; 0x4c
400066fc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006700:	e59de040 	ldr	lr, [sp, #64]	; 0x40
40006704:	91a01821 	lsrls	r1, r1, #16
40006708:	e15a000c 	cmp	sl, ip
4000670c:	e58d1020 	str	r1, [sp, #32]
40006710:	33a00003 	movcc	r0, #3
40006714:	e58d0038 	str	r0, [sp, #56]	; 0x38
40006718:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
4000671c:	e1a0080e 	lsl	r0, lr, #16
40006720:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006724:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006728:	e15e000a 	cmp	lr, sl
4000672c:	21a0e00a 	movcs	lr, sl
40006730:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006734:	e59da048 	ldr	sl, [sp, #72]	; 0x48
40006738:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000673c:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006740:	91a01820 	lsrls	r1, r0, #16
40006744:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40006748:	81a01821 	lsrhi	r1, r1, #16
4000674c:	e15a000c 	cmp	sl, ip
40006750:	33a00004 	movcc	r0, #4
40006754:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006758:	e2420001 	sub	r0, r2, #1
4000675c:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006760:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006764:	e59d0020 	ldr	r0, [sp, #32]
40006768:	e262c001 	rsb	ip, r2, #1
4000676c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
40006770:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006774:	e59da038 	ldr	sl, [sp, #56]	; 0x38
40006778:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
4000677c:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006780:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006784:	e3520001 	cmp	r2, #1
40006788:	91a02800 	lslls	r2, r0, #16
4000678c:	81a0280a 	lslhi	r2, sl, #16
40006790:	e151000e 	cmp	r1, lr
40006794:	31a0a001 	movcc	sl, r1
40006798:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
4000679c:	e151000e 	cmp	r1, lr
400067a0:	21a0100c 	movcs	r1, ip
400067a4:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067a8:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067ac:	e59fa38c 	ldr	sl, [pc, #908]	; 40006b40 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067b0:	91a02001 	movls	r2, r1
400067b4:	83a02007 	movhi	r2, #7
400067b8:	e2822001 	add	r2, r2, #1
400067bc:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067c0:	e3e01000 	mvn	r1, #0
400067c4:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067c8:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067cc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400067d0:	eb000de3 	bl	40009f64 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
400067d4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400067d8:	e3a01003 	mov	r1, #3
400067dc:	e1a0200b 	mov	r2, fp
400067e0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400067e4:	e58dc000 	str	ip, [sp]
400067e8:	e1a0000a 	mov	r0, sl
400067ec:	e3a0c000 	mov	ip, #0
400067f0:	e58dc004 	str	ip, [sp, #4]
400067f4:	ebfff32f 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400067f8:	e59a001c 	ldr	r0, [sl, #28]
400067fc:	eb000e0d 	bl	4000a038 <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006800:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
40006804:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006808:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
4000680c:	e0891006 	add	r1, r9, r6
40006810:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006814:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006818:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
4000681c:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006820:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006824:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
40006828:	eaffff3f 	b	4000652c <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
4000682c:	e0892006 	add	r2, r9, r6
40006830:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006834:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006838:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
4000683c:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006840:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006844:	e35e0007 	cmp	lr, #7
40006848:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
4000684c:	ea000097 	b	40006ab0 <CTControlHandle+0x8f4>
40006850:	40006a44 	.word	0x40006a44
40006854:	400069a8 	.word	0x400069a8
40006858:	40006ab0 	.word	0x40006ab0
4000685c:	40006944 	.word	0x40006944
40006860:	40006ab0 	.word	0x40006ab0
40006864:	40006ab0 	.word	0x40006ab0
40006868:	40006ab0 	.word	0x40006ab0
4000686c:	400068a4 	.word	0x400068a4
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006870:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006874:	e59da030 	ldr	sl, [sp, #48]	; 0x30
40006878:	e0899006 	add	r9, r9, r6
4000687c:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006880:	e1a02006 	mov	r2, r6
40006884:	e3a00004 	mov	r0, #4
40006888:	e59f12bc 	ldr	r1, [pc, #700]	; 40006b4c <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
4000688c:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006890:	eb00316d 	bl	40012e4c <CyU3PDebugPrint>
			  		 break;
40006894:	e3a0c0ff 	mov	ip, #255	; 0xff
40006898:	e1a0600c 	mov	r6, ip
4000689c:	e1a0800c 	mov	r8, ip
400068a0:	eafffe68 	b	40006248 <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068a4:	e59f6294 	ldr	r6, [pc, #660]	; 40006b40 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400068a8:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068ac:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400068b0:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068b4:	e3e01000 	mvn	r1, #0
400068b8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400068bc:	eb000da8 	bl	40009f64 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
400068c0:	e1a0200b 	mov	r2, fp
400068c4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400068c8:	e3a01010 	mov	r1, #16
400068cc:	e1a00006 	mov	r0, r6
400068d0:	e58da000 	str	sl, [sp]
400068d4:	e58da004 	str	sl, [sp, #4]
400068d8:	ebfff2f6 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400068dc:	e596001c 	ldr	r0, [r6, #28]
400068e0:	eb000dd4 	bl	4000a038 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068e4:	e3e01000 	mvn	r1, #0
400068e8:	e596001c 	ldr	r0, [r6, #28]
400068ec:	eb000d9c 	bl	40009f64 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400068f0:	e3a08001 	mov	r8, #1
400068f4:	e3a01014 	mov	r1, #20
400068f8:	e3a02027 	mov	r2, #39	; 0x27
400068fc:	e3a03030 	mov	r3, #48	; 0x30
40006900:	e1a00006 	mov	r0, r6
40006904:	e88d0500 	stm	sp, {r8, sl}
40006908:	ebfff2ea 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
4000690c:	e3a0c002 	mov	ip, #2
40006910:	e3a01015 	mov	r1, #21
40006914:	e3a02025 	mov	r2, #37	; 0x25
40006918:	e3a03030 	mov	r3, #48	; 0x30
4000691c:	e1a00006 	mov	r0, r6
40006920:	e58dc000 	str	ip, [sp]
40006924:	e58da004 	str	sl, [sp, #4]
40006928:	ebfff2e2 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000692c:	e596001c 	ldr	r0, [r6, #28]
40006930:	eb000dc0 	bl	4000a038 <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006934:	e3a0c0ff 	mov	ip, #255	; 0xff
40006938:	e1a0600c 	mov	r6, ip
4000693c:	e3a08008 	mov	r8, #8
40006940:	eafffe40 	b	40006248 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006944:	e59f81f4 	ldr	r8, [pc, #500]	; 40006b40 <CTControlHandle+0x984>
40006948:	e3e01000 	mvn	r1, #0
4000694c:	e598001c 	ldr	r0, [r8, #28]
40006950:	eb000d83 	bl	40009f64 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006954:	e3a06000 	mov	r6, #0
40006958:	e3a01014 	mov	r1, #20
4000695c:	e3a02027 	mov	r2, #39	; 0x27
40006960:	e3a03030 	mov	r3, #48	; 0x30
40006964:	e1a00008 	mov	r0, r8
40006968:	e58d6000 	str	r6, [sp]
4000696c:	e58d6004 	str	r6, [sp, #4]
40006970:	ebfff2d0 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006974:	e3a01015 	mov	r1, #21
40006978:	e3a02025 	mov	r2, #37	; 0x25
4000697c:	e3a03030 	mov	r3, #48	; 0x30
40006980:	e1a00008 	mov	r0, r8
40006984:	e58d6000 	str	r6, [sp]
40006988:	e58d6004 	str	r6, [sp, #4]
4000698c:	ebfff2c9 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006990:	e598001c 	ldr	r0, [r8, #28]
40006994:	eb000da7 	bl	4000a038 <_txe_mutex_put>
40006998:	e3a0c0ff 	mov	ip, #255	; 0xff
4000699c:	e1a0600c 	mov	r6, ip
400069a0:	e3a08004 	mov	r8, #4
400069a4:	eafffe27 	b	40006248 <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069a8:	e59fa190 	ldr	sl, [pc, #400]	; 40006b40 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400069ac:	e3a06000 	mov	r6, #0
400069b0:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069b4:	e3e01000 	mvn	r1, #0
400069b8:	e59a001c 	ldr	r0, [sl, #28]
400069bc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400069c0:	eb000d67 	bl	40009f64 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
400069c4:	e1a0200b 	mov	r2, fp
400069c8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400069cc:	e3a01010 	mov	r1, #16
400069d0:	e1a0000a 	mov	r0, sl
400069d4:	e58d6000 	str	r6, [sp]
400069d8:	e58d6004 	str	r6, [sp, #4]
400069dc:	ebfff2b5 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069e0:	e59a001c 	ldr	r0, [sl, #28]
400069e4:	eb000d93 	bl	4000a038 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069e8:	e3e01000 	mvn	r1, #0
400069ec:	e59a001c 	ldr	r0, [sl, #28]
400069f0:	eb000d5b 	bl	40009f64 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400069f4:	e3a01014 	mov	r1, #20
400069f8:	e3a02027 	mov	r2, #39	; 0x27
400069fc:	e3a03030 	mov	r3, #48	; 0x30
40006a00:	e1a0000a 	mov	r0, sl
40006a04:	e58d6000 	str	r6, [sp]
40006a08:	e58d6004 	str	r6, [sp, #4]
40006a0c:	ebfff2a9 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a10:	e3a01015 	mov	r1, #21
40006a14:	e3a02025 	mov	r2, #37	; 0x25
40006a18:	e3a03030 	mov	r3, #48	; 0x30
40006a1c:	e1a0000a 	mov	r0, sl
40006a20:	e58d6000 	str	r6, [sp]
40006a24:	e58d6004 	str	r6, [sp, #4]
40006a28:	ebfff2a2 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a2c:	e59a001c 	ldr	r0, [sl, #28]
40006a30:	eb000d80 	bl	4000a038 <_txe_mutex_put>
40006a34:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a38:	e1a0600c 	mov	r6, ip
40006a3c:	e3a08002 	mov	r8, #2
40006a40:	eafffe00 	b	40006248 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a44:	e59f60f4 	ldr	r6, [pc, #244]	; 40006b40 <CTControlHandle+0x984>
40006a48:	e3e01000 	mvn	r1, #0
40006a4c:	e596001c 	ldr	r0, [r6, #28]
40006a50:	eb000d43 	bl	40009f64 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a54:	e3a08000 	mov	r8, #0
40006a58:	e3a0a001 	mov	sl, #1
40006a5c:	e3a01014 	mov	r1, #20
40006a60:	e3a02027 	mov	r2, #39	; 0x27
40006a64:	e3a03030 	mov	r3, #48	; 0x30
40006a68:	e1a00006 	mov	r0, r6
40006a6c:	e58d8004 	str	r8, [sp, #4]
40006a70:	e58da000 	str	sl, [sp]
40006a74:	ebfff28f 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a78:	e3a0c002 	mov	ip, #2
40006a7c:	e3a01015 	mov	r1, #21
40006a80:	e3a02025 	mov	r2, #37	; 0x25
40006a84:	e3a03030 	mov	r3, #48	; 0x30
40006a88:	e1a00006 	mov	r0, r6
40006a8c:	e58dc000 	str	ip, [sp]
40006a90:	e58d8004 	str	r8, [sp, #4]
40006a94:	ebfff287 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a98:	e596001c 	ldr	r0, [r6, #28]
40006a9c:	eb000d65 	bl	4000a038 <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006aa0:	e3a0c0ff 	mov	ip, #255	; 0xff
40006aa4:	e1a0600c 	mov	r6, ip
40006aa8:	e1a0800a 	mov	r8, sl
40006aac:	eafffde5 	b	40006248 <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006ab0:	e3a0c0ff 	mov	ip, #255	; 0xff
40006ab4:	e1a08000 	mov	r8, r0
40006ab8:	e1a0600c 	mov	r6, ip
40006abc:	eafffde1 	b	40006248 <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006ac0:	e3a00000 	mov	r0, #0
40006ac4:	e3a01001 	mov	r1, #1
40006ac8:	e1a02000 	mov	r2, r0
40006acc:	eb005c46 	bl	4001dbec <CyU3PUsbStall>
40006ad0:	eafffe95 	b	4000652c <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006ad4:	e3a01001 	mov	r1, #1
40006ad8:	e1a02000 	mov	r2, r0
40006adc:	eb005c42 	bl	4001dbec <CyU3PUsbStall>
40006ae0:	eafffe91 	b	4000652c <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006ae4:	e3a0e008 	mov	lr, #8
40006ae8:	e3a0c000 	mov	ip, #0
40006aec:	e1a00006 	mov	r0, r6
40006af0:	e3a01017 	mov	r1, #23
40006af4:	e1a0200b 	mov	r2, fp
40006af8:	e58de000 	str	lr, [sp]
40006afc:	e58dc004 	str	ip, [sp, #4]
40006b00:	ebfff26c 	bl	400034b8 <cmdSet>
40006b04:	eafffe5e 	b	40006484 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006b08:	e3a08004 	mov	r8, #4
40006b0c:	e3a0e000 	mov	lr, #0
40006b10:	e1a00006 	mov	r0, r6
40006b14:	e3a01017 	mov	r1, #23
40006b18:	e1a0200b 	mov	r2, fp
40006b1c:	e88d4100 	stm	sp, {r8, lr}
40006b20:	ebfff264 	bl	400034b8 <cmdSet>
40006b24:	eafffe56 	b	40006484 <CTControlHandle+0x2c8>
40006b28:	4003310c 	.word	0x4003310c
40006b2c:	40030000 	.word	0x40030000
40006b30:	40030f90 	.word	0x40030f90
40006b34:	400113fc 	.word	0x400113fc
40006b38:	40011420 	.word	0x40011420
40006b3c:	40030fe8 	.word	0x40030fe8
40006b40:	40032ec4 	.word	0x40032ec4
40006b44:	400113b0 	.word	0x400113b0
40006b48:	0000ffff 	.word	0x0000ffff
40006b4c:	400113d8 	.word	0x400113d8

40006b50 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006b50:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006b54:	e59f49f0 	ldr	r4, [pc, #2544]	; 4000754c <UVCAppEP0Thread_Entry+0x9fc>
40006b58:	e59f69f0 	ldr	r6, [pc, #2544]	; 40007550 <UVCAppEP0Thread_Entry+0xa00>
40006b5c:	e59f89f0 	ldr	r8, [pc, #2544]	; 40007554 <UVCAppEP0Thread_Entry+0xa04>
40006b60:	e59f99f0 	ldr	r9, [pc, #2544]	; 40007558 <UVCAppEP0Thread_Entry+0xa08>
40006b64:	e59fa9f0 	ldr	sl, [pc, #2544]	; 4000755c <UVCAppEP0Thread_Entry+0xa0c>
40006b68:	e59f79f0 	ldr	r7, [pc, #2544]	; 40007560 <UVCAppEP0Thread_Entry+0xa10>
40006b6c:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006b70:	e1a05004 	mov	r5, r4
40006b74:	e3e0c000 	mvn	ip, #0
40006b78:	e59f09cc 	ldr	r0, [pc, #2508]	; 4000754c <UVCAppEP0Thread_Entry+0x9fc>
40006b7c:	e3a0104c 	mov	r1, #76	; 0x4c
40006b80:	e3a02001 	mov	r2, #1
40006b84:	e28d3030 	add	r3, sp, #48	; 0x30
40006b88:	e58dc000 	str	ip, [sp]
40006b8c:	eb000c2c 	bl	40009c44 <_txe_event_flags_get>
40006b90:	e3500000 	cmp	r0, #0
40006b94:	1a000030 	bne	40006c5c <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006b98:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40006b9c:	e3530000 	cmp	r3, #0
40006ba0:	0a000089 	beq	40006dcc <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006ba4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006ba8:	e313000c 	tst	r3, #12
40006bac:	1a000072 	bne	40006d7c <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006bb0:	e3130004 	tst	r3, #4
40006bb4:	0a00001c 	beq	40006c2c <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006bb8:	e1dae0b0 	ldrh	lr, [sl]
40006bbc:	e1a0242e 	lsr	r2, lr, #8
40006bc0:	e3520003 	cmp	r2, #3
40006bc4:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006bc8:	ea000012 	b	40006c18 <UVCAppEP0Thread_Entry+0xc8>
40006bcc:	40006c18 	.word	0x40006c18
40006bd0:	40006cfc 	.word	0x40006cfc
40006bd4:	40006bdc 	.word	0x40006bdc
40006bd8:	40006d38 	.word	0x40006d38
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006bdc:	e1d920b0 	ldrh	r2, [r9]
40006be0:	e3520c06 	cmp	r2, #1536	; 0x600
40006be4:	0a0001da 	beq	40007354 <UVCAppEP0Thread_Entry+0x804>
40006be8:	8a0000cc 	bhi	40006f20 <UVCAppEP0Thread_Entry+0x3d0>
40006bec:	e3520c03 	cmp	r2, #768	; 0x300
40006bf0:	0a0001d3 	beq	40007344 <UVCAppEP0Thread_Entry+0x7f4>
40006bf4:	8a0001ca 	bhi	40007324 <UVCAppEP0Thread_Entry+0x7d4>
40006bf8:	e3520c01 	cmp	r2, #256	; 0x100
40006bfc:	0a000169 	beq	400071a8 <UVCAppEP0Thread_Entry+0x658>
40006c00:	e3520c02 	cmp	r2, #512	; 0x200
40006c04:	0a000163 	beq	40007198 <UVCAppEP0Thread_Entry+0x648>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006c08:	e59f1954 	ldr	r1, [pc, #2388]	; 40007564 <UVCAppEP0Thread_Entry+0xa14>
40006c0c:	e5d83000 	ldrb	r3, [r8]
40006c10:	e3a00004 	mov	r0, #4
40006c14:	eb00308c 	bl	40012e4c <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006c18:	e3a00000 	mov	r0, #0
40006c1c:	e3a01001 	mov	r1, #1
40006c20:	e1a02000 	mov	r2, r0
40006c24:	eb005bf0 	bl	4001dbec <CyU3PUsbStall>
40006c28:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006c2c:	e3130008 	tst	r3, #8
40006c30:	0a000007 	beq	40006c54 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006c34:	e1da30b0 	ldrh	r3, [sl]
40006c38:	e3530001 	cmp	r3, #1
40006c3c:	0a000068 	beq	40006de4 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006c40:	e3a00000 	mov	r0, #0
40006c44:	e3a01001 	mov	r1, #1
40006c48:	e1a02000 	mov	r2, r0
40006c4c:	eb005be6 	bl	4001dbec <CyU3PUsbStall>
40006c50:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006c54:	e3130040 	tst	r3, #64	; 0x40
40006c58:	1a000001 	bne	40006c64 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006c5c:	eb000ee1 	bl	4000a7e8 <_txe_thread_relinquish>
    }
40006c60:	eaffffc3 	b	40006b74 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006c64:	e3a00018 	mov	r0, #24
40006c68:	e28d102c 	add	r1, sp, #44	; 0x2c
40006c6c:	eb006fa7 	bl	40022b10 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006c70:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
40006c74:	e3520000 	cmp	r2, #0
40006c78:	0a00006d 	beq	40006e34 <UVCAppEP0Thread_Entry+0x2e4>
40006c7c:	e5d6365f 	ldrb	r3, [r6, #1631]	; 0x65f
40006c80:	e3530000 	cmp	r3, #0
40006c84:	1afffff4 	bne	40006c5c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006c88:	e5972000 	ldr	r2, [r7]
40006c8c:	e3a0b002 	mov	fp, #2
40006c90:	e5c2b000 	strb	fp, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006c94:	e5971000 	ldr	r1, [r7]
40006c98:	e3a0b001 	mov	fp, #1
40006c9c:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006ca0:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006ca4:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006ca8:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006cac:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006cb0:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006cb4:	e5cc3003 	strb	r3, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006cb8:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006cbc:	e3a0c004 	mov	ip, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006cc0:	e59f08a0 	ldr	r0, [pc, #2208]	; 40007568 <UVCAppEP0Thread_Entry+0xa18>
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006cc4:	e58d2020 	str	r2, [sp, #32]
					interStabuf.size   = 1024;
40006cc8:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;
40006ccc:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28

					interStabuf.count = 4;
40006cd0:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006cd4:	eb003fd8 	bl	40016c3c <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006cd8:	e59f0888 	ldr	r0, [pc, #2184]	; 40007568 <UVCAppEP0Thread_Entry+0xa18>
40006cdc:	e28d1020 	add	r1, sp, #32
40006ce0:	eb003f47 	bl	40016a04 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006ce4:	e2502000 	subs	r2, r0, #0
40006ce8:	1a000168 	bne	40007290 <UVCAppEP0Thread_Entry+0x740>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006cec:	e59f385c 	ldr	r3, [pc, #2140]	; 40007550 <UVCAppEP0Thread_Entry+0xa00>
40006cf0:	e5c3b65f 	strb	fp, [r3, #1631]	; 0x65f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006cf4:	eb000ebb 	bl	4000a7e8 <_txe_thread_relinquish>
40006cf8:	eaffff9d 	b	40006b74 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006cfc:	e1d920b0 	ldrh	r2, [r9]
40006d00:	e3520c06 	cmp	r2, #1536	; 0x600
40006d04:	0a0000d6 	beq	40007064 <UVCAppEP0Thread_Entry+0x514>
40006d08:	8a00008f 	bhi	40006f4c <UVCAppEP0Thread_Entry+0x3fc>
40006d0c:	e3520c03 	cmp	r2, #768	; 0x300
40006d10:	0a000118 	beq	40007178 <UVCAppEP0Thread_Entry+0x628>
40006d14:	8a00010f 	bhi	40007158 <UVCAppEP0Thread_Entry+0x608>
40006d18:	e3520c01 	cmp	r2, #256	; 0x100
40006d1c:	0a000157 	beq	40007280 <UVCAppEP0Thread_Entry+0x730>
40006d20:	e3520c02 	cmp	r2, #512	; 0x200
40006d24:	1affffb7 	bne	40006c08 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006d28:	e3a00001 	mov	r0, #1
40006d2c:	ebfffd22 	bl	400061bc <CTControlHandle>
40006d30:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d34:	eaffffbc 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006d38:	e1d920b0 	ldrh	r2, [r9]
40006d3c:	e3520c09 	cmp	r2, #2304	; 0x900
40006d40:	0a0001f3 	beq	40007514 <UVCAppEP0Thread_Entry+0x9c4>
40006d44:	8a000088 	bhi	40006f6c <UVCAppEP0Thread_Entry+0x41c>
40006d48:	e3520b01 	cmp	r2, #1024	; 0x400
40006d4c:	0a0001f4 	beq	40007524 <UVCAppEP0Thread_Entry+0x9d4>
40006d50:	8a000188 	bhi	40007378 <UVCAppEP0Thread_Entry+0x828>
40006d54:	e3520c02 	cmp	r2, #512	; 0x200
40006d58:	0a0001e9 	beq	40007504 <UVCAppEP0Thread_Entry+0x9b4>
40006d5c:	e3520c03 	cmp	r2, #768	; 0x300
40006d60:	0a0001c8 	beq	40007488 <UVCAppEP0Thread_Entry+0x938>
40006d64:	e3520c01 	cmp	r2, #256	; 0x100
40006d68:	1affffaa 	bne	40006c18 <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006d6c:	e3a00010 	mov	r0, #16
40006d70:	ebfff949 	bl	4000529c <ControlHandle>
40006d74:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d78:	eaffffab 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006d7c:	e59fb7e8 	ldr	fp, [pc, #2024]	; 4000756c <UVCAppEP0Thread_Entry+0xa1c>
40006d80:	e1d9c0b0 	ldrh	ip, [r9]
40006d84:	e1da00b0 	ldrh	r0, [sl]
40006d88:	e59f17e0 	ldr	r1, [pc, #2016]	; 40007570 <UVCAppEP0Thread_Entry+0xa20>
40006d8c:	e5dbe000 	ldrb	lr, [fp]
40006d90:	e5d8b000 	ldrb	fp, [r8]
40006d94:	e58d000c 	str	r0, [sp, #12]
40006d98:	e58dc008 	str	ip, [sp, #8]
40006d9c:	e1d1c0b0 	ldrh	ip, [r1]
40006da0:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40006da4:	e58db004 	str	fp, [sp, #4]
40006da8:	e3a00004 	mov	r0, #4
40006dac:	e59f17c0 	ldr	r1, [pc, #1984]	; 40007574 <UVCAppEP0Thread_Entry+0xa24>
40006db0:	e3a0b000 	mov	fp, #0
40006db4:	e58de000 	str	lr, [sp]
40006db8:	e58dc010 	str	ip, [sp, #16]
40006dbc:	e58db014 	str	fp, [sp, #20]
40006dc0:	eb003021 	bl	40012e4c <CyU3PDebugPrint>
40006dc4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006dc8:	eaffff78 	b	40006bb0 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006dcc:	eb00575f 	bl	4001cb50 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006dd0:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006dd4:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006dd8:	13a00001 	movne	r0, #1
40006ddc:	1585003c 	strne	r0, [r5, #60]	; 0x3c
40006de0:	eaffff6f 	b	40006ba4 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006de4:	e1d920b0 	ldrh	r2, [r9]
40006de8:	e3520c03 	cmp	r2, #768	; 0x300
40006dec:	0a000082 	beq	40006ffc <UVCAppEP0Thread_Entry+0x4ac>
40006df0:	8a000033 	bhi	40006ec4 <UVCAppEP0Thread_Entry+0x374>
40006df4:	e3520c01 	cmp	r2, #256	; 0x100
40006df8:	0a00008c 	beq	40007030 <UVCAppEP0Thread_Entry+0x4e0>
40006dfc:	e3520c02 	cmp	r2, #512	; 0x200
40006e00:	1affff8e 	bne	40006c40 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006e04:	e5d83000 	ldrb	r3, [r8]
40006e08:	e3530081 	cmp	r3, #129	; 0x81
40006e0c:	0a00008c 	beq	40007044 <UVCAppEP0Thread_Entry+0x4f4>
40006e10:	8a000127 	bhi	400072b4 <UVCAppEP0Thread_Entry+0x764>
40006e14:	e3530001 	cmp	r3, #1
40006e18:	0a000189 	beq	40007444 <UVCAppEP0Thread_Entry+0x8f4>
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
                            }
                        }
                        break;
                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006e1c:	e3a00000 	mov	r0, #0
40006e20:	e3a01001 	mov	r1, #1
40006e24:	e1a02000 	mov	r2, r0
40006e28:	eb005b6f 	bl	4001dbec <CyU3PUsbStall>
40006e2c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006e30:	eaffff87 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40006e34:	e5d6e65f 	ldrb	lr, [r6, #1631]	; 0x65f
40006e38:	e35e0000 	cmp	lr, #0
40006e3c:	0affff86 	beq	40006c5c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006e40:	e5973000 	ldr	r3, [r7]
40006e44:	e3a0b002 	mov	fp, #2
40006e48:	e5c3b000 	strb	fp, [r3]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006e4c:	e5971000 	ldr	r1, [r7]
40006e50:	e3a0b001 	mov	fp, #1
40006e54:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006e58:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e5c:	e3a0eb01 	mov	lr, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006e60:	e5c02002 	strb	r2, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006e64:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e68:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006e6c:	e5ccb003 	strb	fp, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006e70:	e5973000 	ldr	r3, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006e74:	e1a0c002 	mov	ip, r2
40006e78:	e1cd22b8 	strh	r2, [sp, #40]	; 0x28

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e7c:	e59f06e4 	ldr	r0, [pc, #1764]	; 40007568 <UVCAppEP0Thread_Entry+0xa18>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006e80:	e3a02004 	mov	r2, #4
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006e84:	e58d3020 	str	r3, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006e88:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e8c:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e90:	e58dc01c 	str	ip, [sp, #28]
40006e94:	eb003f68 	bl	40016c3c <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006e98:	e59f06c8 	ldr	r0, [pc, #1736]	; 40007568 <UVCAppEP0Thread_Entry+0xa18>
40006e9c:	e28d1020 	add	r1, sp, #32
40006ea0:	eb003ed7 	bl	40016a04 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006ea4:	e59d301c 	ldr	r3, [sp, #28]
40006ea8:	e2502000 	subs	r2, r0, #0
40006eac:	1a0000c1 	bne	400071b8 <UVCAppEP0Thread_Entry+0x668>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006eb0:	e59f2698 	ldr	r2, [pc, #1688]	; 40007550 <UVCAppEP0Thread_Entry+0xa00>
					stiflag = CyTrue;
40006eb4:	e584b09c 	str	fp, [r4, #156]	; 0x9c
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006eb8:	e5c2365f 	strb	r3, [r2, #1631]	; 0x65f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006ebc:	eb000e49 	bl	4000a7e8 <_txe_thread_relinquish>
40006ec0:	eaffff2b 	b	40006b74 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006ec4:	e3520b01 	cmp	r2, #1024	; 0x400
40006ec8:	0a000039 	beq	40006fb4 <UVCAppEP0Thread_Entry+0x464>
40006ecc:	e3520c05 	cmp	r2, #1280	; 0x500
40006ed0:	1affff5a 	bne	40006c40 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40006ed4:	e5d82000 	ldrb	r2, [r8]
40006ed8:	e3520081 	cmp	r2, #129	; 0x81
40006edc:	0a000058 	beq	40007044 <UVCAppEP0Thread_Entry+0x4f4>
40006ee0:	8a00011f 	bhi	40007364 <UVCAppEP0Thread_Entry+0x814>
40006ee4:	e3520001 	cmp	r2, #1
40006ee8:	1affff54 	bne	40006c40 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006eec:	e3a00020 	mov	r0, #32
40006ef0:	e59f1680 	ldr	r1, [pc, #1664]	; 40007578 <UVCAppEP0Thread_Entry+0xa28>
40006ef4:	e28d2036 	add	r2, sp, #54	; 0x36
40006ef8:	eb0056a2 	bl	4001c988 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006efc:	e3500000 	cmp	r0, #0
40006f00:	1a00018b 	bne	40007534 <UVCAppEP0Thread_Entry+0x9e4>
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
40006f04:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40006f08:	e2800004 	add	r0, r0, #4
40006f0c:	e59f1668 	ldr	r1, [pc, #1640]	; 4000757c <UVCAppEP0Thread_Entry+0xa2c>
40006f10:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
40006f14:	eb002fcc 	bl	40012e4c <CyU3PDebugPrint>
40006f18:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f1c:	eaffff4c 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f20:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006f24:	0a0000f6 	beq	40007304 <UVCAppEP0Thread_Entry+0x7b4>
40006f28:	8a0000eb 	bhi	400072dc <UVCAppEP0Thread_Entry+0x78c>
40006f2c:	e3520c07 	cmp	r2, #1792	; 0x700
40006f30:	0a0000e5 	beq	400072cc <UVCAppEP0Thread_Entry+0x77c>
40006f34:	e3520b02 	cmp	r2, #2048	; 0x800
40006f38:	1affff32 	bne	40006c08 <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
40006f3c:	e3a00007 	mov	r0, #7
40006f40:	ebfff8d5 	bl	4000529c <ControlHandle>
40006f44:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f48:	eaffff37 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006f4c:	e3520c09 	cmp	r2, #2304	; 0x900
40006f50:	0a000127 	beq	400073f4 <UVCAppEP0Thread_Entry+0x8a4>
40006f54:	8a00011c 	bhi	400073cc <UVCAppEP0Thread_Entry+0x87c>
40006f58:	e3520c07 	cmp	r2, #1792	; 0x700
40006f5c:	0a00010e 	beq	4000739c <UVCAppEP0Thread_Entry+0x84c>
40006f60:	e3520b02 	cmp	r2, #2048	; 0x800
40006f64:	1affff27 	bne	40006c08 <UVCAppEP0Thread_Entry+0xb8>
40006f68:	eaffff2f 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f6c:	e3520c0f 	cmp	r2, #3840	; 0xf00
40006f70:	0a00015f 	beq	400074f4 <UVCAppEP0Thread_Entry+0x9a4>
40006f74:	8a00003e 	bhi	40007074 <UVCAppEP0Thread_Entry+0x524>
40006f78:	e3520c0b 	cmp	r2, #2816	; 0xb00
40006f7c:	0a000158 	beq	400074e4 <UVCAppEP0Thread_Entry+0x994>
40006f80:	e3520c0d 	cmp	r2, #3328	; 0xd00
40006f84:	0a000152 	beq	400074d4 <UVCAppEP0Thread_Entry+0x984>
40006f88:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006f8c:	1affff21 	bne	40006c18 <UVCAppEP0Thread_Entry+0xc8>
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
40006f90:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
40006f94:	e3530001 	cmp	r3, #1
40006f98:	0a000125 	beq	40007434 <UVCAppEP0Thread_Entry+0x8e4>
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x\r\n", wValue, bRequest);
40006f9c:	e5d83000 	ldrb	r3, [r8]
40006fa0:	e3a00004 	mov	r0, #4
40006fa4:	e59f15d4 	ldr	r1, [pc, #1492]	; 40007580 <UVCAppEP0Thread_Entry+0xa30>
40006fa8:	eb002fa7 	bl	40012e4c <CyU3PDebugPrint>
40006fac:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006fb0:	eaffff1d 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40006fb4:	e5d8b000 	ldrb	fp, [r8]
40006fb8:	e35b0081 	cmp	fp, #129	; 0x81
40006fbc:	0a000013 	beq	40007010 <UVCAppEP0Thread_Entry+0x4c0>
40006fc0:	8a000085 	bhi	400071dc <UVCAppEP0Thread_Entry+0x68c>
40006fc4:	e35b0001 	cmp	fp, #1
40006fc8:	1affff1c 	bne	40006c40 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006fcc:	e28d2036 	add	r2, sp, #54	; 0x36
40006fd0:	e3a00020 	mov	r0, #32
40006fd4:	e59f159c 	ldr	r1, [pc, #1436]	; 40007578 <UVCAppEP0Thread_Entry+0xa28>
40006fd8:	eb00566a 	bl	4001c988 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006fdc:	e2502000 	subs	r2, r0, #0
40006fe0:	1affff1a 	bne	40006c50 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40006fe4:	e59f0560 	ldr	r0, [pc, #1376]	; 4000754c <UVCAppEP0Thread_Entry+0x9fc>
40006fe8:	e1a0100b 	mov	r1, fp
40006fec:	eb000b44 	bl	40009d04 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40006ff0:	e2502000 	subs	r2, r0, #0
40006ff4:	0affff15 	beq	40006c50 <UVCAppEP0Thread_Entry+0x100>
40006ff8:	ea00011d 	b	40007474 <UVCAppEP0Thread_Entry+0x924>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40006ffc:	e5d82000 	ldrb	r2, [r8]
40007000:	e3520083 	cmp	r2, #131	; 0x83
40007004:	8a000098 	bhi	4000726c <UVCAppEP0Thread_Entry+0x71c>
40007008:	e3520081 	cmp	r2, #129	; 0x81
4000700c:	3a00007d 	bcc	40007208 <UVCAppEP0Thread_Entry+0x6b8>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007010:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40007014:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007018:	e3530003 	cmp	r3, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
4000701c:	059f1560 	ldreq	r1, [pc, #1376]	; 40007584 <UVCAppEP0Thread_Entry+0xa34>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
40007020:	159f1560 	ldrne	r1, [pc, #1376]	; 40007588 <UVCAppEP0Thread_Entry+0xa38>
40007024:	eb0058c5 	bl	4001d340 <CyU3PUsbSendEP0Data>
40007028:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000702c:	eaffff08 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007030:	e5d82000 	ldrb	r2, [r8]
40007034:	e3520083 	cmp	r2, #131	; 0x83
40007038:	8a00002f 	bhi	400070fc <UVCAppEP0Thread_Entry+0x5ac>
4000703c:	e3520081 	cmp	r2, #129	; 0x81
40007040:	3a000014 	bcc	40007098 <UVCAppEP0Thread_Entry+0x548>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007044:	e5d4b048 	ldrb	fp, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40007048:	e3a0001a 	mov	r0, #26
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
4000704c:	e35b0003 	cmp	fp, #3
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40007050:	059f1534 	ldreq	r1, [pc, #1332]	; 4000758c <UVCAppEP0Thread_Entry+0xa3c>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
40007054:	159f1534 	ldrne	r1, [pc, #1332]	; 40007590 <UVCAppEP0Thread_Entry+0xa40>
40007058:	eb0058b8 	bl	4001d340 <CyU3PUsbSendEP0Data>
4000705c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007060:	eafffefb 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007064:	e3a00005 	mov	r0, #5
40007068:	ebfffc53 	bl	400061bc <CTControlHandle>
4000706c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007070:	eafffeed 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007074:	e3520c11 	cmp	r2, #4352	; 0x1100
40007078:	0a0000e9 	beq	40007424 <UVCAppEP0Thread_Entry+0x8d4>
4000707c:	8a00002d 	bhi	40007138 <UVCAppEP0Thread_Entry+0x5e8>
40007080:	e3520a01 	cmp	r2, #4096	; 0x1000
40007084:	1afffee3 	bne	40006c18 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
40007088:	e3a0001f 	mov	r0, #31
4000708c:	ebfff882 	bl	4000529c <ControlHandle>
40007090:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007094:	eafffee4 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007098:	e3520001 	cmp	r2, #1
4000709c:	1affff5e 	bne	40006e1c <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400070a0:	e3a00020 	mov	r0, #32
400070a4:	e59f14cc 	ldr	r1, [pc, #1228]	; 40007578 <UVCAppEP0Thread_Entry+0xa28>
400070a8:	e28d2036 	add	r2, sp, #54	; 0x36
400070ac:	eb005635 	bl	4001c988 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
400070b0:	e3500000 	cmp	r0, #0
400070b4:	1afffee5 	bne	40006c50 <UVCAppEP0Thread_Entry+0x100>
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400070b8:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
400070bc:	e3510003 	cmp	r1, #3
400070c0:	1afffee2 	bne	40006c50 <UVCAppEP0Thread_Entry+0x100>
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
400070c4:	e5d43081 	ldrb	r3, [r4, #129]	; 0x81
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
400070c8:	e5d4e07e 	ldrb	lr, [r4, #126]	; 0x7e
                            glProbeCtrl[3] = glCommitCtrl[3];
400070cc:	e5d4c07f 	ldrb	ip, [r4, #127]	; 0x7f
                            glProbeCtrl[4] = glCommitCtrl[4];
400070d0:	e5d40080 	ldrb	r0, [r4, #128]	; 0x80
                            glProbeCtrl[5] = glCommitCtrl[5];
                            glProbeCtrl[6] = glCommitCtrl[6];
400070d4:	e5d42082 	ldrb	r2, [r4, #130]	; 0x82
                            glProbeCtrl[7] = glCommitCtrl[7];
400070d8:	e5d4b083 	ldrb	fp, [r4, #131]	; 0x83
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
400070dc:	e5c63615 	strb	r3, [r6, #1557]	; 0x615
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
400070e0:	e5c6e612 	strb	lr, [r6, #1554]	; 0x612
                            glProbeCtrl[3] = glCommitCtrl[3];
400070e4:	e5c6c613 	strb	ip, [r6, #1555]	; 0x613
                            glProbeCtrl[4] = glCommitCtrl[4];
400070e8:	e5c60614 	strb	r0, [r6, #1556]	; 0x614
                            glProbeCtrl[5] = glCommitCtrl[5];
                            glProbeCtrl[6] = glCommitCtrl[6];
400070ec:	e5c62616 	strb	r2, [r6, #1558]	; 0x616
                            glProbeCtrl[7] = glCommitCtrl[7];
400070f0:	e5c6b617 	strb	fp, [r6, #1559]	; 0x617
400070f4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070f8:	eafffed5 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400070fc:	e3520086 	cmp	r2, #134	; 0x86
40007100:	0a000039 	beq	400071ec <UVCAppEP0Thread_Entry+0x69c>
40007104:	e3520087 	cmp	r2, #135	; 0x87
40007108:	0affffcd 	beq	40007044 <UVCAppEP0Thread_Entry+0x4f4>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000710c:	e3520085 	cmp	r2, #133	; 0x85
40007110:	1affff41 	bne	40006e1c <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007114:	e59f1478 	ldr	r1, [pc, #1144]	; 40007594 <UVCAppEP0Thread_Entry+0xa44>
40007118:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
4000711c:	e3a0301a 	mov	r3, #26
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
40007120:	e3a02000 	mov	r2, #0
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
40007124:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                        glEp0Buffer[1] = 0;
40007128:	e5c42059 	strb	r2, [r4, #89]	; 0x59
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000712c:	eb005883 	bl	4001d340 <CyU3PUsbSendEP0Data>
40007130:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007134:	eafffec6 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007138:	e3520c12 	cmp	r2, #4608	; 0x1200
4000713c:	0a0000e0 	beq	400074c4 <UVCAppEP0Thread_Entry+0x974>
40007140:	e3520c13 	cmp	r2, #4864	; 0x1300
40007144:	1afffeb3 	bne	40006c18 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID2-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCGridCtlID2);
40007148:	e3a00022 	mov	r0, #34	; 0x22
4000714c:	ebfff852 	bl	4000529c <ControlHandle>
40007150:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007154:	eafffeb4 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007158:	e3520b01 	cmp	r2, #1024	; 0x400
4000715c:	0a000009 	beq	40007188 <UVCAppEP0Thread_Entry+0x638>
40007160:	e3520c05 	cmp	r2, #1280	; 0x500
40007164:	1afffea7 	bne	40006c08 <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
40007168:	e3a00004 	mov	r0, #4
4000716c:	ebfffc12 	bl	400061bc <CTControlHandle>
40007170:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007174:	eafffeac 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
40007178:	e3a00002 	mov	r0, #2
4000717c:	ebfffc0e 	bl	400061bc <CTControlHandle>
40007180:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007184:	eafffea8 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
40007188:	e3a00003 	mov	r0, #3
4000718c:	ebfffc0a 	bl	400061bc <CTControlHandle>
40007190:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007194:	eafffea4 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
40007198:	e3a00001 	mov	r0, #1
4000719c:	ebfff83e 	bl	4000529c <ControlHandle>
400071a0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071a4:	eafffea0 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
400071a8:	e3a00000 	mov	r0, #0
400071ac:	ebfff83a 	bl	4000529c <ControlHandle>
400071b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071b4:	eafffe9c 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
400071b8:	e3a00004 	mov	r0, #4
400071bc:	e59f13d4 	ldr	r1, [pc, #980]	; 40007598 <UVCAppEP0Thread_Entry+0xa48>
400071c0:	eb002f21 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400071c4:	e59f13d0 	ldr	r1, [pc, #976]	; 4000759c <UVCAppEP0Thread_Entry+0xa4c>
400071c8:	e3a00004 	mov	r0, #4
400071cc:	eb002f1e 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400071d0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400071d4:	eb0005d2 	bl	40008924 <_tx_thread_sleep>
400071d8:	eafffff9 	b	400071c4 <UVCAppEP0Thread_Entry+0x674>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
400071dc:	e35b0085 	cmp	fp, #133	; 0x85
400071e0:	0affffcb 	beq	40007114 <UVCAppEP0Thread_Entry+0x5c4>
400071e4:	e35b0086 	cmp	fp, #134	; 0x86
400071e8:	1afffe94 	bne	40006c40 <UVCAppEP0Thread_Entry+0xf0>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400071ec:	e1a00003 	mov	r0, r3
        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400071f0:	e59f139c 	ldr	r1, [pc, #924]	; 40007594 <UVCAppEP0Thread_Entry+0xa44>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400071f4:	e3a0b003 	mov	fp, #3
400071f8:	e5c4b058 	strb	fp, [r4, #88]	; 0x58
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400071fc:	eb00584f 	bl	4001d340 <CyU3PUsbSendEP0Data>
40007200:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007204:	eafffe92 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007208:	e3520001 	cmp	r2, #1
4000720c:	1affff02 	bne	40006e1c <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007210:	e3a00020 	mov	r0, #32
40007214:	e59f135c 	ldr	r1, [pc, #860]	; 40007578 <UVCAppEP0Thread_Entry+0xa28>
40007218:	e28d2036 	add	r2, sp, #54	; 0x36
4000721c:	eb0055d9 	bl	4001c988 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40007220:	e3500000 	cmp	r0, #0
40007224:	1afffe89 	bne	40006c50 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
40007228:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
4000722c:	e3510003 	cmp	r1, #3
40007230:	1afffe86 	bne	40006c50 <UVCAppEP0Thread_Entry+0x100>
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007234:	e5d53082 	ldrb	r3, [r5, #130]	; 0x82
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007238:	e5d5e07d 	ldrb	lr, [r5, #125]	; 0x7d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
4000723c:	e5d5c07e 	ldrb	ip, [r5, #126]	; 0x7e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007240:	e5d5007f 	ldrb	r0, [r5, #127]	; 0x7f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007244:	e5d5b080 	ldrb	fp, [r5, #128]	; 0x80
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007248:	e5d52081 	ldrb	r2, [r5, #129]	; 0x81
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
4000724c:	e5c6364e 	strb	r3, [r6, #1614]	; 0x64e
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007250:	e5c6e649 	strb	lr, [r6, #1609]	; 0x649
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007254:	e5c6c64a 	strb	ip, [r6, #1610]	; 0x64a
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007258:	e5c6064b 	strb	r0, [r6, #1611]	; 0x64b
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
4000725c:	e5c6b64c 	strb	fp, [r6, #1612]	; 0x64c
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007260:	e5c6264d 	strb	r2, [r6, #1613]	; 0x64d
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007264:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007268:	eafffe79 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000726c:	e3520086 	cmp	r2, #134	; 0x86
40007270:	0affffdd 	beq	400071ec <UVCAppEP0Thread_Entry+0x69c>
40007274:	e3520087 	cmp	r2, #135	; 0x87
40007278:	1affffa3 	bne	4000710c <UVCAppEP0Thread_Entry+0x5bc>
4000727c:	eaffff63 	b	40007010 <UVCAppEP0Thread_Entry+0x4c0>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
40007280:	e3a00000 	mov	r0, #0
40007284:	ebfffbcc 	bl	400061bc <CTControlHandle>
40007288:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000728c:	eafffe66 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007290:	e3a00004 	mov	r0, #4
40007294:	e59f12fc 	ldr	r1, [pc, #764]	; 40007598 <UVCAppEP0Thread_Entry+0xa48>
40007298:	eb002eeb 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000729c:	e59f12f8 	ldr	r1, [pc, #760]	; 4000759c <UVCAppEP0Thread_Entry+0xa4c>
400072a0:	e3a00004 	mov	r0, #4
400072a4:	eb002ee8 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400072a8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400072ac:	eb00059c 	bl	40008924 <_tx_thread_sleep>
400072b0:	eafffff9 	b	4000729c <UVCAppEP0Thread_Entry+0x74c>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
400072b4:	e3530085 	cmp	r3, #133	; 0x85
400072b8:	0affff95 	beq	40007114 <UVCAppEP0Thread_Entry+0x5c4>
400072bc:	e3530086 	cmp	r3, #134	; 0x86
400072c0:	1afffed5 	bne	40006e1c <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400072c4:	e3a00001 	mov	r0, #1
400072c8:	eaffffc8 	b	400071f0 <UVCAppEP0Thread_Entry+0x6a0>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
400072cc:	e3a00006 	mov	r0, #6
400072d0:	ebfff7f1 	bl	4000529c <ControlHandle>
400072d4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072d8:	eafffe53 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400072dc:	e3520c0d 	cmp	r2, #3328	; 0xd00
400072e0:	0a000007 	beq	40007304 <UVCAppEP0Thread_Entry+0x7b4>
400072e4:	e3520c0e 	cmp	r2, #3584	; 0xe00
400072e8:	0a000009 	beq	40007314 <UVCAppEP0Thread_Entry+0x7c4>
400072ec:	e3520b03 	cmp	r2, #3072	; 0xc00
400072f0:	1afffe44 	bne	40006c08 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
400072f4:	e3a0000b 	mov	r0, #11
400072f8:	ebfff7e7 	bl	4000529c <ControlHandle>
400072fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007300:	eafffe49 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
40007304:	e3a00009 	mov	r0, #9
40007308:	ebfff7e3 	bl	4000529c <ControlHandle>
4000730c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007310:	eafffe45 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
40007314:	e3a0000e 	mov	r0, #14
40007318:	ebfff7df 	bl	4000529c <ControlHandle>
4000731c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007320:	eafffe41 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007324:	e3520b01 	cmp	r2, #1024	; 0x400
40007328:	0afffe3f 	beq	40006c2c <UVCAppEP0Thread_Entry+0xdc>
4000732c:	e3520c05 	cmp	r2, #1280	; 0x500
40007330:	1afffe34 	bne	40006c08 <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
40007334:	e3a00004 	mov	r0, #4
40007338:	ebfff7d7 	bl	4000529c <ControlHandle>
4000733c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007340:	eafffe39 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
40007344:	e3a00002 	mov	r0, #2
40007348:	ebfff7d3 	bl	4000529c <ControlHandle>
4000734c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007350:	eafffe35 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
40007354:	e3a00005 	mov	r0, #5
40007358:	ebfff7cf 	bl	4000529c <ControlHandle>
4000735c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007360:	eafffe31 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40007364:	e3520085 	cmp	r2, #133	; 0x85
40007368:	0a000052 	beq	400074b8 <UVCAppEP0Thread_Entry+0x968>
4000736c:	e3520086 	cmp	r2, #134	; 0x86
40007370:	1afffe32 	bne	40006c40 <UVCAppEP0Thread_Entry+0xf0>
40007374:	eaffffd2 	b	400072c4 <UVCAppEP0Thread_Entry+0x774>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007378:	e3520c06 	cmp	r2, #1536	; 0x600
4000737c:	0a000049 	beq	400074a8 <UVCAppEP0Thread_Entry+0x958>
40007380:	8a000009 	bhi	400073ac <UVCAppEP0Thread_Entry+0x85c>
40007384:	e3520c05 	cmp	r2, #1280	; 0x500
40007388:	1afffe22 	bne	40006c18 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
4000738c:	e3a00014 	mov	r0, #20
40007390:	ebfff7c1 	bl	4000529c <ControlHandle>
40007394:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007398:	eafffe23 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
4000739c:	e3a00006 	mov	r0, #6
400073a0:	ebfffb85 	bl	400061bc <CTControlHandle>
400073a4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073a8:	eafffe1f 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400073ac:	e3520c07 	cmp	r2, #1792	; 0x700
400073b0:	0a000038 	beq	40007498 <UVCAppEP0Thread_Entry+0x948>
400073b4:	e3520b02 	cmp	r2, #2048	; 0x800
400073b8:	1afffe16 	bne	40006c18 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
400073bc:	e3a00017 	mov	r0, #23
400073c0:	ebfff7b5 	bl	4000529c <ControlHandle>
400073c4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073c8:	eafffe17 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400073cc:	e3520c0b 	cmp	r2, #2816	; 0xb00
400073d0:	0a00000f 	beq	40007414 <UVCAppEP0Thread_Entry+0x8c4>
400073d4:	e3520b03 	cmp	r2, #3072	; 0xc00
400073d8:	0a000009 	beq	40007404 <UVCAppEP0Thread_Entry+0x8b4>
400073dc:	e3520c0a 	cmp	r2, #2560	; 0xa00
400073e0:	1afffe08 	bne	40006c08 <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
400073e4:	e3a00008 	mov	r0, #8
400073e8:	ebfffb73 	bl	400061bc <CTControlHandle>
400073ec:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073f0:	eafffe0d 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
400073f4:	e3a00007 	mov	r0, #7
400073f8:	ebfffb6f 	bl	400061bc <CTControlHandle>
400073fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007400:	eafffe09 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
40007404:	e3a0000a 	mov	r0, #10
40007408:	ebfffb6b 	bl	400061bc <CTControlHandle>
4000740c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007410:	eafffe05 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
40007414:	e3a00009 	mov	r0, #9
40007418:	ebfffb67 	bl	400061bc <CTControlHandle>
4000741c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007420:	eafffe01 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
40007424:	e3a00020 	mov	r0, #32
40007428:	ebfff79b 	bl	4000529c <ControlHandle>
4000742c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007430:	eafffdfd 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
40007434:	e3a00019 	mov	r0, #25
40007438:	ebfff797 	bl	4000529c <ControlHandle>
4000743c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007440:	eafffdf9 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007444:	e3a00020 	mov	r0, #32
40007448:	e59f1128 	ldr	r1, [pc, #296]	; 40007578 <UVCAppEP0Thread_Entry+0xa28>
4000744c:	e28d2036 	add	r2, sp, #54	; 0x36
40007450:	eb00554c 	bl	4001c988 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
40007454:	e3500000 	cmp	r0, #0
40007458:	1afffdfc 	bne	40006c50 <UVCAppEP0Thread_Entry+0x100>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
4000745c:	e3a02000 	mov	r2, #0
40007460:	e59f00e4 	ldr	r0, [pc, #228]	; 4000754c <UVCAppEP0Thread_Entry+0x9fc>
40007464:	e3a01001 	mov	r1, #1
40007468:	eb000a25 	bl	40009d04 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
4000746c:	e2502000 	subs	r2, r0, #0
40007470:	0afffdf6 	beq	40006c50 <UVCAppEP0Thread_Entry+0x100>
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007474:	e3a00004 	mov	r0, #4
40007478:	e59f1120 	ldr	r1, [pc, #288]	; 400075a0 <UVCAppEP0Thread_Entry+0xa50>
4000747c:	eb002e72 	bl	40012e4c <CyU3PDebugPrint>
40007480:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007484:	eafffdf2 	b	40006c54 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
40007488:	e3a00012 	mov	r0, #18
4000748c:	ebfff782 	bl	4000529c <ControlHandle>
40007490:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007494:	eafffde4 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
40007498:	e3a00016 	mov	r0, #22
4000749c:	ebfff77e 	bl	4000529c <ControlHandle>
400074a0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074a4:	eafffde0 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
400074a8:	e3a00015 	mov	r0, #21
400074ac:	ebfff77a 	bl	4000529c <ControlHandle>
400074b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074b4:	eafffddc 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400074b8:	e3a00002 	mov	r0, #2
400074bc:	e59f10d0 	ldr	r1, [pc, #208]	; 40007594 <UVCAppEP0Thread_Entry+0xa44>
400074c0:	eaffff16 	b	40007120 <UVCAppEP0Thread_Entry+0x5d0>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
400074c4:	e3a00021 	mov	r0, #33	; 0x21
400074c8:	ebfff773 	bl	4000529c <ControlHandle>
400074cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074d0:	eafffdd5 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
400074d4:	e3a0001c 	mov	r0, #28
400074d8:	ebfff76f 	bl	4000529c <ControlHandle>
400074dc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074e0:	eafffdd1 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x\r\n", wValue, bRequest);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
400074e4:	e3a0001a 	mov	r0, #26
400074e8:	ebfff76b 	bl	4000529c <ControlHandle>
400074ec:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074f0:	eafffdcd 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
400074f4:	e3a0001e 	mov	r0, #30
400074f8:	ebfff767 	bl	4000529c <ControlHandle>
400074fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007500:	eafffdc9 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
40007504:	e3a00011 	mov	r0, #17
40007508:	ebfff763 	bl	4000529c <ControlHandle>
4000750c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007510:	eafffdc5 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
40007514:	e3a00018 	mov	r0, #24
40007518:	ebfff75f 	bl	4000529c <ControlHandle>
4000751c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007520:	eafffdc1 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
40007524:	e3a00013 	mov	r0, #19
40007528:	ebfff75b 	bl	4000529c <ControlHandle>
4000752c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007530:	eafffdbd 	b	40006c2c <UVCAppEP0Thread_Entry+0xdc>
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
40007534:	e59f1068 	ldr	r1, [pc, #104]	; 400075a4 <UVCAppEP0Thread_Entry+0xa54>
40007538:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
4000753c:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40007540:	e3a00004 	mov	r0, #4
40007544:	eb002e40 	bl	40012e4c <CyU3PDebugPrint>
40007548:	eafffdbc 	b	40006c40 <UVCAppEP0Thread_Entry+0xf0>
4000754c:	40030f90 	.word	0x40030f90
40007550:	40030000 	.word	0x40030000
40007554:	4003310c 	.word	0x4003310c
40007558:	40032fc0 	.word	0x40032fc0
4000755c:	40032ff0 	.word	0x40032ff0
40007560:	400330d0 	.word	0x400330d0
40007564:	40011500 	.word	0x40011500
40007568:	40033030 	.word	0x40033030
4000756c:	40032ec0 	.word	0x40032ec0
40007570:	40032ff2 	.word	0x40032ff2
40007574:	40011484 	.word	0x40011484
40007578:	4003100c 	.word	0x4003100c
4000757c:	40011594 	.word	0x40011594
40007580:	4001152c 	.word	0x4001152c
40007584:	40030648 	.word	0x40030648
40007588:	40030654 	.word	0x40030654
4000758c:	40030610 	.word	0x40030610
40007590:	4003062c 	.word	0x4003062c
40007594:	40030fe8 	.word	0x40030fe8
40007598:	400115e4 	.word	0x400115e4
4000759c:	400111f4 	.word	0x400111f4
400075a0:	4001156c 	.word	0x4001156c
400075a4:	400115bc 	.word	0x400115bc

400075a8 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400075a8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400075ac:	e59f42ac 	ldr	r4, [pc, #684]	; 40007860 <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400075b0:	e59f22ac 	ldr	r2, [pc, #684]	; 40007864 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
400075b4:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400075b8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400075bc:	e592001c 	ldr	r0, [r2, #28]
400075c0:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400075c4:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
400075c8:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400075cc:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400075d0:	eb000a63 	bl	40009f64 <_txe_mutex_get>
    if(Data1&0x80){
400075d4:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400075d8:	12066001 	andne	r6, r6, #1
400075dc:	11e06006 	mvnne	r6, r6
400075e0:	1206603b 	andne	r6, r6, #59	; 0x3b
400075e4:	11e06006 	mvnne	r6, r6
400075e8:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
400075ec:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400075f0:	e3a08000 	mov	r8, #0
400075f4:	e1a0200a 	mov	r2, sl
400075f8:	e1a03007 	mov	r3, r7
400075fc:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
40007600:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007604:	e59f0258 	ldr	r0, [pc, #600]	; 40007864 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
40007608:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
4000760c:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007610:	e88d0140 	stm	sp, {r6, r8}
40007614:	ebffefa7 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
40007618:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
4000761c:	e1a01009 	mov	r1, r9
40007620:	e1a03007 	mov	r3, r7
40007624:	e59f0238 	ldr	r0, [pc, #568]	; 40007864 <CamDefSet+0x2bc>
40007628:	e88d0220 	stm	sp, {r5, r9}
4000762c:	ebffefa1 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007630:	e1a02006 	mov	r2, r6
40007634:	e1a03005 	mov	r3, r5
40007638:	e59f1228 	ldr	r1, [pc, #552]	; 40007868 <CamDefSet+0x2c0>
4000763c:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
40007640:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
40007644:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007648:	eb002dff 	bl	40012e4c <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
4000764c:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
40007650:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007654:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007658:	e3a01002 	mov	r1, #2
4000765c:	e59f0200 	ldr	r0, [pc, #512]	; 40007864 <CamDefSet+0x2bc>
40007660:	e58db000 	str	fp, [sp]
40007664:	e58d8004 	str	r8, [sp, #4]
40007668:	ebffef92 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
4000766c:	e1a0200b 	mov	r2, fp
40007670:	e1a03005 	mov	r3, r5
40007674:	e59f11ec 	ldr	r1, [pc, #492]	; 40007868 <CamDefSet+0x2c0>
40007678:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
4000767c:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007680:	eb002df1 	bl	40012e4c <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007684:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007688:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
4000768c:	e247b080 	sub	fp, r7, #128	; 0x80
40007690:	e20b10ff 	and	r1, fp, #255	; 0xff
40007694:	e58d1014 	str	r1, [sp, #20]
40007698:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
4000769c:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076a0:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400076a4:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076a8:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400076ac:	e3a01005 	mov	r1, #5
400076b0:	e3a020df 	mov	r2, #223	; 0xdf
400076b4:	e59f01a8 	ldr	r0, [pc, #424]	; 40007864 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076b8:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400076bc:	e58dc000 	str	ip, [sp]
400076c0:	e58d8004 	str	r8, [sp, #4]
400076c4:	ebffef7b 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076c8:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400076cc:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076d0:	e20ac0ff 	and	ip, sl, #255	; 0xff
400076d4:	e1a03006 	mov	r3, r6
400076d8:	e3a01005 	mov	r1, #5
400076dc:	e3a020dc 	mov	r2, #220	; 0xdc
400076e0:	e59f017c 	ldr	r0, [pc, #380]	; 40007864 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400076e4:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076e8:	e58dc000 	str	ip, [sp]
400076ec:	e58d9004 	str	r9, [sp, #4]
400076f0:	ebffef70 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076f4:	e59d001c 	ldr	r0, [sp, #28]
400076f8:	e3a0e002 	mov	lr, #2
400076fc:	e200c0ff 	and	ip, r0, #255	; 0xff
40007700:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007704:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007708:	e3a01005 	mov	r1, #5
4000770c:	e3a020de 	mov	r2, #222	; 0xde
40007710:	e59f014c 	ldr	r0, [pc, #332]	; 40007864 <CamDefSet+0x2bc>
40007714:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007718:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
4000771c:	e58dc000 	str	ip, [sp]
40007720:	ebffef64 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007724:	e59da020 	ldr	sl, [sp, #32]
40007728:	e1a03006 	mov	r3, r6
4000772c:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007730:	e58dc000 	str	ip, [sp]
40007734:	e3a01005 	mov	r1, #5
40007738:	e3a0c003 	mov	ip, #3
4000773c:	e3a020e0 	mov	r2, #224	; 0xe0
40007740:	e59f011c 	ldr	r0, [pc, #284]	; 40007864 <CamDefSet+0x2bc>
40007744:	e58dc004 	str	ip, [sp, #4]
40007748:	ebffef5a 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
4000774c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40007750:	e3a0a004 	mov	sl, #4
40007754:	e200c0ff 	and	ip, r0, #255	; 0xff
40007758:	e1a03006 	mov	r3, r6
4000775c:	e3a01005 	mov	r1, #5
40007760:	e3a020dd 	mov	r2, #221	; 0xdd
40007764:	e59f00f8 	ldr	r0, [pc, #248]	; 40007864 <CamDefSet+0x2bc>
40007768:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
4000776c:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007770:	e58da004 	str	sl, [sp, #4]
40007774:	ebffef4f 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007778:	e3a0e005 	mov	lr, #5
4000777c:	e1a0100e 	mov	r1, lr
40007780:	e1a03006 	mov	r3, r6
40007784:	e3a020e1 	mov	r2, #225	; 0xe1
40007788:	e20760ff 	and	r6, r7, #255	; 0xff
4000778c:	e59f00d0 	ldr	r0, [pc, #208]	; 40007864 <CamDefSet+0x2bc>
40007790:	e88d4040 	stm	sp, {r6, lr}
40007794:	ebffef47 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007798:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
4000779c:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400077a0:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
400077a4:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
400077a8:	e59dc020 	ldr	ip, [sp, #32]
400077ac:	e1a0200b 	mov	r2, fp
400077b0:	e59d3018 	ldr	r3, [sp, #24]
400077b4:	e59f10b0 	ldr	r1, [pc, #176]	; 4000786c <CamDefSet+0x2c4>
400077b8:	e1a0000a 	mov	r0, sl
400077bc:	e88d5040 	stm	sp, {r6, ip, lr}
400077c0:	e58d700c 	str	r7, [sp, #12]
400077c4:	eb002da0 	bl	40012e4c <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
400077c8:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
400077cc:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
400077d0:	e1a03007 	mov	r3, r7
400077d4:	e3a01006 	mov	r1, #6
400077d8:	e3a02085 	mov	r2, #133	; 0x85
400077dc:	e59f0080 	ldr	r0, [pc, #128]	; 40007864 <CamDefSet+0x2bc>
400077e0:	e88d0140 	stm	sp, {r6, r8}
400077e4:	ebffef33 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
400077e8:	e1a03007 	mov	r3, r7
400077ec:	e3a01006 	mov	r1, #6
400077f0:	e3a02086 	mov	r2, #134	; 0x86
400077f4:	e59f0068 	ldr	r0, [pc, #104]	; 40007864 <CamDefSet+0x2bc>
400077f8:	e88d0240 	stm	sp, {r6, r9}
400077fc:	ebffef2d 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007800:	e1a02006 	mov	r2, r6
40007804:	e1a03005 	mov	r3, r5
40007808:	e59f1058 	ldr	r1, [pc, #88]	; 40007868 <CamDefSet+0x2c0>
4000780c:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
40007810:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007814:	eb002d8c 	bl	40012e4c <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007818:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
4000781c:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
40007820:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
40007824:	e3a01007 	mov	r1, #7
40007828:	e59f0034 	ldr	r0, [pc, #52]	; 40007864 <CamDefSet+0x2bc>
4000782c:	e88d0140 	stm	sp, {r6, r8}
40007830:	ebffef20 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007834:	e1a03005 	mov	r3, r5
40007838:	e1a0000a 	mov	r0, sl
4000783c:	e59f1024 	ldr	r1, [pc, #36]	; 40007868 <CamDefSet+0x2c0>
40007840:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
40007844:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007848:	eb002d7f 	bl	40012e4c <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000784c:	e59f3010 	ldr	r3, [pc, #16]	; 40007864 <CamDefSet+0x2bc>
40007850:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007854:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007858:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000785c:	ea0009f5 	b	4000a038 <_txe_mutex_put>
40007860:	40030000 	.word	0x40030000
40007864:	40032ec4 	.word	0x40032ec4
40007868:	40011618 	.word	0x40011618
4000786c:	40011638 	.word	0x40011638

40007870 <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007870:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007874:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007878:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
4000787c:	e59f1018 	ldr	r1, [pc, #24]	; 4000789c <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007880:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007884:	ebfff012 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007888:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
4000788c:	15d43001 	ldrbne	r3, [r4, #1]
40007890:	13833002 	orrne	r3, r3, #2
40007894:	15c43001 	strbne	r3, [r4, #1]
40007898:	e8bd8038 	pop	{r3, r4, r5, pc}
4000789c:	40030480 	.word	0x40030480

400078a0 <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
400078a0:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400078a4:	e59f1010 	ldr	r1, [pc, #16]	; 400078bc <CyFxAppErrorHandler+0x1c>
400078a8:	e3a00004 	mov	r0, #4
400078ac:	eb002d66 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400078b0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400078b4:	eb00041a 	bl	40008924 <_tx_thread_sleep>
400078b8:	eafffff9 	b	400078a4 <CyFxAppErrorHandler+0x4>
400078bc:	400111f4 	.word	0x400111f4

400078c0 <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
400078c0:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
400078c4:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
400078c8:	eb006cd0 	bl	40022c10 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
400078cc:	e2504000 	subs	r4, r0, #0
400078d0:	0a000004 	beq	400078e8 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
400078d4:	e3a00004 	mov	r0, #4
400078d8:	e59f1aa8 	ldr	r1, [pc, #2728]	; 40008388 <UVCAppThread_Entry+0xac8>
400078dc:	eb002d5a 	bl	40012e4c <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
400078e0:	e1a00004 	mov	r0, r4
400078e4:	ebffffed 	bl	400078a0 <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
400078e8:	e59fca9c 	ldr	ip, [pc, #2716]	; 4000838c <UVCAppThread_Entry+0xacc>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
400078ec:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
400078f0:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
400078f4:	e28d0050 	add	r0, sp, #80	; 0x50
400078f8:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
400078fc:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007900:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007904:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
40007908:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
4000790c:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
40007910:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
40007914:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007918:	eb006d35 	bl	40022df4 <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
4000791c:	e3500000 	cmp	r0, #0
40007920:	0a000000 	beq	40007928 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007924:	ebffffdd 	bl	400078a0 <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
40007928:	e3e00000 	mvn	r0, #0
4000792c:	eb006db7 	bl	40023010 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007930:	e3500000 	cmp	r0, #0
40007934:	0a000000 	beq	4000793c <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007938:	ebffffd8 	bl	400078a0 <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
4000793c:	e3a00003 	mov	r0, #3
40007940:	e3a01004 	mov	r1, #4
40007944:	eb002cb8 	bl	40012c2c <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007948:	e3500000 	cmp	r0, #0
4000794c:	0a000000 	beq	40007954 <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007950:	ebffffd2 	bl	400078a0 <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007954:	e3a00000 	mov	r0, #0
40007958:	eb002d37 	bl	40012e3c <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
4000795c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007960:	eb0003ef 	bl	40008924 <_tx_thread_sleep>
40007964:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007968:	eb0003ed 	bl	40008924 <_tx_thread_sleep>
4000796c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007970:	eb0003eb 	bl	40008924 <_tx_thread_sleep>
40007974:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007978:	eb0003e9 	bl	40008924 <_tx_thread_sleep>
4000797c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007980:	eb0003e7 	bl	40008924 <_tx_thread_sleep>
40007984:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007988:	eb0003e5 	bl	40008924 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
4000798c:	eb006e2d 	bl	40023248 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40007990:	e2504000 	subs	r4, r0, #0
40007994:	0a000004 	beq	400079ac <UVCAppThread_Entry+0xec>
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007998:	e3a00004 	mov	r0, #4
4000799c:	e59f19ec 	ldr	r1, [pc, #2540]	; 40008390 <UVCAppThread_Entry+0xad0>
400079a0:	eb002d29 	bl	40012e4c <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
400079a4:	e1a00004 	mov	r0, r4
400079a8:	ebffffbc 	bl	400078a0 <CyFxAppErrorHandler>
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
400079ac:	e59f69e0 	ldr	r6, [pc, #2528]	; 40008394 <UVCAppThread_Entry+0xad4>
    i2cConfig.isDma      = CyFalse;
400079b0:	e3a05000 	mov	r5, #0
    i2cConfig.busTimeout = 0xffffffffU;
400079b4:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
400079b8:	e28d008c 	add	r0, sp, #140	; 0x8c
400079bc:	e1a01005 	mov	r1, r5
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
400079c0:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
400079c4:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
400079c8:	e58d608c 	str	r6, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
400079cc:	e58d5090 	str	r5, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
400079d0:	eb006f15 	bl	4002362c <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
400079d4:	e2504000 	subs	r4, r0, #0
400079d8:	0a000004 	beq	400079f0 <UVCAppThread_Entry+0x130>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
400079dc:	e3a00004 	mov	r0, #4
400079e0:	e59f19b0 	ldr	r1, [pc, #2480]	; 40008398 <UVCAppThread_Entry+0xad8>
400079e4:	eb002d18 	bl	40012e4c <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
400079e8:	e1a00004 	mov	r0, r4
400079ec:	ebffffab 	bl	400078a0 <CyFxAppErrorHandler>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
400079f0:	e59f69a4 	ldr	r6, [pc, #2468]	; 4000839c <UVCAppThread_Entry+0xadc>
400079f4:	e3a02028 	mov	r2, #40	; 0x28
400079f8:	e3a01000 	mov	r1, #0
400079fc:	e1a00006 	mov	r0, r6
40007a00:	eb00081f 	bl	40009a84 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007a04:	e2502000 	subs	r2, r0, #0
40007a08:	1a0000f2 	bne	40007dd8 <UVCAppThread_Entry+0x518>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007a0c:	e3a05002 	mov	r5, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007a10:	e1a01002 	mov	r1, r2

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
40007a14:	e586203c 	str	r2, [r6, #60]	; 0x3c
    clearFeatureRqtReceived = CyFalse;
40007a18:	e5862040 	str	r2, [r6, #64]	; 0x40

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007a1c:	e3a07003 	mov	r7, #3
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007a20:	e28d009c 	add	r0, sp, #156	; 0x9c
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007a24:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007a28:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007a2c:	e5cd509c 	strb	r5, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
40007a30:	e5cd509d 	strb	r5, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007a34:	e5cd70a5 	strb	r7, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007a38:	eb006b0a 	bl	40022668 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007a3c:	e2502000 	subs	r2, r0, #0
40007a40:	1a0000f6 	bne	40007e20 <UVCAppThread_Entry+0x560>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007a44:	e3a00016 	mov	r0, #22
40007a48:	e3a01001 	mov	r1, #1
40007a4c:	eb002bee 	bl	40012a0c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007a50:	e2502000 	subs	r2, r0, #0
40007a54:	1a0000e8 	bne	40007dfc <UVCAppThread_Entry+0x53c>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007a58:	e3a00014 	mov	r0, #20
40007a5c:	e3a01001 	mov	r1, #1
40007a60:	eb002be9 	bl	40012a0c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007a64:	e2502000 	subs	r2, r0, #0
40007a68:	1a0000f5 	bne	40007e44 <UVCAppThread_Entry+0x584>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007a6c:	e3a00018 	mov	r0, #24
40007a70:	e3a01001 	mov	r1, #1
40007a74:	eb002be4 	bl	40012a0c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007a78:	e2502000 	subs	r2, r0, #0
40007a7c:	1a0001f4 	bne	40008254 <UVCAppThread_Entry+0x994>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007a80:	e3a04001 	mov	r4, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007a84:	e3a00016 	mov	r0, #22
40007a88:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007a8c:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a90:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007a94:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007a98:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007a9c:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007aa0:	eb006ba8 	bl	40022948 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007aa4:	e2502000 	subs	r2, r0, #0
40007aa8:	1a0001e0 	bne	40008230 <UVCAppThread_Entry+0x970>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007aac:	e3a00014 	mov	r0, #20
40007ab0:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007ab4:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007ab8:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007abc:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007ac0:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007ac4:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007ac8:	eb006b9e 	bl	40022948 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007acc:	e2502000 	subs	r2, r0, #0
40007ad0:	1a0001e8 	bne	40008278 <UVCAppThread_Entry+0x9b8>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007ad4:	e3a00018 	mov	r0, #24
40007ad8:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007adc:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007ae0:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007ae4:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007ae8:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007aec:	e58d4074 	str	r4, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007af0:	eb006b94 	bl	40022948 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007af4:	e2502000 	subs	r2, r0, #0
40007af8:	1a0001c3 	bne	4000820c <UVCAppThread_Entry+0x94c>
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007afc:	e1a00004 	mov	r0, r4
40007b00:	e28d107c 	add	r1, sp, #124	; 0x7c
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007b04:	e58d2084 	str	r2, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007b08:	e58d2080 	str	r2, [sp, #128]	; 0x80
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007b0c:	e1cd57bc 	strh	r5, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007b10:	e5cd7088 	strb	r7, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007b14:	eb004c24 	bl	4001abac <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b18:	e2502000 	subs	r2, r0, #0
40007b1c:	1a0001b1 	bne	400081e8 <UVCAppThread_Entry+0x928>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007b20:	e59f0878 	ldr	r0, [pc, #2168]	; 400083a0 <UVCAppThread_Entry+0xae0>
40007b24:	eb004e9e 	bl	4001b5a4 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007b28:	ebfff262 	bl	400044b8 <SensorReset>
    SensorInit ();
40007b2c:	ebfff291 	bl	40004578 <SensorInit>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007b30:	eb005911 	bl	4001df7c <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b34:	e2502000 	subs	r2, r0, #0
40007b38:	1a0001a1 	bne	400081c4 <UVCAppThread_Entry+0x904>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007b3c:	e3a01000 	mov	r1, #0
40007b40:	e59f085c 	ldr	r0, [pc, #2140]	; 400083a4 <UVCAppThread_Entry+0xae4>
40007b44:	eb0063c3 	bl	40020a58 <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007b48:	e59f0858 	ldr	r0, [pc, #2136]	; 400083a8 <UVCAppThread_Entry+0xae8>
40007b4c:	eb0063ac 	bl	40020a04 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007b50:	e3a01000 	mov	r1, #0
40007b54:	e59f2850 	ldr	r2, [pc, #2128]	; 400083ac <UVCAppThread_Entry+0xaec>
40007b58:	e3a00001 	mov	r0, #1
40007b5c:	eb0056e6 	bl	4001d6fc <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007b60:	e3a00000 	mov	r0, #0
40007b64:	e1a01000 	mov	r1, r0
40007b68:	e59f2840 	ldr	r2, [pc, #2112]	; 400083b0 <UVCAppThread_Entry+0xaf0>
40007b6c:	eb0056e2 	bl	4001d6fc <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007b70:	e3a01000 	mov	r1, #0
40007b74:	e59f2838 	ldr	r2, [pc, #2104]	; 400083b4 <UVCAppThread_Entry+0xaf4>
40007b78:	e3a00002 	mov	r0, #2
40007b7c:	eb0056de 	bl	4001d6fc <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007b80:	e3a01000 	mov	r1, #0
40007b84:	e59f282c 	ldr	r2, [pc, #2092]	; 400083b8 <UVCAppThread_Entry+0xaf8>
40007b88:	e3a00007 	mov	r0, #7
40007b8c:	eb0056da 	bl	4001d6fc <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007b90:	e3a01000 	mov	r1, #0
40007b94:	e59f2820 	ldr	r2, [pc, #2080]	; 400083bc <UVCAppThread_Entry+0xafc>
40007b98:	e3a00004 	mov	r0, #4
40007b9c:	eb0056d6 	bl	4001d6fc <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007ba0:	e3a01000 	mov	r1, #0
40007ba4:	e59f2814 	ldr	r2, [pc, #2068]	; 400083c0 <UVCAppThread_Entry+0xb00>
40007ba8:	e3a00003 	mov	r0, #3
40007bac:	eb0056d2 	bl	4001d6fc <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007bb0:	e3a01000 	mov	r1, #0
40007bb4:	e59f2808 	ldr	r2, [pc, #2056]	; 400083c4 <UVCAppThread_Entry+0xb04>
40007bb8:	e3a00006 	mov	r0, #6
40007bbc:	eb0056ce 	bl	4001d6fc <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007bc0:	e3a01000 	mov	r1, #0
40007bc4:	e59f27fc 	ldr	r2, [pc, #2044]	; 400083c8 <UVCAppThread_Entry+0xb08>
40007bc8:	e3a00005 	mov	r0, #5
40007bcc:	eb0056ca 	bl	4001d6fc <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007bd0:	e3a01001 	mov	r1, #1
40007bd4:	e59f27f0 	ldr	r2, [pc, #2032]	; 400083cc <UVCAppThread_Entry+0xb0c>
40007bd8:	e3a00005 	mov	r0, #5
40007bdc:	eb0056c6 	bl	4001d6fc <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007be0:	e3a01002 	mov	r1, #2
40007be4:	e59f27e4 	ldr	r2, [pc, #2020]	; 400083d0 <UVCAppThread_Entry+0xb10>
40007be8:	e3a00005 	mov	r0, #5
40007bec:	eb0056c2 	bl	4001d6fc <CyU3PUsbSetDesc>
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
40007bf0:	e3a07000 	mov	r7, #0
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007bf4:	e3a04001 	mov	r4, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007bf8:	e3a0a003 	mov	sl, #3
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007bfc:	e3a00082 	mov	r0, #130	; 0x82
40007c00:	e28d10a8 	add	r1, sp, #168	; 0xa8
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007c04:	e3a08040 	mov	r8, #64	; 0x40
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007c08:	e5cda0ac 	strb	sl, [sp, #172]	; 0xac
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007c0c:	e58d40a8 	str	r4, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007c10:	e1cd8bb0 	strh	r8, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40007c14:	e5cd70b3 	strb	r7, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40007c18:	e1cd7abe 	strh	r7, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40007c1c:	e5cd40b2 	strb	r4, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007c20:	eb00501c 	bl	4001bc98 <CyU3PSetEpConfig>
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
40007c24:	e1a0a007 	mov	sl, r7
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c28:	e2503000 	subs	r3, r0, #0
40007c2c:	1a00015a 	bne	4000819c <UVCAppThread_Entry+0x8dc>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007c30:	e59fc79c 	ldr	ip, [pc, #1948]	; 400083d4 <UVCAppThread_Entry+0xb14>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007c34:	e59fe79c 	ldr	lr, [pc, #1948]	; 400083d8 <UVCAppThread_Entry+0xb18>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007c38:	e3a05b01 	mov	r5, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007c3c:	e3a07010 	mov	r7, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007c40:	e59f0794 	ldr	r0, [pc, #1940]	; 400083dc <UVCAppThread_Entry+0xb1c>
40007c44:	e3a01004 	mov	r1, #4
40007c48:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007c4c:	e1cd53b4 	strh	r5, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40007c50:	e1cd43b6 	strh	r4, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007c54:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007c58:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40007c5c:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40007c60:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40007c64:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40007c68:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007c6c:	e5cda044 	strb	sl, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007c70:	e58d7048 	str	r7, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007c74:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007c78:	eb003689 	bl	400156a4 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c7c:	e2505000 	subs	r5, r0, #0
40007c80:	1a0000fe 	bne	40008080 <UVCAppThread_Entry+0x7c0>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007c84:	e3a00b01 	mov	r0, #1024	; 0x400
40007c88:	ebfff036 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007c8c:	e59f174c 	ldr	r1, [pc, #1868]	; 400083e0 <UVCAppThread_Entry+0xb20>
    if (glInterStaBuffer == 0)
40007c90:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007c94:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007c98:	0a0000ef 	beq	4000805c <UVCAppThread_Entry+0x79c>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007c9c:	e3a03004 	mov	r3, #4
40007ca0:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007ca4:	e59f3738 	ldr	r3, [pc, #1848]	; 400083e4 <UVCAppThread_Entry+0xb24>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007ca8:	e3a0e901 	mov	lr, #16384	; 0x4000
40007cac:	e1cde0bc 	strh	lr, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007cb0:	e59fe730 	ldr	lr, [pc, #1840]	; 400083e8 <UVCAppThread_Entry+0xb28>
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007cb4:	e1cd31ba 	strh	r3, [sp, #26]
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007cb8:	e59f372c 	ldr	r3, [pc, #1836]	; 400083ec <UVCAppThread_Entry+0xb2c>

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007cbc:	e3a0cc01 	mov	ip, #256	; 0x100
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007cc0:	e28d200c 	add	r2, sp, #12

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007cc4:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007cc8:	e1cde1b4 	strh	lr, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007ccc:	e3a0c00c 	mov	ip, #12
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007cd0:	e3a0e004 	mov	lr, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007cd4:	e5cda02a 	strb	sl, [sp, #42]	; 0x2a
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007cd8:	e3a08002 	mov	r8, #2
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007cdc:	e59f070c 	ldr	r0, [pc, #1804]	; 400083f0 <UVCAppThread_Entry+0xb30>
40007ce0:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007ce4:	e3a0a018 	mov	sl, #24
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007ce8:	e1cd81b0 	strh	r8, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007cec:	e1cd52b2 	strh	r5, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007cf0:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007cf4:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40007cf8:	e1cd52b8 	strh	r5, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007cfc:	e58da02c 	str	sl, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007d00:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007d04:	eb003f86 	bl	40017b24 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d08:	e2502000 	subs	r2, r0, #0
40007d0c:	1a0000c9 	bne	40008038 <UVCAppThread_Entry+0x778>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007d10:	e1a00004 	mov	r0, r4
40007d14:	e1a01004 	mov	r1, r4
40007d18:	eb004eda 	bl	4001b888 <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d1c:	e2502000 	subs	r2, r0, #0
40007d20:	1a0000bb 	bne	40008014 <UVCAppThread_Entry+0x754>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007d24:	e3a00064 	mov	r0, #100	; 0x64
40007d28:	eb002db8 	bl	40013410 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007d2c:	eb005387 	bl	4001cb50 <CyU3PUsbGetSpeed>
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007d30:	e3a02000 	mov	r2, #0
    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40007d34:	e5cd80ac 	strb	r8, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007d38:	e28d10a8 	add	r1, sp, #168	; 0xa8
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007d3c:	e1cd2abe 	strh	r2, [sp, #174]	; 0xae

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
40007d40:	e58d40a8 	str	r4, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007d44:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007d48:	e5c60048 	strb	r0, [r6, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007d4c:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007d50:	03a08b01 	moveq	r8, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007d54:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007d58:	e3a00083 	mov	r0, #131	; 0x83

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007d5c:	01cd8bb0 	strheq	r8, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40007d60:	05cd70b2 	strbeq	r7, [sp, #178]	; 0xb2
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
40007d64:	15cd40b2 	strbne	r4, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007d68:	eb004fca 	bl	4001bc98 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d6c:	e2502000 	subs	r2, r0, #0
40007d70:	1a00004f 	bne	40007eb4 <UVCAppThread_Entry+0x5f4>
40007d74:	e59f8678 	ldr	r8, [pc, #1656]	; 400083f4 <UVCAppThread_Entry+0xb34>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007d78:	e59f461c 	ldr	r4, [pc, #1564]	; 4000839c <UVCAppThread_Entry+0xadc>
40007d7c:	e1a05002 	mov	r5, r2
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007d80:	e1a07008 	mov	r7, r8
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007d84:	e59f0610 	ldr	r0, [pc, #1552]	; 4000839c <UVCAppThread_Entry+0xadc>
40007d88:	e3a01001 	mov	r1, #1
40007d8c:	e3a02002 	mov	r2, #2
40007d90:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007d94:	e58d5000 	str	r5, [sp]
40007d98:	eb0007a9 	bl	40009c44 <_txe_event_flags_get>
40007d9c:	e3500000 	cmp	r0, #0
40007da0:	1a000030 	bne	40007e68 <UVCAppThread_Entry+0x5a8>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007da4:	e5941044 	ldr	r1, [r4, #68]	; 0x44
40007da8:	e3510000 	cmp	r1, #0
40007dac:	0a000003 	beq	40007dc0 <UVCAppThread_Entry+0x500>
40007db0:	e1d4a2be 	ldrh	sl, [r4, #46]	; 0x2e
40007db4:	e1d4c3b0 	ldrh	ip, [r4, #48]	; 0x30
40007db8:	e15a000c 	cmp	sl, ip
40007dbc:	0a000136 	beq	4000829c <UVCAppThread_Entry+0x9dc>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007dc0:	e3a01040 	mov	r1, #64	; 0x40
40007dc4:	e3a02000 	mov	r2, #0
40007dc8:	e59f05cc 	ldr	r0, [pc, #1484]	; 4000839c <UVCAppThread_Entry+0xadc>
40007dcc:	eb0007cc 	bl	40009d04 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007dd0:	eb000a84 	bl	4000a7e8 <_txe_thread_relinquish>
    }
40007dd4:	eaffffea 	b	40007d84 <UVCAppThread_Entry+0x4c4>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40007dd8:	e3a00004 	mov	r0, #4
40007ddc:	e59f1614 	ldr	r1, [pc, #1556]	; 400083f8 <UVCAppThread_Entry+0xb38>
40007de0:	eb002c19 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007de4:	e59f1610 	ldr	r1, [pc, #1552]	; 400083fc <UVCAppThread_Entry+0xb3c>
40007de8:	e3a00004 	mov	r0, #4
40007dec:	eb002c16 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007df0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007df4:	eb0002ca 	bl	40008924 <_tx_thread_sleep>
40007df8:	eafffff9 	b	40007de4 <UVCAppThread_Entry+0x524>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40007dfc:	e3a00004 	mov	r0, #4
40007e00:	e59f15f8 	ldr	r1, [pc, #1528]	; 40008400 <UVCAppThread_Entry+0xb40>
40007e04:	eb002c10 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e08:	e59f15ec 	ldr	r1, [pc, #1516]	; 400083fc <UVCAppThread_Entry+0xb3c>
40007e0c:	e3a00004 	mov	r0, #4
40007e10:	eb002c0d 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e14:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e18:	eb0002c1 	bl	40008924 <_tx_thread_sleep>
40007e1c:	eafffff9 	b	40007e08 <UVCAppThread_Entry+0x548>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
40007e20:	e3a00004 	mov	r0, #4
40007e24:	e59f15d8 	ldr	r1, [pc, #1496]	; 40008404 <UVCAppThread_Entry+0xb44>
40007e28:	eb002c07 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e2c:	e59f15c8 	ldr	r1, [pc, #1480]	; 400083fc <UVCAppThread_Entry+0xb3c>
40007e30:	e3a00004 	mov	r0, #4
40007e34:	eb002c04 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e38:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e3c:	eb0002b8 	bl	40008924 <_tx_thread_sleep>
40007e40:	eafffff9 	b	40007e2c <UVCAppThread_Entry+0x56c>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
40007e44:	e3a00004 	mov	r0, #4
40007e48:	e59f15b8 	ldr	r1, [pc, #1464]	; 40008408 <UVCAppThread_Entry+0xb48>
40007e4c:	eb002bfe 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e50:	e59f15a4 	ldr	r1, [pc, #1444]	; 400083fc <UVCAppThread_Entry+0xb3c>
40007e54:	e3a00004 	mov	r0, #4
40007e58:	eb002bfb 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e5c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e60:	eb0002af 	bl	40008924 <_tx_thread_sleep>
40007e64:	eafffff9 	b	40007e50 <UVCAppThread_Entry+0x590>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40007e68:	e59f052c 	ldr	r0, [pc, #1324]	; 4000839c <UVCAppThread_Entry+0xadc>
40007e6c:	e3a01002 	mov	r1, #2
40007e70:	e3a02003 	mov	r2, #3
40007e74:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007e78:	e58d5000 	str	r5, [sp]
40007e7c:	eb000770 	bl	40009c44 <_txe_event_flags_get>
40007e80:	e3500000 	cmp	r0, #0
40007e84:	1a000025 	bne	40007f20 <UVCAppThread_Entry+0x660>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007e88:	e594c040 	ldr	ip, [r4, #64]	; 0x40
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
40007e8c:	e5845044 	str	r5, [r4, #68]	; 0x44
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007e90:	e35c0000 	cmp	ip, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
40007e94:	e1c452be 	strh	r5, [r4, #46]	; 0x2e
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb %d pbc %d\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
40007e98:	e1c452b8 	strh	r5, [r4, #40]	; 0x28
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
40007e9c:	e1c453b0 	strh	r5, [r4, #48]	; 0x30
                	CyU3PDebugPrint (4, "(0) fb %d pb %d pbc %d\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
40007ea0:	e1c452ba 	strh	r5, [r4, #42]	; 0x2a
                pbc=0;
40007ea4:	e1c452bc 	strh	r5, [r4, #44]	; 0x2c

                if (!clearFeatureRqtReceived)
40007ea8:	0a00000a 	beq	40007ed8 <UVCAppThread_Entry+0x618>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
40007eac:	e5865040 	str	r5, [r6, #64]	; 0x40
40007eb0:	eaffffc2 	b	40007dc0 <UVCAppThread_Entry+0x500>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40007eb4:	e3a00004 	mov	r0, #4
40007eb8:	e59f154c 	ldr	r1, [pc, #1356]	; 4000840c <UVCAppThread_Entry+0xb4c>
40007ebc:	eb002be2 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ec0:	e59f1534 	ldr	r1, [pc, #1332]	; 400083fc <UVCAppThread_Entry+0xb3c>
40007ec4:	e3a00004 	mov	r0, #4
40007ec8:	eb002bdf 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007ecc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ed0:	eb000293 	bl	40008924 <_tx_thread_sleep>
40007ed4:	eafffff9 	b	40007ec0 <UVCAppThread_Entry+0x600>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40007ed8:	e59f0510 	ldr	r0, [pc, #1296]	; 400083f0 <UVCAppThread_Entry+0xb30>
40007edc:	eb0040e1 	bl	40018268 <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
40007ee0:	e3500000 	cmp	r0, #0
40007ee4:	1a000002 	bne	40007ef4 <UVCAppThread_Entry+0x634>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40007ee8:	e3a00083 	mov	r0, #131	; 0x83
40007eec:	eb005272 	bl	4001c8bc <CyU3PUsbFlushEp>
40007ef0:	eaffffed 	b	40007eac <UVCAppThread_Entry+0x5ec>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ef4:	e59f1500 	ldr	r1, [pc, #1280]	; 400083fc <UVCAppThread_Entry+0xb3c>
40007ef8:	e3a00004 	mov	r0, #4
40007efc:	eb002bd2 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f00:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f04:	eb000286 	bl	40008924 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f08:	e59f14ec 	ldr	r1, [pc, #1260]	; 400083fc <UVCAppThread_Entry+0xb3c>
40007f0c:	e3a00004 	mov	r0, #4
40007f10:	eb002bcd 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f14:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f18:	eb000281 	bl	40008924 <_tx_thread_sleep>
40007f1c:	eafffff4 	b	40007ef4 <UVCAppThread_Entry+0x634>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40007f20:	e3e0e000 	mvn	lr, #0
40007f24:	e3a01001 	mov	r1, #1
40007f28:	e3a02002 	mov	r2, #2
40007f2c:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007f30:	e59f0464 	ldr	r0, [pc, #1124]	; 4000839c <UVCAppThread_Entry+0xadc>
40007f34:	e58de000 	str	lr, [sp]
40007f38:	eb000741 	bl	40009c44 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40007f3c:	e1a02005 	mov	r2, r5
40007f40:	e59f04a8 	ldr	r0, [pc, #1192]	; 400083f0 <UVCAppThread_Entry+0xb30>
40007f44:	e1a01005 	mov	r1, r5
40007f48:	eb0041b3 	bl	4001861c <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40007f4c:	e2502000 	subs	r2, r0, #0
40007f50:	1a000088 	bne	40008178 <UVCAppThread_Entry+0x8b8>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40007f54:	e5943038 	ldr	r3, [r4, #56]	; 0x38
40007f58:	e3530000 	cmp	r3, #0
40007f5c:	1a00007d 	bne	40008158 <UVCAppThread_Entry+0x898>
                {
                    //for start up of the AF Lens
                   	SensorSetIrisControl(0x21, 0x30, 1, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris manual (AF Lens)
40007f60:	e3a01030 	mov	r1, #48	; 0x30
40007f64:	e3a02001 	mov	r2, #1
40007f68:	e2833082 	add	r3, r3, #130	; 0x82
40007f6c:	e3a00021 	mov	r0, #33	; 0x21
40007f70:	ebfff1eb 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40007f74:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007f78:	eb000269 	bl	40008924 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 2, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris manual (non AF Lens)
40007f7c:	e3a01030 	mov	r1, #48	; 0x30
40007f80:	e3a02002 	mov	r2, #2
40007f84:	e3a03052 	mov	r3, #82	; 0x52
40007f88:	e3a00025 	mov	r0, #37	; 0x25
40007f8c:	ebfff1e4 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40007f90:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007f94:	eb000262 	bl	40008924 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x23, 0x30, 0xa, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
40007f98:	e3a01030 	mov	r1, #48	; 0x30
40007f9c:	e3a0200a 	mov	r2, #10
40007fa0:	e3a03082 	mov	r3, #130	; 0x82
40007fa4:	e3a00023 	mov	r0, #35	; 0x23
40007fa8:	ebfff1dd 	bl	40004724 <SensorSetIrisControl>
                   	CyU3PThreadSleep(300);
40007fac:	e3a00f4b 	mov	r0, #300	; 0x12c
40007fb0:	eb00025b 	bl	40008924 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
40007fb4:	e3a01030 	mov	r1, #48	; 0x30
40007fb8:	e1a02005 	mov	r2, r5
40007fbc:	e3a03082 	mov	r3, #130	; 0x82
40007fc0:	e3a00021 	mov	r0, #33	; 0x21
40007fc4:	ebfff1d6 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40007fc8:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007fcc:	eb000254 	bl	40008924 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40007fd0:	e3a03052 	mov	r3, #82	; 0x52
40007fd4:	e3a01030 	mov	r1, #48	; 0x30
40007fd8:	e1a02005 	mov	r2, r5
40007fdc:	e3a00025 	mov	r0, #37	; 0x25
40007fe0:	ebfff1cf 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40007fe4:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007fe8:	eb00024d 	bl	40008924 <_tx_thread_sleep>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40007fec:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
40007ff0:	e3530003 	cmp	r3, #3
40007ff4:	0a000047 	beq	40008118 <UVCAppThread_Entry+0x858>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40007ff8:	e3530002 	cmp	r3, #2
40007ffc:	0a000029 	beq	400080a8 <UVCAppThread_Entry+0x7e8>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008000:	e3a03001 	mov	r3, #1
40008004:	e5863038 	str	r3, [r6, #56]	; 0x38
                    CyU3PThreadSleep(200);
40008008:	e3a000c8 	mov	r0, #200	; 0xc8
4000800c:	eb000244 	bl	40008924 <_tx_thread_sleep>
40008010:	eaffff6a 	b	40007dc0 <UVCAppThread_Entry+0x500>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
40008014:	e3a00004 	mov	r0, #4
40008018:	e59f13f0 	ldr	r1, [pc, #1008]	; 40008410 <UVCAppThread_Entry+0xb50>
4000801c:	eb002b8a 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008020:	e59f13d4 	ldr	r1, [pc, #980]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008024:	e3a00004 	mov	r0, #4
40008028:	eb002b87 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000802c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008030:	eb00023b 	bl	40008924 <_tx_thread_sleep>
40008034:	eafffff9 	b	40008020 <UVCAppThread_Entry+0x760>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008038:	e3a00004 	mov	r0, #4
4000803c:	e59f13d0 	ldr	r1, [pc, #976]	; 40008414 <UVCAppThread_Entry+0xb54>
40008040:	eb002b81 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008044:	e59f13b0 	ldr	r1, [pc, #944]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008048:	e3a00004 	mov	r0, #4
4000804c:	eb002b7e 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008050:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008054:	eb000232 	bl	40008924 <_tx_thread_sleep>
40008058:	eafffff9 	b	40008044 <UVCAppThread_Entry+0x784>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
4000805c:	e2800004 	add	r0, r0, #4
40008060:	e59f13b0 	ldr	r1, [pc, #944]	; 40008418 <UVCAppThread_Entry+0xb58>
40008064:	eb002b78 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008068:	e59f138c 	ldr	r1, [pc, #908]	; 400083fc <UVCAppThread_Entry+0xb3c>
4000806c:	e3a00004 	mov	r0, #4
40008070:	eb002b75 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008074:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008078:	eb000229 	bl	40008924 <_tx_thread_sleep>
4000807c:	eafffff9 	b	40008068 <UVCAppThread_Entry+0x7a8>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008080:	e3a00004 	mov	r0, #4
40008084:	e59f1390 	ldr	r1, [pc, #912]	; 4000841c <UVCAppThread_Entry+0xb5c>
40008088:	e1a02005 	mov	r2, r5
4000808c:	eb002b6e 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008090:	e59f1364 	ldr	r1, [pc, #868]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008094:	e3a00004 	mov	r0, #4
40008098:	eb002b6b 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000809c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080a0:	eb00021f 	bl	40008924 <_tx_thread_sleep>
400080a4:	eafffff9 	b	40008090 <UVCAppThread_Entry+0x7d0>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
400080a8:	e59f1370 	ldr	r1, [pc, #880]	; 40008420 <UVCAppThread_Entry+0xb60>
400080ac:	e3a00001 	mov	r0, #1
400080b0:	eb002b65 	bl	40012e4c <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
400080b4:	e59f0368 	ldr	r0, [pc, #872]	; 40008424 <UVCAppThread_Entry+0xb64>
400080b8:	eb004c97 	bl	4001b31c <CyU3PGpifLoad>
400080bc:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400080c0:	e3520000 	cmp	r2, #0
400080c4:	1a00001a 	bne	40008134 <UVCAppThread_Entry+0x874>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
400080c8:	e5d63048 	ldrb	r3, [r6, #72]	; 0x48
400080cc:	e3530003 	cmp	r3, #3
400080d0:	0a000001 	beq	400080dc <UVCAppThread_Entry+0x81c>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
400080d4:	e3530002 	cmp	r3, #2
400080d8:	1affffc8 	bne	40008000 <UVCAppThread_Entry+0x740>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400080dc:	e1a00002 	mov	r0, r2
400080e0:	e1a01002 	mov	r1, r2
400080e4:	eb004d32 	bl	4001b5b4 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400080e8:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400080ec:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400080f0:	0affffc2 	beq	40008000 <UVCAppThread_Entry+0x740>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
400080f4:	e3a00004 	mov	r0, #4
400080f8:	e59f1328 	ldr	r1, [pc, #808]	; 40008428 <UVCAppThread_Entry+0xb68>
400080fc:	eb002b52 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008100:	e59f12f4 	ldr	r1, [pc, #756]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008104:	e3a00004 	mov	r0, #4
40008108:	eb002b4f 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000810c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008110:	eb000203 	bl	40008924 <_tx_thread_sleep>
40008114:	eafffff9 	b	40008100 <UVCAppThread_Entry+0x840>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
40008118:	e59f130c 	ldr	r1, [pc, #780]	; 4000842c <UVCAppThread_Entry+0xb6c>
4000811c:	e3a00001 	mov	r0, #1
40008120:	eb002b49 	bl	40012e4c <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
40008124:	e59f0304 	ldr	r0, [pc, #772]	; 40008430 <UVCAppThread_Entry+0xb70>
40008128:	eb004c7b 	bl	4001b31c <CyU3PGpifLoad>
4000812c:	e1a02000 	mov	r2, r0
40008130:	eaffffe2 	b	400080c0 <UVCAppThread_Entry+0x800>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
40008134:	e3a00004 	mov	r0, #4
40008138:	e59f12f4 	ldr	r1, [pc, #756]	; 40008434 <UVCAppThread_Entry+0xb74>
4000813c:	eb002b42 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008140:	e59f12b4 	ldr	r1, [pc, #692]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008144:	e3a00004 	mov	r0, #4
40008148:	eb002b3f 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000814c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008150:	eb0001f3 	bl	40008924 <_tx_thread_sleep>
40008154:	eafffff9 	b	40008140 <UVCAppThread_Entry+0x880>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40008158:	e59f0288 	ldr	r0, [pc, #648]	; 400083e8 <UVCAppThread_Entry+0xb28>
4000815c:	e3a0a002 	mov	sl, #2
40008160:	e1a01005 	mov	r1, r5
40008164:	e1a02000 	mov	r2, r0
40008168:	e1a03005 	mov	r3, r5
4000816c:	e58da000 	str	sl, [sp]
40008170:	eb004d64 	bl	4001b708 <CyU3PGpifSMSwitch>
40008174:	eaffff11 	b	40007dc0 <UVCAppThread_Entry+0x500>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
40008178:	e3a00004 	mov	r0, #4
4000817c:	e59f12b4 	ldr	r1, [pc, #692]	; 40008438 <UVCAppThread_Entry+0xb78>
40008180:	eb002b31 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008184:	e59f1270 	ldr	r1, [pc, #624]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008188:	e3a00004 	mov	r0, #4
4000818c:	eb002b2e 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008190:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008194:	eb0001e2 	bl	40008924 <_tx_thread_sleep>
40008198:	eafffff9 	b	40008184 <UVCAppThread_Entry+0x8c4>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
4000819c:	e3a00004 	mov	r0, #4
400081a0:	e59f1264 	ldr	r1, [pc, #612]	; 4000840c <UVCAppThread_Entry+0xb4c>
400081a4:	e1a02003 	mov	r2, r3
400081a8:	eb002b27 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081ac:	e59f1248 	ldr	r1, [pc, #584]	; 400083fc <UVCAppThread_Entry+0xb3c>
400081b0:	e3a00004 	mov	r0, #4
400081b4:	eb002b24 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400081b8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081bc:	eb0001d8 	bl	40008924 <_tx_thread_sleep>
400081c0:	eafffff9 	b	400081ac <UVCAppThread_Entry+0x8ec>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
400081c4:	e3a00004 	mov	r0, #4
400081c8:	e59f126c 	ldr	r1, [pc, #620]	; 4000843c <UVCAppThread_Entry+0xb7c>
400081cc:	eb002b1e 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081d0:	e59f1224 	ldr	r1, [pc, #548]	; 400083fc <UVCAppThread_Entry+0xb3c>
400081d4:	e3a00004 	mov	r0, #4
400081d8:	eb002b1b 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400081dc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081e0:	eb0001cf 	bl	40008924 <_tx_thread_sleep>
400081e4:	eafffff9 	b	400081d0 <UVCAppThread_Entry+0x910>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
400081e8:	e3a00004 	mov	r0, #4
400081ec:	e59f124c 	ldr	r1, [pc, #588]	; 40008440 <UVCAppThread_Entry+0xb80>
400081f0:	eb002b15 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081f4:	e59f1200 	ldr	r1, [pc, #512]	; 400083fc <UVCAppThread_Entry+0xb3c>
400081f8:	e3a00004 	mov	r0, #4
400081fc:	eb002b12 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008200:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008204:	eb0001c6 	bl	40008924 <_tx_thread_sleep>
40008208:	eafffff9 	b	400081f4 <UVCAppThread_Entry+0x934>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
4000820c:	e3a00004 	mov	r0, #4
40008210:	e59f122c 	ldr	r1, [pc, #556]	; 40008444 <UVCAppThread_Entry+0xb84>
40008214:	eb002b0c 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008218:	e59f11dc 	ldr	r1, [pc, #476]	; 400083fc <UVCAppThread_Entry+0xb3c>
4000821c:	e3a00004 	mov	r0, #4
40008220:	eb002b09 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008224:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008228:	eb0001bd 	bl	40008924 <_tx_thread_sleep>
4000822c:	eafffff9 	b	40008218 <UVCAppThread_Entry+0x958>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
40008230:	e3a00004 	mov	r0, #4
40008234:	e59f120c 	ldr	r1, [pc, #524]	; 40008448 <UVCAppThread_Entry+0xb88>
40008238:	eb002b03 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000823c:	e59f11b8 	ldr	r1, [pc, #440]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008240:	e3a00004 	mov	r0, #4
40008244:	eb002b00 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008248:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000824c:	eb0001b4 	bl	40008924 <_tx_thread_sleep>
40008250:	eafffff9 	b	4000823c <UVCAppThread_Entry+0x97c>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
40008254:	e3a00004 	mov	r0, #4
40008258:	e59f11ec 	ldr	r1, [pc, #492]	; 4000844c <UVCAppThread_Entry+0xb8c>
4000825c:	eb002afa 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008260:	e59f1194 	ldr	r1, [pc, #404]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008264:	e3a00004 	mov	r0, #4
40008268:	eb002af7 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000826c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008270:	eb0001ab 	bl	40008924 <_tx_thread_sleep>
40008274:	eafffff9 	b	40008260 <UVCAppThread_Entry+0x9a0>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40008278:	e3a00004 	mov	r0, #4
4000827c:	e59f11cc 	ldr	r1, [pc, #460]	; 40008450 <UVCAppThread_Entry+0xb90>
40008280:	eb002af1 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008284:	e59f1170 	ldr	r1, [pc, #368]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008288:	e3a00004 	mov	r0, #4
4000828c:	eb002aee 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008290:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008294:	eb0001a2 	bl	40008924 <_tx_thread_sleep>
40008298:	eafffff9 	b	40008284 <UVCAppThread_Entry+0x9c4>
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
            {
            	if(1&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "\r\n(1) fb %d pb %d pbc %d\r\n", fb, pb, pbc);
4000829c:	e1d4e2bc 	ldrh	lr, [r4, #44]	; 0x2c
400082a0:	e1d422b8 	ldrh	r2, [r4, #40]	; 0x28
400082a4:	e1d432ba 	ldrh	r3, [r4, #42]	; 0x2a
400082a8:	e59f11a4 	ldr	r1, [pc, #420]	; 40008454 <UVCAppThread_Entry+0xb94>
400082ac:	e2800004 	add	r0, r0, #4
400082b0:	e58de000 	str	lr, [sp]
400082b4:	eb002ae4 	bl	40012e4c <CyU3PDebugPrint>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
400082b8:	e1c452be 	strh	r5, [r4, #46]	; 0x2e
                consCount = 0;
400082bc:	e1c453b0 	strh	r5, [r4, #48]	; 0x30
                hitFV     = CyFalse;
400082c0:	e5845044 	str	r5, [r4, #68]	; 0x44
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
400082c4:	e5d81481 	ldrb	r1, [r8, #1153]	; 0x481
            	if(1&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "\r\n(1) fb %d pb %d pbc %d\r\n", fb, pb, pbc);
            		//prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
400082c8:	e1c452b8 	strh	r5, [r4, #40]	; 0x28
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
400082cc:	e2210001 	eor	r0, r1, #1
400082d0:	e5c80481 	strb	r0, [r8, #1153]	; 0x481
                if(stiflag){
400082d4:	e594209c 	ldr	r2, [r4, #156]	; 0x9c
                	glUVCHeader[1] |= (1<<5);    //set still image flag
400082d8:	e5d73481 	ldrb	r3, [r7, #1153]	; 0x481
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
400082dc:	e3520000 	cmp	r2, #0
                	glUVCHeader[1] |= (1<<5);    //set still image flag
400082e0:	13833020 	orrne	r3, r3, #32
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
400082e4:	020330df 	andeq	r3, r3, #223	; 0xdf
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
400082e8:	15c73481 	strbne	r3, [r7, #1153]	; 0x481
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
400082ec:	05c73481 	strbeq	r3, [r7, #1153]	; 0x481
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
                	stiflag = CyFalse;
400082f0:	1584509c 	strne	r5, [r4, #156]	; 0x9c
            		CyU3PDebugPrint (4, "\r\n(1) fb %d pb %d pbc %d\r\n", fb, pb, pbc);
            		//prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
400082f4:	e1c452ba 	strh	r5, [r4, #42]	; 0x2a
            	pbc=0;
400082f8:	e1c452bc 	strh	r5, [r4, #44]	; 0x2c
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400082fc:	e59f00ec 	ldr	r0, [pc, #236]	; 400083f0 <UVCAppThread_Entry+0xb30>
40008300:	eb003fd8 	bl	40018268 <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008304:	e2502000 	subs	r2, r0, #0
40008308:	1a00000c 	bne	40008340 <UVCAppThread_Entry+0xa80>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
4000830c:	e1a01002 	mov	r1, r2
40008310:	e59f00d8 	ldr	r0, [pc, #216]	; 400083f0 <UVCAppThread_Entry+0xb30>
40008314:	eb0040c0 	bl	4001861c <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008318:	e2502000 	subs	r2, r0, #0
4000831c:	1a000010 	bne	40008364 <UVCAppThread_Entry+0xaa4>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40008320:	e59f00c0 	ldr	r0, [pc, #192]	; 400083e8 <UVCAppThread_Entry+0xb28>
40008324:	e1a01002 	mov	r1, r2
40008328:	e3a0a002 	mov	sl, #2
4000832c:	e1a02000 	mov	r2, r0
40008330:	e1a03001 	mov	r3, r1
40008334:	e58da000 	str	sl, [sp]
40008338:	eb004cf2 	bl	4001b708 <CyU3PGpifSMSwitch>
4000833c:	eafffe9f 	b	40007dc0 <UVCAppThread_Entry+0x500>
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
40008340:	e3a00004 	mov	r0, #4
40008344:	e59f110c 	ldr	r1, [pc, #268]	; 40008458 <UVCAppThread_Entry+0xb98>
40008348:	eb002abf 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000834c:	e59f10a8 	ldr	r1, [pc, #168]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008350:	e3a00004 	mov	r0, #4
40008354:	eb002abc 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008358:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000835c:	eb000170 	bl	40008924 <_tx_thread_sleep>
40008360:	eafffff9 	b	4000834c <UVCAppThread_Entry+0xa8c>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
40008364:	e3a00004 	mov	r0, #4
40008368:	e59f10ec 	ldr	r1, [pc, #236]	; 4000845c <UVCAppThread_Entry+0xb9c>
4000836c:	eb002ab6 	bl	40012e4c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008370:	e59f1084 	ldr	r1, [pc, #132]	; 400083fc <UVCAppThread_Entry+0xb3c>
40008374:	e3a00004 	mov	r0, #4
40008378:	eb002ab3 	bl	40012e4c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000837c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008380:	eb000167 	bl	40008924 <_tx_thread_sleep>
40008384:	eafffff9 	b	40008370 <UVCAppThread_Entry+0xab0>
40008388:	40011670 	.word	0x40011670
4000838c:	0001c200 	.word	0x0001c200
40008390:	40011690 	.word	0x40011690
40008394:	000186a0 	.word	0x000186a0
40008398:	400116ac 	.word	0x400116ac
4000839c:	40030f90 	.word	0x40030f90
400083a0:	40004fb4 	.word	0x40004fb4
400083a4:	40004cc0 	.word	0x40004cc0
400083a8:	40004b50 	.word	0x40004b50
400083ac:	40010c14 	.word	0x40010c14
400083b0:	40010c28 	.word	0x40010c28
400083b4:	40010c3c 	.word	0x40010c3c
400083b8:	40010d34 	.word	0x40010d34
400083bc:	40010c54 	.word	0x40010c54
400083c0:	40010c48 	.word	0x40010c48
400083c4:	40010d4c 	.word	0x40010d4c
400083c8:	40010e38 	.word	0x40010e38
400083cc:	40010e3c 	.word	0x40010e3c
400083d0:	40010e74 	.word	0x40010e74
400083d4:	00003f01 	.word	0x00003f01
400083d8:	00000302 	.word	0x00000302
400083dc:	40033030 	.word	0x40033030
400083e0:	400330d0 	.word	0x400330d0
400083e4:	00000303 	.word	0x00000303
400083e8:	00000101 	.word	0x00000101
400083ec:	40004a14 	.word	0x40004a14
400083f0:	40032ee4 	.word	0x40032ee4
400083f4:	40030000 	.word	0x40030000
400083f8:	400116c8 	.word	0x400116c8
400083fc:	400111f4 	.word	0x400111f4
40008400:	40011718 	.word	0x40011718
40008404:	400116f4 	.word	0x400116f4
40008408:	40011740 	.word	0x40011740
4000840c:	40011898 	.word	0x40011898
40008410:	40011974 	.word	0x40011974
40008414:	40011944 	.word	0x40011944
40008418:	4001190c 	.word	0x4001190c
4000841c:	400118cc 	.word	0x400118cc
40008420:	40011a5c 	.word	0x40011a5c
40008424:	40011004 	.word	0x40011004
40008428:	40011aa4 	.word	0x40011aa4
4000842c:	40011a4c 	.word	0x40011a4c
40008430:	40010fe8 	.word	0x40010fe8
40008434:	40011a6c 	.word	0x40011a6c
40008438:	40011a18 	.word	0x40011a18
4000843c:	40011868 	.word	0x40011868
40008440:	40011838 	.word	0x40011838
40008444:	40011800 	.word	0x40011800
40008448:	40011798 	.word	0x40011798
4000844c:	4001176c 	.word	0x4001176c
40008450:	400117cc 	.word	0x400117cc
40008454:	4001199c 	.word	0x4001199c
40008458:	400119b8 	.word	0x400119b8
4000845c:	400119e4 	.word	0x400119e4

40008460 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008460:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008464:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008468:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
4000846c:	ebffec80 	bl	40003674 <CyU3PMemAlloc>
40008470:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008474:	e3a00a01 	mov	r0, #4096	; 0x1000
40008478:	ebffec7d 	bl	40003674 <CyU3PMemAlloc>
4000847c:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008480:	e3a00a01 	mov	r0, #4096	; 0x1000
40008484:	ebffec7a 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
40008488:	e35a0000 	cmp	sl, #0
4000848c:	135b0000 	cmpne	fp, #0
40008490:	13a09000 	movne	r9, #0
40008494:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008498:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
4000849c:	1a000000 	bne	400084a4 <CyFxApplicationDefine+0x44>
400084a0:	eafffffe 	b	400084a0 <CyFxApplicationDefine+0x40>
400084a4:	e3500000 	cmp	r0, #0
400084a8:	0afffffc 	beq	400084a0 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
400084ac:	e28d4028 	add	r4, sp, #40	; 0x28
400084b0:	e1a00004 	mov	r0, r4
400084b4:	e3a01040 	mov	r1, #64	; 0x40
400084b8:	e59f2118 	ldr	r2, [pc, #280]	; 400085d8 <CyFxApplicationDefine+0x178>
400084bc:	ebffebbf 	bl	400033c0 <cmdbufCreate>
400084c0:	e1a05004 	mov	r5, r4
400084c4:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
400084c8:	e59f710c 	ldr	r7, [pc, #268]	; 400085dc <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
400084cc:	e59f810c 	ldr	r8, [pc, #268]	; 400085e0 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
400084d0:	e1a0c007 	mov	ip, r7
400084d4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
400084d8:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400084dc:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
400084e0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
400084e4:	e59f20f8 	ldr	r2, [pc, #248]	; 400085e4 <CyFxApplicationDefine+0x184>
400084e8:	e1a00004 	mov	r0, r4
400084ec:	e3a01020 	mov	r1, #32
400084f0:	ebffebb2 	bl	400033c0 <cmdbufCreate>
400084f4:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
400084f8:	e1a0c008 	mov	ip, r8
400084fc:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008500:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008504:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008508:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
4000850c:	e1a00007 	mov	r0, r7
40008510:	ebffebc2 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
40008514:	e1a00008 	mov	r0, r8
40008518:	ebffebc0 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
4000851c:	e3a050a8 	mov	r5, #168	; 0xa8
40008520:	e3a0ca01 	mov	ip, #4096	; 0x1000
40008524:	e59f00bc 	ldr	r0, [pc, #188]	; 400085e8 <CyFxApplicationDefine+0x188>
40008528:	e59f10bc 	ldr	r1, [pc, #188]	; 400085ec <CyFxApplicationDefine+0x18c>
4000852c:	e59f20bc 	ldr	r2, [pc, #188]	; 400085f0 <CyFxApplicationDefine+0x190>
40008530:	e1a03009 	mov	r3, r9
40008534:	e88d1400 	stm	sp, {sl, ip}
40008538:	e58d6008 	str	r6, [sp, #8]
4000853c:	e58d600c 	str	r6, [sp, #12]
40008540:	e58d9010 	str	r9, [sp, #16]
40008544:	e58d4014 	str	r4, [sp, #20]
40008548:	e58d5018 	str	r5, [sp, #24]
4000854c:	eb0007c7 	bl	4000a470 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008550:	e250c000 	subs	ip, r0, #0
40008554:	1affffd1 	bne	400084a0 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
40008558:	e1a0300c 	mov	r3, ip
4000855c:	e3a07b02 	mov	r7, #2048	; 0x800
40008560:	e59f008c 	ldr	r0, [pc, #140]	; 400085f4 <CyFxApplicationDefine+0x194>
40008564:	e59f108c 	ldr	r1, [pc, #140]	; 400085f8 <CyFxApplicationDefine+0x198>
40008568:	e59f208c 	ldr	r2, [pc, #140]	; 400085fc <CyFxApplicationDefine+0x19c>
4000856c:	e58dc010 	str	ip, [sp, #16]
40008570:	e58db000 	str	fp, [sp]
40008574:	e58d7004 	str	r7, [sp, #4]
40008578:	e58d6008 	str	r6, [sp, #8]
4000857c:	e58d600c 	str	r6, [sp, #12]
40008580:	e58d4014 	str	r4, [sp, #20]
40008584:	e58d5018 	str	r5, [sp, #24]
40008588:	eb0007b8 	bl	4000a470 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
4000858c:	e250c000 	subs	ip, r0, #0
40008590:	1affffc2 	bne	400084a0 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
40008594:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40008598:	e59f0060 	ldr	r0, [pc, #96]	; 40008600 <CyFxApplicationDefine+0x1a0>
4000859c:	e59f1060 	ldr	r1, [pc, #96]	; 40008604 <CyFxApplicationDefine+0x1a4>
400085a0:	e59f2060 	ldr	r2, [pc, #96]	; 40008608 <CyFxApplicationDefine+0x1a8>
400085a4:	e1a0300c 	mov	r3, ip
400085a8:	e58de000 	str	lr, [sp]
400085ac:	e58d7004 	str	r7, [sp, #4]
400085b0:	e58d6008 	str	r6, [sp, #8]
400085b4:	e58d600c 	str	r6, [sp, #12]
400085b8:	e58dc010 	str	ip, [sp, #16]
400085bc:	e58d4014 	str	r4, [sp, #20]
400085c0:	e58d5018 	str	r5, [sp, #24]
400085c4:	eb0007a9 	bl	4000a470 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400085c8:	e3500000 	cmp	r0, #0
400085cc:	1affffb3 	bne	400084a0 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
400085d0:	e28dd04c 	add	sp, sp, #76	; 0x4c
400085d4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400085d8:	400330d4 	.word	0x400330d4
400085dc:	40032ec4 	.word	0x40032ec4
400085e0:	40033110 	.word	0x40033110
400085e4:	40032ff8 	.word	0x40032ff8
400085e8:	40031030 	.word	0x40031030
400085ec:	40011adc 	.word	0x40011adc
400085f0:	400078c0 	.word	0x400078c0
400085f4:	400310d8 	.word	0x400310d8
400085f8:	40011af0 	.word	0x40011af0
400085fc:	40006b50 	.word	0x40006b50
40008600:	40031180 	.word	0x40031180
40008604:	40011b08 	.word	0x40011b08
40008608:	400047c4 	.word	0x400047c4

4000860c <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
4000860c:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
40008610:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008614:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
40008618:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
4000861c:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008620:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008624:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008628:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
4000862c:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
40008630:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
40008634:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
40008638:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
4000863c:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008640:	eb002739 	bl	4001232c <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008644:	e2504000 	subs	r4, r0, #0
40008648:	0a000000 	beq	40008650 <main+0x44>
4000864c:	eafffffe 	b	4000864c <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
40008650:	e1a01004 	mov	r1, r4
40008654:	e1a02004 	mov	r2, r4
40008658:	e1a00005 	mov	r0, r5
4000865c:	eb00270c 	bl	40012294 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008660:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
40008664:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
40008668:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
4000866c:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
40008670:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
40008674:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
40008678:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
4000867c:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
40008680:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
40008684:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
40008688:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
4000868c:	eb0028d0 	bl	400129d4 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008690:	e2504000 	subs	r4, r0, #0
40008694:	1affffec 	bne	4000864c <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
40008698:	eb000002 	bl	400086a8 <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
4000869c:	e1a00004 	mov	r0, r4
400086a0:	e28dd03c 	add	sp, sp, #60	; 0x3c
400086a4:	e8bd8030 	pop	{r4, r5, pc}

400086a8 <_tx_initialize_kernel_enter>:
400086a8:	e92d4010 	push	{r4, lr}
400086ac:	e59f004c 	ldr	r0, [pc, #76]	; 40008700 <_tx_initialize_kernel_enter+0x58>
400086b0:	e5900000 	ldr	r0, [r0]
400086b4:	e59f1048 	ldr	r1, [pc, #72]	; 40008704 <_tx_initialize_kernel_enter+0x5c>
400086b8:	e1500001 	cmp	r0, r1
400086bc:	0a000004 	beq	400086d4 <_tx_initialize_kernel_enter+0x2c>
400086c0:	e1e00221 	mvn	r0, r1, lsr #4
400086c4:	e59f1034 	ldr	r1, [pc, #52]	; 40008700 <_tx_initialize_kernel_enter+0x58>
400086c8:	e5810000 	str	r0, [r1]
400086cc:	eb0009ee 	bl	4000ae8c <_tx_initialize_low_level>
400086d0:	eb00105f 	bl	4000c854 <_tx_initialize_high_level>
400086d4:	e59f002c 	ldr	r0, [pc, #44]	; 40008708 <_tx_initialize_kernel_enter+0x60>
400086d8:	e59f1020 	ldr	r1, [pc, #32]	; 40008700 <_tx_initialize_kernel_enter+0x58>
400086dc:	e5810000 	str	r0, [r1]
400086e0:	e59f0024 	ldr	r0, [pc, #36]	; 4000870c <_tx_initialize_kernel_enter+0x64>
400086e4:	e5900000 	ldr	r0, [r0]
400086e8:	ebffebcd 	bl	40003624 <tx_application_define>
400086ec:	e3a00000 	mov	r0, #0
400086f0:	e59f1008 	ldr	r1, [pc, #8]	; 40008700 <_tx_initialize_kernel_enter+0x58>
400086f4:	e5810000 	str	r0, [r1]
400086f8:	eb00091f 	bl	4000ab7c <_tx_thread_schedule>
400086fc:	e8bd8010 	pop	{r4, pc}
40008700:	40030e2c 	.word	0x40030e2c
40008704:	f0f0f0f1 	.word	0xf0f0f0f1
40008708:	f0f0f0f0 	.word	0xf0f0f0f0
4000870c:	40030dc4 	.word	0x40030dc4

40008710 <_tx_thread_identify>:
40008710:	e10f1000 	mrs	r1, CPSR
40008714:	e3812080 	orr	r2, r1, #128	; 0x80
40008718:	e121f002 	msr	CPSR_c, r2
4000871c:	e59f30e0 	ldr	r3, [pc, #224]	; 40008804 <_tx_thread_identify+0xf4>
40008720:	e5930000 	ldr	r0, [r3]
40008724:	e3500000 	cmp	r0, #0
40008728:	0a000031 	beq	400087f4 <_tx_thread_identify+0xe4>
4000872c:	e59f30d4 	ldr	r3, [pc, #212]	; 40008808 <_tx_thread_identify+0xf8>
40008730:	e5933000 	ldr	r3, [r3]
40008734:	e2833001 	add	r3, r3, #1
40008738:	e59fc0c8 	ldr	ip, [pc, #200]	; 40008808 <_tx_thread_identify+0xf8>
4000873c:	e58c3000 	str	r3, [ip]
40008740:	e580300c 	str	r3, [r0, #12]
40008744:	e59f30c0 	ldr	r3, [pc, #192]	; 4000880c <_tx_thread_identify+0xfc>
40008748:	e5933000 	ldr	r3, [r3]
4000874c:	e3530000 	cmp	r3, #0
40008750:	1a000006 	bne	40008770 <_tx_thread_identify+0x60>
40008754:	e59f30b4 	ldr	r3, [pc, #180]	; 40008810 <_tx_thread_identify+0x100>
40008758:	e5933000 	ldr	r3, [r3]
4000875c:	e5803000 	str	r3, [r0]
40008760:	e5903000 	ldr	r3, [r0]
40008764:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40008768:	e5803004 	str	r3, [r0, #4]
4000876c:	ea00000d 	b	400087a8 <_tx_thread_identify+0x98>
40008770:	e59f3094 	ldr	r3, [pc, #148]	; 4000880c <_tx_thread_identify+0xfc>
40008774:	e5933000 	ldr	r3, [r3]
40008778:	e59fc094 	ldr	ip, [pc, #148]	; 40008814 <_tx_thread_identify+0x104>
4000877c:	e153000c 	cmp	r3, ip
40008780:	2a000004 	bcs	40008798 <_tx_thread_identify+0x88>
40008784:	e3e03000 	mvn	r3, #0
40008788:	e5803000 	str	r3, [r0]
4000878c:	e3a03000 	mov	r3, #0
40008790:	e5803004 	str	r3, [r0, #4]
40008794:	ea000003 	b	400087a8 <_tx_thread_identify+0x98>
40008798:	e59f3074 	ldr	r3, [pc, #116]	; 40008814 <_tx_thread_identify+0x104>
4000879c:	e5803000 	str	r3, [r0]
400087a0:	e3a03000 	mov	r3, #0
400087a4:	e5803004 	str	r3, [r0, #4]
400087a8:	e3a03067 	mov	r3, #103	; 0x67
400087ac:	e5803008 	str	r3, [r0, #8]
400087b0:	e3a03000 	mov	r3, #0
400087b4:	e5803010 	str	r3, [r0, #16]
400087b8:	e5803014 	str	r3, [r0, #20]
400087bc:	e5803018 	str	r3, [r0, #24]
400087c0:	e580301c 	str	r3, [r0, #28]
400087c4:	e2800020 	add	r0, r0, #32
400087c8:	e59f3048 	ldr	r3, [pc, #72]	; 40008818 <_tx_thread_identify+0x108>
400087cc:	e5933000 	ldr	r3, [r3]
400087d0:	e1500003 	cmp	r0, r3
400087d4:	3a000001 	bcc	400087e0 <_tx_thread_identify+0xd0>
400087d8:	e59f303c 	ldr	r3, [pc, #60]	; 4000881c <_tx_thread_identify+0x10c>
400087dc:	e5930000 	ldr	r0, [r3]
400087e0:	e59f301c 	ldr	r3, [pc, #28]	; 40008804 <_tx_thread_identify+0xf4>
400087e4:	e5830000 	str	r0, [r3]
400087e8:	e59f3030 	ldr	r3, [pc, #48]	; 40008820 <_tx_thread_identify+0x110>
400087ec:	e5933000 	ldr	r3, [r3]
400087f0:	e5830020 	str	r0, [r3, #32]
400087f4:	e121f001 	msr	CPSR_c, r1
400087f8:	e59f0010 	ldr	r0, [pc, #16]	; 40008810 <_tx_thread_identify+0x100>
400087fc:	e5900000 	ldr	r0, [r0]
40008800:	e12fff1e 	bx	lr
40008804:	40030ea0 	.word	0x40030ea0
40008808:	40030ea4 	.word	0x40030ea4
4000880c:	40030e2c 	.word	0x40030e2c
40008810:	40030e34 	.word	0x40030e34
40008814:	f0f0f0f0 	.word	0xf0f0f0f0
40008818:	40030e9c 	.word	0x40030e9c
4000881c:	40030e98 	.word	0x40030e98
40008820:	40030e8c 	.word	0x40030e8c

40008824 <_tx_thread_initialize>:
40008824:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40008828:	e3a00000 	mov	r0, #0
4000882c:	e59f10c0 	ldr	r1, [pc, #192]	; 400088f4 <_tx_thread_initialize+0xd0>
40008830:	e5810000 	str	r0, [r1]
40008834:	e59f10bc 	ldr	r1, [pc, #188]	; 400088f8 <_tx_thread_initialize+0xd4>
40008838:	e5810000 	str	r0, [r1]
4000883c:	e59f00b8 	ldr	r0, [pc, #184]	; 400088fc <_tx_thread_initialize+0xd8>
40008840:	e3a01000 	mov	r1, #0
40008844:	e5801000 	str	r1, [r0]
40008848:	e59f00b0 	ldr	r0, [pc, #176]	; 40008900 <_tx_thread_initialize+0xdc>
4000884c:	e5801000 	str	r1, [r0]
40008850:	e3a00020 	mov	r0, #32
40008854:	e59f10a8 	ldr	r1, [pc, #168]	; 40008904 <_tx_thread_initialize+0xe0>
40008858:	e5810000 	str	r0, [r1]
4000885c:	e3a00000 	mov	r0, #0
40008860:	e59f10a0 	ldr	r1, [pc, #160]	; 40008908 <_tx_thread_initialize+0xe4>
40008864:	e5c10000 	strb	r0, [r1]
40008868:	e2816001 	add	r6, r1, #1
4000886c:	e3a04001 	mov	r4, #1
40008870:	ea000009 	b	4000889c <_tx_thread_initialize+0x78>
40008874:	e1a07004 	mov	r7, r4
40008878:	e3a05000 	mov	r5, #0
4000887c:	ea000002 	b	4000888c <_tx_thread_initialize+0x68>
40008880:	e1a070a7 	lsr	r7, r7, #1
40008884:	e2850001 	add	r0, r5, #1
40008888:	e20050ff 	and	r5, r0, #255	; 0xff
4000888c:	e3170001 	tst	r7, #1
40008890:	0afffffa 	beq	40008880 <_tx_thread_initialize+0x5c>
40008894:	e4c65001 	strb	r5, [r6], #1
40008898:	e2844001 	add	r4, r4, #1
4000889c:	e3540c01 	cmp	r4, #256	; 0x100
400088a0:	3afffff3 	bcc	40008874 <_tx_thread_initialize+0x50>
400088a4:	e3a01080 	mov	r1, #128	; 0x80
400088a8:	e59f005c 	ldr	r0, [pc, #92]	; 4000890c <_tx_thread_initialize+0xe8>
400088ac:	eb002afc 	bl	400134a4 <__aeabi_memclr4>
400088b0:	e3a00000 	mov	r0, #0
400088b4:	e59f1054 	ldr	r1, [pc, #84]	; 40008910 <_tx_thread_initialize+0xec>
400088b8:	e5810000 	str	r0, [r1]
400088bc:	e59f1050 	ldr	r1, [pc, #80]	; 40008914 <_tx_thread_initialize+0xf0>
400088c0:	e5810000 	str	r0, [r1]
400088c4:	e59f104c 	ldr	r1, [pc, #76]	; 40008918 <_tx_thread_initialize+0xf4>
400088c8:	e5810000 	str	r0, [r1]
400088cc:	e59f1048 	ldr	r1, [pc, #72]	; 4000891c <_tx_thread_initialize+0xf8>
400088d0:	e5810000 	str	r0, [r1]
400088d4:	e59f0044 	ldr	r0, [pc, #68]	; 40008920 <_tx_thread_initialize+0xfc>
400088d8:	e5900000 	ldr	r0, [r0]
400088dc:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
400088e0:	e3800c01 	orr	r0, r0, #256	; 0x100
400088e4:	e3800002 	orr	r0, r0, #2
400088e8:	e59f1030 	ldr	r1, [pc, #48]	; 40008920 <_tx_thread_initialize+0xfc>
400088ec:	e5810000 	str	r0, [r1]
400088f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400088f4:	40030e34 	.word	0x40030e34
400088f8:	40030e38 	.word	0x40030e38
400088fc:	40030e44 	.word	0x40030e44
40008900:	40030e48 	.word	0x40030e48
40008904:	40030e4c 	.word	0x40030e4c
40008908:	40032774 	.word	0x40032774
4000890c:	40032874 	.word	0x40032874
40008910:	40030e3c 	.word	0x40030e3c
40008914:	40030e40 	.word	0x40030e40
40008918:	40030e50 	.word	0x40030e50
4000891c:	40030e58 	.word	0x40030e58
40008920:	40030e54 	.word	0x40030e54

40008924 <_tx_thread_sleep>:
40008924:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008928:	e1a04000 	mov	r4, r0
4000892c:	e59f018c 	ldr	r0, [pc, #396]	; 40008ac0 <_tx_thread_sleep+0x19c>
40008930:	e5900000 	ldr	r0, [r0]
40008934:	e58d0000 	str	r0, [sp]
40008938:	e59d0000 	ldr	r0, [sp]
4000893c:	e3500000 	cmp	r0, #0
40008940:	0a000007 	beq	40008964 <_tx_thread_sleep+0x40>
40008944:	e59f1178 	ldr	r1, [pc, #376]	; 40008ac4 <_tx_thread_sleep+0x1a0>
40008948:	e59d0000 	ldr	r0, [sp]
4000894c:	e1500001 	cmp	r0, r1
40008950:	0a000003 	beq	40008964 <_tx_thread_sleep+0x40>
40008954:	e59f016c 	ldr	r0, [pc, #364]	; 40008ac8 <_tx_thread_sleep+0x1a4>
40008958:	e5900000 	ldr	r0, [r0]
4000895c:	e3500000 	cmp	r0, #0
40008960:	0a000001 	beq	4000896c <_tx_thread_sleep+0x48>
40008964:	e3a00013 	mov	r0, #19
40008968:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000896c:	e3540000 	cmp	r4, #0
40008970:	1a000001 	bne	4000897c <_tx_thread_sleep+0x58>
40008974:	e3a00000 	mov	r0, #0
40008978:	eafffffa 	b	40008968 <_tx_thread_sleep+0x44>
4000897c:	e10f5000 	mrs	r5, CPSR
40008980:	e3856080 	orr	r6, r5, #128	; 0x80
40008984:	e121f006 	msr	CPSR_c, r6
40008988:	e59f113c 	ldr	r1, [pc, #316]	; 40008acc <_tx_thread_sleep+0x1a8>
4000898c:	e5910000 	ldr	r0, [r1]
40008990:	e3500000 	cmp	r0, #0
40008994:	0a000033 	beq	40008a68 <_tx_thread_sleep+0x144>
40008998:	e59f1130 	ldr	r1, [pc, #304]	; 40008ad0 <_tx_thread_sleep+0x1ac>
4000899c:	e5911000 	ldr	r1, [r1]
400089a0:	e2811001 	add	r1, r1, #1
400089a4:	e59f2124 	ldr	r2, [pc, #292]	; 40008ad0 <_tx_thread_sleep+0x1ac>
400089a8:	e5821000 	str	r1, [r2]
400089ac:	e580100c 	str	r1, [r0, #12]
400089b0:	e59f1110 	ldr	r1, [pc, #272]	; 40008ac8 <_tx_thread_sleep+0x1a4>
400089b4:	e5911000 	ldr	r1, [r1]
400089b8:	e3510000 	cmp	r1, #0
400089bc:	1a000006 	bne	400089dc <_tx_thread_sleep+0xb8>
400089c0:	e59f10f8 	ldr	r1, [pc, #248]	; 40008ac0 <_tx_thread_sleep+0x19c>
400089c4:	e5911000 	ldr	r1, [r1]
400089c8:	e5801000 	str	r1, [r0]
400089cc:	e5901000 	ldr	r1, [r0]
400089d0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400089d4:	e5801004 	str	r1, [r0, #4]
400089d8:	ea00000d 	b	40008a14 <_tx_thread_sleep+0xf0>
400089dc:	e59f10e4 	ldr	r1, [pc, #228]	; 40008ac8 <_tx_thread_sleep+0x1a4>
400089e0:	e5911000 	ldr	r1, [r1]
400089e4:	e59f20e8 	ldr	r2, [pc, #232]	; 40008ad4 <_tx_thread_sleep+0x1b0>
400089e8:	e1510002 	cmp	r1, r2
400089ec:	2a000004 	bcs	40008a04 <_tx_thread_sleep+0xe0>
400089f0:	e3e01000 	mvn	r1, #0
400089f4:	e5801000 	str	r1, [r0]
400089f8:	e3a01000 	mov	r1, #0
400089fc:	e5801004 	str	r1, [r0, #4]
40008a00:	ea000003 	b	40008a14 <_tx_thread_sleep+0xf0>
40008a04:	e59f10c8 	ldr	r1, [pc, #200]	; 40008ad4 <_tx_thread_sleep+0x1b0>
40008a08:	e5801000 	str	r1, [r0]
40008a0c:	e3a01000 	mov	r1, #0
40008a10:	e5801004 	str	r1, [r0, #4]
40008a14:	e3a01070 	mov	r1, #112	; 0x70
40008a18:	e5801008 	str	r1, [r0, #8]
40008a1c:	e5804010 	str	r4, [r0, #16]
40008a20:	e59d1000 	ldr	r1, [sp]
40008a24:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008a28:	e5801014 	str	r1, [r0, #20]
40008a2c:	e580d018 	str	sp, [r0, #24]
40008a30:	e3a01000 	mov	r1, #0
40008a34:	e580101c 	str	r1, [r0, #28]
40008a38:	e2800020 	add	r0, r0, #32
40008a3c:	e59f1094 	ldr	r1, [pc, #148]	; 40008ad8 <_tx_thread_sleep+0x1b4>
40008a40:	e5911000 	ldr	r1, [r1]
40008a44:	e1500001 	cmp	r0, r1
40008a48:	3a000001 	bcc	40008a54 <_tx_thread_sleep+0x130>
40008a4c:	e59f1088 	ldr	r1, [pc, #136]	; 40008adc <_tx_thread_sleep+0x1b8>
40008a50:	e5910000 	ldr	r0, [r1]
40008a54:	e59f1070 	ldr	r1, [pc, #112]	; 40008acc <_tx_thread_sleep+0x1a8>
40008a58:	e5810000 	str	r0, [r1]
40008a5c:	e59f107c 	ldr	r1, [pc, #124]	; 40008ae0 <_tx_thread_sleep+0x1bc>
40008a60:	e5911000 	ldr	r1, [r1]
40008a64:	e5810020 	str	r0, [r1, #32]
40008a68:	e3a00004 	mov	r0, #4
40008a6c:	e59d1000 	ldr	r1, [sp]
40008a70:	e5810030 	str	r0, [r1, #48]	; 0x30
40008a74:	e3a00001 	mov	r0, #1
40008a78:	e59d1000 	ldr	r1, [sp]
40008a7c:	e5810038 	str	r0, [r1, #56]	; 0x38
40008a80:	e3a00000 	mov	r0, #0
40008a84:	e59d1000 	ldr	r1, [sp]
40008a88:	e5810084 	str	r0, [r1, #132]	; 0x84
40008a8c:	e59d0000 	ldr	r0, [sp]
40008a90:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008a94:	e59f0048 	ldr	r0, [pc, #72]	; 40008ae4 <_tx_thread_sleep+0x1c0>
40008a98:	e5900000 	ldr	r0, [r0]
40008a9c:	e2800001 	add	r0, r0, #1
40008aa0:	e59f103c 	ldr	r1, [pc, #60]	; 40008ae4 <_tx_thread_sleep+0x1c0>
40008aa4:	e5810000 	str	r0, [r1]
40008aa8:	e121f005 	msr	CPSR_c, r5
40008aac:	e59d0000 	ldr	r0, [sp]
40008ab0:	eb00000c 	bl	40008ae8 <_tx_thread_system_suspend>
40008ab4:	e59d0000 	ldr	r0, [sp]
40008ab8:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008abc:	eaffffa9 	b	40008968 <_tx_thread_sleep+0x44>
40008ac0:	40030e34 	.word	0x40030e34
40008ac4:	40032974 	.word	0x40032974
40008ac8:	40030e2c 	.word	0x40030e2c
40008acc:	40030ea0 	.word	0x40030ea0
40008ad0:	40030ea4 	.word	0x40030ea4
40008ad4:	f0f0f0f0 	.word	0xf0f0f0f0
40008ad8:	40030e9c 	.word	0x40030e9c
40008adc:	40030e98 	.word	0x40030e98
40008ae0:	40030e8c 	.word	0x40030e8c
40008ae4:	40030e50 	.word	0x40030e50

40008ae8 <_tx_thread_system_suspend>:
40008ae8:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008aec:	e1a04000 	mov	r4, r0
40008af0:	e3a0b000 	mov	fp, #0
40008af4:	e59f05b0 	ldr	r0, [pc, #1456]	; 400090ac <_tx_thread_system_suspend+0x5c4>
40008af8:	e5900000 	ldr	r0, [r0]
40008afc:	e1540000 	cmp	r4, r0
40008b00:	1a000009 	bne	40008b2c <_tx_thread_system_suspend+0x44>
40008b04:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008b08:	e58d0000 	str	r0, [sp]
40008b0c:	e59d0000 	ldr	r0, [sp]
40008b10:	e3500000 	cmp	r0, #0
40008b14:	0a000004 	beq	40008b2c <_tx_thread_system_suspend+0x44>
40008b18:	e59d0000 	ldr	r0, [sp]
40008b1c:	e3700001 	cmn	r0, #1
40008b20:	0a000001 	beq	40008b2c <_tx_thread_system_suspend+0x44>
40008b24:	e284004c 	add	r0, r4, #76	; 0x4c
40008b28:	eb00020a 	bl	40009358 <_tx_timer_system_activate>
40008b2c:	e5940008 	ldr	r0, [r4, #8]
40008b30:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008b34:	e1500001 	cmp	r0, r1
40008b38:	2a000001 	bcs	40008b44 <_tx_thread_system_suspend+0x5c>
40008b3c:	e5940008 	ldr	r0, [r4, #8]
40008b40:	e5840040 	str	r0, [r4, #64]	; 0x40
40008b44:	e594000c 	ldr	r0, [r4, #12]
40008b48:	e5900000 	ldr	r0, [r0]
40008b4c:	e59f155c 	ldr	r1, [pc, #1372]	; 400090b0 <_tx_thread_system_suspend+0x5c8>
40008b50:	e1500001 	cmp	r0, r1
40008b54:	1a000007 	bne	40008b78 <_tx_thread_system_suspend+0x90>
40008b58:	e5940010 	ldr	r0, [r4, #16]
40008b5c:	e5900001 	ldr	r0, [r0, #1]
40008b60:	e1500001 	cmp	r0, r1
40008b64:	1a000003 	bne	40008b78 <_tx_thread_system_suspend+0x90>
40008b68:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008b6c:	e594100c 	ldr	r1, [r4, #12]
40008b70:	e1500001 	cmp	r0, r1
40008b74:	2a000001 	bcs	40008b80 <_tx_thread_system_suspend+0x98>
40008b78:	e1a00004 	mov	r0, r4
40008b7c:	eb001941 	bl	4000f088 <_tx_thread_stack_error_handler>
40008b80:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008b84:	e5100004 	ldr	r0, [r0, #-4]
40008b88:	e59f1520 	ldr	r1, [pc, #1312]	; 400090b0 <_tx_thread_system_suspend+0x5c8>
40008b8c:	e1500001 	cmp	r0, r1
40008b90:	0a000001 	beq	40008b9c <_tx_thread_system_suspend+0xb4>
40008b94:	e1a00004 	mov	r0, r4
40008b98:	eb001905 	bl	4000efb4 <_tx_thread_stack_analyze>
40008b9c:	e10f5000 	mrs	r5, CPSR
40008ba0:	e3856080 	orr	r6, r5, #128	; 0x80
40008ba4:	e121f006 	msr	CPSR_c, r6
40008ba8:	e59f0504 	ldr	r0, [pc, #1284]	; 400090b4 <_tx_thread_system_suspend+0x5cc>
40008bac:	e5900000 	ldr	r0, [r0]
40008bb0:	e2400001 	sub	r0, r0, #1
40008bb4:	e59f14f8 	ldr	r1, [pc, #1272]	; 400090b4 <_tx_thread_system_suspend+0x5cc>
40008bb8:	e5810000 	str	r0, [r1]
40008bbc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008bc0:	e3500000 	cmp	r0, #0
40008bc4:	0a000112 	beq	40009014 <_tx_thread_system_suspend+0x52c>
40008bc8:	e59f04e8 	ldr	r0, [pc, #1256]	; 400090b8 <_tx_thread_system_suspend+0x5d0>
40008bcc:	e590a000 	ldr	sl, [r0]
40008bd0:	e2801000 	add	r1, r0, #0
40008bd4:	e5910000 	ldr	r0, [r1]
40008bd8:	e3500000 	cmp	r0, #0
40008bdc:	0a000034 	beq	40008cb4 <_tx_thread_system_suspend+0x1cc>
40008be0:	e59f14d4 	ldr	r1, [pc, #1236]	; 400090bc <_tx_thread_system_suspend+0x5d4>
40008be4:	e5911000 	ldr	r1, [r1]
40008be8:	e2811001 	add	r1, r1, #1
40008bec:	e59f24c8 	ldr	r2, [pc, #1224]	; 400090bc <_tx_thread_system_suspend+0x5d4>
40008bf0:	e5821000 	str	r1, [r2]
40008bf4:	e580100c 	str	r1, [r0, #12]
40008bf8:	e59f14c0 	ldr	r1, [pc, #1216]	; 400090c0 <_tx_thread_system_suspend+0x5d8>
40008bfc:	e5911000 	ldr	r1, [r1]
40008c00:	e3510000 	cmp	r1, #0
40008c04:	1a000006 	bne	40008c24 <_tx_thread_system_suspend+0x13c>
40008c08:	e59f149c 	ldr	r1, [pc, #1180]	; 400090ac <_tx_thread_system_suspend+0x5c4>
40008c0c:	e5911000 	ldr	r1, [r1]
40008c10:	e5801000 	str	r1, [r0]
40008c14:	e5901000 	ldr	r1, [r0]
40008c18:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008c1c:	e5801004 	str	r1, [r0, #4]
40008c20:	ea00000d 	b	40008c5c <_tx_thread_system_suspend+0x174>
40008c24:	e59f1494 	ldr	r1, [pc, #1172]	; 400090c0 <_tx_thread_system_suspend+0x5d8>
40008c28:	e5911000 	ldr	r1, [r1]
40008c2c:	e59f2490 	ldr	r2, [pc, #1168]	; 400090c4 <_tx_thread_system_suspend+0x5dc>
40008c30:	e1510002 	cmp	r1, r2
40008c34:	2a000004 	bcs	40008c4c <_tx_thread_system_suspend+0x164>
40008c38:	e3e01000 	mvn	r1, #0
40008c3c:	e5801000 	str	r1, [r0]
40008c40:	e3a01000 	mov	r1, #0
40008c44:	e5801004 	str	r1, [r0, #4]
40008c48:	ea000003 	b	40008c5c <_tx_thread_system_suspend+0x174>
40008c4c:	e59f1470 	ldr	r1, [pc, #1136]	; 400090c4 <_tx_thread_system_suspend+0x5dc>
40008c50:	e5801000 	str	r1, [r0]
40008c54:	e3a01000 	mov	r1, #0
40008c58:	e5801004 	str	r1, [r0, #4]
40008c5c:	e3a01002 	mov	r1, #2
40008c60:	e5801008 	str	r1, [r0, #8]
40008c64:	e5804010 	str	r4, [r0, #16]
40008c68:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008c6c:	e5801014 	str	r1, [r0, #20]
40008c70:	e28d1004 	add	r1, sp, #4
40008c74:	e5801018 	str	r1, [r0, #24]
40008c78:	e59f1448 	ldr	r1, [pc, #1096]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40008c7c:	e5911000 	ldr	r1, [r1]
40008c80:	e580101c 	str	r1, [r0, #28]
40008c84:	e2800020 	add	r0, r0, #32
40008c88:	e59f143c 	ldr	r1, [pc, #1084]	; 400090cc <_tx_thread_system_suspend+0x5e4>
40008c8c:	e5911000 	ldr	r1, [r1]
40008c90:	e1500001 	cmp	r0, r1
40008c94:	3a000001 	bcc	40008ca0 <_tx_thread_system_suspend+0x1b8>
40008c98:	e59f1430 	ldr	r1, [pc, #1072]	; 400090d0 <_tx_thread_system_suspend+0x5e8>
40008c9c:	e5910000 	ldr	r0, [r1]
40008ca0:	e59f1410 	ldr	r1, [pc, #1040]	; 400090b8 <_tx_thread_system_suspend+0x5d0>
40008ca4:	e5810000 	str	r0, [r1]
40008ca8:	e59f1424 	ldr	r1, [pc, #1060]	; 400090d4 <_tx_thread_system_suspend+0x5ec>
40008cac:	e5911000 	ldr	r1, [r1]
40008cb0:	e5810020 	str	r0, [r1, #32]
40008cb4:	e35a0000 	cmp	sl, #0
40008cb8:	0a000000 	beq	40008cc0 <_tx_thread_system_suspend+0x1d8>
40008cbc:	e59ab00c 	ldr	fp, [sl, #12]
40008cc0:	e3a00000 	mov	r0, #0
40008cc4:	e5840038 	str	r0, [r4, #56]	; 0x38
40008cc8:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40008ccc:	e5940020 	ldr	r0, [r4, #32]
40008cd0:	e1500004 	cmp	r0, r4
40008cd4:	0a000029 	beq	40008d80 <_tx_thread_system_suspend+0x298>
40008cd8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40008cdc:	e5941020 	ldr	r1, [r4, #32]
40008ce0:	e5810024 	str	r0, [r1, #36]	; 0x24
40008ce4:	e5940020 	ldr	r0, [r4, #32]
40008ce8:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40008cec:	e5810020 	str	r0, [r1, #32]
40008cf0:	e59f03e0 	ldr	r0, [pc, #992]	; 400090d8 <_tx_thread_system_suspend+0x5f0>
40008cf4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008cf8:	e1500004 	cmp	r0, r4
40008cfc:	1a0000c4 	bne	40009014 <_tx_thread_system_suspend+0x52c>
40008d00:	e59f13d0 	ldr	r1, [pc, #976]	; 400090d8 <_tx_thread_system_suspend+0x5f0>
40008d04:	e5940020 	ldr	r0, [r4, #32]
40008d08:	e7810107 	str	r0, [r1, r7, lsl #2]
40008d0c:	e59f03c8 	ldr	r0, [pc, #968]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40008d10:	e5900000 	ldr	r0, [r0]
40008d14:	e3500000 	cmp	r0, #0
40008d18:	0a000005 	beq	40008d34 <_tx_thread_system_suspend+0x24c>
40008d1c:	e59f03b8 	ldr	r0, [pc, #952]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40008d20:	e5900000 	ldr	r0, [r0]
40008d24:	e3a01001 	mov	r1, #1
40008d28:	e1c00711 	bic	r0, r0, r1, lsl r7
40008d2c:	e59f13a8 	ldr	r1, [pc, #936]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40008d30:	e5810000 	str	r0, [r1]
40008d34:	e59f038c 	ldr	r0, [pc, #908]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40008d38:	e5900000 	ldr	r0, [r0]
40008d3c:	e1540000 	cmp	r4, r0
40008d40:	1a0000b3 	bne	40009014 <_tx_thread_system_suspend+0x52c>
40008d44:	e59f038c 	ldr	r0, [pc, #908]	; 400090d8 <_tx_thread_system_suspend+0x5f0>
40008d48:	e59f1390 	ldr	r1, [pc, #912]	; 400090e0 <_tx_thread_system_suspend+0x5f8>
40008d4c:	e5911000 	ldr	r1, [r1]
40008d50:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008d54:	e59f136c 	ldr	r1, [pc, #876]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40008d58:	e5810000 	str	r0, [r1]
40008d5c:	e35a0000 	cmp	sl, #0
40008d60:	0a0000ab 	beq	40009014 <_tx_thread_system_suspend+0x52c>
40008d64:	e59a000c 	ldr	r0, [sl, #12]
40008d68:	e150000b 	cmp	r0, fp
40008d6c:	1a0000a8 	bne	40009014 <_tx_thread_system_suspend+0x52c>
40008d70:	e2810000 	add	r0, r1, #0
40008d74:	e5900000 	ldr	r0, [r0]
40008d78:	e58a001c 	str	r0, [sl, #28]
40008d7c:	ea0000a4 	b	40009014 <_tx_thread_system_suspend+0x52c>
40008d80:	e3a00000 	mov	r0, #0
40008d84:	e59f134c 	ldr	r1, [pc, #844]	; 400090d8 <_tx_thread_system_suspend+0x5f0>
40008d88:	e7810107 	str	r0, [r1, r7, lsl #2]
40008d8c:	e59f0350 	ldr	r0, [pc, #848]	; 400090e4 <_tx_thread_system_suspend+0x5fc>
40008d90:	e5900000 	ldr	r0, [r0]
40008d94:	e3a01001 	mov	r1, #1
40008d98:	e1c00711 	bic	r0, r0, r1, lsl r7
40008d9c:	e59f1340 	ldr	r1, [pc, #832]	; 400090e4 <_tx_thread_system_suspend+0x5fc>
40008da0:	e5810000 	str	r0, [r1]
40008da4:	e59f0330 	ldr	r0, [pc, #816]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40008da8:	e5900000 	ldr	r0, [r0]
40008dac:	e3500000 	cmp	r0, #0
40008db0:	0a000005 	beq	40008dcc <_tx_thread_system_suspend+0x2e4>
40008db4:	e59f0320 	ldr	r0, [pc, #800]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40008db8:	e5900000 	ldr	r0, [r0]
40008dbc:	e3a01001 	mov	r1, #1
40008dc0:	e1c00711 	bic	r0, r0, r1, lsl r7
40008dc4:	e59f1310 	ldr	r1, [pc, #784]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40008dc8:	e5810000 	str	r0, [r1]
40008dcc:	e3a08000 	mov	r8, #0
40008dd0:	e59f030c 	ldr	r0, [pc, #780]	; 400090e4 <_tx_thread_system_suspend+0x5fc>
40008dd4:	e5909000 	ldr	r9, [r0]
40008dd8:	e20900ff 	and	r0, r9, #255	; 0xff
40008ddc:	e58d0004 	str	r0, [sp, #4]
40008de0:	e59d0004 	ldr	r0, [sp, #4]
40008de4:	e3500000 	cmp	r0, #0
40008de8:	1a00002a 	bne	40008e98 <_tx_thread_system_suspend+0x3b0>
40008dec:	e1a09429 	lsr	r9, r9, #8
40008df0:	e20900ff 	and	r0, r9, #255	; 0xff
40008df4:	e58d0004 	str	r0, [sp, #4]
40008df8:	e2888008 	add	r8, r8, #8
40008dfc:	e59d0004 	ldr	r0, [sp, #4]
40008e00:	e3500000 	cmp	r0, #0
40008e04:	1a000023 	bne	40008e98 <_tx_thread_system_suspend+0x3b0>
40008e08:	e1a09429 	lsr	r9, r9, #8
40008e0c:	e20900ff 	and	r0, r9, #255	; 0xff
40008e10:	e58d0004 	str	r0, [sp, #4]
40008e14:	e2888008 	add	r8, r8, #8
40008e18:	e59d0004 	ldr	r0, [sp, #4]
40008e1c:	e3500000 	cmp	r0, #0
40008e20:	1a00001c 	bne	40008e98 <_tx_thread_system_suspend+0x3b0>
40008e24:	e1a09429 	lsr	r9, r9, #8
40008e28:	e20900ff 	and	r0, r9, #255	; 0xff
40008e2c:	e58d0004 	str	r0, [sp, #4]
40008e30:	e2888008 	add	r8, r8, #8
40008e34:	e59d0004 	ldr	r0, [sp, #4]
40008e38:	e3500000 	cmp	r0, #0
40008e3c:	1a000015 	bne	40008e98 <_tx_thread_system_suspend+0x3b0>
40008e40:	e3a00020 	mov	r0, #32
40008e44:	e59f1294 	ldr	r1, [pc, #660]	; 400090e0 <_tx_thread_system_suspend+0x5f8>
40008e48:	e5810000 	str	r0, [r1]
40008e4c:	e3a00000 	mov	r0, #0
40008e50:	e59f1270 	ldr	r1, [pc, #624]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40008e54:	e5810000 	str	r0, [r1]
40008e58:	e35a0000 	cmp	sl, #0
40008e5c:	0a000004 	beq	40008e74 <_tx_thread_system_suspend+0x38c>
40008e60:	e59a000c 	ldr	r0, [sl, #12]
40008e64:	e150000b 	cmp	r0, fp
40008e68:	1a000001 	bne	40008e74 <_tx_thread_system_suspend+0x38c>
40008e6c:	e3a00000 	mov	r0, #0
40008e70:	e58a001c 	str	r0, [sl, #28]
40008e74:	e121f005 	msr	CPSR_c, r5
40008e78:	e59f0240 	ldr	r0, [pc, #576]	; 400090c0 <_tx_thread_system_suspend+0x5d8>
40008e7c:	e5900000 	ldr	r0, [r0]
40008e80:	e59f122c 	ldr	r1, [pc, #556]	; 400090b4 <_tx_thread_system_suspend+0x5cc>
40008e84:	e5911000 	ldr	r1, [r1]
40008e88:	e1900001 	orrs	r0, r0, r1
40008e8c:	1a000000 	bne	40008e94 <_tx_thread_system_suspend+0x3ac>
40008e90:	eb000725 	bl	4000ab2c <_tx_thread_system_return>
40008e94:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40008e98:	e59f0248 	ldr	r0, [pc, #584]	; 400090e8 <_tx_thread_system_suspend+0x600>
40008e9c:	e59d1004 	ldr	r1, [sp, #4]
40008ea0:	e7d00001 	ldrb	r0, [r0, r1]
40008ea4:	e0800008 	add	r0, r0, r8
40008ea8:	e59f1230 	ldr	r1, [pc, #560]	; 400090e0 <_tx_thread_system_suspend+0x5f8>
40008eac:	e5810000 	str	r0, [r1]
40008eb0:	e59f0210 	ldr	r0, [pc, #528]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40008eb4:	e5900000 	ldr	r0, [r0]
40008eb8:	e1540000 	cmp	r4, r0
40008ebc:	1a000054 	bne	40009014 <_tx_thread_system_suspend+0x52c>
40008ec0:	e59f0210 	ldr	r0, [pc, #528]	; 400090d8 <_tx_thread_system_suspend+0x5f0>
40008ec4:	e5911000 	ldr	r1, [r1]
40008ec8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008ecc:	e59f11f4 	ldr	r1, [pc, #500]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40008ed0:	e5810000 	str	r0, [r1]
40008ed4:	e35a0000 	cmp	sl, #0
40008ed8:	0a000005 	beq	40008ef4 <_tx_thread_system_suspend+0x40c>
40008edc:	e59a000c 	ldr	r0, [sl, #12]
40008ee0:	e150000b 	cmp	r0, fp
40008ee4:	1a000002 	bne	40008ef4 <_tx_thread_system_suspend+0x40c>
40008ee8:	e2810000 	add	r0, r1, #0
40008eec:	e5900000 	ldr	r0, [r0]
40008ef0:	e58a001c 	str	r0, [sl, #28]
40008ef4:	e59f01e0 	ldr	r0, [pc, #480]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40008ef8:	e5900000 	ldr	r0, [r0]
40008efc:	e3500000 	cmp	r0, #0
40008f00:	0a000043 	beq	40009014 <_tx_thread_system_suspend+0x52c>
40008f04:	e59f01a8 	ldr	r0, [pc, #424]	; 400090b4 <_tx_thread_system_suspend+0x5cc>
40008f08:	e5900000 	ldr	r0, [r0]
40008f0c:	e2800001 	add	r0, r0, #1
40008f10:	e59f119c 	ldr	r1, [pc, #412]	; 400090b4 <_tx_thread_system_suspend+0x5cc>
40008f14:	e5810000 	str	r0, [r1]
40008f18:	e121f005 	msr	CPSR_c, r5
40008f1c:	e10f5000 	mrs	r5, CPSR
40008f20:	e3856080 	orr	r6, r5, #128	; 0x80
40008f24:	e121f006 	msr	CPSR_c, r6
40008f28:	e2810000 	add	r0, r1, #0
40008f2c:	e5900000 	ldr	r0, [r0]
40008f30:	e2400001 	sub	r0, r0, #1
40008f34:	e5810000 	str	r0, [r1]
40008f38:	e3a08000 	mov	r8, #0
40008f3c:	e59f0198 	ldr	r0, [pc, #408]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40008f40:	e5909000 	ldr	r9, [r0]
40008f44:	e20900ff 	and	r0, r9, #255	; 0xff
40008f48:	e58d0004 	str	r0, [sp, #4]
40008f4c:	e59d0004 	ldr	r0, [sp, #4]
40008f50:	e3500000 	cmp	r0, #0
40008f54:	1a000011 	bne	40008fa0 <_tx_thread_system_suspend+0x4b8>
40008f58:	e1a09429 	lsr	r9, r9, #8
40008f5c:	e20900ff 	and	r0, r9, #255	; 0xff
40008f60:	e58d0004 	str	r0, [sp, #4]
40008f64:	e2888008 	add	r8, r8, #8
40008f68:	e59d0004 	ldr	r0, [sp, #4]
40008f6c:	e3500000 	cmp	r0, #0
40008f70:	1a00000a 	bne	40008fa0 <_tx_thread_system_suspend+0x4b8>
40008f74:	e1a09429 	lsr	r9, r9, #8
40008f78:	e20900ff 	and	r0, r9, #255	; 0xff
40008f7c:	e58d0004 	str	r0, [sp, #4]
40008f80:	e2888008 	add	r8, r8, #8
40008f84:	e59d0004 	ldr	r0, [sp, #4]
40008f88:	e3500000 	cmp	r0, #0
40008f8c:	1a000003 	bne	40008fa0 <_tx_thread_system_suspend+0x4b8>
40008f90:	e1a09429 	lsr	r9, r9, #8
40008f94:	e20900ff 	and	r0, r9, #255	; 0xff
40008f98:	e58d0004 	str	r0, [sp, #4]
40008f9c:	e2888008 	add	r8, r8, #8
40008fa0:	e59f0140 	ldr	r0, [pc, #320]	; 400090e8 <_tx_thread_system_suspend+0x600>
40008fa4:	e59d1004 	ldr	r1, [sp, #4]
40008fa8:	e7d00001 	ldrb	r0, [r0, r1]
40008fac:	e0807008 	add	r7, r0, r8
40008fb0:	e59f0120 	ldr	r0, [pc, #288]	; 400090d8 <_tx_thread_system_suspend+0x5f0>
40008fb4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008fb8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40008fbc:	e59f111c 	ldr	r1, [pc, #284]	; 400090e0 <_tx_thread_system_suspend+0x5f8>
40008fc0:	e5911000 	ldr	r1, [r1]
40008fc4:	e1500001 	cmp	r0, r1
40008fc8:	8a000011 	bhi	40009014 <_tx_thread_system_suspend+0x52c>
40008fcc:	e59f0104 	ldr	r0, [pc, #260]	; 400090d8 <_tx_thread_system_suspend+0x5f0>
40008fd0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008fd4:	e59f10ec 	ldr	r1, [pc, #236]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40008fd8:	e5810000 	str	r0, [r1]
40008fdc:	e35a0000 	cmp	sl, #0
40008fe0:	0a000005 	beq	40008ffc <_tx_thread_system_suspend+0x514>
40008fe4:	e59a000c 	ldr	r0, [sl, #12]
40008fe8:	e150000b 	cmp	r0, fp
40008fec:	1a000002 	bne	40008ffc <_tx_thread_system_suspend+0x514>
40008ff0:	e2810000 	add	r0, r1, #0
40008ff4:	e5900000 	ldr	r0, [r0]
40008ff8:	e58a001c 	str	r0, [sl, #28]
40008ffc:	e59f00d8 	ldr	r0, [pc, #216]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40009000:	e5900000 	ldr	r0, [r0]
40009004:	e3a01001 	mov	r1, #1
40009008:	e1c00711 	bic	r0, r0, r1, lsl r7
4000900c:	e59f10c8 	ldr	r1, [pc, #200]	; 400090dc <_tx_thread_system_suspend+0x5f4>
40009010:	e5810000 	str	r0, [r1]
40009014:	e121f005 	msr	CPSR_c, r5
40009018:	e59f008c 	ldr	r0, [pc, #140]	; 400090ac <_tx_thread_system_suspend+0x5c4>
4000901c:	e5900000 	ldr	r0, [r0]
40009020:	e59f10a0 	ldr	r1, [pc, #160]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40009024:	e5911000 	ldr	r1, [r1]
40009028:	e1500001 	cmp	r0, r1
4000902c:	0a00001d 	beq	400090a8 <_tx_thread_system_suspend+0x5c0>
40009030:	e59f0090 	ldr	r0, [pc, #144]	; 400090c8 <_tx_thread_system_suspend+0x5e0>
40009034:	e5904000 	ldr	r4, [r0]
40009038:	e5940008 	ldr	r0, [r4, #8]
4000903c:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40009040:	e1500001 	cmp	r0, r1
40009044:	2a000001 	bcs	40009050 <_tx_thread_system_suspend+0x568>
40009048:	e5940008 	ldr	r0, [r4, #8]
4000904c:	e5840040 	str	r0, [r4, #64]	; 0x40
40009050:	e594000c 	ldr	r0, [r4, #12]
40009054:	e5900000 	ldr	r0, [r0]
40009058:	e59f1050 	ldr	r1, [pc, #80]	; 400090b0 <_tx_thread_system_suspend+0x5c8>
4000905c:	e1500001 	cmp	r0, r1
40009060:	1a000007 	bne	40009084 <_tx_thread_system_suspend+0x59c>
40009064:	e5940010 	ldr	r0, [r4, #16]
40009068:	e5900001 	ldr	r0, [r0, #1]
4000906c:	e1500001 	cmp	r0, r1
40009070:	1a000003 	bne	40009084 <_tx_thread_system_suspend+0x59c>
40009074:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40009078:	e594100c 	ldr	r1, [r4, #12]
4000907c:	e1500001 	cmp	r0, r1
40009080:	2a000001 	bcs	4000908c <_tx_thread_system_suspend+0x5a4>
40009084:	e1a00004 	mov	r0, r4
40009088:	eb0017fe 	bl	4000f088 <_tx_thread_stack_error_handler>
4000908c:	e59f002c 	ldr	r0, [pc, #44]	; 400090c0 <_tx_thread_system_suspend+0x5d8>
40009090:	e5900000 	ldr	r0, [r0]
40009094:	e59f1018 	ldr	r1, [pc, #24]	; 400090b4 <_tx_thread_system_suspend+0x5cc>
40009098:	e5911000 	ldr	r1, [r1]
4000909c:	e1900001 	orrs	r0, r0, r1
400090a0:	1a000000 	bne	400090a8 <_tx_thread_system_suspend+0x5c0>
400090a4:	eb0006a0 	bl	4000ab2c <_tx_thread_system_return>
400090a8:	eaffff79 	b	40008e94 <_tx_thread_system_suspend+0x3ac>
400090ac:	40030e34 	.word	0x40030e34
400090b0:	efefefef 	.word	0xefefefef
400090b4:	40030e50 	.word	0x40030e50
400090b8:	40030ea0 	.word	0x40030ea0
400090bc:	40030ea4 	.word	0x40030ea4
400090c0:	40030e2c 	.word	0x40030e2c
400090c4:	f0f0f0f0 	.word	0xf0f0f0f0
400090c8:	40030e38 	.word	0x40030e38
400090cc:	40030e9c 	.word	0x40030e9c
400090d0:	40030e98 	.word	0x40030e98
400090d4:	40030e8c 	.word	0x40030e8c
400090d8:	40032874 	.word	0x40032874
400090dc:	40030e48 	.word	0x40030e48
400090e0:	40030e4c 	.word	0x40030e4c
400090e4:	40030e44 	.word	0x40030e44
400090e8:	40032774 	.word	0x40032774

400090ec <_tx_time_get>:
400090ec:	e92d4008 	push	{r3, lr}
400090f0:	e10f1000 	mrs	r1, CPSR
400090f4:	e3812080 	orr	r2, r1, #128	; 0x80
400090f8:	e121f002 	msr	CPSR_c, r2
400090fc:	e59f00ec 	ldr	r0, [pc, #236]	; 400091f0 <_tx_time_get+0x104>
40009100:	e5900000 	ldr	r0, [r0]
40009104:	e58d0000 	str	r0, [sp]
40009108:	e59f30e4 	ldr	r3, [pc, #228]	; 400091f4 <_tx_time_get+0x108>
4000910c:	e5930000 	ldr	r0, [r3]
40009110:	e3500000 	cmp	r0, #0
40009114:	0a000032 	beq	400091e4 <_tx_time_get+0xf8>
40009118:	e59f30d8 	ldr	r3, [pc, #216]	; 400091f8 <_tx_time_get+0x10c>
4000911c:	e5933000 	ldr	r3, [r3]
40009120:	e2833001 	add	r3, r3, #1
40009124:	e59fc0cc 	ldr	ip, [pc, #204]	; 400091f8 <_tx_time_get+0x10c>
40009128:	e58c3000 	str	r3, [ip]
4000912c:	e580300c 	str	r3, [r0, #12]
40009130:	e59f30c4 	ldr	r3, [pc, #196]	; 400091fc <_tx_time_get+0x110>
40009134:	e5933000 	ldr	r3, [r3]
40009138:	e3530000 	cmp	r3, #0
4000913c:	1a000006 	bne	4000915c <_tx_time_get+0x70>
40009140:	e59f30b8 	ldr	r3, [pc, #184]	; 40009200 <_tx_time_get+0x114>
40009144:	e5933000 	ldr	r3, [r3]
40009148:	e5803000 	str	r3, [r0]
4000914c:	e5903000 	ldr	r3, [r0]
40009150:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40009154:	e5803004 	str	r3, [r0, #4]
40009158:	ea00000d 	b	40009194 <_tx_time_get+0xa8>
4000915c:	e59f3098 	ldr	r3, [pc, #152]	; 400091fc <_tx_time_get+0x110>
40009160:	e5933000 	ldr	r3, [r3]
40009164:	e59fc098 	ldr	ip, [pc, #152]	; 40009204 <_tx_time_get+0x118>
40009168:	e153000c 	cmp	r3, ip
4000916c:	2a000004 	bcs	40009184 <_tx_time_get+0x98>
40009170:	e3e03000 	mvn	r3, #0
40009174:	e5803000 	str	r3, [r0]
40009178:	e3a03000 	mov	r3, #0
4000917c:	e5803004 	str	r3, [r0, #4]
40009180:	ea000003 	b	40009194 <_tx_time_get+0xa8>
40009184:	e59f3078 	ldr	r3, [pc, #120]	; 40009204 <_tx_time_get+0x118>
40009188:	e5803000 	str	r3, [r0]
4000918c:	e3a03000 	mov	r3, #0
40009190:	e5803004 	str	r3, [r0, #4]
40009194:	e3a03078 	mov	r3, #120	; 0x78
40009198:	e5803008 	str	r3, [r0, #8]
4000919c:	e59d3000 	ldr	r3, [sp]
400091a0:	e5803010 	str	r3, [r0, #16]
400091a4:	e580d014 	str	sp, [r0, #20]
400091a8:	e3a03000 	mov	r3, #0
400091ac:	e5803018 	str	r3, [r0, #24]
400091b0:	e580301c 	str	r3, [r0, #28]
400091b4:	e2800020 	add	r0, r0, #32
400091b8:	e59f3048 	ldr	r3, [pc, #72]	; 40009208 <_tx_time_get+0x11c>
400091bc:	e5933000 	ldr	r3, [r3]
400091c0:	e1500003 	cmp	r0, r3
400091c4:	3a000001 	bcc	400091d0 <_tx_time_get+0xe4>
400091c8:	e59f303c 	ldr	r3, [pc, #60]	; 4000920c <_tx_time_get+0x120>
400091cc:	e5930000 	ldr	r0, [r3]
400091d0:	e59f301c 	ldr	r3, [pc, #28]	; 400091f4 <_tx_time_get+0x108>
400091d4:	e5830000 	str	r0, [r3]
400091d8:	e59f3030 	ldr	r3, [pc, #48]	; 40009210 <_tx_time_get+0x124>
400091dc:	e5933000 	ldr	r3, [r3]
400091e0:	e5830020 	str	r0, [r3, #32]
400091e4:	e121f001 	msr	CPSR_c, r1
400091e8:	e59d0000 	ldr	r0, [sp]
400091ec:	e8bd8008 	pop	{r3, pc}
400091f0:	40030e5c 	.word	0x40030e5c
400091f4:	40030ea0 	.word	0x40030ea0
400091f8:	40030ea4 	.word	0x40030ea4
400091fc:	40030e2c 	.word	0x40030e2c
40009200:	40030e34 	.word	0x40030e34
40009204:	f0f0f0f0 	.word	0xf0f0f0f0
40009208:	40030e9c 	.word	0x40030e9c
4000920c:	40030e98 	.word	0x40030e98
40009210:	40030e8c 	.word	0x40030e8c

40009214 <_tx_timer_initialize>:
40009214:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40009218:	e24dd01c 	sub	sp, sp, #28
4000921c:	e3a00000 	mov	r0, #0
40009220:	e59f10d8 	ldr	r1, [pc, #216]	; 40009300 <_tx_timer_initialize+0xec>
40009224:	e5810000 	str	r0, [r1]
40009228:	e59f10d4 	ldr	r1, [pc, #212]	; 40009304 <_tx_timer_initialize+0xf0>
4000922c:	e5810000 	str	r0, [r1]
40009230:	e59f10d0 	ldr	r1, [pc, #208]	; 40009308 <_tx_timer_initialize+0xf4>
40009234:	e5810000 	str	r0, [r1]
40009238:	e59f10cc 	ldr	r1, [pc, #204]	; 4000930c <_tx_timer_initialize+0xf8>
4000923c:	e5810000 	str	r0, [r1]
40009240:	e3a01080 	mov	r1, #128	; 0x80
40009244:	e59f00c4 	ldr	r0, [pc, #196]	; 40009310 <_tx_timer_initialize+0xfc>
40009248:	eb002895 	bl	400134a4 <__aeabi_memclr4>
4000924c:	e59f00bc 	ldr	r0, [pc, #188]	; 40009310 <_tx_timer_initialize+0xfc>
40009250:	e59f10bc 	ldr	r1, [pc, #188]	; 40009314 <_tx_timer_initialize+0x100>
40009254:	e5810000 	str	r0, [r1]
40009258:	e59f10b8 	ldr	r1, [pc, #184]	; 40009318 <_tx_timer_initialize+0x104>
4000925c:	e5810000 	str	r0, [r1]
40009260:	e280007c 	add	r0, r0, #124	; 0x7c
40009264:	e59f10b0 	ldr	r1, [pc, #176]	; 4000931c <_tx_timer_initialize+0x108>
40009268:	e5810000 	str	r0, [r1]
4000926c:	e2810000 	add	r0, r1, #0
40009270:	e5900000 	ldr	r0, [r0]
40009274:	e2800004 	add	r0, r0, #4
40009278:	e5810000 	str	r0, [r1]
4000927c:	e59f009c 	ldr	r0, [pc, #156]	; 40009320 <_tx_timer_initialize+0x10c>
40009280:	e59f109c 	ldr	r1, [pc, #156]	; 40009324 <_tx_timer_initialize+0x110>
40009284:	e5810000 	str	r0, [r1]
40009288:	e3a00b01 	mov	r0, #1024	; 0x400
4000928c:	e59f1094 	ldr	r1, [pc, #148]	; 40009328 <_tx_timer_initialize+0x114>
40009290:	e5810000 	str	r0, [r1]
40009294:	e3a00000 	mov	r0, #0
40009298:	e59f108c 	ldr	r1, [pc, #140]	; 4000932c <_tx_timer_initialize+0x118>
4000929c:	e5810000 	str	r0, [r1]
400092a0:	e3a03000 	mov	r3, #0
400092a4:	e2810000 	add	r0, r1, #0
400092a8:	e5901000 	ldr	r1, [r0]
400092ac:	e5900000 	ldr	r0, [r0]
400092b0:	e28d2008 	add	r2, sp, #8
400092b4:	e882000b 	stm	r2, {r0, r1, r3}
400092b8:	e59f0068 	ldr	r0, [pc, #104]	; 40009328 <_tx_timer_initialize+0x114>
400092bc:	e58d3014 	str	r3, [sp, #20]
400092c0:	e5903000 	ldr	r3, [r0]
400092c4:	e59f0058 	ldr	r0, [pc, #88]	; 40009324 <_tx_timer_initialize+0x110>
400092c8:	e5902000 	ldr	r2, [r0]
400092cc:	e1cd20f0 	strd	r2, [sp]
400092d0:	e59f3058 	ldr	r3, [pc, #88]	; 40009330 <_tx_timer_initialize+0x11c>
400092d4:	e59f2058 	ldr	r2, [pc, #88]	; 40009334 <_tx_timer_initialize+0x120>
400092d8:	e28f1058 	add	r1, pc, #88	; 0x58
400092dc:	e59f0068 	ldr	r0, [pc, #104]	; 4000934c <_tx_timer_initialize+0x138>
400092e0:	eb00143b 	bl	4000e3d4 <_tx_thread_create>
400092e4:	e3a00000 	mov	r0, #0
400092e8:	e59f1060 	ldr	r1, [pc, #96]	; 40009350 <_tx_timer_initialize+0x13c>
400092ec:	e5810000 	str	r0, [r1]
400092f0:	e59f105c 	ldr	r1, [pc, #92]	; 40009354 <_tx_timer_initialize+0x140>
400092f4:	e5810000 	str	r0, [r1]
400092f8:	e28dd01c 	add	sp, sp, #28
400092fc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40009300:	40030e5c 	.word	0x40030e5c
40009304:	40030e60 	.word	0x40030e60
40009308:	40030e64 	.word	0x40030e64
4000930c:	40030e74 	.word	0x40030e74
40009310:	400328f4 	.word	0x400328f4
40009314:	40030e68 	.word	0x40030e68
40009318:	40030e70 	.word	0x40030e70
4000931c:	40030e6c 	.word	0x40030e6c
40009320:	40032a1c 	.word	0x40032a1c
40009324:	40030e80 	.word	0x40030e80
40009328:	40030e84 	.word	0x40030e84
4000932c:	40030e88 	.word	0x40030e88
40009330:	4154494d 	.word	0x4154494d
40009334:	40009444 	.word	0x40009444
40009338:	74737953 	.word	0x74737953
4000933c:	54206d65 	.word	0x54206d65
40009340:	72656d69 	.word	0x72656d69
40009344:	72685420 	.word	0x72685420
40009348:	00646165 	.word	0x00646165
4000934c:	40032974 	.word	0x40032974
40009350:	40030e78 	.word	0x40030e78
40009354:	40030e7c 	.word	0x40030e7c

40009358 <_tx_timer_system_activate>:
40009358:	e92d4010 	push	{r4, lr}
4000935c:	e1a01000 	mov	r1, r0
40009360:	e10f2000 	mrs	r2, CPSR
40009364:	e3823080 	orr	r3, r2, #128	; 0x80
40009368:	e121f003 	msr	CPSR_c, r3
4000936c:	e5910000 	ldr	r0, [r1]
40009370:	e3500000 	cmp	r0, #0
40009374:	0a00002c 	beq	4000942c <_tx_timer_system_activate+0xd4>
40009378:	e5910000 	ldr	r0, [r1]
4000937c:	e3700001 	cmn	r0, #1
40009380:	0a000029 	beq	4000942c <_tx_timer_system_activate+0xd4>
40009384:	e5910018 	ldr	r0, [r1, #24]
40009388:	e3500000 	cmp	r0, #0
4000938c:	1a000026 	bne	4000942c <_tx_timer_system_activate+0xd4>
40009390:	e5910000 	ldr	r0, [r1]
40009394:	e3500020 	cmp	r0, #32
40009398:	9a000001 	bls	400093a4 <_tx_timer_system_activate+0x4c>
4000939c:	e3a0e01f 	mov	lr, #31
400093a0:	ea000001 	b	400093ac <_tx_timer_system_activate+0x54>
400093a4:	e5910000 	ldr	r0, [r1]
400093a8:	e240e001 	sub	lr, r0, #1
400093ac:	e59f0084 	ldr	r0, [pc, #132]	; 40009438 <_tx_timer_system_activate+0xe0>
400093b0:	e5900000 	ldr	r0, [r0]
400093b4:	e080c10e 	add	ip, r0, lr, lsl #2
400093b8:	e59f007c 	ldr	r0, [pc, #124]	; 4000943c <_tx_timer_system_activate+0xe4>
400093bc:	e5900000 	ldr	r0, [r0]
400093c0:	e15c0000 	cmp	ip, r0
400093c4:	3a000006 	bcc	400093e4 <_tx_timer_system_activate+0x8c>
400093c8:	e59f006c 	ldr	r0, [pc, #108]	; 4000943c <_tx_timer_system_activate+0xe4>
400093cc:	e5900000 	ldr	r0, [r0]
400093d0:	e04c0000 	sub	r0, ip, r0
400093d4:	e1a00140 	asr	r0, r0, #2
400093d8:	e59f4060 	ldr	r4, [pc, #96]	; 40009440 <_tx_timer_system_activate+0xe8>
400093dc:	e5944000 	ldr	r4, [r4]
400093e0:	e084c100 	add	ip, r4, r0, lsl #2
400093e4:	e59c0000 	ldr	r0, [ip]
400093e8:	e3500000 	cmp	r0, #0
400093ec:	0a00000a 	beq	4000941c <_tx_timer_system_activate+0xc4>
400093f0:	e59c0000 	ldr	r0, [ip]
400093f4:	e5810010 	str	r0, [r1, #16]
400093f8:	e59c0000 	ldr	r0, [ip]
400093fc:	e5900014 	ldr	r0, [r0, #20]
40009400:	e5810014 	str	r0, [r1, #20]
40009404:	e5910014 	ldr	r0, [r1, #20]
40009408:	e5801010 	str	r1, [r0, #16]
4000940c:	e59c0000 	ldr	r0, [ip]
40009410:	e5801014 	str	r1, [r0, #20]
40009414:	e581c018 	str	ip, [r1, #24]
40009418:	ea000003 	b	4000942c <_tx_timer_system_activate+0xd4>
4000941c:	e5811010 	str	r1, [r1, #16]
40009420:	e5811014 	str	r1, [r1, #20]
40009424:	e581c018 	str	ip, [r1, #24]
40009428:	e58c1000 	str	r1, [ip]
4000942c:	e121f002 	msr	CPSR_c, r2
40009430:	e3a00000 	mov	r0, #0
40009434:	e8bd8010 	pop	{r4, pc}
40009438:	40030e70 	.word	0x40030e70
4000943c:	40030e6c 	.word	0x40030e6c
40009440:	40030e68 	.word	0x40030e68

40009444 <_tx_timer_thread_entry>:
40009444:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40009448:	e1a04000 	mov	r4, r0
4000944c:	e3a09000 	mov	r9, #0
40009450:	e59f0214 	ldr	r0, [pc, #532]	; 4000966c <_tx_timer_thread_entry+0x228>
40009454:	e1540000 	cmp	r4, r0
40009458:	0a000000 	beq	40009460 <_tx_timer_thread_entry+0x1c>
4000945c:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40009460:	e3a00000 	mov	r0, #0
40009464:	e58d0000 	str	r0, [sp]
40009468:	e1a00000 	nop			; (mov r0, r0)
4000946c:	e10f5000 	mrs	r5, CPSR
40009470:	e3856080 	orr	r6, r5, #128	; 0x80
40009474:	e121f006 	msr	CPSR_c, r6
40009478:	e59f01f0 	ldr	r0, [pc, #496]	; 40009670 <_tx_timer_thread_entry+0x22c>
4000947c:	e5900000 	ldr	r0, [r0]
40009480:	e5900000 	ldr	r0, [r0]
40009484:	e58d0004 	str	r0, [sp, #4]
40009488:	e59d0004 	ldr	r0, [sp, #4]
4000948c:	e3500000 	cmp	r0, #0
40009490:	0a000002 	beq	400094a0 <_tx_timer_thread_entry+0x5c>
40009494:	e28d0004 	add	r0, sp, #4
40009498:	e59d1004 	ldr	r1, [sp, #4]
4000949c:	e5810018 	str	r0, [r1, #24]
400094a0:	e3a00000 	mov	r0, #0
400094a4:	e59f11c4 	ldr	r1, [pc, #452]	; 40009670 <_tx_timer_thread_entry+0x22c>
400094a8:	e5911000 	ldr	r1, [r1]
400094ac:	e5810000 	str	r0, [r1]
400094b0:	e59f01b8 	ldr	r0, [pc, #440]	; 40009670 <_tx_timer_thread_entry+0x22c>
400094b4:	e5900000 	ldr	r0, [r0]
400094b8:	e2800004 	add	r0, r0, #4
400094bc:	e59f11ac 	ldr	r1, [pc, #428]	; 40009670 <_tx_timer_thread_entry+0x22c>
400094c0:	e5810000 	str	r0, [r1]
400094c4:	e2810000 	add	r0, r1, #0
400094c8:	e5900000 	ldr	r0, [r0]
400094cc:	e59f11a0 	ldr	r1, [pc, #416]	; 40009674 <_tx_timer_thread_entry+0x230>
400094d0:	e5911000 	ldr	r1, [r1]
400094d4:	e1500001 	cmp	r0, r1
400094d8:	1a000003 	bne	400094ec <_tx_timer_thread_entry+0xa8>
400094dc:	e59f0194 	ldr	r0, [pc, #404]	; 40009678 <_tx_timer_thread_entry+0x234>
400094e0:	e5900000 	ldr	r0, [r0]
400094e4:	e59f1184 	ldr	r1, [pc, #388]	; 40009670 <_tx_timer_thread_entry+0x22c>
400094e8:	e5810000 	str	r0, [r1]
400094ec:	e3a00000 	mov	r0, #0
400094f0:	e59f1184 	ldr	r1, [pc, #388]	; 4000967c <_tx_timer_thread_entry+0x238>
400094f4:	e5810000 	str	r0, [r1]
400094f8:	e121f005 	msr	CPSR_c, r5
400094fc:	e10f5000 	mrs	r5, CPSR
40009500:	e3856080 	orr	r6, r5, #128	; 0x80
40009504:	e121f006 	msr	CPSR_c, r6
40009508:	ea000040 	b	40009610 <_tx_timer_thread_entry+0x1cc>
4000950c:	e59d7004 	ldr	r7, [sp, #4]
40009510:	e59d0004 	ldr	r0, [sp, #4]
40009514:	e5900010 	ldr	r0, [r0, #16]
40009518:	e1500007 	cmp	r0, r7
4000951c:	1a000002 	bne	4000952c <_tx_timer_thread_entry+0xe8>
40009520:	e3a00000 	mov	r0, #0
40009524:	e58d0004 	str	r0, [sp, #4]
40009528:	ea00000a 	b	40009558 <_tx_timer_thread_entry+0x114>
4000952c:	e5970014 	ldr	r0, [r7, #20]
40009530:	e5971010 	ldr	r1, [r7, #16]
40009534:	e5810014 	str	r0, [r1, #20]
40009538:	e5970010 	ldr	r0, [r7, #16]
4000953c:	e5971014 	ldr	r1, [r7, #20]
40009540:	e5810010 	str	r0, [r1, #16]
40009544:	e28d0004 	add	r0, sp, #4
40009548:	e5971010 	ldr	r1, [r7, #16]
4000954c:	e5810018 	str	r0, [r1, #24]
40009550:	e5970010 	ldr	r0, [r7, #16]
40009554:	e58d0004 	str	r0, [sp, #4]
40009558:	e5970000 	ldr	r0, [r7]
4000955c:	e3500020 	cmp	r0, #32
40009560:	9a000006 	bls	40009580 <_tx_timer_thread_entry+0x13c>
40009564:	e5970000 	ldr	r0, [r7]
40009568:	e2400020 	sub	r0, r0, #32
4000956c:	e5870000 	str	r0, [r7]
40009570:	e3a08000 	mov	r8, #0
40009574:	e587d018 	str	sp, [r7, #24]
40009578:	e5877010 	str	r7, [r7, #16]
4000957c:	ea00000b 	b	400095b0 <_tx_timer_thread_entry+0x16c>
40009580:	e5978008 	ldr	r8, [r7, #8]
40009584:	e597900c 	ldr	r9, [r7, #12]
40009588:	e5970004 	ldr	r0, [r7, #4]
4000958c:	e5870000 	str	r0, [r7]
40009590:	e5970000 	ldr	r0, [r7]
40009594:	e3500000 	cmp	r0, #0
40009598:	0a000002 	beq	400095a8 <_tx_timer_thread_entry+0x164>
4000959c:	e587d018 	str	sp, [r7, #24]
400095a0:	e5877010 	str	r7, [r7, #16]
400095a4:	ea000001 	b	400095b0 <_tx_timer_thread_entry+0x16c>
400095a8:	e3a00000 	mov	r0, #0
400095ac:	e5870018 	str	r0, [r7, #24]
400095b0:	e121f005 	msr	CPSR_c, r5
400095b4:	e3580000 	cmp	r8, #0
400095b8:	0a000001 	beq	400095c4 <_tx_timer_thread_entry+0x180>
400095bc:	e1a00009 	mov	r0, r9
400095c0:	e12fff38 	blx	r8
400095c4:	e10f5000 	mrs	r5, CPSR
400095c8:	e3856080 	orr	r6, r5, #128	; 0x80
400095cc:	e121f006 	msr	CPSR_c, r6
400095d0:	e1a0100d 	mov	r1, sp
400095d4:	e5970018 	ldr	r0, [r7, #24]
400095d8:	e1500001 	cmp	r0, r1
400095dc:	1a000007 	bne	40009600 <_tx_timer_thread_entry+0x1bc>
400095e0:	e3a00000 	mov	r0, #0
400095e4:	e5870018 	str	r0, [r7, #24]
400095e8:	e121f005 	msr	CPSR_c, r5
400095ec:	e1a00007 	mov	r0, r7
400095f0:	ebffff58 	bl	40009358 <_tx_timer_system_activate>
400095f4:	e10f5000 	mrs	r5, CPSR
400095f8:	e3856080 	orr	r6, r5, #128	; 0x80
400095fc:	e121f006 	msr	CPSR_c, r6
40009600:	e121f005 	msr	CPSR_c, r5
40009604:	e10f5000 	mrs	r5, CPSR
40009608:	e3856080 	orr	r6, r5, #128	; 0x80
4000960c:	e121f006 	msr	CPSR_c, r6
40009610:	e59d0004 	ldr	r0, [sp, #4]
40009614:	e3500000 	cmp	r0, #0
40009618:	1affffbb 	bne	4000950c <_tx_timer_thread_entry+0xc8>
4000961c:	e59f0058 	ldr	r0, [pc, #88]	; 4000967c <_tx_timer_thread_entry+0x238>
40009620:	e5900000 	ldr	r0, [r0]
40009624:	e3500000 	cmp	r0, #0
40009628:	1a00000d 	bne	40009664 <_tx_timer_thread_entry+0x220>
4000962c:	e59fa04c 	ldr	sl, [pc, #76]	; 40009680 <_tx_timer_thread_entry+0x23c>
40009630:	e3a00003 	mov	r0, #3
40009634:	e58a0030 	str	r0, [sl, #48]	; 0x30
40009638:	e3a00001 	mov	r0, #1
4000963c:	e58a0038 	str	r0, [sl, #56]	; 0x38
40009640:	e59f003c 	ldr	r0, [pc, #60]	; 40009684 <_tx_timer_thread_entry+0x240>
40009644:	e5900000 	ldr	r0, [r0]
40009648:	e2800001 	add	r0, r0, #1
4000964c:	e59f1030 	ldr	r1, [pc, #48]	; 40009684 <_tx_timer_thread_entry+0x240>
40009650:	e5810000 	str	r0, [r1]
40009654:	e121f005 	msr	CPSR_c, r5
40009658:	e1a0000a 	mov	r0, sl
4000965c:	ebfffd21 	bl	40008ae8 <_tx_thread_system_suspend>
40009660:	ea000000 	b	40009668 <_tx_timer_thread_entry+0x224>
40009664:	e121f005 	msr	CPSR_c, r5
40009668:	eaffff7f 	b	4000946c <_tx_timer_thread_entry+0x28>
4000966c:	4154494d 	.word	0x4154494d
40009670:	40030e70 	.word	0x40030e70
40009674:	40030e6c 	.word	0x40030e6c
40009678:	40030e68 	.word	0x40030e68
4000967c:	40030e74 	.word	0x40030e74
40009680:	40032974 	.word	0x40032974
40009684:	40030e50 	.word	0x40030e50

40009688 <_tx_trace_initialize>:
40009688:	e3a00000 	mov	r0, #0
4000968c:	e59f102c 	ldr	r1, [pc, #44]	; 400096c0 <_tx_trace_initialize+0x38>
40009690:	e5810000 	str	r0, [r1]
40009694:	e59f1028 	ldr	r1, [pc, #40]	; 400096c4 <_tx_trace_initialize+0x3c>
40009698:	e5810000 	str	r0, [r1]
4000969c:	e59f1024 	ldr	r1, [pc, #36]	; 400096c8 <_tx_trace_initialize+0x40>
400096a0:	e5810000 	str	r0, [r1]
400096a4:	e59f1020 	ldr	r1, [pc, #32]	; 400096cc <_tx_trace_initialize+0x44>
400096a8:	e5810000 	str	r0, [r1]
400096ac:	e59f101c 	ldr	r1, [pc, #28]	; 400096d0 <_tx_trace_initialize+0x48>
400096b0:	e5810000 	str	r0, [r1]
400096b4:	e59f1018 	ldr	r1, [pc, #24]	; 400096d4 <_tx_trace_initialize+0x4c>
400096b8:	e5810000 	str	r0, [r1]
400096bc:	e12fff1e 	bx	lr
400096c0:	40030e8c 	.word	0x40030e8c
400096c4:	40030e90 	.word	0x40030e90
400096c8:	40030e94 	.word	0x40030e94
400096cc:	40030e98 	.word	0x40030e98
400096d0:	40030e9c 	.word	0x40030e9c
400096d4:	40030ea0 	.word	0x40030ea0

400096d8 <_txe_byte_allocate>:
400096d8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400096dc:	e1a04000 	mov	r4, r0
400096e0:	e1a05001 	mov	r5, r1
400096e4:	e1a06002 	mov	r6, r2
400096e8:	e1a07003 	mov	r7, r3
400096ec:	e3540000 	cmp	r4, #0
400096f0:	0a000003 	beq	40009704 <_txe_byte_allocate+0x2c>
400096f4:	e5940000 	ldr	r0, [r4]
400096f8:	e59f10d4 	ldr	r1, [pc, #212]	; 400097d4 <_txe_byte_allocate+0xfc>
400096fc:	e1500001 	cmp	r0, r1
40009700:	0a000001 	beq	4000970c <_txe_byte_allocate+0x34>
40009704:	e3a00002 	mov	r0, #2
40009708:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000970c:	e3550000 	cmp	r5, #0
40009710:	1a000001 	bne	4000971c <_txe_byte_allocate+0x44>
40009714:	e3a00003 	mov	r0, #3
40009718:	eafffffa 	b	40009708 <_txe_byte_allocate+0x30>
4000971c:	e3560000 	cmp	r6, #0
40009720:	0a000002 	beq	40009730 <_txe_byte_allocate+0x58>
40009724:	e594001c 	ldr	r0, [r4, #28]
40009728:	e1500006 	cmp	r0, r6
4000972c:	2a000001 	bcs	40009738 <_txe_byte_allocate+0x60>
40009730:	e3a00005 	mov	r0, #5
40009734:	eafffff3 	b	40009708 <_txe_byte_allocate+0x30>
40009738:	e59f0098 	ldr	r0, [pc, #152]	; 400097d8 <_txe_byte_allocate+0x100>
4000973c:	e5908000 	ldr	r8, [r0]
40009740:	e3570000 	cmp	r7, #0
40009744:	0a000008 	beq	4000976c <_txe_byte_allocate+0x94>
40009748:	e59f008c 	ldr	r0, [pc, #140]	; 400097dc <_txe_byte_allocate+0x104>
4000974c:	e5900000 	ldr	r0, [r0]
40009750:	e3500000 	cmp	r0, #0
40009754:	1a000002 	bne	40009764 <_txe_byte_allocate+0x8c>
40009758:	e59f0080 	ldr	r0, [pc, #128]	; 400097e0 <_txe_byte_allocate+0x108>
4000975c:	e1580000 	cmp	r8, r0
40009760:	1a000001 	bne	4000976c <_txe_byte_allocate+0x94>
40009764:	e3a00004 	mov	r0, #4
40009768:	eaffffe6 	b	40009708 <_txe_byte_allocate+0x30>
4000976c:	e3580000 	cmp	r8, #0
40009770:	0a000008 	beq	40009798 <_txe_byte_allocate+0xc0>
40009774:	e59f0064 	ldr	r0, [pc, #100]	; 400097e0 <_txe_byte_allocate+0x108>
40009778:	e1580000 	cmp	r8, r0
4000977c:	0a000003 	beq	40009790 <_txe_byte_allocate+0xb8>
40009780:	e59f0054 	ldr	r0, [pc, #84]	; 400097dc <_txe_byte_allocate+0x104>
40009784:	e5900000 	ldr	r0, [r0]
40009788:	e3500000 	cmp	r0, #0
4000978c:	0a000008 	beq	400097b4 <_txe_byte_allocate+0xdc>
40009790:	e3a00013 	mov	r0, #19
40009794:	eaffffdb 	b	40009708 <_txe_byte_allocate+0x30>
40009798:	e59f003c 	ldr	r0, [pc, #60]	; 400097dc <_txe_byte_allocate+0x104>
4000979c:	e5900000 	ldr	r0, [r0]
400097a0:	e59f103c 	ldr	r1, [pc, #60]	; 400097e4 <_txe_byte_allocate+0x10c>
400097a4:	e1500001 	cmp	r0, r1
400097a8:	2a000001 	bcs	400097b4 <_txe_byte_allocate+0xdc>
400097ac:	e3a00013 	mov	r0, #19
400097b0:	eaffffd4 	b	40009708 <_txe_byte_allocate+0x30>
400097b4:	e1a03007 	mov	r3, r7
400097b8:	e1a02006 	mov	r2, r6
400097bc:	e1a01005 	mov	r1, r5
400097c0:	e1a00004 	mov	r0, r4
400097c4:	eb0005bf 	bl	4000aec8 <_tx_byte_allocate>
400097c8:	e1a09000 	mov	r9, r0
400097cc:	e1a00009 	mov	r0, r9
400097d0:	eaffffcc 	b	40009708 <_txe_byte_allocate+0x30>
400097d4:	42595445 	.word	0x42595445
400097d8:	40030e34 	.word	0x40030e34
400097dc:	40030e2c 	.word	0x40030e2c
400097e0:	40032974 	.word	0x40032974
400097e4:	f0f0f0f0 	.word	0xf0f0f0f0

400097e8 <_txe_byte_pool_create>:
400097e8:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400097ec:	e1a04000 	mov	r4, r0
400097f0:	e1a05001 	mov	r5, r1
400097f4:	e1a06002 	mov	r6, r2
400097f8:	e1a07003 	mov	r7, r3
400097fc:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009800:	e3540000 	cmp	r4, #0
40009804:	0a000001 	beq	40009810 <_txe_byte_pool_create+0x28>
40009808:	e3580034 	cmp	r8, #52	; 0x34
4000980c:	0a000001 	beq	40009818 <_txe_byte_pool_create+0x30>
40009810:	e3a00002 	mov	r0, #2
40009814:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009818:	e10f9000 	mrs	r9, CPSR
4000981c:	e389a080 	orr	sl, r9, #128	; 0x80
40009820:	e121f00a 	msr	CPSR_c, sl
40009824:	e59f0130 	ldr	r0, [pc, #304]	; 4000995c <_txe_byte_pool_create+0x174>
40009828:	e5900000 	ldr	r0, [r0]
4000982c:	e2800001 	add	r0, r0, #1
40009830:	e59f1124 	ldr	r1, [pc, #292]	; 4000995c <_txe_byte_pool_create+0x174>
40009834:	e5810000 	str	r0, [r1]
40009838:	e121f009 	msr	CPSR_c, r9
4000983c:	e59f011c 	ldr	r0, [pc, #284]	; 40009960 <_txe_byte_pool_create+0x178>
40009840:	e5900000 	ldr	r0, [r0]
40009844:	e58d0004 	str	r0, [sp, #4]
40009848:	e3a0b000 	mov	fp, #0
4000984c:	ea000007 	b	40009870 <_txe_byte_pool_create+0x88>
40009850:	e59d0004 	ldr	r0, [sp, #4]
40009854:	e1540000 	cmp	r4, r0
40009858:	1a000000 	bne	40009860 <_txe_byte_pool_create+0x78>
4000985c:	ea000007 	b	40009880 <_txe_byte_pool_create+0x98>
40009860:	e59d0004 	ldr	r0, [sp, #4]
40009864:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40009868:	e58d0004 	str	r0, [sp, #4]
4000986c:	e28bb001 	add	fp, fp, #1
40009870:	e59f00ec 	ldr	r0, [pc, #236]	; 40009964 <_txe_byte_pool_create+0x17c>
40009874:	e5900000 	ldr	r0, [r0]
40009878:	e15b0000 	cmp	fp, r0
4000987c:	3afffff3 	bcc	40009850 <_txe_byte_pool_create+0x68>
40009880:	e1a00000 	nop			; (mov r0, r0)
40009884:	e10f9000 	mrs	r9, CPSR
40009888:	e389a080 	orr	sl, r9, #128	; 0x80
4000988c:	e121f00a 	msr	CPSR_c, sl
40009890:	e59f00c4 	ldr	r0, [pc, #196]	; 4000995c <_txe_byte_pool_create+0x174>
40009894:	e5900000 	ldr	r0, [r0]
40009898:	e2400001 	sub	r0, r0, #1
4000989c:	e59f10b8 	ldr	r1, [pc, #184]	; 4000995c <_txe_byte_pool_create+0x174>
400098a0:	e5810000 	str	r0, [r1]
400098a4:	e121f009 	msr	CPSR_c, r9
400098a8:	eb001609 	bl	4000f0d4 <_tx_thread_system_preempt_check>
400098ac:	e59d0004 	ldr	r0, [sp, #4]
400098b0:	e1540000 	cmp	r4, r0
400098b4:	1a000001 	bne	400098c0 <_txe_byte_pool_create+0xd8>
400098b8:	e3a00002 	mov	r0, #2
400098bc:	eaffffd4 	b	40009814 <_txe_byte_pool_create+0x2c>
400098c0:	e3560000 	cmp	r6, #0
400098c4:	1a000001 	bne	400098d0 <_txe_byte_pool_create+0xe8>
400098c8:	e3a00003 	mov	r0, #3
400098cc:	eaffffd0 	b	40009814 <_txe_byte_pool_create+0x2c>
400098d0:	e3570064 	cmp	r7, #100	; 0x64
400098d4:	2a000001 	bcs	400098e0 <_txe_byte_pool_create+0xf8>
400098d8:	e3a00005 	mov	r0, #5
400098dc:	eaffffcc 	b	40009814 <_txe_byte_pool_create+0x2c>
400098e0:	e59f0080 	ldr	r0, [pc, #128]	; 40009968 <_txe_byte_pool_create+0x180>
400098e4:	e5900000 	ldr	r0, [r0]
400098e8:	e58d0000 	str	r0, [sp]
400098ec:	e59d0000 	ldr	r0, [sp]
400098f0:	e3500000 	cmp	r0, #0
400098f4:	0a000009 	beq	40009920 <_txe_byte_pool_create+0x138>
400098f8:	e59f106c 	ldr	r1, [pc, #108]	; 4000996c <_txe_byte_pool_create+0x184>
400098fc:	e59d0000 	ldr	r0, [sp]
40009900:	e1500001 	cmp	r0, r1
40009904:	0a000003 	beq	40009918 <_txe_byte_pool_create+0x130>
40009908:	e59f0060 	ldr	r0, [pc, #96]	; 40009970 <_txe_byte_pool_create+0x188>
4000990c:	e5900000 	ldr	r0, [r0]
40009910:	e3500000 	cmp	r0, #0
40009914:	0a000008 	beq	4000993c <_txe_byte_pool_create+0x154>
40009918:	e3a00013 	mov	r0, #19
4000991c:	eaffffbc 	b	40009814 <_txe_byte_pool_create+0x2c>
40009920:	e59f0048 	ldr	r0, [pc, #72]	; 40009970 <_txe_byte_pool_create+0x188>
40009924:	e5900000 	ldr	r0, [r0]
40009928:	e59f1044 	ldr	r1, [pc, #68]	; 40009974 <_txe_byte_pool_create+0x18c>
4000992c:	e1500001 	cmp	r0, r1
40009930:	2a000001 	bcs	4000993c <_txe_byte_pool_create+0x154>
40009934:	e3a00013 	mov	r0, #19
40009938:	eaffffb5 	b	40009814 <_txe_byte_pool_create+0x2c>
4000993c:	e1a03007 	mov	r3, r7
40009940:	e1a02006 	mov	r2, r6
40009944:	e1a01005 	mov	r1, r5
40009948:	e1a00004 	mov	r0, r4
4000994c:	eb000643 	bl	4000b260 <_tx_byte_pool_create>
40009950:	e58d0008 	str	r0, [sp, #8]
40009954:	e59d0008 	ldr	r0, [sp, #8]
40009958:	eaffffad 	b	40009814 <_txe_byte_pool_create+0x2c>
4000995c:	40030e50 	.word	0x40030e50
40009960:	40030ed0 	.word	0x40030ed0
40009964:	40030ed4 	.word	0x40030ed4
40009968:	40030e34 	.word	0x40030e34
4000996c:	40032974 	.word	0x40032974
40009970:	40030e2c 	.word	0x40030e2c
40009974:	f0f0f0f0 	.word	0xf0f0f0f0

40009978 <_txe_byte_pool_delete>:
40009978:	e92d4070 	push	{r4, r5, r6, lr}
4000997c:	e1a04000 	mov	r4, r0
40009980:	e3540000 	cmp	r4, #0
40009984:	0a000003 	beq	40009998 <_txe_byte_pool_delete+0x20>
40009988:	e5940000 	ldr	r0, [r4]
4000998c:	e59f1054 	ldr	r1, [pc, #84]	; 400099e8 <_txe_byte_pool_delete+0x70>
40009990:	e1500001 	cmp	r0, r1
40009994:	0a000001 	beq	400099a0 <_txe_byte_pool_delete+0x28>
40009998:	e3a00002 	mov	r0, #2
4000999c:	e8bd8070 	pop	{r4, r5, r6, pc}
400099a0:	e59f0044 	ldr	r0, [pc, #68]	; 400099ec <_txe_byte_pool_delete+0x74>
400099a4:	e5905000 	ldr	r5, [r0]
400099a8:	e3550000 	cmp	r5, #0
400099ac:	0a000006 	beq	400099cc <_txe_byte_pool_delete+0x54>
400099b0:	e59f0038 	ldr	r0, [pc, #56]	; 400099f0 <_txe_byte_pool_delete+0x78>
400099b4:	e5900000 	ldr	r0, [r0]
400099b8:	e3500000 	cmp	r0, #0
400099bc:	1a000002 	bne	400099cc <_txe_byte_pool_delete+0x54>
400099c0:	e59f002c 	ldr	r0, [pc, #44]	; 400099f4 <_txe_byte_pool_delete+0x7c>
400099c4:	e1550000 	cmp	r5, r0
400099c8:	1a000001 	bne	400099d4 <_txe_byte_pool_delete+0x5c>
400099cc:	e3a00013 	mov	r0, #19
400099d0:	eafffff1 	b	4000999c <_txe_byte_pool_delete+0x24>
400099d4:	e1a00004 	mov	r0, r4
400099d8:	eb0006b6 	bl	4000b4b8 <_tx_byte_pool_delete>
400099dc:	e1a06000 	mov	r6, r0
400099e0:	e1a00006 	mov	r0, r6
400099e4:	eaffffec 	b	4000999c <_txe_byte_pool_delete+0x24>
400099e8:	42595445 	.word	0x42595445
400099ec:	40030e34 	.word	0x40030e34
400099f0:	40030e2c 	.word	0x40030e2c
400099f4:	40032974 	.word	0x40032974

400099f8 <_txe_byte_release>:
400099f8:	e92d4070 	push	{r4, r5, r6, lr}
400099fc:	e1a04000 	mov	r4, r0
40009a00:	e3540000 	cmp	r4, #0
40009a04:	1a000001 	bne	40009a10 <_txe_byte_release+0x18>
40009a08:	e3a00003 	mov	r0, #3
40009a0c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009a10:	e59f005c 	ldr	r0, [pc, #92]	; 40009a74 <_txe_byte_release+0x7c>
40009a14:	e5905000 	ldr	r5, [r0]
40009a18:	e3550000 	cmp	r5, #0
40009a1c:	0a000008 	beq	40009a44 <_txe_byte_release+0x4c>
40009a20:	e59f0050 	ldr	r0, [pc, #80]	; 40009a78 <_txe_byte_release+0x80>
40009a24:	e1550000 	cmp	r5, r0
40009a28:	0a000003 	beq	40009a3c <_txe_byte_release+0x44>
40009a2c:	e59f0048 	ldr	r0, [pc, #72]	; 40009a7c <_txe_byte_release+0x84>
40009a30:	e5900000 	ldr	r0, [r0]
40009a34:	e3500000 	cmp	r0, #0
40009a38:	0a000008 	beq	40009a60 <_txe_byte_release+0x68>
40009a3c:	e3a00013 	mov	r0, #19
40009a40:	eafffff1 	b	40009a0c <_txe_byte_release+0x14>
40009a44:	e59f0030 	ldr	r0, [pc, #48]	; 40009a7c <_txe_byte_release+0x84>
40009a48:	e5900000 	ldr	r0, [r0]
40009a4c:	e59f102c 	ldr	r1, [pc, #44]	; 40009a80 <_txe_byte_release+0x88>
40009a50:	e1500001 	cmp	r0, r1
40009a54:	2a000001 	bcs	40009a60 <_txe_byte_release+0x68>
40009a58:	e3a00013 	mov	r0, #19
40009a5c:	eaffffea 	b	40009a0c <_txe_byte_release+0x14>
40009a60:	e1a00004 	mov	r0, r4
40009a64:	eb000794 	bl	4000b8bc <_tx_byte_release>
40009a68:	e1a06000 	mov	r6, r0
40009a6c:	e1a00006 	mov	r0, r6
40009a70:	eaffffe5 	b	40009a0c <_txe_byte_release+0x14>
40009a74:	40030e34 	.word	0x40030e34
40009a78:	40032974 	.word	0x40032974
40009a7c:	40030e2c 	.word	0x40030e2c
40009a80:	f0f0f0f0 	.word	0xf0f0f0f0

40009a84 <_txe_event_flags_create>:
40009a84:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009a88:	e1a04000 	mov	r4, r0
40009a8c:	e1a05001 	mov	r5, r1
40009a90:	e1a06002 	mov	r6, r2
40009a94:	e3540000 	cmp	r4, #0
40009a98:	0a000001 	beq	40009aa4 <_txe_event_flags_create+0x20>
40009a9c:	e3560028 	cmp	r6, #40	; 0x28
40009aa0:	0a000001 	beq	40009aac <_txe_event_flags_create+0x28>
40009aa4:	e3a00006 	mov	r0, #6
40009aa8:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009aac:	e10f7000 	mrs	r7, CPSR
40009ab0:	e3878080 	orr	r8, r7, #128	; 0x80
40009ab4:	e121f008 	msr	CPSR_c, r8
40009ab8:	e59f00e8 	ldr	r0, [pc, #232]	; 40009ba8 <_txe_event_flags_create+0x124>
40009abc:	e5900000 	ldr	r0, [r0]
40009ac0:	e2800001 	add	r0, r0, #1
40009ac4:	e59f10dc 	ldr	r1, [pc, #220]	; 40009ba8 <_txe_event_flags_create+0x124>
40009ac8:	e5810000 	str	r0, [r1]
40009acc:	e121f007 	msr	CPSR_c, r7
40009ad0:	e59f00d4 	ldr	r0, [pc, #212]	; 40009bac <_txe_event_flags_create+0x128>
40009ad4:	e590a000 	ldr	sl, [r0]
40009ad8:	e3a09000 	mov	r9, #0
40009adc:	ea000004 	b	40009af4 <_txe_event_flags_create+0x70>
40009ae0:	e154000a 	cmp	r4, sl
40009ae4:	1a000000 	bne	40009aec <_txe_event_flags_create+0x68>
40009ae8:	ea000005 	b	40009b04 <_txe_event_flags_create+0x80>
40009aec:	e59aa018 	ldr	sl, [sl, #24]
40009af0:	e2899001 	add	r9, r9, #1
40009af4:	e59f00b4 	ldr	r0, [pc, #180]	; 40009bb0 <_txe_event_flags_create+0x12c>
40009af8:	e5900000 	ldr	r0, [r0]
40009afc:	e1590000 	cmp	r9, r0
40009b00:	3afffff6 	bcc	40009ae0 <_txe_event_flags_create+0x5c>
40009b04:	e1a00000 	nop			; (mov r0, r0)
40009b08:	e10f7000 	mrs	r7, CPSR
40009b0c:	e3878080 	orr	r8, r7, #128	; 0x80
40009b10:	e121f008 	msr	CPSR_c, r8
40009b14:	e59f008c 	ldr	r0, [pc, #140]	; 40009ba8 <_txe_event_flags_create+0x124>
40009b18:	e5900000 	ldr	r0, [r0]
40009b1c:	e2400001 	sub	r0, r0, #1
40009b20:	e59f1080 	ldr	r1, [pc, #128]	; 40009ba8 <_txe_event_flags_create+0x124>
40009b24:	e5810000 	str	r0, [r1]
40009b28:	e121f007 	msr	CPSR_c, r7
40009b2c:	eb001568 	bl	4000f0d4 <_tx_thread_system_preempt_check>
40009b30:	e154000a 	cmp	r4, sl
40009b34:	1a000001 	bne	40009b40 <_txe_event_flags_create+0xbc>
40009b38:	e3a00006 	mov	r0, #6
40009b3c:	eaffffd9 	b	40009aa8 <_txe_event_flags_create+0x24>
40009b40:	e59f006c 	ldr	r0, [pc, #108]	; 40009bb4 <_txe_event_flags_create+0x130>
40009b44:	e590b000 	ldr	fp, [r0]
40009b48:	e35b0000 	cmp	fp, #0
40009b4c:	0a000008 	beq	40009b74 <_txe_event_flags_create+0xf0>
40009b50:	e59f0060 	ldr	r0, [pc, #96]	; 40009bb8 <_txe_event_flags_create+0x134>
40009b54:	e15b0000 	cmp	fp, r0
40009b58:	0a000003 	beq	40009b6c <_txe_event_flags_create+0xe8>
40009b5c:	e59f0058 	ldr	r0, [pc, #88]	; 40009bbc <_txe_event_flags_create+0x138>
40009b60:	e5900000 	ldr	r0, [r0]
40009b64:	e3500000 	cmp	r0, #0
40009b68:	0a000008 	beq	40009b90 <_txe_event_flags_create+0x10c>
40009b6c:	e3a00013 	mov	r0, #19
40009b70:	eaffffcc 	b	40009aa8 <_txe_event_flags_create+0x24>
40009b74:	e59f0040 	ldr	r0, [pc, #64]	; 40009bbc <_txe_event_flags_create+0x138>
40009b78:	e5900000 	ldr	r0, [r0]
40009b7c:	e59f103c 	ldr	r1, [pc, #60]	; 40009bc0 <_txe_event_flags_create+0x13c>
40009b80:	e1500001 	cmp	r0, r1
40009b84:	2a000001 	bcs	40009b90 <_txe_event_flags_create+0x10c>
40009b88:	e3a00013 	mov	r0, #19
40009b8c:	eaffffc5 	b	40009aa8 <_txe_event_flags_create+0x24>
40009b90:	e1a01005 	mov	r1, r5
40009b94:	e1a00004 	mov	r0, r4
40009b98:	eb0007f9 	bl	4000bb84 <_tx_event_flags_create>
40009b9c:	e58d0000 	str	r0, [sp]
40009ba0:	e59d0000 	ldr	r0, [sp]
40009ba4:	eaffffbf 	b	40009aa8 <_txe_event_flags_create+0x24>
40009ba8:	40030e50 	.word	0x40030e50
40009bac:	40030eb8 	.word	0x40030eb8
40009bb0:	40030ebc 	.word	0x40030ebc
40009bb4:	40030e34 	.word	0x40030e34
40009bb8:	40032974 	.word	0x40032974
40009bbc:	40030e2c 	.word	0x40030e2c
40009bc0:	f0f0f0f0 	.word	0xf0f0f0f0

40009bc4 <_txe_event_flags_delete>:
40009bc4:	e92d4070 	push	{r4, r5, r6, lr}
40009bc8:	e1a04000 	mov	r4, r0
40009bcc:	e3540000 	cmp	r4, #0
40009bd0:	0a000003 	beq	40009be4 <_txe_event_flags_delete+0x20>
40009bd4:	e5940000 	ldr	r0, [r4]
40009bd8:	e59f1054 	ldr	r1, [pc, #84]	; 40009c34 <_txe_event_flags_delete+0x70>
40009bdc:	e1500001 	cmp	r0, r1
40009be0:	0a000001 	beq	40009bec <_txe_event_flags_delete+0x28>
40009be4:	e3a00006 	mov	r0, #6
40009be8:	e8bd8070 	pop	{r4, r5, r6, pc}
40009bec:	e59f0044 	ldr	r0, [pc, #68]	; 40009c38 <_txe_event_flags_delete+0x74>
40009bf0:	e5905000 	ldr	r5, [r0]
40009bf4:	e3550000 	cmp	r5, #0
40009bf8:	0a000006 	beq	40009c18 <_txe_event_flags_delete+0x54>
40009bfc:	e59f0038 	ldr	r0, [pc, #56]	; 40009c3c <_txe_event_flags_delete+0x78>
40009c00:	e5900000 	ldr	r0, [r0]
40009c04:	e3500000 	cmp	r0, #0
40009c08:	1a000002 	bne	40009c18 <_txe_event_flags_delete+0x54>
40009c0c:	e59f002c 	ldr	r0, [pc, #44]	; 40009c40 <_txe_event_flags_delete+0x7c>
40009c10:	e1550000 	cmp	r5, r0
40009c14:	1a000001 	bne	40009c20 <_txe_event_flags_delete+0x5c>
40009c18:	e3a00013 	mov	r0, #19
40009c1c:	eafffff1 	b	40009be8 <_txe_event_flags_delete+0x24>
40009c20:	e1a00004 	mov	r0, r4
40009c24:	eb000849 	bl	4000bd50 <_tx_event_flags_delete>
40009c28:	e1a06000 	mov	r6, r0
40009c2c:	e1a00006 	mov	r0, r6
40009c30:	eaffffec 	b	40009be8 <_txe_event_flags_delete+0x24>
40009c34:	4456444e 	.word	0x4456444e
40009c38:	40030e34 	.word	0x40030e34
40009c3c:	40030e2c 	.word	0x40030e2c
40009c40:	40032974 	.word	0x40032974

40009c44 <_txe_event_flags_get>:
40009c44:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009c48:	e1a04000 	mov	r4, r0
40009c4c:	e1a05001 	mov	r5, r1
40009c50:	e1a06002 	mov	r6, r2
40009c54:	e1a08003 	mov	r8, r3
40009c58:	e59d9020 	ldr	r9, [sp, #32]
40009c5c:	e3540000 	cmp	r4, #0
40009c60:	0a000003 	beq	40009c74 <_txe_event_flags_get+0x30>
40009c64:	e5940000 	ldr	r0, [r4]
40009c68:	e59f1084 	ldr	r1, [pc, #132]	; 40009cf4 <_txe_event_flags_get+0xb0>
40009c6c:	e1500001 	cmp	r0, r1
40009c70:	0a000001 	beq	40009c7c <_txe_event_flags_get+0x38>
40009c74:	e3a00006 	mov	r0, #6
40009c78:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009c7c:	e3580000 	cmp	r8, #0
40009c80:	1a000001 	bne	40009c8c <_txe_event_flags_get+0x48>
40009c84:	e3a00003 	mov	r0, #3
40009c88:	eafffffa 	b	40009c78 <_txe_event_flags_get+0x34>
40009c8c:	e3590000 	cmp	r9, #0
40009c90:	0a00000a 	beq	40009cc0 <_txe_event_flags_get+0x7c>
40009c94:	e59f005c 	ldr	r0, [pc, #92]	; 40009cf8 <_txe_event_flags_get+0xb4>
40009c98:	e5900000 	ldr	r0, [r0]
40009c9c:	e3500000 	cmp	r0, #0
40009ca0:	1a000004 	bne	40009cb8 <_txe_event_flags_get+0x74>
40009ca4:	e59f0050 	ldr	r0, [pc, #80]	; 40009cfc <_txe_event_flags_get+0xb8>
40009ca8:	e5900000 	ldr	r0, [r0]
40009cac:	e59f104c 	ldr	r1, [pc, #76]	; 40009d00 <_txe_event_flags_get+0xbc>
40009cb0:	e1500001 	cmp	r0, r1
40009cb4:	1a000001 	bne	40009cc0 <_txe_event_flags_get+0x7c>
40009cb8:	e3a00004 	mov	r0, #4
40009cbc:	eaffffed 	b	40009c78 <_txe_event_flags_get+0x34>
40009cc0:	e3560003 	cmp	r6, #3
40009cc4:	9a000001 	bls	40009cd0 <_txe_event_flags_get+0x8c>
40009cc8:	e3a00008 	mov	r0, #8
40009ccc:	eaffffe9 	b	40009c78 <_txe_event_flags_get+0x34>
40009cd0:	e1a03008 	mov	r3, r8
40009cd4:	e1a02006 	mov	r2, r6
40009cd8:	e1a01005 	mov	r1, r5
40009cdc:	e1a00004 	mov	r0, r4
40009ce0:	e58d9000 	str	r9, [sp]
40009ce4:	eb0008ac 	bl	4000bf9c <_tx_event_flags_get>
40009ce8:	e1a07000 	mov	r7, r0
40009cec:	e1a00007 	mov	r0, r7
40009cf0:	eaffffe0 	b	40009c78 <_txe_event_flags_get+0x34>
40009cf4:	4456444e 	.word	0x4456444e
40009cf8:	40030e2c 	.word	0x40030e2c
40009cfc:	40030e34 	.word	0x40030e34
40009d00:	40032974 	.word	0x40032974

40009d04 <_txe_event_flags_set>:
40009d04:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009d08:	e1a04000 	mov	r4, r0
40009d0c:	e1a05001 	mov	r5, r1
40009d10:	e1a06002 	mov	r6, r2
40009d14:	e3540000 	cmp	r4, #0
40009d18:	0a000003 	beq	40009d2c <_txe_event_flags_set+0x28>
40009d1c:	e5940000 	ldr	r0, [r4]
40009d20:	e59f1040 	ldr	r1, [pc, #64]	; 40009d68 <_txe_event_flags_set+0x64>
40009d24:	e1500001 	cmp	r0, r1
40009d28:	0a000001 	beq	40009d34 <_txe_event_flags_set+0x30>
40009d2c:	e3a00006 	mov	r0, #6
40009d30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009d34:	e3560002 	cmp	r6, #2
40009d38:	0a000003 	beq	40009d4c <_txe_event_flags_set+0x48>
40009d3c:	e3560000 	cmp	r6, #0
40009d40:	0a000001 	beq	40009d4c <_txe_event_flags_set+0x48>
40009d44:	e3a00008 	mov	r0, #8
40009d48:	eafffff8 	b	40009d30 <_txe_event_flags_set+0x2c>
40009d4c:	e1a02006 	mov	r2, r6
40009d50:	e1a01005 	mov	r1, r5
40009d54:	e1a00004 	mov	r0, r4
40009d58:	eb000943 	bl	4000c26c <_tx_event_flags_set>
40009d5c:	e1a07000 	mov	r7, r0
40009d60:	e1a00007 	mov	r0, r7
40009d64:	eafffff1 	b	40009d30 <_txe_event_flags_set+0x2c>
40009d68:	4456444e 	.word	0x4456444e

40009d6c <_txe_mutex_create>:
40009d6c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40009d70:	e1a04000 	mov	r4, r0
40009d74:	e1a05001 	mov	r5, r1
40009d78:	e1a06002 	mov	r6, r2
40009d7c:	e1a07003 	mov	r7, r3
40009d80:	e3540000 	cmp	r4, #0
40009d84:	0a000001 	beq	40009d90 <_txe_mutex_create+0x24>
40009d88:	e3570038 	cmp	r7, #56	; 0x38
40009d8c:	0a000001 	beq	40009d98 <_txe_mutex_create+0x2c>
40009d90:	e3a0001c 	mov	r0, #28
40009d94:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009d98:	e10f0000 	mrs	r0, CPSR
40009d9c:	e58d0004 	str	r0, [sp, #4]
40009da0:	e59d0004 	ldr	r0, [sp, #4]
40009da4:	e3808080 	orr	r8, r0, #128	; 0x80
40009da8:	e121f008 	msr	CPSR_c, r8
40009dac:	e59f0114 	ldr	r0, [pc, #276]	; 40009ec8 <_txe_mutex_create+0x15c>
40009db0:	e5900000 	ldr	r0, [r0]
40009db4:	e2800001 	add	r0, r0, #1
40009db8:	e59f1108 	ldr	r1, [pc, #264]	; 40009ec8 <_txe_mutex_create+0x15c>
40009dbc:	e5810000 	str	r0, [r1]
40009dc0:	e59d0004 	ldr	r0, [sp, #4]
40009dc4:	e121f000 	msr	CPSR_c, r0
40009dc8:	e59f00fc 	ldr	r0, [pc, #252]	; 40009ecc <_txe_mutex_create+0x160>
40009dcc:	e590a000 	ldr	sl, [r0]
40009dd0:	e3a09000 	mov	r9, #0
40009dd4:	ea000004 	b	40009dec <_txe_mutex_create+0x80>
40009dd8:	e154000a 	cmp	r4, sl
40009ddc:	1a000000 	bne	40009de4 <_txe_mutex_create+0x78>
40009de0:	ea000005 	b	40009dfc <_txe_mutex_create+0x90>
40009de4:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
40009de8:	e2899001 	add	r9, r9, #1
40009dec:	e59f00dc 	ldr	r0, [pc, #220]	; 40009ed0 <_txe_mutex_create+0x164>
40009df0:	e5900000 	ldr	r0, [r0]
40009df4:	e1590000 	cmp	r9, r0
40009df8:	3afffff6 	bcc	40009dd8 <_txe_mutex_create+0x6c>
40009dfc:	e1a00000 	nop			; (mov r0, r0)
40009e00:	e10f0000 	mrs	r0, CPSR
40009e04:	e58d0004 	str	r0, [sp, #4]
40009e08:	e59d0004 	ldr	r0, [sp, #4]
40009e0c:	e3808080 	orr	r8, r0, #128	; 0x80
40009e10:	e121f008 	msr	CPSR_c, r8
40009e14:	e59f00ac 	ldr	r0, [pc, #172]	; 40009ec8 <_txe_mutex_create+0x15c>
40009e18:	e5900000 	ldr	r0, [r0]
40009e1c:	e2400001 	sub	r0, r0, #1
40009e20:	e59f10a0 	ldr	r1, [pc, #160]	; 40009ec8 <_txe_mutex_create+0x15c>
40009e24:	e5810000 	str	r0, [r1]
40009e28:	e59d0004 	ldr	r0, [sp, #4]
40009e2c:	e121f000 	msr	CPSR_c, r0
40009e30:	eb0014a7 	bl	4000f0d4 <_tx_thread_system_preempt_check>
40009e34:	e154000a 	cmp	r4, sl
40009e38:	1a000001 	bne	40009e44 <_txe_mutex_create+0xd8>
40009e3c:	e3a0001c 	mov	r0, #28
40009e40:	eaffffd3 	b	40009d94 <_txe_mutex_create+0x28>
40009e44:	e3560001 	cmp	r6, #1
40009e48:	0a000003 	beq	40009e5c <_txe_mutex_create+0xf0>
40009e4c:	e3560000 	cmp	r6, #0
40009e50:	0a000001 	beq	40009e5c <_txe_mutex_create+0xf0>
40009e54:	e3a0001f 	mov	r0, #31
40009e58:	eaffffcd 	b	40009d94 <_txe_mutex_create+0x28>
40009e5c:	e59f0070 	ldr	r0, [pc, #112]	; 40009ed4 <_txe_mutex_create+0x168>
40009e60:	e590b000 	ldr	fp, [r0]
40009e64:	e35b0000 	cmp	fp, #0
40009e68:	0a000008 	beq	40009e90 <_txe_mutex_create+0x124>
40009e6c:	e59f0064 	ldr	r0, [pc, #100]	; 40009ed8 <_txe_mutex_create+0x16c>
40009e70:	e15b0000 	cmp	fp, r0
40009e74:	0a000003 	beq	40009e88 <_txe_mutex_create+0x11c>
40009e78:	e59f005c 	ldr	r0, [pc, #92]	; 40009edc <_txe_mutex_create+0x170>
40009e7c:	e5900000 	ldr	r0, [r0]
40009e80:	e3500000 	cmp	r0, #0
40009e84:	0a000008 	beq	40009eac <_txe_mutex_create+0x140>
40009e88:	e3a00013 	mov	r0, #19
40009e8c:	eaffffc0 	b	40009d94 <_txe_mutex_create+0x28>
40009e90:	e59f0044 	ldr	r0, [pc, #68]	; 40009edc <_txe_mutex_create+0x170>
40009e94:	e5900000 	ldr	r0, [r0]
40009e98:	e59f1040 	ldr	r1, [pc, #64]	; 40009ee0 <_txe_mutex_create+0x174>
40009e9c:	e1500001 	cmp	r0, r1
40009ea0:	2a000001 	bcs	40009eac <_txe_mutex_create+0x140>
40009ea4:	e3a00013 	mov	r0, #19
40009ea8:	eaffffb9 	b	40009d94 <_txe_mutex_create+0x28>
40009eac:	e1a02006 	mov	r2, r6
40009eb0:	e1a01005 	mov	r1, r5
40009eb4:	e1a00004 	mov	r0, r4
40009eb8:	eb000a8f 	bl	4000c8fc <_tx_mutex_create>
40009ebc:	e58d0000 	str	r0, [sp]
40009ec0:	e59d0000 	ldr	r0, [sp]
40009ec4:	eaffffb2 	b	40009d94 <_txe_mutex_create+0x28>
40009ec8:	40030e50 	.word	0x40030e50
40009ecc:	40030ec0 	.word	0x40030ec0
40009ed0:	40030ec4 	.word	0x40030ec4
40009ed4:	40030e34 	.word	0x40030e34
40009ed8:	40032974 	.word	0x40032974
40009edc:	40030e2c 	.word	0x40030e2c
40009ee0:	f0f0f0f0 	.word	0xf0f0f0f0

40009ee4 <_txe_mutex_delete>:
40009ee4:	e92d4070 	push	{r4, r5, r6, lr}
40009ee8:	e1a04000 	mov	r4, r0
40009eec:	e3540000 	cmp	r4, #0
40009ef0:	0a000003 	beq	40009f04 <_txe_mutex_delete+0x20>
40009ef4:	e5940000 	ldr	r0, [r4]
40009ef8:	e59f1054 	ldr	r1, [pc, #84]	; 40009f54 <_txe_mutex_delete+0x70>
40009efc:	e1500001 	cmp	r0, r1
40009f00:	0a000001 	beq	40009f0c <_txe_mutex_delete+0x28>
40009f04:	e3a0001c 	mov	r0, #28
40009f08:	e8bd8070 	pop	{r4, r5, r6, pc}
40009f0c:	e59f0044 	ldr	r0, [pc, #68]	; 40009f58 <_txe_mutex_delete+0x74>
40009f10:	e5905000 	ldr	r5, [r0]
40009f14:	e3550000 	cmp	r5, #0
40009f18:	0a000006 	beq	40009f38 <_txe_mutex_delete+0x54>
40009f1c:	e59f0038 	ldr	r0, [pc, #56]	; 40009f5c <_txe_mutex_delete+0x78>
40009f20:	e5900000 	ldr	r0, [r0]
40009f24:	e3500000 	cmp	r0, #0
40009f28:	1a000002 	bne	40009f38 <_txe_mutex_delete+0x54>
40009f2c:	e59f002c 	ldr	r0, [pc, #44]	; 40009f60 <_txe_mutex_delete+0x7c>
40009f30:	e1550000 	cmp	r5, r0
40009f34:	1a000001 	bne	40009f40 <_txe_mutex_delete+0x5c>
40009f38:	e3a00013 	mov	r0, #19
40009f3c:	eafffff1 	b	40009f08 <_txe_mutex_delete+0x24>
40009f40:	e1a00004 	mov	r0, r4
40009f44:	eb000ae2 	bl	4000cad4 <_tx_mutex_delete>
40009f48:	e1a06000 	mov	r6, r0
40009f4c:	e1a00006 	mov	r0, r6
40009f50:	eaffffec 	b	40009f08 <_txe_mutex_delete+0x24>
40009f54:	4d555445 	.word	0x4d555445
40009f58:	40030e34 	.word	0x40030e34
40009f5c:	40030e2c 	.word	0x40030e2c
40009f60:	40032974 	.word	0x40032974

40009f64 <_txe_mutex_get>:
40009f64:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009f68:	e1a04000 	mov	r4, r0
40009f6c:	e1a05001 	mov	r5, r1
40009f70:	e3540000 	cmp	r4, #0
40009f74:	0a000003 	beq	40009f88 <_txe_mutex_get+0x24>
40009f78:	e5940000 	ldr	r0, [r4]
40009f7c:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a024 <_txe_mutex_get+0xc0>
40009f80:	e1500001 	cmp	r0, r1
40009f84:	0a000001 	beq	40009f90 <_txe_mutex_get+0x2c>
40009f88:	e3a0001c 	mov	r0, #28
40009f8c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009f90:	e59f0090 	ldr	r0, [pc, #144]	; 4000a028 <_txe_mutex_get+0xc4>
40009f94:	e5906000 	ldr	r6, [r0]
40009f98:	e3550000 	cmp	r5, #0
40009f9c:	0a000008 	beq	40009fc4 <_txe_mutex_get+0x60>
40009fa0:	e59f0084 	ldr	r0, [pc, #132]	; 4000a02c <_txe_mutex_get+0xc8>
40009fa4:	e5900000 	ldr	r0, [r0]
40009fa8:	e3500000 	cmp	r0, #0
40009fac:	1a000002 	bne	40009fbc <_txe_mutex_get+0x58>
40009fb0:	e59f0078 	ldr	r0, [pc, #120]	; 4000a030 <_txe_mutex_get+0xcc>
40009fb4:	e1560000 	cmp	r6, r0
40009fb8:	1a000001 	bne	40009fc4 <_txe_mutex_get+0x60>
40009fbc:	e3a00004 	mov	r0, #4
40009fc0:	eafffff1 	b	40009f8c <_txe_mutex_get+0x28>
40009fc4:	e3560000 	cmp	r6, #0
40009fc8:	0a000008 	beq	40009ff0 <_txe_mutex_get+0x8c>
40009fcc:	e59f005c 	ldr	r0, [pc, #92]	; 4000a030 <_txe_mutex_get+0xcc>
40009fd0:	e1560000 	cmp	r6, r0
40009fd4:	0a000003 	beq	40009fe8 <_txe_mutex_get+0x84>
40009fd8:	e59f004c 	ldr	r0, [pc, #76]	; 4000a02c <_txe_mutex_get+0xc8>
40009fdc:	e5900000 	ldr	r0, [r0]
40009fe0:	e3500000 	cmp	r0, #0
40009fe4:	0a000008 	beq	4000a00c <_txe_mutex_get+0xa8>
40009fe8:	e3a00013 	mov	r0, #19
40009fec:	eaffffe6 	b	40009f8c <_txe_mutex_get+0x28>
40009ff0:	e59f0034 	ldr	r0, [pc, #52]	; 4000a02c <_txe_mutex_get+0xc8>
40009ff4:	e5900000 	ldr	r0, [r0]
40009ff8:	e59f1034 	ldr	r1, [pc, #52]	; 4000a034 <_txe_mutex_get+0xd0>
40009ffc:	e1500001 	cmp	r0, r1
4000a000:	2a000001 	bcs	4000a00c <_txe_mutex_get+0xa8>
4000a004:	e3a00013 	mov	r0, #19
4000a008:	eaffffdf 	b	40009f8c <_txe_mutex_get+0x28>
4000a00c:	e1a01005 	mov	r1, r5
4000a010:	e1a00004 	mov	r0, r4
4000a014:	eb000b65 	bl	4000cdb0 <_tx_mutex_get>
4000a018:	e1a07000 	mov	r7, r0
4000a01c:	e1a00007 	mov	r0, r7
4000a020:	eaffffd9 	b	40009f8c <_txe_mutex_get+0x28>
4000a024:	4d555445 	.word	0x4d555445
4000a028:	40030e34 	.word	0x40030e34
4000a02c:	40030e2c 	.word	0x40030e2c
4000a030:	40032974 	.word	0x40032974
4000a034:	f0f0f0f0 	.word	0xf0f0f0f0

4000a038 <_txe_mutex_put>:
4000a038:	e92d4070 	push	{r4, r5, r6, lr}
4000a03c:	e1a04000 	mov	r4, r0
4000a040:	e3540000 	cmp	r4, #0
4000a044:	0a000003 	beq	4000a058 <_txe_mutex_put+0x20>
4000a048:	e5940000 	ldr	r0, [r4]
4000a04c:	e59f1070 	ldr	r1, [pc, #112]	; 4000a0c4 <_txe_mutex_put+0x8c>
4000a050:	e1500001 	cmp	r0, r1
4000a054:	0a000001 	beq	4000a060 <_txe_mutex_put+0x28>
4000a058:	e3a0001c 	mov	r0, #28
4000a05c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a060:	e59f0060 	ldr	r0, [pc, #96]	; 4000a0c8 <_txe_mutex_put+0x90>
4000a064:	e5905000 	ldr	r5, [r0]
4000a068:	e3550000 	cmp	r5, #0
4000a06c:	0a000008 	beq	4000a094 <_txe_mutex_put+0x5c>
4000a070:	e59f0054 	ldr	r0, [pc, #84]	; 4000a0cc <_txe_mutex_put+0x94>
4000a074:	e1550000 	cmp	r5, r0
4000a078:	0a000003 	beq	4000a08c <_txe_mutex_put+0x54>
4000a07c:	e59f004c 	ldr	r0, [pc, #76]	; 4000a0d0 <_txe_mutex_put+0x98>
4000a080:	e5900000 	ldr	r0, [r0]
4000a084:	e3500000 	cmp	r0, #0
4000a088:	0a000008 	beq	4000a0b0 <_txe_mutex_put+0x78>
4000a08c:	e3a00013 	mov	r0, #19
4000a090:	eafffff1 	b	4000a05c <_txe_mutex_put+0x24>
4000a094:	e59f0034 	ldr	r0, [pc, #52]	; 4000a0d0 <_txe_mutex_put+0x98>
4000a098:	e5900000 	ldr	r0, [r0]
4000a09c:	e59f1030 	ldr	r1, [pc, #48]	; 4000a0d4 <_txe_mutex_put+0x9c>
4000a0a0:	e1500001 	cmp	r0, r1
4000a0a4:	2a000001 	bcs	4000a0b0 <_txe_mutex_put+0x78>
4000a0a8:	e3a00013 	mov	r0, #19
4000a0ac:	eaffffea 	b	4000a05c <_txe_mutex_put+0x24>
4000a0b0:	e1a00004 	mov	r0, r4
4000a0b4:	eb000c1c 	bl	4000d12c <_tx_mutex_put>
4000a0b8:	e1a06000 	mov	r6, r0
4000a0bc:	e1a00006 	mov	r0, r6
4000a0c0:	eaffffe5 	b	4000a05c <_txe_mutex_put+0x24>
4000a0c4:	4d555445 	.word	0x4d555445
4000a0c8:	40030e34 	.word	0x40030e34
4000a0cc:	40032974 	.word	0x40032974
4000a0d0:	40030e2c 	.word	0x40030e2c
4000a0d4:	f0f0f0f0 	.word	0xf0f0f0f0

4000a0d8 <_txe_queue_create>:
4000a0d8:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a0dc:	e24dd014 	sub	sp, sp, #20
4000a0e0:	e1a04000 	mov	r4, r0
4000a0e4:	e1a05002 	mov	r5, r2
4000a0e8:	e1a06003 	mov	r6, r3
4000a0ec:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a0f0:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a0f4:	e3540000 	cmp	r4, #0
4000a0f8:	0a000001 	beq	4000a104 <_txe_queue_create+0x2c>
4000a0fc:	e358003c 	cmp	r8, #60	; 0x3c
4000a100:	0a000002 	beq	4000a110 <_txe_queue_create+0x38>
4000a104:	e3a00009 	mov	r0, #9
4000a108:	e28dd024 	add	sp, sp, #36	; 0x24
4000a10c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a110:	e10f9000 	mrs	r9, CPSR
4000a114:	e389a080 	orr	sl, r9, #128	; 0x80
4000a118:	e121f00a 	msr	CPSR_c, sl
4000a11c:	e59f0150 	ldr	r0, [pc, #336]	; 4000a274 <_txe_queue_create+0x19c>
4000a120:	e5900000 	ldr	r0, [r0]
4000a124:	e2800001 	add	r0, r0, #1
4000a128:	e59f1144 	ldr	r1, [pc, #324]	; 4000a274 <_txe_queue_create+0x19c>
4000a12c:	e5810000 	str	r0, [r1]
4000a130:	e121f009 	msr	CPSR_c, r9
4000a134:	e59f013c 	ldr	r0, [pc, #316]	; 4000a278 <_txe_queue_create+0x1a0>
4000a138:	e5900000 	ldr	r0, [r0]
4000a13c:	e58d0008 	str	r0, [sp, #8]
4000a140:	e3a00000 	mov	r0, #0
4000a144:	e58d000c 	str	r0, [sp, #12]
4000a148:	ea000009 	b	4000a174 <_txe_queue_create+0x9c>
4000a14c:	e59d0008 	ldr	r0, [sp, #8]
4000a150:	e1540000 	cmp	r4, r0
4000a154:	1a000000 	bne	4000a15c <_txe_queue_create+0x84>
4000a158:	ea00000a 	b	4000a188 <_txe_queue_create+0xb0>
4000a15c:	e59d0008 	ldr	r0, [sp, #8]
4000a160:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a164:	e58d0008 	str	r0, [sp, #8]
4000a168:	e59d000c 	ldr	r0, [sp, #12]
4000a16c:	e2800001 	add	r0, r0, #1
4000a170:	e58d000c 	str	r0, [sp, #12]
4000a174:	e59f1100 	ldr	r1, [pc, #256]	; 4000a27c <_txe_queue_create+0x1a4>
4000a178:	e59d000c 	ldr	r0, [sp, #12]
4000a17c:	e5911000 	ldr	r1, [r1]
4000a180:	e1500001 	cmp	r0, r1
4000a184:	3afffff0 	bcc	4000a14c <_txe_queue_create+0x74>
4000a188:	e1a00000 	nop			; (mov r0, r0)
4000a18c:	e10f9000 	mrs	r9, CPSR
4000a190:	e389a080 	orr	sl, r9, #128	; 0x80
4000a194:	e121f00a 	msr	CPSR_c, sl
4000a198:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a274 <_txe_queue_create+0x19c>
4000a19c:	e5900000 	ldr	r0, [r0]
4000a1a0:	e2400001 	sub	r0, r0, #1
4000a1a4:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a274 <_txe_queue_create+0x19c>
4000a1a8:	e5810000 	str	r0, [r1]
4000a1ac:	e121f009 	msr	CPSR_c, r9
4000a1b0:	eb0013c7 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000a1b4:	e59d0008 	ldr	r0, [sp, #8]
4000a1b8:	e1540000 	cmp	r4, r0
4000a1bc:	1a000001 	bne	4000a1c8 <_txe_queue_create+0xf0>
4000a1c0:	e3a00009 	mov	r0, #9
4000a1c4:	eaffffcf 	b	4000a108 <_txe_queue_create+0x30>
4000a1c8:	e3560000 	cmp	r6, #0
4000a1cc:	1a000001 	bne	4000a1d8 <_txe_queue_create+0x100>
4000a1d0:	e3a00003 	mov	r0, #3
4000a1d4:	eaffffcb 	b	4000a108 <_txe_queue_create+0x30>
4000a1d8:	e3550000 	cmp	r5, #0
4000a1dc:	0a000001 	beq	4000a1e8 <_txe_queue_create+0x110>
4000a1e0:	e3550010 	cmp	r5, #16
4000a1e4:	9a000001 	bls	4000a1f0 <_txe_queue_create+0x118>
4000a1e8:	e3a00005 	mov	r0, #5
4000a1ec:	eaffffc5 	b	4000a108 <_txe_queue_create+0x30>
4000a1f0:	e1550127 	cmp	r5, r7, lsr #2
4000a1f4:	9a000001 	bls	4000a200 <_txe_queue_create+0x128>
4000a1f8:	e3a00005 	mov	r0, #5
4000a1fc:	eaffffc1 	b	4000a108 <_txe_queue_create+0x30>
4000a200:	e59f0078 	ldr	r0, [pc, #120]	; 4000a280 <_txe_queue_create+0x1a8>
4000a204:	e590b000 	ldr	fp, [r0]
4000a208:	e35b0000 	cmp	fp, #0
4000a20c:	0a000008 	beq	4000a234 <_txe_queue_create+0x15c>
4000a210:	e59f006c 	ldr	r0, [pc, #108]	; 4000a284 <_txe_queue_create+0x1ac>
4000a214:	e15b0000 	cmp	fp, r0
4000a218:	0a000003 	beq	4000a22c <_txe_queue_create+0x154>
4000a21c:	e59f0064 	ldr	r0, [pc, #100]	; 4000a288 <_txe_queue_create+0x1b0>
4000a220:	e5900000 	ldr	r0, [r0]
4000a224:	e3500000 	cmp	r0, #0
4000a228:	0a000008 	beq	4000a250 <_txe_queue_create+0x178>
4000a22c:	e3a00013 	mov	r0, #19
4000a230:	eaffffb4 	b	4000a108 <_txe_queue_create+0x30>
4000a234:	e59f004c 	ldr	r0, [pc, #76]	; 4000a288 <_txe_queue_create+0x1b0>
4000a238:	e5900000 	ldr	r0, [r0]
4000a23c:	e59f1048 	ldr	r1, [pc, #72]	; 4000a28c <_txe_queue_create+0x1b4>
4000a240:	e1500001 	cmp	r0, r1
4000a244:	2a000001 	bcs	4000a250 <_txe_queue_create+0x178>
4000a248:	e3a00013 	mov	r0, #19
4000a24c:	eaffffad 	b	4000a108 <_txe_queue_create+0x30>
4000a250:	e1a03006 	mov	r3, r6
4000a254:	e1a02005 	mov	r2, r5
4000a258:	e58d7000 	str	r7, [sp]
4000a25c:	e1a00004 	mov	r0, r4
4000a260:	e59d1018 	ldr	r1, [sp, #24]
4000a264:	eb000ce5 	bl	4000d600 <_tx_queue_create>
4000a268:	e58d0010 	str	r0, [sp, #16]
4000a26c:	e59d0010 	ldr	r0, [sp, #16]
4000a270:	eaffffa4 	b	4000a108 <_txe_queue_create+0x30>
4000a274:	40030e50 	.word	0x40030e50
4000a278:	40030eb0 	.word	0x40030eb0
4000a27c:	40030eb4 	.word	0x40030eb4
4000a280:	40030e34 	.word	0x40030e34
4000a284:	40032974 	.word	0x40032974
4000a288:	40030e2c 	.word	0x40030e2c
4000a28c:	f0f0f0f0 	.word	0xf0f0f0f0

4000a290 <_txe_queue_front_send>:
4000a290:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a294:	e1a04000 	mov	r4, r0
4000a298:	e1a05001 	mov	r5, r1
4000a29c:	e1a06002 	mov	r6, r2
4000a2a0:	e3540000 	cmp	r4, #0
4000a2a4:	0a000003 	beq	4000a2b8 <_txe_queue_front_send+0x28>
4000a2a8:	e5940000 	ldr	r0, [r4]
4000a2ac:	e59f106c 	ldr	r1, [pc, #108]	; 4000a320 <_txe_queue_front_send+0x90>
4000a2b0:	e1500001 	cmp	r0, r1
4000a2b4:	0a000001 	beq	4000a2c0 <_txe_queue_front_send+0x30>
4000a2b8:	e3a00009 	mov	r0, #9
4000a2bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a2c0:	e3550000 	cmp	r5, #0
4000a2c4:	1a000001 	bne	4000a2d0 <_txe_queue_front_send+0x40>
4000a2c8:	e3a00003 	mov	r0, #3
4000a2cc:	eafffffa 	b	4000a2bc <_txe_queue_front_send+0x2c>
4000a2d0:	e3560000 	cmp	r6, #0
4000a2d4:	0a00000a 	beq	4000a304 <_txe_queue_front_send+0x74>
4000a2d8:	e59f0044 	ldr	r0, [pc, #68]	; 4000a324 <_txe_queue_front_send+0x94>
4000a2dc:	e5900000 	ldr	r0, [r0]
4000a2e0:	e3500000 	cmp	r0, #0
4000a2e4:	1a000004 	bne	4000a2fc <_txe_queue_front_send+0x6c>
4000a2e8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a328 <_txe_queue_front_send+0x98>
4000a2ec:	e5900000 	ldr	r0, [r0]
4000a2f0:	e59f1034 	ldr	r1, [pc, #52]	; 4000a32c <_txe_queue_front_send+0x9c>
4000a2f4:	e1500001 	cmp	r0, r1
4000a2f8:	1a000001 	bne	4000a304 <_txe_queue_front_send+0x74>
4000a2fc:	e3a00004 	mov	r0, #4
4000a300:	eaffffed 	b	4000a2bc <_txe_queue_front_send+0x2c>
4000a304:	e1a02006 	mov	r2, r6
4000a308:	e1a01005 	mov	r1, r5
4000a30c:	e1a00004 	mov	r0, r4
4000a310:	eb000d3d 	bl	4000d80c <_tx_queue_front_send>
4000a314:	e1a07000 	mov	r7, r0
4000a318:	e1a00007 	mov	r0, r7
4000a31c:	eaffffe6 	b	4000a2bc <_txe_queue_front_send+0x2c>
4000a320:	51554555 	.word	0x51554555
4000a324:	40030e2c 	.word	0x40030e2c
4000a328:	40030e34 	.word	0x40030e34
4000a32c:	40032974 	.word	0x40032974

4000a330 <_txe_queue_receive>:
4000a330:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a334:	e1a04000 	mov	r4, r0
4000a338:	e1a05001 	mov	r5, r1
4000a33c:	e1a06002 	mov	r6, r2
4000a340:	e3540000 	cmp	r4, #0
4000a344:	0a000003 	beq	4000a358 <_txe_queue_receive+0x28>
4000a348:	e5940000 	ldr	r0, [r4]
4000a34c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a3c0 <_txe_queue_receive+0x90>
4000a350:	e1500001 	cmp	r0, r1
4000a354:	0a000001 	beq	4000a360 <_txe_queue_receive+0x30>
4000a358:	e3a00009 	mov	r0, #9
4000a35c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a360:	e3550000 	cmp	r5, #0
4000a364:	1a000001 	bne	4000a370 <_txe_queue_receive+0x40>
4000a368:	e3a00003 	mov	r0, #3
4000a36c:	eafffffa 	b	4000a35c <_txe_queue_receive+0x2c>
4000a370:	e3560000 	cmp	r6, #0
4000a374:	0a00000a 	beq	4000a3a4 <_txe_queue_receive+0x74>
4000a378:	e59f0044 	ldr	r0, [pc, #68]	; 4000a3c4 <_txe_queue_receive+0x94>
4000a37c:	e5900000 	ldr	r0, [r0]
4000a380:	e3500000 	cmp	r0, #0
4000a384:	1a000004 	bne	4000a39c <_txe_queue_receive+0x6c>
4000a388:	e59f0038 	ldr	r0, [pc, #56]	; 4000a3c8 <_txe_queue_receive+0x98>
4000a38c:	e5900000 	ldr	r0, [r0]
4000a390:	e59f1034 	ldr	r1, [pc, #52]	; 4000a3cc <_txe_queue_receive+0x9c>
4000a394:	e1500001 	cmp	r0, r1
4000a398:	1a000001 	bne	4000a3a4 <_txe_queue_receive+0x74>
4000a39c:	e3a00004 	mov	r0, #4
4000a3a0:	eaffffed 	b	4000a35c <_txe_queue_receive+0x2c>
4000a3a4:	e1a02006 	mov	r2, r6
4000a3a8:	e1a01005 	mov	r1, r5
4000a3ac:	e1a00004 	mov	r0, r4
4000a3b0:	eb000e04 	bl	4000dbc8 <_tx_queue_receive>
4000a3b4:	e1a07000 	mov	r7, r0
4000a3b8:	e1a00007 	mov	r0, r7
4000a3bc:	eaffffe6 	b	4000a35c <_txe_queue_receive+0x2c>
4000a3c0:	51554555 	.word	0x51554555
4000a3c4:	40030e2c 	.word	0x40030e2c
4000a3c8:	40030e34 	.word	0x40030e34
4000a3cc:	40032974 	.word	0x40032974

4000a3d0 <_txe_queue_send>:
4000a3d0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a3d4:	e1a04000 	mov	r4, r0
4000a3d8:	e1a05001 	mov	r5, r1
4000a3dc:	e1a06002 	mov	r6, r2
4000a3e0:	e3540000 	cmp	r4, #0
4000a3e4:	0a000003 	beq	4000a3f8 <_txe_queue_send+0x28>
4000a3e8:	e5940000 	ldr	r0, [r4]
4000a3ec:	e59f106c 	ldr	r1, [pc, #108]	; 4000a460 <_txe_queue_send+0x90>
4000a3f0:	e1500001 	cmp	r0, r1
4000a3f4:	0a000001 	beq	4000a400 <_txe_queue_send+0x30>
4000a3f8:	e3a00009 	mov	r0, #9
4000a3fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a400:	e3550000 	cmp	r5, #0
4000a404:	1a000001 	bne	4000a410 <_txe_queue_send+0x40>
4000a408:	e3a00003 	mov	r0, #3
4000a40c:	eafffffa 	b	4000a3fc <_txe_queue_send+0x2c>
4000a410:	e3560000 	cmp	r6, #0
4000a414:	0a00000a 	beq	4000a444 <_txe_queue_send+0x74>
4000a418:	e59f0044 	ldr	r0, [pc, #68]	; 4000a464 <_txe_queue_send+0x94>
4000a41c:	e5900000 	ldr	r0, [r0]
4000a420:	e3500000 	cmp	r0, #0
4000a424:	1a000004 	bne	4000a43c <_txe_queue_send+0x6c>
4000a428:	e59f0038 	ldr	r0, [pc, #56]	; 4000a468 <_txe_queue_send+0x98>
4000a42c:	e5900000 	ldr	r0, [r0]
4000a430:	e59f1034 	ldr	r1, [pc, #52]	; 4000a46c <_txe_queue_send+0x9c>
4000a434:	e1500001 	cmp	r0, r1
4000a438:	1a000001 	bne	4000a444 <_txe_queue_send+0x74>
4000a43c:	e3a00004 	mov	r0, #4
4000a440:	eaffffed 	b	4000a3fc <_txe_queue_send+0x2c>
4000a444:	e1a02006 	mov	r2, r6
4000a448:	e1a01005 	mov	r1, r5
4000a44c:	e1a00004 	mov	r0, r4
4000a450:	eb000ef4 	bl	4000e028 <_tx_queue_send>
4000a454:	e1a07000 	mov	r7, r0
4000a458:	e1a00007 	mov	r0, r7
4000a45c:	eaffffe6 	b	4000a3fc <_txe_queue_send+0x2c>
4000a460:	51554555 	.word	0x51554555
4000a464:	40030e2c 	.word	0x40030e2c
4000a468:	40030e34 	.word	0x40030e34
4000a46c:	40032974 	.word	0x40032974

4000a470 <_txe_thread_create>:
4000a470:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a474:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a478:	e1a04000 	mov	r4, r0
4000a47c:	e1a05002 	mov	r5, r2
4000a480:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a484:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a488:	e3540000 	cmp	r4, #0
4000a48c:	0a000002 	beq	4000a49c <_txe_thread_create+0x2c>
4000a490:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a494:	e35000a8 	cmp	r0, #168	; 0xa8
4000a498:	0a000002 	beq	4000a4a8 <_txe_thread_create+0x38>
4000a49c:	e3a0000e 	mov	r0, #14
4000a4a0:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a4a4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a4a8:	e10f0000 	mrs	r0, CPSR
4000a4ac:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a4b0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a4b4:	e3800080 	orr	r0, r0, #128	; 0x80
4000a4b8:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a4bc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a4c0:	e121f000 	msr	CPSR_c, r0
4000a4c4:	e59f01ec 	ldr	r0, [pc, #492]	; 4000a6b8 <_txe_thread_create+0x248>
4000a4c8:	e5900000 	ldr	r0, [r0]
4000a4cc:	e2800001 	add	r0, r0, #1
4000a4d0:	e59f11e0 	ldr	r1, [pc, #480]	; 4000a6b8 <_txe_thread_create+0x248>
4000a4d4:	e5810000 	str	r0, [r1]
4000a4d8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a4dc:	e121f000 	msr	CPSR_c, r0
4000a4e0:	e59f01d4 	ldr	r0, [pc, #468]	; 4000a6bc <_txe_thread_create+0x24c>
4000a4e4:	e5900000 	ldr	r0, [r0]
4000a4e8:	e58d0018 	str	r0, [sp, #24]
4000a4ec:	e2470001 	sub	r0, r7, #1
4000a4f0:	e080b006 	add	fp, r0, r6
4000a4f4:	e3a00000 	mov	r0, #0
4000a4f8:	e58d001c 	str	r0, [sp, #28]
4000a4fc:	ea00001d 	b	4000a578 <_txe_thread_create+0x108>
4000a500:	e59d0018 	ldr	r0, [sp, #24]
4000a504:	e1540000 	cmp	r4, r0
4000a508:	1a000000 	bne	4000a510 <_txe_thread_create+0xa0>
4000a50c:	ea00001e 	b	4000a58c <_txe_thread_create+0x11c>
4000a510:	e59d0018 	ldr	r0, [sp, #24]
4000a514:	e590000c 	ldr	r0, [r0, #12]
4000a518:	e1500006 	cmp	r0, r6
4000a51c:	8a000005 	bhi	4000a538 <_txe_thread_create+0xc8>
4000a520:	e59d0018 	ldr	r0, [sp, #24]
4000a524:	e5900010 	ldr	r0, [r0, #16]
4000a528:	e1500006 	cmp	r0, r6
4000a52c:	9a000001 	bls	4000a538 <_txe_thread_create+0xc8>
4000a530:	e3a06000 	mov	r6, #0
4000a534:	ea000014 	b	4000a58c <_txe_thread_create+0x11c>
4000a538:	e59d0018 	ldr	r0, [sp, #24]
4000a53c:	e590000c 	ldr	r0, [r0, #12]
4000a540:	e150000b 	cmp	r0, fp
4000a544:	8a000005 	bhi	4000a560 <_txe_thread_create+0xf0>
4000a548:	e59d0018 	ldr	r0, [sp, #24]
4000a54c:	e5900010 	ldr	r0, [r0, #16]
4000a550:	e150000b 	cmp	r0, fp
4000a554:	9a000001 	bls	4000a560 <_txe_thread_create+0xf0>
4000a558:	e3a06000 	mov	r6, #0
4000a55c:	ea00000a 	b	4000a58c <_txe_thread_create+0x11c>
4000a560:	e59d0018 	ldr	r0, [sp, #24]
4000a564:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a568:	e58d0018 	str	r0, [sp, #24]
4000a56c:	e59d001c 	ldr	r0, [sp, #28]
4000a570:	e2800001 	add	r0, r0, #1
4000a574:	e58d001c 	str	r0, [sp, #28]
4000a578:	e59f1140 	ldr	r1, [pc, #320]	; 4000a6c0 <_txe_thread_create+0x250>
4000a57c:	e59d001c 	ldr	r0, [sp, #28]
4000a580:	e5911000 	ldr	r1, [r1]
4000a584:	e1500001 	cmp	r0, r1
4000a588:	3affffdc 	bcc	4000a500 <_txe_thread_create+0x90>
4000a58c:	e1a00000 	nop			; (mov r0, r0)
4000a590:	e10f0000 	mrs	r0, CPSR
4000a594:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a598:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a59c:	e3800080 	orr	r0, r0, #128	; 0x80
4000a5a0:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a5a4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a5a8:	e121f000 	msr	CPSR_c, r0
4000a5ac:	e59f0104 	ldr	r0, [pc, #260]	; 4000a6b8 <_txe_thread_create+0x248>
4000a5b0:	e5900000 	ldr	r0, [r0]
4000a5b4:	e2400001 	sub	r0, r0, #1
4000a5b8:	e59f10f8 	ldr	r1, [pc, #248]	; 4000a6b8 <_txe_thread_create+0x248>
4000a5bc:	e5810000 	str	r0, [r1]
4000a5c0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a5c4:	e121f000 	msr	CPSR_c, r0
4000a5c8:	eb0012c1 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000a5cc:	e59d0018 	ldr	r0, [sp, #24]
4000a5d0:	e1540000 	cmp	r4, r0
4000a5d4:	1a000001 	bne	4000a5e0 <_txe_thread_create+0x170>
4000a5d8:	e3a0000e 	mov	r0, #14
4000a5dc:	eaffffaf 	b	4000a4a0 <_txe_thread_create+0x30>
4000a5e0:	e3560000 	cmp	r6, #0
4000a5e4:	0a000001 	beq	4000a5f0 <_txe_thread_create+0x180>
4000a5e8:	e3550000 	cmp	r5, #0
4000a5ec:	1a000001 	bne	4000a5f8 <_txe_thread_create+0x188>
4000a5f0:	e3a00003 	mov	r0, #3
4000a5f4:	eaffffa9 	b	4000a4a0 <_txe_thread_create+0x30>
4000a5f8:	e35700c8 	cmp	r7, #200	; 0xc8
4000a5fc:	2a000001 	bcs	4000a608 <_txe_thread_create+0x198>
4000a600:	e3a00005 	mov	r0, #5
4000a604:	eaffffa5 	b	4000a4a0 <_txe_thread_create+0x30>
4000a608:	e3580020 	cmp	r8, #32
4000a60c:	3a000001 	bcc	4000a618 <_txe_thread_create+0x1a8>
4000a610:	e3a0000f 	mov	r0, #15
4000a614:	eaffffa1 	b	4000a4a0 <_txe_thread_create+0x30>
4000a618:	e1590008 	cmp	r9, r8
4000a61c:	9a000001 	bls	4000a628 <_txe_thread_create+0x1b8>
4000a620:	e3a00018 	mov	r0, #24
4000a624:	eaffff9d 	b	4000a4a0 <_txe_thread_create+0x30>
4000a628:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a62c:	e3500001 	cmp	r0, #1
4000a630:	9a000001 	bls	4000a63c <_txe_thread_create+0x1cc>
4000a634:	e3a00010 	mov	r0, #16
4000a638:	eaffff98 	b	4000a4a0 <_txe_thread_create+0x30>
4000a63c:	e59f0080 	ldr	r0, [pc, #128]	; 4000a6c4 <_txe_thread_create+0x254>
4000a640:	e590a000 	ldr	sl, [r0]
4000a644:	e35a0000 	cmp	sl, #0
4000a648:	0a000008 	beq	4000a670 <_txe_thread_create+0x200>
4000a64c:	e59f0074 	ldr	r0, [pc, #116]	; 4000a6c8 <_txe_thread_create+0x258>
4000a650:	e15a0000 	cmp	sl, r0
4000a654:	0a000003 	beq	4000a668 <_txe_thread_create+0x1f8>
4000a658:	e59f006c 	ldr	r0, [pc, #108]	; 4000a6cc <_txe_thread_create+0x25c>
4000a65c:	e5900000 	ldr	r0, [r0]
4000a660:	e3500000 	cmp	r0, #0
4000a664:	0a000008 	beq	4000a68c <_txe_thread_create+0x21c>
4000a668:	e3a00013 	mov	r0, #19
4000a66c:	eaffff8b 	b	4000a4a0 <_txe_thread_create+0x30>
4000a670:	e59f0054 	ldr	r0, [pc, #84]	; 4000a6cc <_txe_thread_create+0x25c>
4000a674:	e5900000 	ldr	r0, [r0]
4000a678:	e59f1050 	ldr	r1, [pc, #80]	; 4000a6d0 <_txe_thread_create+0x260>
4000a67c:	e1500001 	cmp	r0, r1
4000a680:	2a000001 	bcs	4000a68c <_txe_thread_create+0x21c>
4000a684:	e3a00013 	mov	r0, #19
4000a688:	eaffff84 	b	4000a4a0 <_txe_thread_create+0x30>
4000a68c:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a690:	e1cd21f0 	strd	r2, [sp, #16]
4000a694:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a698:	e1a02005 	mov	r2, r5
4000a69c:	e1a00004 	mov	r0, r4
4000a6a0:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000a6a4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000a6a8:	eb000f49 	bl	4000e3d4 <_tx_thread_create>
4000a6ac:	e58d0020 	str	r0, [sp, #32]
4000a6b0:	e59d0020 	ldr	r0, [sp, #32]
4000a6b4:	eaffff79 	b	4000a4a0 <_txe_thread_create+0x30>
4000a6b8:	40030e50 	.word	0x40030e50
4000a6bc:	40030e3c 	.word	0x40030e3c
4000a6c0:	40030e40 	.word	0x40030e40
4000a6c4:	40030e34 	.word	0x40030e34
4000a6c8:	40032974 	.word	0x40032974
4000a6cc:	40030e2c 	.word	0x40030e2c
4000a6d0:	f0f0f0f0 	.word	0xf0f0f0f0

4000a6d4 <_txe_thread_info_get>:
4000a6d4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a6d8:	e24dd01c 	sub	sp, sp, #28
4000a6dc:	e1a04000 	mov	r4, r0
4000a6e0:	e1a05001 	mov	r5, r1
4000a6e4:	e1a06002 	mov	r6, r2
4000a6e8:	e1a07003 	mov	r7, r3
4000a6ec:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000a6f0:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000a6f4:	e3540000 	cmp	r4, #0
4000a6f8:	0a000003 	beq	4000a70c <_txe_thread_info_get+0x38>
4000a6fc:	e5940000 	ldr	r0, [r4]
4000a700:	e59f103c 	ldr	r1, [pc, #60]	; 4000a744 <_txe_thread_info_get+0x70>
4000a704:	e1500001 	cmp	r0, r1
4000a708:	0a000002 	beq	4000a718 <_txe_thread_info_get+0x44>
4000a70c:	e3a0000e 	mov	r0, #14
4000a710:	e28dd01c 	add	sp, sp, #28
4000a714:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a718:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000a71c:	e58d3010 	str	r3, [sp, #16]
4000a720:	e1a03007 	mov	r3, r7
4000a724:	e1a02006 	mov	r2, r6
4000a728:	e1a01005 	mov	r1, r5
4000a72c:	e1a00004 	mov	r0, r4
4000a730:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000a734:	eb000ff5 	bl	4000e710 <_tx_thread_info_get>
4000a738:	e58d0018 	str	r0, [sp, #24]
4000a73c:	e59d0018 	ldr	r0, [sp, #24]
4000a740:	eafffff2 	b	4000a710 <_txe_thread_info_get+0x3c>
4000a744:	54485244 	.word	0x54485244

4000a748 <_txe_thread_priority_change>:
4000a748:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a74c:	e1a04000 	mov	r4, r0
4000a750:	e1a05001 	mov	r5, r1
4000a754:	e1a06002 	mov	r6, r2
4000a758:	e3540000 	cmp	r4, #0
4000a75c:	0a000003 	beq	4000a770 <_txe_thread_priority_change+0x28>
4000a760:	e5940000 	ldr	r0, [r4]
4000a764:	e59f1070 	ldr	r1, [pc, #112]	; 4000a7dc <_txe_thread_priority_change+0x94>
4000a768:	e1500001 	cmp	r0, r1
4000a76c:	0a000001 	beq	4000a778 <_txe_thread_priority_change+0x30>
4000a770:	e3a0000e 	mov	r0, #14
4000a774:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a778:	e3560000 	cmp	r6, #0
4000a77c:	1a000001 	bne	4000a788 <_txe_thread_priority_change+0x40>
4000a780:	e3a00003 	mov	r0, #3
4000a784:	eafffffa 	b	4000a774 <_txe_thread_priority_change+0x2c>
4000a788:	e3550020 	cmp	r5, #32
4000a78c:	3a000001 	bcc	4000a798 <_txe_thread_priority_change+0x50>
4000a790:	e3a0000f 	mov	r0, #15
4000a794:	eafffff6 	b	4000a774 <_txe_thread_priority_change+0x2c>
4000a798:	e59f0040 	ldr	r0, [pc, #64]	; 4000a7e0 <_txe_thread_priority_change+0x98>
4000a79c:	e5900000 	ldr	r0, [r0]
4000a7a0:	e3500000 	cmp	r0, #0
4000a7a4:	0a000003 	beq	4000a7b8 <_txe_thread_priority_change+0x70>
4000a7a8:	e59f0034 	ldr	r0, [pc, #52]	; 4000a7e4 <_txe_thread_priority_change+0x9c>
4000a7ac:	e5900000 	ldr	r0, [r0]
4000a7b0:	e3500000 	cmp	r0, #0
4000a7b4:	0a000001 	beq	4000a7c0 <_txe_thread_priority_change+0x78>
4000a7b8:	e3a00013 	mov	r0, #19
4000a7bc:	eaffffec 	b	4000a774 <_txe_thread_priority_change+0x2c>
4000a7c0:	e1a02006 	mov	r2, r6
4000a7c4:	e1a01005 	mov	r1, r5
4000a7c8:	e1a00004 	mov	r0, r4
4000a7cc:	eb001039 	bl	4000e8b8 <_tx_thread_priority_change>
4000a7d0:	e1a07000 	mov	r7, r0
4000a7d4:	e1a00007 	mov	r0, r7
4000a7d8:	eaffffe5 	b	4000a774 <_txe_thread_priority_change+0x2c>
4000a7dc:	54485244 	.word	0x54485244
4000a7e0:	40030e34 	.word	0x40030e34
4000a7e4:	40030e2c 	.word	0x40030e2c

4000a7e8 <_txe_thread_relinquish>:
4000a7e8:	e92d4010 	push	{r4, lr}
4000a7ec:	e59f0020 	ldr	r0, [pc, #32]	; 4000a814 <_txe_thread_relinquish+0x2c>
4000a7f0:	e5900000 	ldr	r0, [r0]
4000a7f4:	e3500000 	cmp	r0, #0
4000a7f8:	0a000004 	beq	4000a810 <_txe_thread_relinquish+0x28>
4000a7fc:	e59f0014 	ldr	r0, [pc, #20]	; 4000a818 <_txe_thread_relinquish+0x30>
4000a800:	e5900000 	ldr	r0, [r0]
4000a804:	e3500000 	cmp	r0, #0
4000a808:	1a000000 	bne	4000a810 <_txe_thread_relinquish+0x28>
4000a80c:	eb001091 	bl	4000ea58 <_tx_thread_relinquish>
4000a810:	e8bd8010 	pop	{r4, pc}
4000a814:	40030e34 	.word	0x40030e34
4000a818:	40030e2c 	.word	0x40030e2c

4000a81c <_txe_thread_resume>:
4000a81c:	e92d4070 	push	{r4, r5, r6, lr}
4000a820:	e1a04000 	mov	r4, r0
4000a824:	e3540000 	cmp	r4, #0
4000a828:	0a000003 	beq	4000a83c <_txe_thread_resume+0x20>
4000a82c:	e5940000 	ldr	r0, [r4]
4000a830:	e59f1020 	ldr	r1, [pc, #32]	; 4000a858 <_txe_thread_resume+0x3c>
4000a834:	e1500001 	cmp	r0, r1
4000a838:	0a000001 	beq	4000a844 <_txe_thread_resume+0x28>
4000a83c:	e3a0000e 	mov	r0, #14
4000a840:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a844:	e1a00004 	mov	r0, r4
4000a848:	eb00113e 	bl	4000ed48 <_tx_thread_resume>
4000a84c:	e1a05000 	mov	r5, r0
4000a850:	e1a00005 	mov	r0, r5
4000a854:	eafffff9 	b	4000a840 <_txe_thread_resume+0x24>
4000a858:	54485244 	.word	0x54485244

4000a85c <_txe_timer_activate>:
4000a85c:	e92d4070 	push	{r4, r5, r6, lr}
4000a860:	e1a04000 	mov	r4, r0
4000a864:	e3540000 	cmp	r4, #0
4000a868:	0a000003 	beq	4000a87c <_txe_timer_activate+0x20>
4000a86c:	e5940000 	ldr	r0, [r4]
4000a870:	e59f1020 	ldr	r1, [pc, #32]	; 4000a898 <_txe_timer_activate+0x3c>
4000a874:	e1500001 	cmp	r0, r1
4000a878:	0a000001 	beq	4000a884 <_txe_timer_activate+0x28>
4000a87c:	e3a00015 	mov	r0, #21
4000a880:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a884:	e1a00004 	mov	r0, r4
4000a888:	eb0013a4 	bl	4000f720 <_tx_timer_activate>
4000a88c:	e1a05000 	mov	r5, r0
4000a890:	e1a00005 	mov	r0, r5
4000a894:	eafffff9 	b	4000a880 <_txe_timer_activate+0x24>
4000a898:	4154494d 	.word	0x4154494d

4000a89c <_txe_timer_change>:
4000a89c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a8a0:	e1a04000 	mov	r4, r0
4000a8a4:	e1a05001 	mov	r5, r1
4000a8a8:	e1a06002 	mov	r6, r2
4000a8ac:	e3540000 	cmp	r4, #0
4000a8b0:	0a000003 	beq	4000a8c4 <_txe_timer_change+0x28>
4000a8b4:	e5940000 	ldr	r0, [r4]
4000a8b8:	e59f1058 	ldr	r1, [pc, #88]	; 4000a918 <_txe_timer_change+0x7c>
4000a8bc:	e1500001 	cmp	r0, r1
4000a8c0:	0a000001 	beq	4000a8cc <_txe_timer_change+0x30>
4000a8c4:	e3a00015 	mov	r0, #21
4000a8c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a8cc:	e3550000 	cmp	r5, #0
4000a8d0:	1a000001 	bne	4000a8dc <_txe_timer_change+0x40>
4000a8d4:	e3a00016 	mov	r0, #22
4000a8d8:	eafffffa 	b	4000a8c8 <_txe_timer_change+0x2c>
4000a8dc:	e59f0038 	ldr	r0, [pc, #56]	; 4000a91c <_txe_timer_change+0x80>
4000a8e0:	e5900000 	ldr	r0, [r0]
4000a8e4:	e3c0000f 	bic	r0, r0, #15
4000a8e8:	e59f1030 	ldr	r1, [pc, #48]	; 4000a920 <_txe_timer_change+0x84>
4000a8ec:	e1500001 	cmp	r0, r1
4000a8f0:	1a000001 	bne	4000a8fc <_txe_timer_change+0x60>
4000a8f4:	e3a00013 	mov	r0, #19
4000a8f8:	eafffff2 	b	4000a8c8 <_txe_timer_change+0x2c>
4000a8fc:	e1a02006 	mov	r2, r6
4000a900:	e1a01005 	mov	r1, r5
4000a904:	e1a00004 	mov	r0, r4
4000a908:	eb0013d4 	bl	4000f860 <_tx_timer_change>
4000a90c:	e1a07000 	mov	r7, r0
4000a910:	e1a00007 	mov	r0, r7
4000a914:	eaffffeb 	b	4000a8c8 <_txe_timer_change+0x2c>
4000a918:	4154494d 	.word	0x4154494d
4000a91c:	40030e2c 	.word	0x40030e2c
4000a920:	f0f0f0f0 	.word	0xf0f0f0f0

4000a924 <_txe_timer_create>:
4000a924:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a928:	e24dd01c 	sub	sp, sp, #28
4000a92c:	e1a04000 	mov	r4, r0
4000a930:	e1a05001 	mov	r5, r1
4000a934:	e1a06002 	mov	r6, r2
4000a938:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000a93c:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000a940:	e3540000 	cmp	r4, #0
4000a944:	0a000001 	beq	4000a950 <_txe_timer_create+0x2c>
4000a948:	e358002c 	cmp	r8, #44	; 0x2c
4000a94c:	0a000002 	beq	4000a95c <_txe_timer_create+0x38>
4000a950:	e3a00015 	mov	r0, #21
4000a954:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000a958:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a95c:	e10f9000 	mrs	r9, CPSR
4000a960:	e389a080 	orr	sl, r9, #128	; 0x80
4000a964:	e121f00a 	msr	CPSR_c, sl
4000a968:	e59f0160 	ldr	r0, [pc, #352]	; 4000aad0 <_txe_timer_create+0x1ac>
4000a96c:	e5900000 	ldr	r0, [r0]
4000a970:	e2800001 	add	r0, r0, #1
4000a974:	e59f1154 	ldr	r1, [pc, #340]	; 4000aad0 <_txe_timer_create+0x1ac>
4000a978:	e5810000 	str	r0, [r1]
4000a97c:	e121f009 	msr	CPSR_c, r9
4000a980:	e59f014c 	ldr	r0, [pc, #332]	; 4000aad4 <_txe_timer_create+0x1b0>
4000a984:	e5900000 	ldr	r0, [r0]
4000a988:	e58d0014 	str	r0, [sp, #20]
4000a98c:	e3a00000 	mov	r0, #0
4000a990:	e58d0018 	str	r0, [sp, #24]
4000a994:	ea000009 	b	4000a9c0 <_txe_timer_create+0x9c>
4000a998:	e59d0014 	ldr	r0, [sp, #20]
4000a99c:	e1540000 	cmp	r4, r0
4000a9a0:	1a000000 	bne	4000a9a8 <_txe_timer_create+0x84>
4000a9a4:	ea00000a 	b	4000a9d4 <_txe_timer_create+0xb0>
4000a9a8:	e59d0014 	ldr	r0, [sp, #20]
4000a9ac:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000a9b0:	e58d0014 	str	r0, [sp, #20]
4000a9b4:	e59d0018 	ldr	r0, [sp, #24]
4000a9b8:	e2800001 	add	r0, r0, #1
4000a9bc:	e58d0018 	str	r0, [sp, #24]
4000a9c0:	e59f1110 	ldr	r1, [pc, #272]	; 4000aad8 <_txe_timer_create+0x1b4>
4000a9c4:	e59d0018 	ldr	r0, [sp, #24]
4000a9c8:	e5911000 	ldr	r1, [r1]
4000a9cc:	e1500001 	cmp	r0, r1
4000a9d0:	3afffff0 	bcc	4000a998 <_txe_timer_create+0x74>
4000a9d4:	e1a00000 	nop			; (mov r0, r0)
4000a9d8:	e10f9000 	mrs	r9, CPSR
4000a9dc:	e389a080 	orr	sl, r9, #128	; 0x80
4000a9e0:	e121f00a 	msr	CPSR_c, sl
4000a9e4:	e59f00e4 	ldr	r0, [pc, #228]	; 4000aad0 <_txe_timer_create+0x1ac>
4000a9e8:	e5900000 	ldr	r0, [r0]
4000a9ec:	e2400001 	sub	r0, r0, #1
4000a9f0:	e59f10d8 	ldr	r1, [pc, #216]	; 4000aad0 <_txe_timer_create+0x1ac>
4000a9f4:	e5810000 	str	r0, [r1]
4000a9f8:	e121f009 	msr	CPSR_c, r9
4000a9fc:	eb0011b4 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000aa00:	e59d0014 	ldr	r0, [sp, #20]
4000aa04:	e1540000 	cmp	r4, r0
4000aa08:	1a000001 	bne	4000aa14 <_txe_timer_create+0xf0>
4000aa0c:	e3a00015 	mov	r0, #21
4000aa10:	eaffffcf 	b	4000a954 <_txe_timer_create+0x30>
4000aa14:	e3570000 	cmp	r7, #0
4000aa18:	1a000001 	bne	4000aa24 <_txe_timer_create+0x100>
4000aa1c:	e3a00016 	mov	r0, #22
4000aa20:	eaffffcb 	b	4000a954 <_txe_timer_create+0x30>
4000aa24:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aa28:	e3500001 	cmp	r0, #1
4000aa2c:	0a000004 	beq	4000aa44 <_txe_timer_create+0x120>
4000aa30:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aa34:	e3500000 	cmp	r0, #0
4000aa38:	0a000001 	beq	4000aa44 <_txe_timer_create+0x120>
4000aa3c:	e3a00017 	mov	r0, #23
4000aa40:	eaffffc3 	b	4000a954 <_txe_timer_create+0x30>
4000aa44:	e59f0090 	ldr	r0, [pc, #144]	; 4000aadc <_txe_timer_create+0x1b8>
4000aa48:	e5900000 	ldr	r0, [r0]
4000aa4c:	e58d0010 	str	r0, [sp, #16]
4000aa50:	e59d0010 	ldr	r0, [sp, #16]
4000aa54:	e3500000 	cmp	r0, #0
4000aa58:	0a000009 	beq	4000aa84 <_txe_timer_create+0x160>
4000aa5c:	e59f107c 	ldr	r1, [pc, #124]	; 4000aae0 <_txe_timer_create+0x1bc>
4000aa60:	e59d0010 	ldr	r0, [sp, #16]
4000aa64:	e1500001 	cmp	r0, r1
4000aa68:	0a000003 	beq	4000aa7c <_txe_timer_create+0x158>
4000aa6c:	e59f0070 	ldr	r0, [pc, #112]	; 4000aae4 <_txe_timer_create+0x1c0>
4000aa70:	e5900000 	ldr	r0, [r0]
4000aa74:	e3500000 	cmp	r0, #0
4000aa78:	0a000008 	beq	4000aaa0 <_txe_timer_create+0x17c>
4000aa7c:	e3a00013 	mov	r0, #19
4000aa80:	eaffffb3 	b	4000a954 <_txe_timer_create+0x30>
4000aa84:	e59f0058 	ldr	r0, [pc, #88]	; 4000aae4 <_txe_timer_create+0x1c0>
4000aa88:	e5900000 	ldr	r0, [r0]
4000aa8c:	e59f1054 	ldr	r1, [pc, #84]	; 4000aae8 <_txe_timer_create+0x1c4>
4000aa90:	e1500001 	cmp	r0, r1
4000aa94:	2a000001 	bcs	4000aaa0 <_txe_timer_create+0x17c>
4000aa98:	e3a00013 	mov	r0, #19
4000aa9c:	eaffffac 	b	4000a954 <_txe_timer_create+0x30>
4000aaa0:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000aaa4:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000aaa8:	e98d000c 	stmib	sp, {r2, r3}
4000aaac:	e58d7000 	str	r7, [sp]
4000aab0:	e1a02006 	mov	r2, r6
4000aab4:	e1a01005 	mov	r1, r5
4000aab8:	e1a00004 	mov	r0, r4
4000aabc:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000aac0:	eb0013b1 	bl	4000f98c <_tx_timer_create>
4000aac4:	e1a0b000 	mov	fp, r0
4000aac8:	e1a0000b 	mov	r0, fp
4000aacc:	eaffffa0 	b	4000a954 <_txe_timer_create+0x30>
4000aad0:	40030e50 	.word	0x40030e50
4000aad4:	40030e78 	.word	0x40030e78
4000aad8:	40030e7c 	.word	0x40030e7c
4000aadc:	40030e34 	.word	0x40030e34
4000aae0:	40032974 	.word	0x40032974
4000aae4:	40030e2c 	.word	0x40030e2c
4000aae8:	f0f0f0f0 	.word	0xf0f0f0f0

4000aaec <_txe_timer_deactivate>:
4000aaec:	e92d4070 	push	{r4, r5, r6, lr}
4000aaf0:	e1a04000 	mov	r4, r0
4000aaf4:	e3540000 	cmp	r4, #0
4000aaf8:	0a000003 	beq	4000ab0c <_txe_timer_deactivate+0x20>
4000aafc:	e5940000 	ldr	r0, [r4]
4000ab00:	e59f1020 	ldr	r1, [pc, #32]	; 4000ab28 <_txe_timer_deactivate+0x3c>
4000ab04:	e1500001 	cmp	r0, r1
4000ab08:	0a000001 	beq	4000ab14 <_txe_timer_deactivate+0x28>
4000ab0c:	e3a00015 	mov	r0, #21
4000ab10:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ab14:	e1a00004 	mov	r0, r4
4000ab18:	eb00141a 	bl	4000fb88 <_tx_timer_deactivate>
4000ab1c:	e1a05000 	mov	r5, r0
4000ab20:	e1a00005 	mov	r0, r5
4000ab24:	eafffff9 	b	4000ab10 <_txe_timer_deactivate+0x24>
4000ab28:	4154494d 	.word	0x4154494d

4000ab2c <_tx_thread_system_return>:
4000ab2c:	e3a00000 	mov	r0, #0
4000ab30:	e10f1000 	mrs	r1, CPSR
4000ab34:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ab38:	e3812080 	orr	r2, r1, #128	; 0x80
4000ab3c:	e12ff002 	msr	CPSR_fsxc, r2
4000ab40:	e59f302c 	ldr	r3, [pc, #44]	; 4000ab74 <_tx_thread_system_return+0x48>
4000ab44:	e5930000 	ldr	r0, [r3]
4000ab48:	e59f2028 	ldr	r2, [pc, #40]	; 4000ab78 <_tx_thread_system_return+0x4c>
4000ab4c:	e5921000 	ldr	r1, [r2]
4000ab50:	e580d008 	str	sp, [r0, #8]
4000ab54:	e3a04000 	mov	r4, #0
4000ab58:	e3510000 	cmp	r1, #0
4000ab5c:	0a000002 	beq	4000ab6c <_tx_thread_system_return+0x40>
4000ab60:	e590101c 	ldr	r1, [r0, #28]
4000ab64:	e5824000 	str	r4, [r2]
4000ab68:	e5801018 	str	r1, [r0, #24]
4000ab6c:	e5834000 	str	r4, [r3]
4000ab70:	ea000001 	b	4000ab7c <_tx_thread_schedule>
4000ab74:	40030e34 	.word	0x40030e34
4000ab78:	40030e60 	.word	0x40030e60

4000ab7c <_tx_thread_schedule>:
4000ab7c:	e10f2000 	mrs	r2, CPSR
4000ab80:	e3c20080 	bic	r0, r2, #128	; 0x80
4000ab84:	e12ff000 	msr	CPSR_fsxc, r0
4000ab88:	e59f104c 	ldr	r1, [pc, #76]	; 4000abdc <_tx_thread_schedule+0x60>
4000ab8c:	e5910000 	ldr	r0, [r1]
4000ab90:	e3500000 	cmp	r0, #0
4000ab94:	0afffffc 	beq	4000ab8c <_tx_thread_schedule+0x10>
4000ab98:	e12ff002 	msr	CPSR_fsxc, r2
4000ab9c:	e59f103c 	ldr	r1, [pc, #60]	; 4000abe0 <_tx_thread_schedule+0x64>
4000aba0:	e5810000 	str	r0, [r1]
4000aba4:	e5902004 	ldr	r2, [r0, #4]
4000aba8:	e5903018 	ldr	r3, [r0, #24]
4000abac:	e2822001 	add	r2, r2, #1
4000abb0:	e5802004 	str	r2, [r0, #4]
4000abb4:	e59f2028 	ldr	r2, [pc, #40]	; 4000abe4 <_tx_thread_schedule+0x68>
4000abb8:	e590d008 	ldr	sp, [r0, #8]
4000abbc:	e5823000 	str	r3, [r2]
4000abc0:	e8bd0003 	pop	{r0, r1}
4000abc4:	e3500000 	cmp	r0, #0
4000abc8:	116ff001 	msrne	SPSR_fsxc, r1
4000abcc:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000abd0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000abd4:	e12ff001 	msr	CPSR_fsxc, r1
4000abd8:	e12fff1e 	bx	lr
4000abdc:	40030e38 	.word	0x40030e38
4000abe0:	40030e34 	.word	0x40030e34
4000abe4:	40030e60 	.word	0x40030e60

4000abe8 <_tx_thread_vectored_context_save>:
4000abe8:	e59f3044 	ldr	r3, [pc, #68]	; 4000ac34 <_tx_thread_vectored_context_save+0x4c>
4000abec:	e5932000 	ldr	r2, [r3]
4000abf0:	e3520000 	cmp	r2, #0
4000abf4:	0a000003 	beq	4000ac08 <_tx_thread_vectored_context_save+0x20>
4000abf8:	e2822001 	add	r2, r2, #1
4000abfc:	e5832000 	str	r2, [r3]
4000ac00:	e3a0a000 	mov	sl, #0
4000ac04:	e12fff1e 	bx	lr
4000ac08:	e2822001 	add	r2, r2, #1
4000ac0c:	e5832000 	str	r2, [r3]
4000ac10:	e59f1020 	ldr	r1, [pc, #32]	; 4000ac38 <_tx_thread_vectored_context_save+0x50>
4000ac14:	e5910000 	ldr	r0, [r1]
4000ac18:	e3500000 	cmp	r0, #0
4000ac1c:	0a000001 	beq	4000ac28 <_tx_thread_vectored_context_save+0x40>
4000ac20:	e3a0a000 	mov	sl, #0
4000ac24:	e12fff1e 	bx	lr
4000ac28:	e3a0a000 	mov	sl, #0
4000ac2c:	e28dd020 	add	sp, sp, #32
4000ac30:	e12fff1e 	bx	lr
4000ac34:	40030e2c 	.word	0x40030e2c
4000ac38:	40030e34 	.word	0x40030e34

4000ac3c <_tx_timer_interrupt>:
4000ac3c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ad10 <_tx_timer_interrupt+0xd4>
4000ac40:	e5910000 	ldr	r0, [r1]
4000ac44:	e2800001 	add	r0, r0, #1
4000ac48:	e5810000 	str	r0, [r1]
4000ac4c:	e59f30c0 	ldr	r3, [pc, #192]	; 4000ad14 <_tx_timer_interrupt+0xd8>
4000ac50:	e5932000 	ldr	r2, [r3]
4000ac54:	e3520000 	cmp	r2, #0
4000ac58:	0a000006 	beq	4000ac78 <_tx_timer_interrupt+0x3c>
4000ac5c:	e2422001 	sub	r2, r2, #1
4000ac60:	e5832000 	str	r2, [r3]
4000ac64:	e3520000 	cmp	r2, #0
4000ac68:	1a000002 	bne	4000ac78 <_tx_timer_interrupt+0x3c>
4000ac6c:	e59f30a4 	ldr	r3, [pc, #164]	; 4000ad18 <_tx_timer_interrupt+0xdc>
4000ac70:	e3a00001 	mov	r0, #1
4000ac74:	e5830000 	str	r0, [r3]
4000ac78:	e59f109c 	ldr	r1, [pc, #156]	; 4000ad1c <_tx_timer_interrupt+0xe0>
4000ac7c:	e5910000 	ldr	r0, [r1]
4000ac80:	e5902000 	ldr	r2, [r0]
4000ac84:	e3520000 	cmp	r2, #0
4000ac88:	0a000003 	beq	4000ac9c <_tx_timer_interrupt+0x60>
4000ac8c:	e59f308c 	ldr	r3, [pc, #140]	; 4000ad20 <_tx_timer_interrupt+0xe4>
4000ac90:	e3a02001 	mov	r2, #1
4000ac94:	e5832000 	str	r2, [r3]
4000ac98:	ea000007 	b	4000acbc <_tx_timer_interrupt+0x80>
4000ac9c:	e2800004 	add	r0, r0, #4
4000aca0:	e59f307c 	ldr	r3, [pc, #124]	; 4000ad24 <_tx_timer_interrupt+0xe8>
4000aca4:	e5932000 	ldr	r2, [r3]
4000aca8:	e1500002 	cmp	r0, r2
4000acac:	1a000001 	bne	4000acb8 <_tx_timer_interrupt+0x7c>
4000acb0:	e59f3070 	ldr	r3, [pc, #112]	; 4000ad28 <_tx_timer_interrupt+0xec>
4000acb4:	e5930000 	ldr	r0, [r3]
4000acb8:	e5810000 	str	r0, [r1]
4000acbc:	e59f3054 	ldr	r3, [pc, #84]	; 4000ad18 <_tx_timer_interrupt+0xdc>
4000acc0:	e5932000 	ldr	r2, [r3]
4000acc4:	e3520000 	cmp	r2, #0
4000acc8:	1a000003 	bne	4000acdc <_tx_timer_interrupt+0xa0>
4000accc:	e59f104c 	ldr	r1, [pc, #76]	; 4000ad20 <_tx_timer_interrupt+0xe4>
4000acd0:	e5910000 	ldr	r0, [r1]
4000acd4:	e3500000 	cmp	r0, #0
4000acd8:	0a00000b 	beq	4000ad0c <_tx_timer_interrupt+0xd0>
4000acdc:	e92d4001 	push	{r0, lr}
4000ace0:	e59f1038 	ldr	r1, [pc, #56]	; 4000ad20 <_tx_timer_interrupt+0xe4>
4000ace4:	e5910000 	ldr	r0, [r1]
4000ace8:	e3500000 	cmp	r0, #0
4000acec:	0a000000 	beq	4000acf4 <_tx_timer_interrupt+0xb8>
4000acf0:	eb001441 	bl	4000fdfc <_tx_timer_expiration_process>
4000acf4:	e59f301c 	ldr	r3, [pc, #28]	; 4000ad18 <_tx_timer_interrupt+0xdc>
4000acf8:	e5932000 	ldr	r2, [r3]
4000acfc:	e3520000 	cmp	r2, #0
4000ad00:	0a000000 	beq	4000ad08 <_tx_timer_interrupt+0xcc>
4000ad04:	eb001210 	bl	4000f54c <_tx_thread_time_slice>
4000ad08:	e8bd4001 	pop	{r0, lr}
4000ad0c:	e12fff1e 	bx	lr
4000ad10:	40030e5c 	.word	0x40030e5c
4000ad14:	40030e60 	.word	0x40030e60
4000ad18:	40030e64 	.word	0x40030e64
4000ad1c:	40030e70 	.word	0x40030e70
4000ad20:	40030e74 	.word	0x40030e74
4000ad24:	40030e6c 	.word	0x40030e6c
4000ad28:	40030e68 	.word	0x40030e68

4000ad2c <_tx_thread_context_restore>:
4000ad2c:	e10f3000 	mrs	r3, CPSR
4000ad30:	e3830080 	orr	r0, r3, #128	; 0x80
4000ad34:	e12ff000 	msr	CPSR_fsxc, r0
4000ad38:	e59f30f0 	ldr	r3, [pc, #240]	; 4000ae30 <_tx_thread_context_restore+0x104>
4000ad3c:	e5932000 	ldr	r2, [r3]
4000ad40:	e2422001 	sub	r2, r2, #1
4000ad44:	e5832000 	str	r2, [r3]
4000ad48:	e3520000 	cmp	r2, #0
4000ad4c:	0a000003 	beq	4000ad60 <_tx_thread_context_restore+0x34>
4000ad50:	e8bd5401 	pop	{r0, sl, ip, lr}
4000ad54:	e16ff000 	msr	SPSR_fsxc, r0
4000ad58:	e8bd000f 	pop	{r0, r1, r2, r3}
4000ad5c:	e1b0f00e 	movs	pc, lr
4000ad60:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ae34 <_tx_thread_context_restore+0x108>
4000ad64:	e5910000 	ldr	r0, [r1]
4000ad68:	e3500000 	cmp	r0, #0
4000ad6c:	0a00002a 	beq	4000ae1c <_tx_thread_context_restore+0xf0>
4000ad70:	e59f30c0 	ldr	r3, [pc, #192]	; 4000ae38 <_tx_thread_context_restore+0x10c>
4000ad74:	e5932000 	ldr	r2, [r3]
4000ad78:	e3520000 	cmp	r2, #0
4000ad7c:	1a000003 	bne	4000ad90 <_tx_thread_context_restore+0x64>
4000ad80:	e59f30b4 	ldr	r3, [pc, #180]	; 4000ae3c <_tx_thread_context_restore+0x110>
4000ad84:	e5932000 	ldr	r2, [r3]
4000ad88:	e1500002 	cmp	r0, r2
4000ad8c:	1a000003 	bne	4000ada0 <_tx_thread_context_restore+0x74>
4000ad90:	e8bd5401 	pop	{r0, sl, ip, lr}
4000ad94:	e16ff000 	msr	SPSR_fsxc, r0
4000ad98:	e8bd000f 	pop	{r0, r1, r2, r3}
4000ad9c:	e1b0f00e 	movs	pc, lr
4000ada0:	e8bd5408 	pop	{r3, sl, ip, lr}
4000ada4:	e1a0100e 	mov	r1, lr
4000ada8:	e3a020d3 	mov	r2, #211	; 0xd3
4000adac:	e121f002 	msr	CPSR_c, r2
4000adb0:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000adb4:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000adb8:	e1a04003 	mov	r4, r3
4000adbc:	e3a020d2 	mov	r2, #210	; 0xd2
4000adc0:	e121f002 	msr	CPSR_c, r2
4000adc4:	e8bd000f 	pop	{r0, r1, r2, r3}
4000adc8:	e3a050d3 	mov	r5, #211	; 0xd3
4000adcc:	e121f005 	msr	CPSR_c, r5
4000add0:	e92d000f 	push	{r0, r1, r2, r3}
4000add4:	e3a03001 	mov	r3, #1
4000add8:	e92d0018 	push	{r3, r4}
4000addc:	e59f1050 	ldr	r1, [pc, #80]	; 4000ae34 <_tx_thread_context_restore+0x108>
4000ade0:	e5910000 	ldr	r0, [r1]
4000ade4:	e580d008 	str	sp, [r0, #8]
4000ade8:	e3c44020 	bic	r4, r4, #32
4000adec:	e3843080 	orr	r3, r4, #128	; 0x80
4000adf0:	e12ff003 	msr	CPSR_fsxc, r3
4000adf4:	e59f3044 	ldr	r3, [pc, #68]	; 4000ae40 <_tx_thread_context_restore+0x114>
4000adf8:	e5932000 	ldr	r2, [r3]
4000adfc:	e3520000 	cmp	r2, #0
4000ae00:	0a000002 	beq	4000ae10 <_tx_thread_context_restore+0xe4>
4000ae04:	e5802018 	str	r2, [r0, #24]
4000ae08:	e3a02000 	mov	r2, #0
4000ae0c:	e5832000 	str	r2, [r3]
4000ae10:	e3a00000 	mov	r0, #0
4000ae14:	e5810000 	str	r0, [r1]
4000ae18:	eaffff57 	b	4000ab7c <_tx_thread_schedule>
4000ae1c:	e10f3000 	mrs	r3, CPSR
4000ae20:	e3c3301f 	bic	r3, r3, #31
4000ae24:	e3833013 	orr	r3, r3, #19
4000ae28:	e12ff003 	msr	CPSR_fsxc, r3
4000ae2c:	eaffff52 	b	4000ab7c <_tx_thread_schedule>
4000ae30:	40030e2c 	.word	0x40030e2c
4000ae34:	40030e34 	.word	0x40030e34
4000ae38:	40030e50 	.word	0x40030e50
4000ae3c:	40030e38 	.word	0x40030e38
4000ae40:	40030e60 	.word	0x40030e60

4000ae44 <_tx_thread_irq_nesting_end>:
4000ae44:	e1a0300e 	mov	r3, lr
4000ae48:	e10f0000 	mrs	r0, CPSR
4000ae4c:	e3800080 	orr	r0, r0, #128	; 0x80
4000ae50:	e12ff000 	msr	CPSR_fsxc, r0
4000ae54:	e8bd4002 	pop	{r1, lr}
4000ae58:	e3c0001f 	bic	r0, r0, #31
4000ae5c:	e3800012 	orr	r0, r0, #18
4000ae60:	e12ff000 	msr	CPSR_fsxc, r0
4000ae64:	e12fff13 	bx	r3

4000ae68 <_tx_thread_irq_nesting_start>:
4000ae68:	e1a0300e 	mov	r3, lr
4000ae6c:	e10f0000 	mrs	r0, CPSR
4000ae70:	e3c0001f 	bic	r0, r0, #31
4000ae74:	e380001f 	orr	r0, r0, #31
4000ae78:	e12ff000 	msr	CPSR_fsxc, r0
4000ae7c:	e92d4002 	push	{r1, lr}
4000ae80:	e3c00080 	bic	r0, r0, #128	; 0x80
4000ae84:	e12ff000 	msr	CPSR_fsxc, r0
4000ae88:	e12fff13 	bx	r3

4000ae8c <_tx_initialize_low_level>:
4000ae8c:	e1a0100d 	mov	r1, sp
4000ae90:	e59f3024 	ldr	r3, [pc, #36]	; 4000aebc <_tx_initialize_low_level+0x30>
4000ae94:	e5831000 	str	r1, [r3]
4000ae98:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000ae9c:	e3a00000 	mov	r0, #0
4000aea0:	eb005b8c 	bl	40021cd8 <CyU3POsTimerInit>
4000aea4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000aea8:	e12fff1e 	bx	lr
4000aeac:	e59f200c 	ldr	r2, [pc, #12]	; 4000aec0 <_tx_initialize_low_level+0x34>
4000aeb0:	e5920000 	ldr	r0, [r2]
4000aeb4:	e59f2008 	ldr	r2, [pc, #8]	; 4000aec4 <_tx_initialize_low_level+0x38>
4000aeb8:	e5920000 	ldr	r0, [r2]
4000aebc:	40030e30 	.word	0x40030e30
4000aec0:	40030e54 	.word	0x40030e54
4000aec4:	40030dc8 	.word	0x40030dc8

4000aec8 <_tx_byte_allocate>:
4000aec8:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000aecc:	e1a04000 	mov	r4, r0
4000aed0:	e1a05001 	mov	r5, r1
4000aed4:	e1a06002 	mov	r6, r2
4000aed8:	e1a07003 	mov	r7, r3
4000aedc:	e3a00000 	mov	r0, #0
4000aee0:	e58d0000 	str	r0, [sp]
4000aee4:	e59f027c 	ldr	r0, [pc, #636]	; 4000b168 <_tx_byte_allocate+0x2a0>
4000aee8:	e590a000 	ldr	sl, [r0]
4000aeec:	e10f8000 	mrs	r8, CPSR
4000aef0:	e3889080 	orr	r9, r8, #128	; 0x80
4000aef4:	e121f009 	msr	CPSR_c, r9
4000aef8:	e2860003 	add	r0, r6, #3
4000aefc:	e1a00120 	lsr	r0, r0, #2
4000af00:	e1a06100 	lsl	r6, r0, #2
4000af04:	e59f0260 	ldr	r0, [pc, #608]	; 4000b16c <_tx_byte_allocate+0x2a4>
4000af08:	e5900000 	ldr	r0, [r0]
4000af0c:	e58d0004 	str	r0, [sp, #4]
4000af10:	e59f1254 	ldr	r1, [pc, #596]	; 4000b16c <_tx_byte_allocate+0x2a4>
4000af14:	e5910000 	ldr	r0, [r1]
4000af18:	e3500000 	cmp	r0, #0
4000af1c:	0a000031 	beq	4000afe8 <_tx_byte_allocate+0x120>
4000af20:	e59f1248 	ldr	r1, [pc, #584]	; 4000b170 <_tx_byte_allocate+0x2a8>
4000af24:	e5911000 	ldr	r1, [r1]
4000af28:	e2811001 	add	r1, r1, #1
4000af2c:	e59f223c 	ldr	r2, [pc, #572]	; 4000b170 <_tx_byte_allocate+0x2a8>
4000af30:	e5821000 	str	r1, [r2]
4000af34:	e580100c 	str	r1, [r0, #12]
4000af38:	e59f1234 	ldr	r1, [pc, #564]	; 4000b174 <_tx_byte_allocate+0x2ac>
4000af3c:	e5911000 	ldr	r1, [r1]
4000af40:	e3510000 	cmp	r1, #0
4000af44:	1a000006 	bne	4000af64 <_tx_byte_allocate+0x9c>
4000af48:	e59f1218 	ldr	r1, [pc, #536]	; 4000b168 <_tx_byte_allocate+0x2a0>
4000af4c:	e5911000 	ldr	r1, [r1]
4000af50:	e5801000 	str	r1, [r0]
4000af54:	e5901000 	ldr	r1, [r0]
4000af58:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000af5c:	e5801004 	str	r1, [r0, #4]
4000af60:	ea00000d 	b	4000af9c <_tx_byte_allocate+0xd4>
4000af64:	e59f1208 	ldr	r1, [pc, #520]	; 4000b174 <_tx_byte_allocate+0x2ac>
4000af68:	e5911000 	ldr	r1, [r1]
4000af6c:	e59f2204 	ldr	r2, [pc, #516]	; 4000b178 <_tx_byte_allocate+0x2b0>
4000af70:	e1510002 	cmp	r1, r2
4000af74:	2a000004 	bcs	4000af8c <_tx_byte_allocate+0xc4>
4000af78:	e3e01000 	mvn	r1, #0
4000af7c:	e5801000 	str	r1, [r0]
4000af80:	e3a01000 	mov	r1, #0
4000af84:	e5801004 	str	r1, [r0, #4]
4000af88:	ea000003 	b	4000af9c <_tx_byte_allocate+0xd4>
4000af8c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b178 <_tx_byte_allocate+0x2b0>
4000af90:	e5801000 	str	r1, [r0]
4000af94:	e3a01000 	mov	r1, #0
4000af98:	e5801004 	str	r1, [r0, #4]
4000af9c:	e3a01014 	mov	r1, #20
4000afa0:	e5801008 	str	r1, [r0, #8]
4000afa4:	e5804010 	str	r4, [r0, #16]
4000afa8:	e3a01000 	mov	r1, #0
4000afac:	e5801014 	str	r1, [r0, #20]
4000afb0:	e5806018 	str	r6, [r0, #24]
4000afb4:	e580701c 	str	r7, [r0, #28]
4000afb8:	e2800020 	add	r0, r0, #32
4000afbc:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b17c <_tx_byte_allocate+0x2b4>
4000afc0:	e5911000 	ldr	r1, [r1]
4000afc4:	e1500001 	cmp	r0, r1
4000afc8:	3a000001 	bcc	4000afd4 <_tx_byte_allocate+0x10c>
4000afcc:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b180 <_tx_byte_allocate+0x2b8>
4000afd0:	e5910000 	ldr	r0, [r1]
4000afd4:	e59f1190 	ldr	r1, [pc, #400]	; 4000b16c <_tx_byte_allocate+0x2a4>
4000afd8:	e5810000 	str	r0, [r1]
4000afdc:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b184 <_tx_byte_allocate+0x2bc>
4000afe0:	e5911000 	ldr	r1, [r1]
4000afe4:	e5810020 	str	r0, [r1, #32]
4000afe8:	e59d0004 	ldr	r0, [sp, #4]
4000afec:	e3500000 	cmp	r0, #0
4000aff0:	0a000002 	beq	4000b000 <_tx_byte_allocate+0x138>
4000aff4:	e59d0004 	ldr	r0, [sp, #4]
4000aff8:	e590000c 	ldr	r0, [r0, #12]
4000affc:	e58d0000 	str	r0, [sp]
4000b000:	e1a00000 	nop			; (mov r0, r0)
4000b004:	e584a020 	str	sl, [r4, #32]
4000b008:	e121f008 	msr	CPSR_c, r8
4000b00c:	e1a01006 	mov	r1, r6
4000b010:	e1a00004 	mov	r0, r4
4000b014:	eb0001ba 	bl	4000b704 <_tx_byte_pool_search>
4000b018:	e1a0b000 	mov	fp, r0
4000b01c:	e10f8000 	mrs	r8, CPSR
4000b020:	e3889080 	orr	r9, r8, #128	; 0x80
4000b024:	e121f009 	msr	CPSR_c, r9
4000b028:	e35b0000 	cmp	fp, #0
4000b02c:	1a000002 	bne	4000b03c <_tx_byte_allocate+0x174>
4000b030:	e5940020 	ldr	r0, [r4, #32]
4000b034:	e150000a 	cmp	r0, sl
4000b038:	1afffff1 	bne	4000b004 <_tx_byte_allocate+0x13c>
4000b03c:	e35b0000 	cmp	fp, #0
4000b040:	0a00000e 	beq	4000b080 <_tx_byte_allocate+0x1b8>
4000b044:	e585b000 	str	fp, [r5]
4000b048:	e59d0004 	ldr	r0, [sp, #4]
4000b04c:	e3500000 	cmp	r0, #0
4000b050:	0a000007 	beq	4000b074 <_tx_byte_allocate+0x1ac>
4000b054:	e59d0004 	ldr	r0, [sp, #4]
4000b058:	e590100c 	ldr	r1, [r0, #12]
4000b05c:	e59d0000 	ldr	r0, [sp]
4000b060:	e1510000 	cmp	r1, r0
4000b064:	1a000002 	bne	4000b074 <_tx_byte_allocate+0x1ac>
4000b068:	e5950000 	ldr	r0, [r5]
4000b06c:	e59d1004 	ldr	r1, [sp, #4]
4000b070:	e5810014 	str	r0, [r1, #20]
4000b074:	e3a00000 	mov	r0, #0
4000b078:	e58d0008 	str	r0, [sp, #8]
4000b07c:	ea000036 	b	4000b15c <_tx_byte_allocate+0x294>
4000b080:	e3570000 	cmp	r7, #0
4000b084:	0a000032 	beq	4000b154 <_tx_byte_allocate+0x28c>
4000b088:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b188 <_tx_byte_allocate+0x2c0>
4000b08c:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b090:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b094:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b098:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b09c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0a0:	e3500000 	cmp	r0, #0
4000b0a4:	0a00000a 	beq	4000b0d4 <_tx_byte_allocate+0x20c>
4000b0a8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0ac:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b0b0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0b4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b0b8:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b0bc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0c0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b0c4:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b0c8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0cc:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b0d0:	ea000002 	b	4000b0e0 <_tx_byte_allocate+0x218>
4000b0d4:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b0d8:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b0dc:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b0e0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b0e4:	e2800001 	add	r0, r0, #1
4000b0e8:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b0ec:	e3a00009 	mov	r0, #9
4000b0f0:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b0f4:	e3a00001 	mov	r0, #1
4000b0f8:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b0fc:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b100:	e59f0084 	ldr	r0, [pc, #132]	; 4000b18c <_tx_byte_allocate+0x2c4>
4000b104:	e5900000 	ldr	r0, [r0]
4000b108:	e2800001 	add	r0, r0, #1
4000b10c:	e59f1078 	ldr	r1, [pc, #120]	; 4000b18c <_tx_byte_allocate+0x2c4>
4000b110:	e5810000 	str	r0, [r1]
4000b114:	e121f008 	msr	CPSR_c, r8
4000b118:	e1a0000a 	mov	r0, sl
4000b11c:	ebfff671 	bl	40008ae8 <_tx_thread_system_suspend>
4000b120:	e59d0004 	ldr	r0, [sp, #4]
4000b124:	e3500000 	cmp	r0, #0
4000b128:	0a000007 	beq	4000b14c <_tx_byte_allocate+0x284>
4000b12c:	e59d0004 	ldr	r0, [sp, #4]
4000b130:	e590100c 	ldr	r1, [r0, #12]
4000b134:	e59d0000 	ldr	r0, [sp]
4000b138:	e1510000 	cmp	r1, r0
4000b13c:	1a000002 	bne	4000b14c <_tx_byte_allocate+0x284>
4000b140:	e5950000 	ldr	r0, [r5]
4000b144:	e59d1004 	ldr	r1, [sp, #4]
4000b148:	e5810014 	str	r0, [r1, #20]
4000b14c:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b150:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b154:	e3a00010 	mov	r0, #16
4000b158:	e58d0008 	str	r0, [sp, #8]
4000b15c:	e121f008 	msr	CPSR_c, r8
4000b160:	e59d0008 	ldr	r0, [sp, #8]
4000b164:	eafffff9 	b	4000b150 <_tx_byte_allocate+0x288>
4000b168:	40030e34 	.word	0x40030e34
4000b16c:	40030ea0 	.word	0x40030ea0
4000b170:	40030ea4 	.word	0x40030ea4
4000b174:	40030e2c 	.word	0x40030e2c
4000b178:	f0f0f0f0 	.word	0xf0f0f0f0
4000b17c:	40030e9c 	.word	0x40030e9c
4000b180:	40030e98 	.word	0x40030e98
4000b184:	40030e8c 	.word	0x40030e8c
4000b188:	4000b190 	.word	0x4000b190
4000b18c:	40030e50 	.word	0x40030e50

4000b190 <_tx_byte_pool_cleanup>:
4000b190:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b194:	e1a04000 	mov	r4, r0
4000b198:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b19c:	e10f5000 	mrs	r5, CPSR
4000b1a0:	e3856080 	orr	r6, r5, #128	; 0x80
4000b1a4:	e121f006 	msr	CPSR_c, r6
4000b1a8:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b1ac:	e3500000 	cmp	r0, #0
4000b1b0:	0a000026 	beq	4000b250 <_tx_byte_pool_cleanup+0xc0>
4000b1b4:	e3570000 	cmp	r7, #0
4000b1b8:	0a000024 	beq	4000b250 <_tx_byte_pool_cleanup+0xc0>
4000b1bc:	e5970000 	ldr	r0, [r7]
4000b1c0:	e59f1090 	ldr	r1, [pc, #144]	; 4000b258 <_tx_byte_pool_cleanup+0xc8>
4000b1c4:	e1500001 	cmp	r0, r1
4000b1c8:	1a000020 	bne	4000b250 <_tx_byte_pool_cleanup+0xc0>
4000b1cc:	e3a00000 	mov	r0, #0
4000b1d0:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b1d4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b1d8:	e1500004 	cmp	r0, r4
4000b1dc:	1a000002 	bne	4000b1ec <_tx_byte_pool_cleanup+0x5c>
4000b1e0:	e3a00000 	mov	r0, #0
4000b1e4:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b1e8:	ea000007 	b	4000b20c <_tx_byte_pool_cleanup+0x7c>
4000b1ec:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b1f0:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b1f4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b1f8:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b1fc:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b200:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b204:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b208:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b20c:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b210:	e2400001 	sub	r0, r0, #1
4000b214:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b218:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b21c:	e3500009 	cmp	r0, #9
4000b220:	1a00000a 	bne	4000b250 <_tx_byte_pool_cleanup+0xc0>
4000b224:	e3a00010 	mov	r0, #16
4000b228:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b22c:	e59f0028 	ldr	r0, [pc, #40]	; 4000b25c <_tx_byte_pool_cleanup+0xcc>
4000b230:	e5900000 	ldr	r0, [r0]
4000b234:	e2800001 	add	r0, r0, #1
4000b238:	e59f101c 	ldr	r1, [pc, #28]	; 4000b25c <_tx_byte_pool_cleanup+0xcc>
4000b23c:	e5810000 	str	r0, [r1]
4000b240:	e121f005 	msr	CPSR_c, r5
4000b244:	e1a00004 	mov	r0, r4
4000b248:	eb000fcd 	bl	4000f184 <_tx_thread_system_resume>
4000b24c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b250:	e121f005 	msr	CPSR_c, r5
4000b254:	eafffffc 	b	4000b24c <_tx_byte_pool_cleanup+0xbc>
4000b258:	42595445 	.word	0x42595445
4000b25c:	40030e50 	.word	0x40030e50

4000b260 <_tx_byte_pool_create>:
4000b260:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b264:	e1a04000 	mov	r4, r0
4000b268:	e1a05001 	mov	r5, r1
4000b26c:	e1a06002 	mov	r6, r2
4000b270:	e1a07003 	mov	r7, r3
4000b274:	e3a01034 	mov	r1, #52	; 0x34
4000b278:	e1a00004 	mov	r0, r4
4000b27c:	eb002088 	bl	400134a4 <__aeabi_memclr4>
4000b280:	e1a00127 	lsr	r0, r7, #2
4000b284:	e1a07100 	lsl	r7, r0, #2
4000b288:	e5845004 	str	r5, [r4, #4]
4000b28c:	e5846018 	str	r6, [r4, #24]
4000b290:	e584701c 	str	r7, [r4, #28]
4000b294:	e5846010 	str	r6, [r4, #16]
4000b298:	e5846014 	str	r6, [r4, #20]
4000b29c:	e2470008 	sub	r0, r7, #8
4000b2a0:	e5840008 	str	r0, [r4, #8]
4000b2a4:	e3a00002 	mov	r0, #2
4000b2a8:	e584000c 	str	r0, [r4, #12]
4000b2ac:	e0860007 	add	r0, r6, r7
4000b2b0:	e58d0004 	str	r0, [sp, #4]
4000b2b4:	e59d0004 	ldr	r0, [sp, #4]
4000b2b8:	e2400004 	sub	r0, r0, #4
4000b2bc:	e58d0004 	str	r0, [sp, #4]
4000b2c0:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b484 <_tx_byte_pool_create+0x224>
4000b2c4:	e59d1004 	ldr	r1, [sp, #4]
4000b2c8:	e5810000 	str	r0, [r1]
4000b2cc:	e59d0004 	ldr	r0, [sp, #4]
4000b2d0:	e2400004 	sub	r0, r0, #4
4000b2d4:	e58d0004 	str	r0, [sp, #4]
4000b2d8:	e59d0004 	ldr	r0, [sp, #4]
4000b2dc:	e5806000 	str	r6, [r0]
4000b2e0:	e59d0004 	ldr	r0, [sp, #4]
4000b2e4:	e5860000 	str	r0, [r6]
4000b2e8:	e58d6004 	str	r6, [sp, #4]
4000b2ec:	e59d0004 	ldr	r0, [sp, #4]
4000b2f0:	e2800004 	add	r0, r0, #4
4000b2f4:	e58d0004 	str	r0, [sp, #4]
4000b2f8:	e59f0188 	ldr	r0, [pc, #392]	; 4000b488 <_tx_byte_pool_create+0x228>
4000b2fc:	e59d1004 	ldr	r1, [sp, #4]
4000b300:	e5810000 	str	r0, [r1]
4000b304:	e3a00000 	mov	r0, #0
4000b308:	e5840020 	str	r0, [r4, #32]
4000b30c:	e10f8000 	mrs	r8, CPSR
4000b310:	e3889080 	orr	r9, r8, #128	; 0x80
4000b314:	e121f009 	msr	CPSR_c, r9
4000b318:	e59f016c 	ldr	r0, [pc, #364]	; 4000b48c <_tx_byte_pool_create+0x22c>
4000b31c:	e5840000 	str	r0, [r4]
4000b320:	e59f0168 	ldr	r0, [pc, #360]	; 4000b490 <_tx_byte_pool_create+0x230>
4000b324:	e5900000 	ldr	r0, [r0]
4000b328:	e3500000 	cmp	r0, #0
4000b32c:	0a00000b 	beq	4000b360 <_tx_byte_pool_create+0x100>
4000b330:	e59f0158 	ldr	r0, [pc, #344]	; 4000b490 <_tx_byte_pool_create+0x230>
4000b334:	e5900000 	ldr	r0, [r0]
4000b338:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b33c:	e59f014c 	ldr	r0, [pc, #332]	; 4000b490 <_tx_byte_pool_create+0x230>
4000b340:	e5900000 	ldr	r0, [r0]
4000b344:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b348:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b34c:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b350:	e59f0138 	ldr	r0, [pc, #312]	; 4000b490 <_tx_byte_pool_create+0x230>
4000b354:	e5900000 	ldr	r0, [r0]
4000b358:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b35c:	ea000003 	b	4000b370 <_tx_byte_pool_create+0x110>
4000b360:	e59f0128 	ldr	r0, [pc, #296]	; 4000b490 <_tx_byte_pool_create+0x230>
4000b364:	e5804000 	str	r4, [r0]
4000b368:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b36c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b370:	e59f011c 	ldr	r0, [pc, #284]	; 4000b494 <_tx_byte_pool_create+0x234>
4000b374:	e5900000 	ldr	r0, [r0]
4000b378:	e2800001 	add	r0, r0, #1
4000b37c:	e59f1110 	ldr	r1, [pc, #272]	; 4000b494 <_tx_byte_pool_create+0x234>
4000b380:	e5810000 	str	r0, [r1]
4000b384:	e3a03000 	mov	r3, #0
4000b388:	e58d3000 	str	r3, [sp]
4000b38c:	e1a03007 	mov	r3, r7
4000b390:	e1a02005 	mov	r2, r5
4000b394:	e1a01004 	mov	r1, r4
4000b398:	e3a00008 	mov	r0, #8
4000b39c:	eb0012ce 	bl	4000fedc <_tx_trace_object_register>
4000b3a0:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b498 <_tx_byte_pool_create+0x238>
4000b3a4:	e5910000 	ldr	r0, [r1]
4000b3a8:	e3500000 	cmp	r0, #0
4000b3ac:	0a000031 	beq	4000b478 <_tx_byte_pool_create+0x218>
4000b3b0:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b49c <_tx_byte_pool_create+0x23c>
4000b3b4:	e5911000 	ldr	r1, [r1]
4000b3b8:	e2811001 	add	r1, r1, #1
4000b3bc:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b49c <_tx_byte_pool_create+0x23c>
4000b3c0:	e5821000 	str	r1, [r2]
4000b3c4:	e580100c 	str	r1, [r0, #12]
4000b3c8:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b4a0 <_tx_byte_pool_create+0x240>
4000b3cc:	e5911000 	ldr	r1, [r1]
4000b3d0:	e3510000 	cmp	r1, #0
4000b3d4:	1a000006 	bne	4000b3f4 <_tx_byte_pool_create+0x194>
4000b3d8:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b4a4 <_tx_byte_pool_create+0x244>
4000b3dc:	e5911000 	ldr	r1, [r1]
4000b3e0:	e5801000 	str	r1, [r0]
4000b3e4:	e5901000 	ldr	r1, [r0]
4000b3e8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b3ec:	e5801004 	str	r1, [r0, #4]
4000b3f0:	ea00000d 	b	4000b42c <_tx_byte_pool_create+0x1cc>
4000b3f4:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b4a0 <_tx_byte_pool_create+0x240>
4000b3f8:	e5911000 	ldr	r1, [r1]
4000b3fc:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b4a8 <_tx_byte_pool_create+0x248>
4000b400:	e1510002 	cmp	r1, r2
4000b404:	2a000004 	bcs	4000b41c <_tx_byte_pool_create+0x1bc>
4000b408:	e3e01000 	mvn	r1, #0
4000b40c:	e5801000 	str	r1, [r0]
4000b410:	e3a01000 	mov	r1, #0
4000b414:	e5801004 	str	r1, [r0, #4]
4000b418:	ea000003 	b	4000b42c <_tx_byte_pool_create+0x1cc>
4000b41c:	e59f1084 	ldr	r1, [pc, #132]	; 4000b4a8 <_tx_byte_pool_create+0x248>
4000b420:	e5801000 	str	r1, [r0]
4000b424:	e3a01000 	mov	r1, #0
4000b428:	e5801004 	str	r1, [r0, #4]
4000b42c:	e3a01015 	mov	r1, #21
4000b430:	e5801008 	str	r1, [r0, #8]
4000b434:	e5804010 	str	r4, [r0, #16]
4000b438:	e5806014 	str	r6, [r0, #20]
4000b43c:	e5807018 	str	r7, [r0, #24]
4000b440:	e28d1004 	add	r1, sp, #4
4000b444:	e580101c 	str	r1, [r0, #28]
4000b448:	e2800020 	add	r0, r0, #32
4000b44c:	e59f1058 	ldr	r1, [pc, #88]	; 4000b4ac <_tx_byte_pool_create+0x24c>
4000b450:	e5911000 	ldr	r1, [r1]
4000b454:	e1500001 	cmp	r0, r1
4000b458:	3a000001 	bcc	4000b464 <_tx_byte_pool_create+0x204>
4000b45c:	e59f104c 	ldr	r1, [pc, #76]	; 4000b4b0 <_tx_byte_pool_create+0x250>
4000b460:	e5910000 	ldr	r0, [r1]
4000b464:	e59f102c 	ldr	r1, [pc, #44]	; 4000b498 <_tx_byte_pool_create+0x238>
4000b468:	e5810000 	str	r0, [r1]
4000b46c:	e59f1040 	ldr	r1, [pc, #64]	; 4000b4b4 <_tx_byte_pool_create+0x254>
4000b470:	e5911000 	ldr	r1, [r1]
4000b474:	e5810020 	str	r0, [r1, #32]
4000b478:	e121f008 	msr	CPSR_c, r8
4000b47c:	e3a00000 	mov	r0, #0
4000b480:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b484:	aaaaaaaa 	.word	0xaaaaaaaa
4000b488:	ffffeeee 	.word	0xffffeeee
4000b48c:	42595445 	.word	0x42595445
4000b490:	40030ed0 	.word	0x40030ed0
4000b494:	40030ed4 	.word	0x40030ed4
4000b498:	40030ea0 	.word	0x40030ea0
4000b49c:	40030ea4 	.word	0x40030ea4
4000b4a0:	40030e2c 	.word	0x40030e2c
4000b4a4:	40030e34 	.word	0x40030e34
4000b4a8:	f0f0f0f0 	.word	0xf0f0f0f0
4000b4ac:	40030e9c 	.word	0x40030e9c
4000b4b0:	40030e98 	.word	0x40030e98
4000b4b4:	40030e8c 	.word	0x40030e8c

4000b4b8 <_tx_byte_pool_delete>:
4000b4b8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b4bc:	e1a04000 	mov	r4, r0
4000b4c0:	e10f5000 	mrs	r5, CPSR
4000b4c4:	e3856080 	orr	r6, r5, #128	; 0x80
4000b4c8:	e121f006 	msr	CPSR_c, r6
4000b4cc:	e59f1204 	ldr	r1, [pc, #516]	; 4000b6d8 <_tx_byte_pool_delete+0x220>
4000b4d0:	e5910000 	ldr	r0, [r1]
4000b4d4:	e3500000 	cmp	r0, #0
4000b4d8:	0a000031 	beq	4000b5a4 <_tx_byte_pool_delete+0xec>
4000b4dc:	e59f11f8 	ldr	r1, [pc, #504]	; 4000b6dc <_tx_byte_pool_delete+0x224>
4000b4e0:	e5911000 	ldr	r1, [r1]
4000b4e4:	e2811001 	add	r1, r1, #1
4000b4e8:	e59f21ec 	ldr	r2, [pc, #492]	; 4000b6dc <_tx_byte_pool_delete+0x224>
4000b4ec:	e5821000 	str	r1, [r2]
4000b4f0:	e580100c 	str	r1, [r0, #12]
4000b4f4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b6e0 <_tx_byte_pool_delete+0x228>
4000b4f8:	e5911000 	ldr	r1, [r1]
4000b4fc:	e3510000 	cmp	r1, #0
4000b500:	1a000006 	bne	4000b520 <_tx_byte_pool_delete+0x68>
4000b504:	e59f11d8 	ldr	r1, [pc, #472]	; 4000b6e4 <_tx_byte_pool_delete+0x22c>
4000b508:	e5911000 	ldr	r1, [r1]
4000b50c:	e5801000 	str	r1, [r0]
4000b510:	e5901000 	ldr	r1, [r0]
4000b514:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b518:	e5801004 	str	r1, [r0, #4]
4000b51c:	ea00000d 	b	4000b558 <_tx_byte_pool_delete+0xa0>
4000b520:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b6e0 <_tx_byte_pool_delete+0x228>
4000b524:	e5911000 	ldr	r1, [r1]
4000b528:	e59f21b8 	ldr	r2, [pc, #440]	; 4000b6e8 <_tx_byte_pool_delete+0x230>
4000b52c:	e1510002 	cmp	r1, r2
4000b530:	2a000004 	bcs	4000b548 <_tx_byte_pool_delete+0x90>
4000b534:	e3e01000 	mvn	r1, #0
4000b538:	e5801000 	str	r1, [r0]
4000b53c:	e3a01000 	mov	r1, #0
4000b540:	e5801004 	str	r1, [r0, #4]
4000b544:	ea000003 	b	4000b558 <_tx_byte_pool_delete+0xa0>
4000b548:	e59f1198 	ldr	r1, [pc, #408]	; 4000b6e8 <_tx_byte_pool_delete+0x230>
4000b54c:	e5801000 	str	r1, [r0]
4000b550:	e3a01000 	mov	r1, #0
4000b554:	e5801004 	str	r1, [r0, #4]
4000b558:	e3a01016 	mov	r1, #22
4000b55c:	e5801008 	str	r1, [r0, #8]
4000b560:	e5804010 	str	r4, [r0, #16]
4000b564:	e580d014 	str	sp, [r0, #20]
4000b568:	e3a01000 	mov	r1, #0
4000b56c:	e5801018 	str	r1, [r0, #24]
4000b570:	e580101c 	str	r1, [r0, #28]
4000b574:	e2800020 	add	r0, r0, #32
4000b578:	e59f116c 	ldr	r1, [pc, #364]	; 4000b6ec <_tx_byte_pool_delete+0x234>
4000b57c:	e5911000 	ldr	r1, [r1]
4000b580:	e1500001 	cmp	r0, r1
4000b584:	3a000001 	bcc	4000b590 <_tx_byte_pool_delete+0xd8>
4000b588:	e59f1160 	ldr	r1, [pc, #352]	; 4000b6f0 <_tx_byte_pool_delete+0x238>
4000b58c:	e5910000 	ldr	r0, [r1]
4000b590:	e59f1140 	ldr	r1, [pc, #320]	; 4000b6d8 <_tx_byte_pool_delete+0x220>
4000b594:	e5810000 	str	r0, [r1]
4000b598:	e59f1154 	ldr	r1, [pc, #340]	; 4000b6f4 <_tx_byte_pool_delete+0x23c>
4000b59c:	e5911000 	ldr	r1, [r1]
4000b5a0:	e5810020 	str	r0, [r1, #32]
4000b5a4:	e1a00004 	mov	r0, r4
4000b5a8:	eb0012b6 	bl	40010088 <_tx_trace_object_unregister>
4000b5ac:	e59f0144 	ldr	r0, [pc, #324]	; 4000b6f8 <_tx_byte_pool_delete+0x240>
4000b5b0:	e5900000 	ldr	r0, [r0]
4000b5b4:	e2400001 	sub	r0, r0, #1
4000b5b8:	e59f1138 	ldr	r1, [pc, #312]	; 4000b6f8 <_tx_byte_pool_delete+0x240>
4000b5bc:	e5810000 	str	r0, [r1]
4000b5c0:	e3a00000 	mov	r0, #0
4000b5c4:	e5840000 	str	r0, [r4]
4000b5c8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b5cc:	e1500004 	cmp	r0, r4
4000b5d0:	1a000003 	bne	4000b5e4 <_tx_byte_pool_delete+0x12c>
4000b5d4:	e3a00000 	mov	r0, #0
4000b5d8:	e59f111c 	ldr	r1, [pc, #284]	; 4000b6fc <_tx_byte_pool_delete+0x244>
4000b5dc:	e5810000 	str	r0, [r1]
4000b5e0:	ea00000c 	b	4000b618 <_tx_byte_pool_delete+0x160>
4000b5e4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b5e8:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b5ec:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b5f0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b5f4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b5f8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b5fc:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b6fc <_tx_byte_pool_delete+0x244>
4000b600:	e5900000 	ldr	r0, [r0]
4000b604:	e1500004 	cmp	r0, r4
4000b608:	1a000002 	bne	4000b618 <_tx_byte_pool_delete+0x160>
4000b60c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000b6fc <_tx_byte_pool_delete+0x244>
4000b610:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b614:	e5810000 	str	r0, [r1]
4000b618:	e59f00e0 	ldr	r0, [pc, #224]	; 4000b700 <_tx_byte_pool_delete+0x248>
4000b61c:	e5900000 	ldr	r0, [r0]
4000b620:	e2800001 	add	r0, r0, #1
4000b624:	e59f10d4 	ldr	r1, [pc, #212]	; 4000b700 <_tx_byte_pool_delete+0x248>
4000b628:	e5810000 	str	r0, [r1]
4000b62c:	e121f005 	msr	CPSR_c, r5
4000b630:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b634:	e58d0000 	str	r0, [sp]
4000b638:	ea000017 	b	4000b69c <_tx_byte_pool_delete+0x1e4>
4000b63c:	e10f5000 	mrs	r5, CPSR
4000b640:	e3856080 	orr	r6, r5, #128	; 0x80
4000b644:	e121f006 	msr	CPSR_c, r6
4000b648:	e3a00000 	mov	r0, #0
4000b64c:	e59d1000 	ldr	r1, [sp]
4000b650:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b654:	e59f00a4 	ldr	r0, [pc, #164]	; 4000b700 <_tx_byte_pool_delete+0x248>
4000b658:	e5900000 	ldr	r0, [r0]
4000b65c:	e2800001 	add	r0, r0, #1
4000b660:	e59f1098 	ldr	r1, [pc, #152]	; 4000b700 <_tx_byte_pool_delete+0x248>
4000b664:	e5810000 	str	r0, [r1]
4000b668:	e121f005 	msr	CPSR_c, r5
4000b66c:	e3a00001 	mov	r0, #1
4000b670:	e59d1000 	ldr	r1, [sp]
4000b674:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b678:	e59d0000 	ldr	r0, [sp]
4000b67c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b680:	e58d0000 	str	r0, [sp]
4000b684:	e59d1000 	ldr	r1, [sp]
4000b688:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b68c:	eb000ebc 	bl	4000f184 <_tx_thread_system_resume>
4000b690:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b694:	e2400001 	sub	r0, r0, #1
4000b698:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b69c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b6a0:	e3500000 	cmp	r0, #0
4000b6a4:	1affffe4 	bne	4000b63c <_tx_byte_pool_delete+0x184>
4000b6a8:	e10f5000 	mrs	r5, CPSR
4000b6ac:	e3856080 	orr	r6, r5, #128	; 0x80
4000b6b0:	e121f006 	msr	CPSR_c, r6
4000b6b4:	e59f0044 	ldr	r0, [pc, #68]	; 4000b700 <_tx_byte_pool_delete+0x248>
4000b6b8:	e5900000 	ldr	r0, [r0]
4000b6bc:	e2400001 	sub	r0, r0, #1
4000b6c0:	e59f1038 	ldr	r1, [pc, #56]	; 4000b700 <_tx_byte_pool_delete+0x248>
4000b6c4:	e5810000 	str	r0, [r1]
4000b6c8:	e121f005 	msr	CPSR_c, r5
4000b6cc:	eb000e80 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000b6d0:	e3a00000 	mov	r0, #0
4000b6d4:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000b6d8:	40030ea0 	.word	0x40030ea0
4000b6dc:	40030ea4 	.word	0x40030ea4
4000b6e0:	40030e2c 	.word	0x40030e2c
4000b6e4:	40030e34 	.word	0x40030e34
4000b6e8:	f0f0f0f0 	.word	0xf0f0f0f0
4000b6ec:	40030e9c 	.word	0x40030e9c
4000b6f0:	40030e98 	.word	0x40030e98
4000b6f4:	40030e8c 	.word	0x40030e8c
4000b6f8:	40030ed4 	.word	0x40030ed4
4000b6fc:	40030ed0 	.word	0x40030ed0
4000b700:	40030e50 	.word	0x40030e50

4000b704 <_tx_byte_pool_search>:
4000b704:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b708:	e1a02000 	mov	r2, r0
4000b70c:	e3a08000 	mov	r8, #0
4000b710:	e10f3000 	mrs	r3, CPSR
4000b714:	e383c080 	orr	ip, r3, #128	; 0x80
4000b718:	e121f00c 	msr	CPSR_c, ip
4000b71c:	e5920008 	ldr	r0, [r2, #8]
4000b720:	e1500001 	cmp	r0, r1
4000b724:	8a000002 	bhi	4000b734 <_tx_byte_pool_search+0x30>
4000b728:	e121f003 	msr	CPSR_c, r3
4000b72c:	e3a00000 	mov	r0, #0
4000b730:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b734:	e5925014 	ldr	r5, [r2, #20]
4000b738:	e1a0e005 	mov	lr, r5
4000b73c:	e592000c 	ldr	r0, [r2, #12]
4000b740:	e2807001 	add	r7, r0, #1
4000b744:	e3a06000 	mov	r6, #0
4000b748:	e1a00000 	nop			; (mov r0, r0)
4000b74c:	e59e0004 	ldr	r0, [lr, #4]
4000b750:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b754:	e29aa012 	adds	sl, sl, #18
4000b758:	1a000020 	bne	4000b7e0 <_tx_byte_pool_search+0xdc>
4000b75c:	e3580000 	cmp	r8, #0
4000b760:	1a000004 	bne	4000b778 <_tx_byte_pool_search+0x74>
4000b764:	e5920014 	ldr	r0, [r2, #20]
4000b768:	e1500005 	cmp	r0, r5
4000b76c:	1a000000 	bne	4000b774 <_tx_byte_pool_search+0x70>
4000b770:	e582e014 	str	lr, [r2, #20]
4000b774:	e3a08001 	mov	r8, #1
4000b778:	e59e4000 	ldr	r4, [lr]
4000b77c:	e044000e 	sub	r0, r4, lr
4000b780:	e2406008 	sub	r6, r0, #8
4000b784:	e1560001 	cmp	r6, r1
4000b788:	3a000000 	bcc	4000b790 <_tx_byte_pool_search+0x8c>
4000b78c:	ea000026 	b	4000b82c <_tx_byte_pool_search+0x128>
4000b790:	e3a06000 	mov	r6, #0
4000b794:	e5940004 	ldr	r0, [r4, #4]
4000b798:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b79c:	e29aa012 	adds	sl, sl, #18
4000b7a0:	1a000009 	bne	4000b7cc <_tx_byte_pool_search+0xc8>
4000b7a4:	e5940000 	ldr	r0, [r4]
4000b7a8:	e58e0000 	str	r0, [lr]
4000b7ac:	e592000c 	ldr	r0, [r2, #12]
4000b7b0:	e2400001 	sub	r0, r0, #1
4000b7b4:	e582000c 	str	r0, [r2, #12]
4000b7b8:	e5920014 	ldr	r0, [r2, #20]
4000b7bc:	e1500004 	cmp	r0, r4
4000b7c0:	1a000007 	bne	4000b7e4 <_tx_byte_pool_search+0xe0>
4000b7c4:	e582e014 	str	lr, [r2, #20]
4000b7c8:	ea000005 	b	4000b7e4 <_tx_byte_pool_search+0xe0>
4000b7cc:	e594e000 	ldr	lr, [r4]
4000b7d0:	e3570000 	cmp	r7, #0
4000b7d4:	0a000002 	beq	4000b7e4 <_tx_byte_pool_search+0xe0>
4000b7d8:	e2477001 	sub	r7, r7, #1
4000b7dc:	ea000000 	b	4000b7e4 <_tx_byte_pool_search+0xe0>
4000b7e0:	e59ee000 	ldr	lr, [lr]
4000b7e4:	e3570000 	cmp	r7, #0
4000b7e8:	0a000000 	beq	4000b7f0 <_tx_byte_pool_search+0xec>
4000b7ec:	e2477001 	sub	r7, r7, #1
4000b7f0:	e121f003 	msr	CPSR_c, r3
4000b7f4:	e10f3000 	mrs	r3, CPSR
4000b7f8:	e383c080 	orr	ip, r3, #128	; 0x80
4000b7fc:	e121f00c 	msr	CPSR_c, ip
4000b800:	e59f00ac 	ldr	r0, [pc, #172]	; 4000b8b4 <_tx_byte_pool_search+0x1b0>
4000b804:	e5909000 	ldr	r9, [r0]
4000b808:	e5920020 	ldr	r0, [r2, #32]
4000b80c:	e1500009 	cmp	r0, r9
4000b810:	0a000003 	beq	4000b824 <_tx_byte_pool_search+0x120>
4000b814:	e592e014 	ldr	lr, [r2, #20]
4000b818:	e592000c 	ldr	r0, [r2, #12]
4000b81c:	e2807001 	add	r7, r0, #1
4000b820:	e5829020 	str	r9, [r2, #32]
4000b824:	e3570000 	cmp	r7, #0
4000b828:	1affffc7 	bne	4000b74c <_tx_byte_pool_search+0x48>
4000b82c:	e1a00000 	nop			; (mov r0, r0)
4000b830:	e3560000 	cmp	r6, #0
4000b834:	0a00001a 	beq	4000b8a4 <_tx_byte_pool_search+0x1a0>
4000b838:	e0460001 	sub	r0, r6, r1
4000b83c:	e3500014 	cmp	r0, #20
4000b840:	3a00000a 	bcc	4000b870 <_tx_byte_pool_search+0x16c>
4000b844:	e08e0001 	add	r0, lr, r1
4000b848:	e2804008 	add	r4, r0, #8
4000b84c:	e59e0000 	ldr	r0, [lr]
4000b850:	e5840000 	str	r0, [r4]
4000b854:	e59f005c 	ldr	r0, [pc, #92]	; 4000b8b8 <_tx_byte_pool_search+0x1b4>
4000b858:	e5840004 	str	r0, [r4, #4]
4000b85c:	e592000c 	ldr	r0, [r2, #12]
4000b860:	e2800001 	add	r0, r0, #1
4000b864:	e582000c 	str	r0, [r2, #12]
4000b868:	e58e4000 	str	r4, [lr]
4000b86c:	e1a06001 	mov	r6, r1
4000b870:	e58e2004 	str	r2, [lr, #4]
4000b874:	e5920008 	ldr	r0, [r2, #8]
4000b878:	e0400006 	sub	r0, r0, r6
4000b87c:	e2400008 	sub	r0, r0, #8
4000b880:	e5820008 	str	r0, [r2, #8]
4000b884:	e5920014 	ldr	r0, [r2, #20]
4000b888:	e150000e 	cmp	r0, lr
4000b88c:	1a000001 	bne	4000b898 <_tx_byte_pool_search+0x194>
4000b890:	e59e0000 	ldr	r0, [lr]
4000b894:	e5820014 	str	r0, [r2, #20]
4000b898:	e121f003 	msr	CPSR_c, r3
4000b89c:	e28ee008 	add	lr, lr, #8
4000b8a0:	ea000001 	b	4000b8ac <_tx_byte_pool_search+0x1a8>
4000b8a4:	e121f003 	msr	CPSR_c, r3
4000b8a8:	e3a0e000 	mov	lr, #0
4000b8ac:	e1a0000e 	mov	r0, lr
4000b8b0:	eaffff9e 	b	4000b730 <_tx_byte_pool_search+0x2c>
4000b8b4:	40030e34 	.word	0x40030e34
4000b8b8:	ffffeeee 	.word	0xffffeeee

4000b8bc <_tx_byte_release>:
4000b8bc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b8c0:	e1a04000 	mov	r4, r0
4000b8c4:	e1a09004 	mov	r9, r4
4000b8c8:	e1b04009 	movs	r4, r9
4000b8cc:	0a00000f 	beq	4000b910 <_tx_byte_release+0x54>
4000b8d0:	e2499008 	sub	r9, r9, #8
4000b8d4:	e5990004 	ldr	r0, [r9, #4]
4000b8d8:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000b8dc:	e2911012 	adds	r1, r1, #18
4000b8e0:	0a000008 	beq	4000b908 <_tx_byte_release+0x4c>
4000b8e4:	e5997004 	ldr	r7, [r9, #4]
4000b8e8:	e3570000 	cmp	r7, #0
4000b8ec:	0a000003 	beq	4000b900 <_tx_byte_release+0x44>
4000b8f0:	e5970000 	ldr	r0, [r7]
4000b8f4:	e59f125c 	ldr	r1, [pc, #604]	; 4000bb58 <_tx_byte_release+0x29c>
4000b8f8:	e1500001 	cmp	r0, r1
4000b8fc:	0a000005 	beq	4000b918 <_tx_byte_release+0x5c>
4000b900:	e3a00003 	mov	r0, #3
4000b904:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b908:	e3a00003 	mov	r0, #3
4000b90c:	eafffffc 	b	4000b904 <_tx_byte_release+0x48>
4000b910:	e3a00003 	mov	r0, #3
4000b914:	eafffffa 	b	4000b904 <_tx_byte_release+0x48>
4000b918:	e59f023c 	ldr	r0, [pc, #572]	; 4000bb5c <_tx_byte_release+0x2a0>
4000b91c:	e5908000 	ldr	r8, [r0]
4000b920:	e5878020 	str	r8, [r7, #32]
4000b924:	e10f5000 	mrs	r5, CPSR
4000b928:	e3856080 	orr	r6, r5, #128	; 0x80
4000b92c:	e121f006 	msr	CPSR_c, r6
4000b930:	e59f1228 	ldr	r1, [pc, #552]	; 4000bb60 <_tx_byte_release+0x2a4>
4000b934:	e5910000 	ldr	r0, [r1]
4000b938:	e3500000 	cmp	r0, #0
4000b93c:	0a000032 	beq	4000ba0c <_tx_byte_release+0x150>
4000b940:	e59f121c 	ldr	r1, [pc, #540]	; 4000bb64 <_tx_byte_release+0x2a8>
4000b944:	e5911000 	ldr	r1, [r1]
4000b948:	e2811001 	add	r1, r1, #1
4000b94c:	e59f2210 	ldr	r2, [pc, #528]	; 4000bb64 <_tx_byte_release+0x2a8>
4000b950:	e5821000 	str	r1, [r2]
4000b954:	e580100c 	str	r1, [r0, #12]
4000b958:	e59f1208 	ldr	r1, [pc, #520]	; 4000bb68 <_tx_byte_release+0x2ac>
4000b95c:	e5911000 	ldr	r1, [r1]
4000b960:	e3510000 	cmp	r1, #0
4000b964:	1a000006 	bne	4000b984 <_tx_byte_release+0xc8>
4000b968:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bb5c <_tx_byte_release+0x2a0>
4000b96c:	e5911000 	ldr	r1, [r1]
4000b970:	e5801000 	str	r1, [r0]
4000b974:	e5901000 	ldr	r1, [r0]
4000b978:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b97c:	e5801004 	str	r1, [r0, #4]
4000b980:	ea00000d 	b	4000b9bc <_tx_byte_release+0x100>
4000b984:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bb68 <_tx_byte_release+0x2ac>
4000b988:	e5911000 	ldr	r1, [r1]
4000b98c:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bb6c <_tx_byte_release+0x2b0>
4000b990:	e1510002 	cmp	r1, r2
4000b994:	2a000004 	bcs	4000b9ac <_tx_byte_release+0xf0>
4000b998:	e3e01000 	mvn	r1, #0
4000b99c:	e5801000 	str	r1, [r0]
4000b9a0:	e3a01000 	mov	r1, #0
4000b9a4:	e5801004 	str	r1, [r0, #4]
4000b9a8:	ea000003 	b	4000b9bc <_tx_byte_release+0x100>
4000b9ac:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bb6c <_tx_byte_release+0x2b0>
4000b9b0:	e5801000 	str	r1, [r0]
4000b9b4:	e3a01000 	mov	r1, #0
4000b9b8:	e5801004 	str	r1, [r0, #4]
4000b9bc:	e3a0101b 	mov	r1, #27
4000b9c0:	e5801008 	str	r1, [r0, #8]
4000b9c4:	e5807010 	str	r7, [r0, #16]
4000b9c8:	e5804014 	str	r4, [r0, #20]
4000b9cc:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000b9d0:	e5801018 	str	r1, [r0, #24]
4000b9d4:	e5971008 	ldr	r1, [r7, #8]
4000b9d8:	e580101c 	str	r1, [r0, #28]
4000b9dc:	e2800020 	add	r0, r0, #32
4000b9e0:	e59f1188 	ldr	r1, [pc, #392]	; 4000bb70 <_tx_byte_release+0x2b4>
4000b9e4:	e5911000 	ldr	r1, [r1]
4000b9e8:	e1500001 	cmp	r0, r1
4000b9ec:	3a000001 	bcc	4000b9f8 <_tx_byte_release+0x13c>
4000b9f0:	e59f117c 	ldr	r1, [pc, #380]	; 4000bb74 <_tx_byte_release+0x2b8>
4000b9f4:	e5910000 	ldr	r0, [r1]
4000b9f8:	e59f1160 	ldr	r1, [pc, #352]	; 4000bb60 <_tx_byte_release+0x2a4>
4000b9fc:	e5810000 	str	r0, [r1]
4000ba00:	e59f1170 	ldr	r1, [pc, #368]	; 4000bb78 <_tx_byte_release+0x2bc>
4000ba04:	e5911000 	ldr	r1, [r1]
4000ba08:	e5810020 	str	r0, [r1, #32]
4000ba0c:	e59f0168 	ldr	r0, [pc, #360]	; 4000bb7c <_tx_byte_release+0x2c0>
4000ba10:	e5890004 	str	r0, [r9, #4]
4000ba14:	e5970008 	ldr	r0, [r7, #8]
4000ba18:	e5991000 	ldr	r1, [r9]
4000ba1c:	e0411009 	sub	r1, r1, r9
4000ba20:	e0800001 	add	r0, r0, r1
4000ba24:	e5870008 	str	r0, [r7, #8]
4000ba28:	e5970014 	ldr	r0, [r7, #20]
4000ba2c:	e1500009 	cmp	r0, r9
4000ba30:	9a000000 	bls	4000ba38 <_tx_byte_release+0x17c>
4000ba34:	e5879014 	str	r9, [r7, #20]
4000ba38:	ea00003e 	b	4000bb38 <_tx_byte_release+0x27c>
4000ba3c:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000ba40:	e121f005 	msr	CPSR_c, r5
4000ba44:	e1a00007 	mov	r0, r7
4000ba48:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000ba4c:	ebffff2c 	bl	4000b704 <_tx_byte_pool_search>
4000ba50:	e1a09000 	mov	r9, r0
4000ba54:	e10f5000 	mrs	r5, CPSR
4000ba58:	e3856080 	orr	r6, r5, #128	; 0x80
4000ba5c:	e121f006 	msr	CPSR_c, r6
4000ba60:	e3590000 	cmp	r9, #0
4000ba64:	1a000000 	bne	4000ba6c <_tx_byte_release+0x1b0>
4000ba68:	ea000035 	b	4000bb44 <_tx_byte_release+0x288>
4000ba6c:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000ba70:	e150000a 	cmp	r0, sl
4000ba74:	0a00000c 	beq	4000baac <_tx_byte_release+0x1f0>
4000ba78:	e2499008 	sub	r9, r9, #8
4000ba7c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bb7c <_tx_byte_release+0x2c0>
4000ba80:	e5890004 	str	r0, [r9, #4]
4000ba84:	e5970008 	ldr	r0, [r7, #8]
4000ba88:	e5991000 	ldr	r1, [r9]
4000ba8c:	e0411009 	sub	r1, r1, r9
4000ba90:	e0800001 	add	r0, r0, r1
4000ba94:	e5870008 	str	r0, [r7, #8]
4000ba98:	e5970014 	ldr	r0, [r7, #20]
4000ba9c:	e1500009 	cmp	r0, r9
4000baa0:	9a000000 	bls	4000baa8 <_tx_byte_release+0x1ec>
4000baa4:	e5879014 	str	r9, [r7, #20]
4000baa8:	ea000022 	b	4000bb38 <_tx_byte_release+0x27c>
4000baac:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bab0:	e150000a 	cmp	r0, sl
4000bab4:	1a000002 	bne	4000bac4 <_tx_byte_release+0x208>
4000bab8:	e3a00000 	mov	r0, #0
4000babc:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bac0:	ea000007 	b	4000bae4 <_tx_byte_release+0x228>
4000bac4:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bac8:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bacc:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000bad0:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000bad4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000bad8:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000badc:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000bae0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000bae4:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bae8:	e2400001 	sub	r0, r0, #1
4000baec:	e5870028 	str	r0, [r7, #40]	; 0x28
4000baf0:	e3a00000 	mov	r0, #0
4000baf4:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000baf8:	e59f0080 	ldr	r0, [pc, #128]	; 4000bb80 <_tx_byte_release+0x2c4>
4000bafc:	e5900000 	ldr	r0, [r0]
4000bb00:	e2800001 	add	r0, r0, #1
4000bb04:	e59f1074 	ldr	r1, [pc, #116]	; 4000bb80 <_tx_byte_release+0x2c4>
4000bb08:	e5810000 	str	r0, [r1]
4000bb0c:	e121f005 	msr	CPSR_c, r5
4000bb10:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bb14:	e5809000 	str	r9, [r0]
4000bb18:	e3a00000 	mov	r0, #0
4000bb1c:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bb20:	e1a0000a 	mov	r0, sl
4000bb24:	eb000d96 	bl	4000f184 <_tx_thread_system_resume>
4000bb28:	e10f5000 	mrs	r5, CPSR
4000bb2c:	e3856080 	orr	r6, r5, #128	; 0x80
4000bb30:	e121f006 	msr	CPSR_c, r6
4000bb34:	e1a00000 	nop			; (mov r0, r0)
4000bb38:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bb3c:	e3500000 	cmp	r0, #0
4000bb40:	1affffbd 	bne	4000ba3c <_tx_byte_release+0x180>
4000bb44:	e1a00000 	nop			; (mov r0, r0)
4000bb48:	e121f005 	msr	CPSR_c, r5
4000bb4c:	eb000d60 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000bb50:	e3a00000 	mov	r0, #0
4000bb54:	eaffff6a 	b	4000b904 <_tx_byte_release+0x48>
4000bb58:	42595445 	.word	0x42595445
4000bb5c:	40030e34 	.word	0x40030e34
4000bb60:	40030ea0 	.word	0x40030ea0
4000bb64:	40030ea4 	.word	0x40030ea4
4000bb68:	40030e2c 	.word	0x40030e2c
4000bb6c:	f0f0f0f0 	.word	0xf0f0f0f0
4000bb70:	40030e9c 	.word	0x40030e9c
4000bb74:	40030e98 	.word	0x40030e98
4000bb78:	40030e8c 	.word	0x40030e8c
4000bb7c:	ffffeeee 	.word	0xffffeeee
4000bb80:	40030e50 	.word	0x40030e50

4000bb84 <_tx_event_flags_create>:
4000bb84:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bb88:	e1a04000 	mov	r4, r0
4000bb8c:	e1a05001 	mov	r5, r1
4000bb90:	e3a01028 	mov	r1, #40	; 0x28
4000bb94:	e1a00004 	mov	r0, r4
4000bb98:	eb001e41 	bl	400134a4 <__aeabi_memclr4>
4000bb9c:	e5845004 	str	r5, [r4, #4]
4000bba0:	e10f6000 	mrs	r6, CPSR
4000bba4:	e3867080 	orr	r7, r6, #128	; 0x80
4000bba8:	e121f007 	msr	CPSR_c, r7
4000bbac:	e59f0170 	ldr	r0, [pc, #368]	; 4000bd24 <_tx_event_flags_create+0x1a0>
4000bbb0:	e5840000 	str	r0, [r4]
4000bbb4:	e59f016c 	ldr	r0, [pc, #364]	; 4000bd28 <_tx_event_flags_create+0x1a4>
4000bbb8:	e5900000 	ldr	r0, [r0]
4000bbbc:	e3500000 	cmp	r0, #0
4000bbc0:	0a00000e 	beq	4000bc00 <_tx_event_flags_create+0x7c>
4000bbc4:	e59f015c 	ldr	r0, [pc, #348]	; 4000bd28 <_tx_event_flags_create+0x1a4>
4000bbc8:	e5900000 	ldr	r0, [r0]
4000bbcc:	e590001c 	ldr	r0, [r0, #28]
4000bbd0:	e58d0004 	str	r0, [sp, #4]
4000bbd4:	e59f014c 	ldr	r0, [pc, #332]	; 4000bd28 <_tx_event_flags_create+0x1a4>
4000bbd8:	e5900000 	ldr	r0, [r0]
4000bbdc:	e580401c 	str	r4, [r0, #28]
4000bbe0:	e59d0004 	ldr	r0, [sp, #4]
4000bbe4:	e5804018 	str	r4, [r0, #24]
4000bbe8:	e59d0004 	ldr	r0, [sp, #4]
4000bbec:	e584001c 	str	r0, [r4, #28]
4000bbf0:	e59f0130 	ldr	r0, [pc, #304]	; 4000bd28 <_tx_event_flags_create+0x1a4>
4000bbf4:	e5900000 	ldr	r0, [r0]
4000bbf8:	e5840018 	str	r0, [r4, #24]
4000bbfc:	ea000003 	b	4000bc10 <_tx_event_flags_create+0x8c>
4000bc00:	e59f0120 	ldr	r0, [pc, #288]	; 4000bd28 <_tx_event_flags_create+0x1a4>
4000bc04:	e5804000 	str	r4, [r0]
4000bc08:	e5844018 	str	r4, [r4, #24]
4000bc0c:	e584401c 	str	r4, [r4, #28]
4000bc10:	e59f0114 	ldr	r0, [pc, #276]	; 4000bd2c <_tx_event_flags_create+0x1a8>
4000bc14:	e5900000 	ldr	r0, [r0]
4000bc18:	e2800001 	add	r0, r0, #1
4000bc1c:	e59f1108 	ldr	r1, [pc, #264]	; 4000bd2c <_tx_event_flags_create+0x1a8>
4000bc20:	e5810000 	str	r0, [r1]
4000bc24:	e3a03000 	mov	r3, #0
4000bc28:	e1a02005 	mov	r2, r5
4000bc2c:	e1a01004 	mov	r1, r4
4000bc30:	e3a00006 	mov	r0, #6
4000bc34:	e58d3000 	str	r3, [sp]
4000bc38:	eb0010a7 	bl	4000fedc <_tx_trace_object_register>
4000bc3c:	e59f10ec 	ldr	r1, [pc, #236]	; 4000bd30 <_tx_event_flags_create+0x1ac>
4000bc40:	e5910000 	ldr	r0, [r1]
4000bc44:	e3500000 	cmp	r0, #0
4000bc48:	0a000032 	beq	4000bd18 <_tx_event_flags_create+0x194>
4000bc4c:	e59f10e0 	ldr	r1, [pc, #224]	; 4000bd34 <_tx_event_flags_create+0x1b0>
4000bc50:	e5911000 	ldr	r1, [r1]
4000bc54:	e2811001 	add	r1, r1, #1
4000bc58:	e59f20d4 	ldr	r2, [pc, #212]	; 4000bd34 <_tx_event_flags_create+0x1b0>
4000bc5c:	e5821000 	str	r1, [r2]
4000bc60:	e580100c 	str	r1, [r0, #12]
4000bc64:	e59f10cc 	ldr	r1, [pc, #204]	; 4000bd38 <_tx_event_flags_create+0x1b4>
4000bc68:	e5911000 	ldr	r1, [r1]
4000bc6c:	e3510000 	cmp	r1, #0
4000bc70:	1a000006 	bne	4000bc90 <_tx_event_flags_create+0x10c>
4000bc74:	e59f10c0 	ldr	r1, [pc, #192]	; 4000bd3c <_tx_event_flags_create+0x1b8>
4000bc78:	e5911000 	ldr	r1, [r1]
4000bc7c:	e5801000 	str	r1, [r0]
4000bc80:	e5901000 	ldr	r1, [r0]
4000bc84:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bc88:	e5801004 	str	r1, [r0, #4]
4000bc8c:	ea00000d 	b	4000bcc8 <_tx_event_flags_create+0x144>
4000bc90:	e59f10a0 	ldr	r1, [pc, #160]	; 4000bd38 <_tx_event_flags_create+0x1b4>
4000bc94:	e5911000 	ldr	r1, [r1]
4000bc98:	e59f20a0 	ldr	r2, [pc, #160]	; 4000bd40 <_tx_event_flags_create+0x1bc>
4000bc9c:	e1510002 	cmp	r1, r2
4000bca0:	2a000004 	bcs	4000bcb8 <_tx_event_flags_create+0x134>
4000bca4:	e3e01000 	mvn	r1, #0
4000bca8:	e5801000 	str	r1, [r0]
4000bcac:	e3a01000 	mov	r1, #0
4000bcb0:	e5801004 	str	r1, [r0, #4]
4000bcb4:	ea000003 	b	4000bcc8 <_tx_event_flags_create+0x144>
4000bcb8:	e59f1080 	ldr	r1, [pc, #128]	; 4000bd40 <_tx_event_flags_create+0x1bc>
4000bcbc:	e5801000 	str	r1, [r0]
4000bcc0:	e3a01000 	mov	r1, #0
4000bcc4:	e5801004 	str	r1, [r0, #4]
4000bcc8:	e3a0101e 	mov	r1, #30
4000bccc:	e5801008 	str	r1, [r0, #8]
4000bcd0:	e5804010 	str	r4, [r0, #16]
4000bcd4:	e28d1004 	add	r1, sp, #4
4000bcd8:	e5801014 	str	r1, [r0, #20]
4000bcdc:	e3a01000 	mov	r1, #0
4000bce0:	e5801018 	str	r1, [r0, #24]
4000bce4:	e580101c 	str	r1, [r0, #28]
4000bce8:	e2800020 	add	r0, r0, #32
4000bcec:	e59f1050 	ldr	r1, [pc, #80]	; 4000bd44 <_tx_event_flags_create+0x1c0>
4000bcf0:	e5911000 	ldr	r1, [r1]
4000bcf4:	e1500001 	cmp	r0, r1
4000bcf8:	3a000001 	bcc	4000bd04 <_tx_event_flags_create+0x180>
4000bcfc:	e59f1044 	ldr	r1, [pc, #68]	; 4000bd48 <_tx_event_flags_create+0x1c4>
4000bd00:	e5910000 	ldr	r0, [r1]
4000bd04:	e59f1024 	ldr	r1, [pc, #36]	; 4000bd30 <_tx_event_flags_create+0x1ac>
4000bd08:	e5810000 	str	r0, [r1]
4000bd0c:	e59f1038 	ldr	r1, [pc, #56]	; 4000bd4c <_tx_event_flags_create+0x1c8>
4000bd10:	e5911000 	ldr	r1, [r1]
4000bd14:	e5810020 	str	r0, [r1, #32]
4000bd18:	e121f006 	msr	CPSR_c, r6
4000bd1c:	e3a00000 	mov	r0, #0
4000bd20:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000bd24:	4456444e 	.word	0x4456444e
4000bd28:	40030eb8 	.word	0x40030eb8
4000bd2c:	40030ebc 	.word	0x40030ebc
4000bd30:	40030ea0 	.word	0x40030ea0
4000bd34:	40030ea4 	.word	0x40030ea4
4000bd38:	40030e2c 	.word	0x40030e2c
4000bd3c:	40030e34 	.word	0x40030e34
4000bd40:	f0f0f0f0 	.word	0xf0f0f0f0
4000bd44:	40030e9c 	.word	0x40030e9c
4000bd48:	40030e98 	.word	0x40030e98
4000bd4c:	40030e8c 	.word	0x40030e8c

4000bd50 <_tx_event_flags_delete>:
4000bd50:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000bd54:	e1a04000 	mov	r4, r0
4000bd58:	e10f5000 	mrs	r5, CPSR
4000bd5c:	e3856080 	orr	r6, r5, #128	; 0x80
4000bd60:	e121f006 	msr	CPSR_c, r6
4000bd64:	e59f1204 	ldr	r1, [pc, #516]	; 4000bf70 <_tx_event_flags_delete+0x220>
4000bd68:	e5910000 	ldr	r0, [r1]
4000bd6c:	e3500000 	cmp	r0, #0
4000bd70:	0a000031 	beq	4000be3c <_tx_event_flags_delete+0xec>
4000bd74:	e59f11f8 	ldr	r1, [pc, #504]	; 4000bf74 <_tx_event_flags_delete+0x224>
4000bd78:	e5911000 	ldr	r1, [r1]
4000bd7c:	e2811001 	add	r1, r1, #1
4000bd80:	e59f21ec 	ldr	r2, [pc, #492]	; 4000bf74 <_tx_event_flags_delete+0x224>
4000bd84:	e5821000 	str	r1, [r2]
4000bd88:	e580100c 	str	r1, [r0, #12]
4000bd8c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000bf78 <_tx_event_flags_delete+0x228>
4000bd90:	e5911000 	ldr	r1, [r1]
4000bd94:	e3510000 	cmp	r1, #0
4000bd98:	1a000006 	bne	4000bdb8 <_tx_event_flags_delete+0x68>
4000bd9c:	e59f11d8 	ldr	r1, [pc, #472]	; 4000bf7c <_tx_event_flags_delete+0x22c>
4000bda0:	e5911000 	ldr	r1, [r1]
4000bda4:	e5801000 	str	r1, [r0]
4000bda8:	e5901000 	ldr	r1, [r0]
4000bdac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bdb0:	e5801004 	str	r1, [r0, #4]
4000bdb4:	ea00000d 	b	4000bdf0 <_tx_event_flags_delete+0xa0>
4000bdb8:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bf78 <_tx_event_flags_delete+0x228>
4000bdbc:	e5911000 	ldr	r1, [r1]
4000bdc0:	e59f21b8 	ldr	r2, [pc, #440]	; 4000bf80 <_tx_event_flags_delete+0x230>
4000bdc4:	e1510002 	cmp	r1, r2
4000bdc8:	2a000004 	bcs	4000bde0 <_tx_event_flags_delete+0x90>
4000bdcc:	e3e01000 	mvn	r1, #0
4000bdd0:	e5801000 	str	r1, [r0]
4000bdd4:	e3a01000 	mov	r1, #0
4000bdd8:	e5801004 	str	r1, [r0, #4]
4000bddc:	ea000003 	b	4000bdf0 <_tx_event_flags_delete+0xa0>
4000bde0:	e59f1198 	ldr	r1, [pc, #408]	; 4000bf80 <_tx_event_flags_delete+0x230>
4000bde4:	e5801000 	str	r1, [r0]
4000bde8:	e3a01000 	mov	r1, #0
4000bdec:	e5801004 	str	r1, [r0, #4]
4000bdf0:	e3a0101f 	mov	r1, #31
4000bdf4:	e5801008 	str	r1, [r0, #8]
4000bdf8:	e5804010 	str	r4, [r0, #16]
4000bdfc:	e580d014 	str	sp, [r0, #20]
4000be00:	e3a01000 	mov	r1, #0
4000be04:	e5801018 	str	r1, [r0, #24]
4000be08:	e580101c 	str	r1, [r0, #28]
4000be0c:	e2800020 	add	r0, r0, #32
4000be10:	e59f116c 	ldr	r1, [pc, #364]	; 4000bf84 <_tx_event_flags_delete+0x234>
4000be14:	e5911000 	ldr	r1, [r1]
4000be18:	e1500001 	cmp	r0, r1
4000be1c:	3a000001 	bcc	4000be28 <_tx_event_flags_delete+0xd8>
4000be20:	e59f1160 	ldr	r1, [pc, #352]	; 4000bf88 <_tx_event_flags_delete+0x238>
4000be24:	e5910000 	ldr	r0, [r1]
4000be28:	e59f1140 	ldr	r1, [pc, #320]	; 4000bf70 <_tx_event_flags_delete+0x220>
4000be2c:	e5810000 	str	r0, [r1]
4000be30:	e59f1154 	ldr	r1, [pc, #340]	; 4000bf8c <_tx_event_flags_delete+0x23c>
4000be34:	e5911000 	ldr	r1, [r1]
4000be38:	e5810020 	str	r0, [r1, #32]
4000be3c:	e1a00004 	mov	r0, r4
4000be40:	eb001090 	bl	40010088 <_tx_trace_object_unregister>
4000be44:	e59f0144 	ldr	r0, [pc, #324]	; 4000bf90 <_tx_event_flags_delete+0x240>
4000be48:	e5900000 	ldr	r0, [r0]
4000be4c:	e2400001 	sub	r0, r0, #1
4000be50:	e59f1138 	ldr	r1, [pc, #312]	; 4000bf90 <_tx_event_flags_delete+0x240>
4000be54:	e5810000 	str	r0, [r1]
4000be58:	e3a00000 	mov	r0, #0
4000be5c:	e5840000 	str	r0, [r4]
4000be60:	e5940018 	ldr	r0, [r4, #24]
4000be64:	e1500004 	cmp	r0, r4
4000be68:	1a000003 	bne	4000be7c <_tx_event_flags_delete+0x12c>
4000be6c:	e3a00000 	mov	r0, #0
4000be70:	e59f111c 	ldr	r1, [pc, #284]	; 4000bf94 <_tx_event_flags_delete+0x244>
4000be74:	e5810000 	str	r0, [r1]
4000be78:	ea00000c 	b	4000beb0 <_tx_event_flags_delete+0x160>
4000be7c:	e594001c 	ldr	r0, [r4, #28]
4000be80:	e5941018 	ldr	r1, [r4, #24]
4000be84:	e581001c 	str	r0, [r1, #28]
4000be88:	e5940018 	ldr	r0, [r4, #24]
4000be8c:	e594101c 	ldr	r1, [r4, #28]
4000be90:	e5810018 	str	r0, [r1, #24]
4000be94:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bf94 <_tx_event_flags_delete+0x244>
4000be98:	e5900000 	ldr	r0, [r0]
4000be9c:	e1500004 	cmp	r0, r4
4000bea0:	1a000002 	bne	4000beb0 <_tx_event_flags_delete+0x160>
4000bea4:	e59f10e8 	ldr	r1, [pc, #232]	; 4000bf94 <_tx_event_flags_delete+0x244>
4000bea8:	e5940018 	ldr	r0, [r4, #24]
4000beac:	e5810000 	str	r0, [r1]
4000beb0:	e59f00e0 	ldr	r0, [pc, #224]	; 4000bf98 <_tx_event_flags_delete+0x248>
4000beb4:	e5900000 	ldr	r0, [r0]
4000beb8:	e2800001 	add	r0, r0, #1
4000bebc:	e59f10d4 	ldr	r1, [pc, #212]	; 4000bf98 <_tx_event_flags_delete+0x248>
4000bec0:	e5810000 	str	r0, [r1]
4000bec4:	e121f005 	msr	CPSR_c, r5
4000bec8:	e5940010 	ldr	r0, [r4, #16]
4000becc:	e58d0000 	str	r0, [sp]
4000bed0:	ea000017 	b	4000bf34 <_tx_event_flags_delete+0x1e4>
4000bed4:	e10f5000 	mrs	r5, CPSR
4000bed8:	e3856080 	orr	r6, r5, #128	; 0x80
4000bedc:	e121f006 	msr	CPSR_c, r6
4000bee0:	e3a00000 	mov	r0, #0
4000bee4:	e59d1000 	ldr	r1, [sp]
4000bee8:	e5810068 	str	r0, [r1, #104]	; 0x68
4000beec:	e59f00a4 	ldr	r0, [pc, #164]	; 4000bf98 <_tx_event_flags_delete+0x248>
4000bef0:	e5900000 	ldr	r0, [r0]
4000bef4:	e2800001 	add	r0, r0, #1
4000bef8:	e59f1098 	ldr	r1, [pc, #152]	; 4000bf98 <_tx_event_flags_delete+0x248>
4000befc:	e5810000 	str	r0, [r1]
4000bf00:	e121f005 	msr	CPSR_c, r5
4000bf04:	e3a00001 	mov	r0, #1
4000bf08:	e59d1000 	ldr	r1, [sp]
4000bf0c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000bf10:	e59d0000 	ldr	r0, [sp]
4000bf14:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000bf18:	e58d0000 	str	r0, [sp]
4000bf1c:	e59d1000 	ldr	r1, [sp]
4000bf20:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000bf24:	eb000c96 	bl	4000f184 <_tx_thread_system_resume>
4000bf28:	e5940014 	ldr	r0, [r4, #20]
4000bf2c:	e2400001 	sub	r0, r0, #1
4000bf30:	e5840014 	str	r0, [r4, #20]
4000bf34:	e5940014 	ldr	r0, [r4, #20]
4000bf38:	e3500000 	cmp	r0, #0
4000bf3c:	1affffe4 	bne	4000bed4 <_tx_event_flags_delete+0x184>
4000bf40:	e10f5000 	mrs	r5, CPSR
4000bf44:	e3856080 	orr	r6, r5, #128	; 0x80
4000bf48:	e121f006 	msr	CPSR_c, r6
4000bf4c:	e59f0044 	ldr	r0, [pc, #68]	; 4000bf98 <_tx_event_flags_delete+0x248>
4000bf50:	e5900000 	ldr	r0, [r0]
4000bf54:	e2400001 	sub	r0, r0, #1
4000bf58:	e59f1038 	ldr	r1, [pc, #56]	; 4000bf98 <_tx_event_flags_delete+0x248>
4000bf5c:	e5810000 	str	r0, [r1]
4000bf60:	e121f005 	msr	CPSR_c, r5
4000bf64:	eb000c5a 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000bf68:	e3a00000 	mov	r0, #0
4000bf6c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000bf70:	40030ea0 	.word	0x40030ea0
4000bf74:	40030ea4 	.word	0x40030ea4
4000bf78:	40030e2c 	.word	0x40030e2c
4000bf7c:	40030e34 	.word	0x40030e34
4000bf80:	f0f0f0f0 	.word	0xf0f0f0f0
4000bf84:	40030e9c 	.word	0x40030e9c
4000bf88:	40030e98 	.word	0x40030e98
4000bf8c:	40030e8c 	.word	0x40030e8c
4000bf90:	40030ebc 	.word	0x40030ebc
4000bf94:	40030eb8 	.word	0x40030eb8
4000bf98:	40030e50 	.word	0x40030e50

4000bf9c <_tx_event_flags_get>:
4000bf9c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000bfa0:	e1a04000 	mov	r4, r0
4000bfa4:	e1a05001 	mov	r5, r1
4000bfa8:	e1a06002 	mov	r6, r2
4000bfac:	e1a07003 	mov	r7, r3
4000bfb0:	e10f8000 	mrs	r8, CPSR
4000bfb4:	e3880080 	orr	r0, r8, #128	; 0x80
4000bfb8:	e58d0004 	str	r0, [sp, #4]
4000bfbc:	e59d0004 	ldr	r0, [sp, #4]
4000bfc0:	e121f000 	msr	CPSR_c, r0
4000bfc4:	e59f1278 	ldr	r1, [pc, #632]	; 4000c244 <_tx_event_flags_get+0x2a8>
4000bfc8:	e5910000 	ldr	r0, [r1]
4000bfcc:	e3500000 	cmp	r0, #0
4000bfd0:	0a000031 	beq	4000c09c <_tx_event_flags_get+0x100>
4000bfd4:	e59f126c 	ldr	r1, [pc, #620]	; 4000c248 <_tx_event_flags_get+0x2ac>
4000bfd8:	e5911000 	ldr	r1, [r1]
4000bfdc:	e2811001 	add	r1, r1, #1
4000bfe0:	e59f2260 	ldr	r2, [pc, #608]	; 4000c248 <_tx_event_flags_get+0x2ac>
4000bfe4:	e5821000 	str	r1, [r2]
4000bfe8:	e580100c 	str	r1, [r0, #12]
4000bfec:	e59f1258 	ldr	r1, [pc, #600]	; 4000c24c <_tx_event_flags_get+0x2b0>
4000bff0:	e5911000 	ldr	r1, [r1]
4000bff4:	e3510000 	cmp	r1, #0
4000bff8:	1a000006 	bne	4000c018 <_tx_event_flags_get+0x7c>
4000bffc:	e59f124c 	ldr	r1, [pc, #588]	; 4000c250 <_tx_event_flags_get+0x2b4>
4000c000:	e5911000 	ldr	r1, [r1]
4000c004:	e5801000 	str	r1, [r0]
4000c008:	e5901000 	ldr	r1, [r0]
4000c00c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c010:	e5801004 	str	r1, [r0, #4]
4000c014:	ea00000d 	b	4000c050 <_tx_event_flags_get+0xb4>
4000c018:	e59f122c 	ldr	r1, [pc, #556]	; 4000c24c <_tx_event_flags_get+0x2b0>
4000c01c:	e5911000 	ldr	r1, [r1]
4000c020:	e59f222c 	ldr	r2, [pc, #556]	; 4000c254 <_tx_event_flags_get+0x2b8>
4000c024:	e1510002 	cmp	r1, r2
4000c028:	2a000004 	bcs	4000c040 <_tx_event_flags_get+0xa4>
4000c02c:	e3e01000 	mvn	r1, #0
4000c030:	e5801000 	str	r1, [r0]
4000c034:	e3a01000 	mov	r1, #0
4000c038:	e5801004 	str	r1, [r0, #4]
4000c03c:	ea000003 	b	4000c050 <_tx_event_flags_get+0xb4>
4000c040:	e59f120c 	ldr	r1, [pc, #524]	; 4000c254 <_tx_event_flags_get+0x2b8>
4000c044:	e5801000 	str	r1, [r0]
4000c048:	e3a01000 	mov	r1, #0
4000c04c:	e5801004 	str	r1, [r0, #4]
4000c050:	e3a01020 	mov	r1, #32
4000c054:	e5801008 	str	r1, [r0, #8]
4000c058:	e5804010 	str	r4, [r0, #16]
4000c05c:	e5805014 	str	r5, [r0, #20]
4000c060:	e5941008 	ldr	r1, [r4, #8]
4000c064:	e5801018 	str	r1, [r0, #24]
4000c068:	e580601c 	str	r6, [r0, #28]
4000c06c:	e2800020 	add	r0, r0, #32
4000c070:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c258 <_tx_event_flags_get+0x2bc>
4000c074:	e5911000 	ldr	r1, [r1]
4000c078:	e1500001 	cmp	r0, r1
4000c07c:	3a000001 	bcc	4000c088 <_tx_event_flags_get+0xec>
4000c080:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c25c <_tx_event_flags_get+0x2c0>
4000c084:	e5910000 	ldr	r0, [r1]
4000c088:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c244 <_tx_event_flags_get+0x2a8>
4000c08c:	e5810000 	str	r0, [r1]
4000c090:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c260 <_tx_event_flags_get+0x2c4>
4000c094:	e5911000 	ldr	r1, [r1]
4000c098:	e5810020 	str	r0, [r1, #32]
4000c09c:	e594a008 	ldr	sl, [r4, #8]
4000c0a0:	e594b020 	ldr	fp, [r4, #32]
4000c0a4:	e35b0000 	cmp	fp, #0
4000c0a8:	0a000000 	beq	4000c0b0 <_tx_event_flags_get+0x114>
4000c0ac:	e1caa00b 	bic	sl, sl, fp
4000c0b0:	e3160002 	tst	r6, #2
4000c0b4:	0a000006 	beq	4000c0d4 <_tx_event_flags_get+0x138>
4000c0b8:	e00a0005 	and	r0, sl, r5
4000c0bc:	e1500005 	cmp	r0, r5
4000c0c0:	1a000001 	bne	4000c0cc <_tx_event_flags_get+0x130>
4000c0c4:	e3a09000 	mov	r9, #0
4000c0c8:	ea000006 	b	4000c0e8 <_tx_event_flags_get+0x14c>
4000c0cc:	e3a09007 	mov	r9, #7
4000c0d0:	ea000004 	b	4000c0e8 <_tx_event_flags_get+0x14c>
4000c0d4:	e11a0005 	tst	sl, r5
4000c0d8:	0a000001 	beq	4000c0e4 <_tx_event_flags_get+0x148>
4000c0dc:	e3a09000 	mov	r9, #0
4000c0e0:	ea000000 	b	4000c0e8 <_tx_event_flags_get+0x14c>
4000c0e4:	e3a09007 	mov	r9, #7
4000c0e8:	e3590000 	cmp	r9, #0
4000c0ec:	1a000010 	bne	4000c134 <_tx_event_flags_get+0x198>
4000c0f0:	e587a000 	str	sl, [r7]
4000c0f4:	e3160001 	tst	r6, #1
4000c0f8:	0a00004e 	beq	4000c238 <_tx_event_flags_get+0x29c>
4000c0fc:	e5940014 	ldr	r0, [r4, #20]
4000c100:	e3500000 	cmp	r0, #0
4000c104:	0a000006 	beq	4000c124 <_tx_event_flags_get+0x188>
4000c108:	e5940010 	ldr	r0, [r4, #16]
4000c10c:	e3500000 	cmp	r0, #0
4000c110:	1a000003 	bne	4000c124 <_tx_event_flags_get+0x188>
4000c114:	e5940020 	ldr	r0, [r4, #32]
4000c118:	e1800005 	orr	r0, r0, r5
4000c11c:	e5840020 	str	r0, [r4, #32]
4000c120:	ea000044 	b	4000c238 <_tx_event_flags_get+0x29c>
4000c124:	e5940008 	ldr	r0, [r4, #8]
4000c128:	e1c00005 	bic	r0, r0, r5
4000c12c:	e5840008 	str	r0, [r4, #8]
4000c130:	ea000040 	b	4000c238 <_tx_event_flags_get+0x29c>
4000c134:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c138:	e3500000 	cmp	r0, #0
4000c13c:	0a00003c 	beq	4000c234 <_tx_event_flags_get+0x298>
4000c140:	e59f0108 	ldr	r0, [pc, #264]	; 4000c250 <_tx_event_flags_get+0x2b4>
4000c144:	e5900000 	ldr	r0, [r0]
4000c148:	e58d0000 	str	r0, [sp]
4000c14c:	e59f1110 	ldr	r1, [pc, #272]	; 4000c264 <_tx_event_flags_get+0x2c8>
4000c150:	e59d0000 	ldr	r0, [sp]
4000c154:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c158:	e59d0000 	ldr	r0, [sp]
4000c15c:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c160:	e59d0000 	ldr	r0, [sp]
4000c164:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c168:	e59d0000 	ldr	r0, [sp]
4000c16c:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c170:	e59d0000 	ldr	r0, [sp]
4000c174:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c178:	e5940010 	ldr	r0, [r4, #16]
4000c17c:	e3500000 	cmp	r0, #0
4000c180:	0a00000e 	beq	4000c1c0 <_tx_event_flags_get+0x224>
4000c184:	e5941010 	ldr	r1, [r4, #16]
4000c188:	e59d0000 	ldr	r0, [sp]
4000c18c:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c190:	e5940010 	ldr	r0, [r4, #16]
4000c194:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c198:	e59d0000 	ldr	r0, [sp]
4000c19c:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c1a0:	e59d0000 	ldr	r0, [sp]
4000c1a4:	e5941010 	ldr	r1, [r4, #16]
4000c1a8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c1ac:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c1b0:	e59d0000 	ldr	r0, [sp]
4000c1b4:	e5941010 	ldr	r1, [r4, #16]
4000c1b8:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c1bc:	ea000005 	b	4000c1d8 <_tx_event_flags_get+0x23c>
4000c1c0:	e59d0000 	ldr	r0, [sp]
4000c1c4:	e5840010 	str	r0, [r4, #16]
4000c1c8:	e59d0000 	ldr	r0, [sp]
4000c1cc:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c1d0:	e59d0000 	ldr	r0, [sp]
4000c1d4:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c1d8:	e5940014 	ldr	r0, [r4, #20]
4000c1dc:	e2800001 	add	r0, r0, #1
4000c1e0:	e5840014 	str	r0, [r4, #20]
4000c1e4:	e3a00007 	mov	r0, #7
4000c1e8:	e59d1000 	ldr	r1, [sp]
4000c1ec:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c1f0:	e3a01001 	mov	r1, #1
4000c1f4:	e59d0000 	ldr	r0, [sp]
4000c1f8:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c1fc:	e59d0000 	ldr	r0, [sp]
4000c200:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c204:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c208:	e59f0058 	ldr	r0, [pc, #88]	; 4000c268 <_tx_event_flags_get+0x2cc>
4000c20c:	e5900000 	ldr	r0, [r0]
4000c210:	e2800001 	add	r0, r0, #1
4000c214:	e59f104c 	ldr	r1, [pc, #76]	; 4000c268 <_tx_event_flags_get+0x2cc>
4000c218:	e5810000 	str	r0, [r1]
4000c21c:	e121f008 	msr	CPSR_c, r8
4000c220:	e59d0000 	ldr	r0, [sp]
4000c224:	ebfff22f 	bl	40008ae8 <_tx_thread_system_suspend>
4000c228:	e59d0000 	ldr	r0, [sp]
4000c22c:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c230:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c234:	e3a09007 	mov	r9, #7
4000c238:	e121f008 	msr	CPSR_c, r8
4000c23c:	e1a00009 	mov	r0, r9
4000c240:	eafffffa 	b	4000c230 <_tx_event_flags_get+0x294>
4000c244:	40030ea0 	.word	0x40030ea0
4000c248:	40030ea4 	.word	0x40030ea4
4000c24c:	40030e2c 	.word	0x40030e2c
4000c250:	40030e34 	.word	0x40030e34
4000c254:	f0f0f0f0 	.word	0xf0f0f0f0
4000c258:	40030e9c 	.word	0x40030e9c
4000c25c:	40030e98 	.word	0x40030e98
4000c260:	40030e8c 	.word	0x40030e8c
4000c264:	40010194 	.word	0x40010194
4000c268:	40030e50 	.word	0x40030e50

4000c26c <_tx_event_flags_set>:
4000c26c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c270:	e24dd01c 	sub	sp, sp, #28
4000c274:	e1a04000 	mov	r4, r0
4000c278:	e1a05001 	mov	r5, r1
4000c27c:	e1a06002 	mov	r6, r2
4000c280:	e10f7000 	mrs	r7, CPSR
4000c284:	e3870080 	orr	r0, r7, #128	; 0x80
4000c288:	e58d0018 	str	r0, [sp, #24]
4000c28c:	e59d0018 	ldr	r0, [sp, #24]
4000c290:	e121f000 	msr	CPSR_c, r0
4000c294:	e59f1594 	ldr	r1, [pc, #1428]	; 4000c830 <_tx_event_flags_set+0x5c4>
4000c298:	e5910000 	ldr	r0, [r1]
4000c29c:	e3500000 	cmp	r0, #0
4000c2a0:	0a000031 	beq	4000c36c <_tx_event_flags_set+0x100>
4000c2a4:	e59f1588 	ldr	r1, [pc, #1416]	; 4000c834 <_tx_event_flags_set+0x5c8>
4000c2a8:	e5911000 	ldr	r1, [r1]
4000c2ac:	e2811001 	add	r1, r1, #1
4000c2b0:	e59f257c 	ldr	r2, [pc, #1404]	; 4000c834 <_tx_event_flags_set+0x5c8>
4000c2b4:	e5821000 	str	r1, [r2]
4000c2b8:	e580100c 	str	r1, [r0, #12]
4000c2bc:	e59f1574 	ldr	r1, [pc, #1396]	; 4000c838 <_tx_event_flags_set+0x5cc>
4000c2c0:	e5911000 	ldr	r1, [r1]
4000c2c4:	e3510000 	cmp	r1, #0
4000c2c8:	1a000006 	bne	4000c2e8 <_tx_event_flags_set+0x7c>
4000c2cc:	e59f1568 	ldr	r1, [pc, #1384]	; 4000c83c <_tx_event_flags_set+0x5d0>
4000c2d0:	e5911000 	ldr	r1, [r1]
4000c2d4:	e5801000 	str	r1, [r0]
4000c2d8:	e5901000 	ldr	r1, [r0]
4000c2dc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c2e0:	e5801004 	str	r1, [r0, #4]
4000c2e4:	ea00000d 	b	4000c320 <_tx_event_flags_set+0xb4>
4000c2e8:	e59f1548 	ldr	r1, [pc, #1352]	; 4000c838 <_tx_event_flags_set+0x5cc>
4000c2ec:	e5911000 	ldr	r1, [r1]
4000c2f0:	e59f2548 	ldr	r2, [pc, #1352]	; 4000c840 <_tx_event_flags_set+0x5d4>
4000c2f4:	e1510002 	cmp	r1, r2
4000c2f8:	2a000004 	bcs	4000c310 <_tx_event_flags_set+0xa4>
4000c2fc:	e3e01000 	mvn	r1, #0
4000c300:	e5801000 	str	r1, [r0]
4000c304:	e3a01000 	mov	r1, #0
4000c308:	e5801004 	str	r1, [r0, #4]
4000c30c:	ea000003 	b	4000c320 <_tx_event_flags_set+0xb4>
4000c310:	e59f1528 	ldr	r1, [pc, #1320]	; 4000c840 <_tx_event_flags_set+0x5d4>
4000c314:	e5801000 	str	r1, [r0]
4000c318:	e3a01000 	mov	r1, #0
4000c31c:	e5801004 	str	r1, [r0, #4]
4000c320:	e3a01024 	mov	r1, #36	; 0x24
4000c324:	e5801008 	str	r1, [r0, #8]
4000c328:	e5804010 	str	r4, [r0, #16]
4000c32c:	e5805014 	str	r5, [r0, #20]
4000c330:	e5806018 	str	r6, [r0, #24]
4000c334:	e5941014 	ldr	r1, [r4, #20]
4000c338:	e580101c 	str	r1, [r0, #28]
4000c33c:	e2800020 	add	r0, r0, #32
4000c340:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000c844 <_tx_event_flags_set+0x5d8>
4000c344:	e5911000 	ldr	r1, [r1]
4000c348:	e1500001 	cmp	r0, r1
4000c34c:	3a000001 	bcc	4000c358 <_tx_event_flags_set+0xec>
4000c350:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000c848 <_tx_event_flags_set+0x5dc>
4000c354:	e5910000 	ldr	r0, [r1]
4000c358:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000c830 <_tx_event_flags_set+0x5c4>
4000c35c:	e5810000 	str	r0, [r1]
4000c360:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000c84c <_tx_event_flags_set+0x5e0>
4000c364:	e5911000 	ldr	r1, [r1]
4000c368:	e5810020 	str	r0, [r1, #32]
4000c36c:	e3160002 	tst	r6, #2
4000c370:	0a000011 	beq	4000c3bc <_tx_event_flags_set+0x150>
4000c374:	e5940014 	ldr	r0, [r4, #20]
4000c378:	e3500000 	cmp	r0, #0
4000c37c:	0a000007 	beq	4000c3a0 <_tx_event_flags_set+0x134>
4000c380:	e5940010 	ldr	r0, [r4, #16]
4000c384:	e3500000 	cmp	r0, #0
4000c388:	1a000004 	bne	4000c3a0 <_tx_event_flags_set+0x134>
4000c38c:	e1e01005 	mvn	r1, r5
4000c390:	e5940020 	ldr	r0, [r4, #32]
4000c394:	e1800001 	orr	r0, r0, r1
4000c398:	e5840020 	str	r0, [r4, #32]
4000c39c:	ea000002 	b	4000c3ac <_tx_event_flags_set+0x140>
4000c3a0:	e5940008 	ldr	r0, [r4, #8]
4000c3a4:	e0000005 	and	r0, r0, r5
4000c3a8:	e5840008 	str	r0, [r4, #8]
4000c3ac:	e121f007 	msr	CPSR_c, r7
4000c3b0:	e3a00000 	mov	r0, #0
4000c3b4:	e28dd01c 	add	sp, sp, #28
4000c3b8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c3bc:	e5940008 	ldr	r0, [r4, #8]
4000c3c0:	e1800005 	orr	r0, r0, r5
4000c3c4:	e5840008 	str	r0, [r4, #8]
4000c3c8:	e5940020 	ldr	r0, [r4, #32]
4000c3cc:	e3500000 	cmp	r0, #0
4000c3d0:	0a000002 	beq	4000c3e0 <_tx_event_flags_set+0x174>
4000c3d4:	e5940020 	ldr	r0, [r4, #32]
4000c3d8:	e1c00005 	bic	r0, r0, r5
4000c3dc:	e5840020 	str	r0, [r4, #32]
4000c3e0:	e5940010 	ldr	r0, [r4, #16]
4000c3e4:	e3500000 	cmp	r0, #0
4000c3e8:	0a000102 	beq	4000c7f8 <_tx_event_flags_set+0x58c>
4000c3ec:	e5940014 	ldr	r0, [r4, #20]
4000c3f0:	e3500001 	cmp	r0, #1
4000c3f4:	1a000048 	bne	4000c51c <_tx_event_flags_set+0x2b0>
4000c3f8:	e5940010 	ldr	r0, [r4, #16]
4000c3fc:	e58d0014 	str	r0, [sp, #20]
4000c400:	e59d0014 	ldr	r0, [sp, #20]
4000c404:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c408:	e3100002 	tst	r0, #2
4000c40c:	0a00000b 	beq	4000c440 <_tx_event_flags_set+0x1d4>
4000c410:	e5940008 	ldr	r0, [r4, #8]
4000c414:	e59d1014 	ldr	r1, [sp, #20]
4000c418:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c41c:	e0000001 	and	r0, r0, r1
4000c420:	e59d1014 	ldr	r1, [sp, #20]
4000c424:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c428:	e1500001 	cmp	r0, r1
4000c42c:	1a000001 	bne	4000c438 <_tx_event_flags_set+0x1cc>
4000c430:	e3a08000 	mov	r8, #0
4000c434:	ea000009 	b	4000c460 <_tx_event_flags_set+0x1f4>
4000c438:	e3a08007 	mov	r8, #7
4000c43c:	ea000007 	b	4000c460 <_tx_event_flags_set+0x1f4>
4000c440:	e5940008 	ldr	r0, [r4, #8]
4000c444:	e59d1014 	ldr	r1, [sp, #20]
4000c448:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c44c:	e1100001 	tst	r0, r1
4000c450:	0a000001 	beq	4000c45c <_tx_event_flags_set+0x1f0>
4000c454:	e3a08000 	mov	r8, #0
4000c458:	ea000000 	b	4000c460 <_tx_event_flags_set+0x1f4>
4000c45c:	e3a08007 	mov	r8, #7
4000c460:	e3580000 	cmp	r8, #0
4000c464:	1a000024 	bne	4000c4fc <_tx_event_flags_set+0x290>
4000c468:	e5941008 	ldr	r1, [r4, #8]
4000c46c:	e59d0014 	ldr	r0, [sp, #20]
4000c470:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c474:	e5801000 	str	r1, [r0]
4000c478:	e59d0014 	ldr	r0, [sp, #20]
4000c47c:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c480:	e3100001 	tst	r0, #1
4000c484:	0a000004 	beq	4000c49c <_tx_event_flags_set+0x230>
4000c488:	e5940008 	ldr	r0, [r4, #8]
4000c48c:	e59d1014 	ldr	r1, [sp, #20]
4000c490:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c494:	e1c00001 	bic	r0, r0, r1
4000c498:	e5840008 	str	r0, [r4, #8]
4000c49c:	e3a00000 	mov	r0, #0
4000c4a0:	e5840010 	str	r0, [r4, #16]
4000c4a4:	e5840014 	str	r0, [r4, #20]
4000c4a8:	e3a01000 	mov	r1, #0
4000c4ac:	e59d0014 	ldr	r0, [sp, #20]
4000c4b0:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c4b4:	e59f0394 	ldr	r0, [pc, #916]	; 4000c850 <_tx_event_flags_set+0x5e4>
4000c4b8:	e5900000 	ldr	r0, [r0]
4000c4bc:	e2800001 	add	r0, r0, #1
4000c4c0:	e59f1388 	ldr	r1, [pc, #904]	; 4000c850 <_tx_event_flags_set+0x5e4>
4000c4c4:	e5810000 	str	r0, [r1]
4000c4c8:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c4cc:	e121f007 	msr	CPSR_c, r7
4000c4d0:	e35b0000 	cmp	fp, #0
4000c4d4:	0a000001 	beq	4000c4e0 <_tx_event_flags_set+0x274>
4000c4d8:	e1a00004 	mov	r0, r4
4000c4dc:	e12fff3b 	blx	fp
4000c4e0:	e3a00000 	mov	r0, #0
4000c4e4:	e59d1014 	ldr	r1, [sp, #20]
4000c4e8:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c4ec:	e59d0014 	ldr	r0, [sp, #20]
4000c4f0:	eb000b23 	bl	4000f184 <_tx_thread_system_resume>
4000c4f4:	e3a00000 	mov	r0, #0
4000c4f8:	eaffffad 	b	4000c3b4 <_tx_event_flags_set+0x148>
4000c4fc:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c500:	e121f007 	msr	CPSR_c, r7
4000c504:	e35b0000 	cmp	fp, #0
4000c508:	0a000001 	beq	4000c514 <_tx_event_flags_set+0x2a8>
4000c50c:	e1a00004 	mov	r0, r4
4000c510:	e12fff3b 	blx	fp
4000c514:	e3a00000 	mov	r0, #0
4000c518:	eaffffa5 	b	4000c3b4 <_tx_event_flags_set+0x148>
4000c51c:	e5940010 	ldr	r0, [r4, #16]
4000c520:	e58d0004 	str	r0, [sp, #4]
4000c524:	e59d0004 	ldr	r0, [sp, #4]
4000c528:	e58d0014 	str	r0, [sp, #20]
4000c52c:	e3a00000 	mov	r0, #0
4000c530:	e5840010 	str	r0, [r4, #16]
4000c534:	e58d000c 	str	r0, [sp, #12]
4000c538:	e58d0008 	str	r0, [sp, #8]
4000c53c:	e5940014 	ldr	r0, [r4, #20]
4000c540:	e58d0000 	str	r0, [sp]
4000c544:	e5949008 	ldr	r9, [r4, #8]
4000c548:	e59f0300 	ldr	r0, [pc, #768]	; 4000c850 <_tx_event_flags_set+0x5e4>
4000c54c:	e5900000 	ldr	r0, [r0]
4000c550:	e2800001 	add	r0, r0, #1
4000c554:	e59f12f4 	ldr	r1, [pc, #756]	; 4000c850 <_tx_event_flags_set+0x5e4>
4000c558:	e5810000 	str	r0, [r1]
4000c55c:	e1a00000 	nop			; (mov r0, r0)
4000c560:	e121f007 	msr	CPSR_c, r7
4000c564:	e10f7000 	mrs	r7, CPSR
4000c568:	e3870080 	orr	r0, r7, #128	; 0x80
4000c56c:	e58d0018 	str	r0, [sp, #24]
4000c570:	e59d0018 	ldr	r0, [sp, #24]
4000c574:	e121f000 	msr	CPSR_c, r0
4000c578:	e594000c 	ldr	r0, [r4, #12]
4000c57c:	e3500000 	cmp	r0, #0
4000c580:	0a00000b 	beq	4000c5b4 <_tx_event_flags_set+0x348>
4000c584:	e3a00000 	mov	r0, #0
4000c588:	e584000c 	str	r0, [r4, #12]
4000c58c:	e59d0004 	ldr	r0, [sp, #4]
4000c590:	e58d0014 	str	r0, [sp, #20]
4000c594:	e5940014 	ldr	r0, [r4, #20]
4000c598:	e58d0000 	str	r0, [sp]
4000c59c:	e5940008 	ldr	r0, [r4, #8]
4000c5a0:	e1899000 	orr	r9, r9, r0
4000c5a4:	e59d0014 	ldr	r0, [sp, #20]
4000c5a8:	e3500000 	cmp	r0, #0
4000c5ac:	1a000000 	bne	4000c5b4 <_tx_event_flags_set+0x348>
4000c5b0:	ea00005d 	b	4000c72c <_tx_event_flags_set+0x4c0>
4000c5b4:	e59d0014 	ldr	r0, [sp, #20]
4000c5b8:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c5bc:	e31a0002 	tst	sl, #2
4000c5c0:	0a00000a 	beq	4000c5f0 <_tx_event_flags_set+0x384>
4000c5c4:	e59d0014 	ldr	r0, [sp, #20]
4000c5c8:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c5cc:	e0000009 	and	r0, r0, r9
4000c5d0:	e59d1014 	ldr	r1, [sp, #20]
4000c5d4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c5d8:	e1500001 	cmp	r0, r1
4000c5dc:	1a000001 	bne	4000c5e8 <_tx_event_flags_set+0x37c>
4000c5e0:	e3a08000 	mov	r8, #0
4000c5e4:	ea000008 	b	4000c60c <_tx_event_flags_set+0x3a0>
4000c5e8:	e3a08007 	mov	r8, #7
4000c5ec:	ea000006 	b	4000c60c <_tx_event_flags_set+0x3a0>
4000c5f0:	e59d0014 	ldr	r0, [sp, #20]
4000c5f4:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c5f8:	e1100009 	tst	r0, r9
4000c5fc:	0a000001 	beq	4000c608 <_tx_event_flags_set+0x39c>
4000c600:	e3a08000 	mov	r8, #0
4000c604:	ea000000 	b	4000c60c <_tx_event_flags_set+0x3a0>
4000c608:	e3a08007 	mov	r8, #7
4000c60c:	e59d0014 	ldr	r0, [sp, #20]
4000c610:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c614:	e58d0010 	str	r0, [sp, #16]
4000c618:	e3580000 	cmp	r8, #0
4000c61c:	1a00003c 	bne	4000c714 <_tx_event_flags_set+0x4a8>
4000c620:	e59d0014 	ldr	r0, [sp, #20]
4000c624:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c628:	e5809000 	str	r9, [r0]
4000c62c:	e31a0001 	tst	sl, #1
4000c630:	0a000004 	beq	4000c648 <_tx_event_flags_set+0x3dc>
4000c634:	e5940008 	ldr	r0, [r4, #8]
4000c638:	e59d1014 	ldr	r1, [sp, #20]
4000c63c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c640:	e1c00001 	bic	r0, r0, r1
4000c644:	e5840008 	str	r0, [r4, #8]
4000c648:	e59d0014 	ldr	r0, [sp, #20]
4000c64c:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c650:	e1510000 	cmp	r1, r0
4000c654:	1a000002 	bne	4000c664 <_tx_event_flags_set+0x3f8>
4000c658:	e3a00000 	mov	r0, #0
4000c65c:	e58d0004 	str	r0, [sp, #4]
4000c660:	ea000010 	b	4000c6a8 <_tx_event_flags_set+0x43c>
4000c664:	e59d0004 	ldr	r0, [sp, #4]
4000c668:	e59d1014 	ldr	r1, [sp, #20]
4000c66c:	e1500001 	cmp	r0, r1
4000c670:	1a000002 	bne	4000c680 <_tx_event_flags_set+0x414>
4000c674:	e59d0014 	ldr	r0, [sp, #20]
4000c678:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c67c:	e58d0004 	str	r0, [sp, #4]
4000c680:	e59d0014 	ldr	r0, [sp, #20]
4000c684:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c688:	e59d1014 	ldr	r1, [sp, #20]
4000c68c:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c690:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c694:	e59d0014 	ldr	r0, [sp, #20]
4000c698:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c69c:	e59d1014 	ldr	r1, [sp, #20]
4000c6a0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c6a4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c6a8:	e5940014 	ldr	r0, [r4, #20]
4000c6ac:	e2400001 	sub	r0, r0, #1
4000c6b0:	e5840014 	str	r0, [r4, #20]
4000c6b4:	e3a00000 	mov	r0, #0
4000c6b8:	e59d1014 	ldr	r1, [sp, #20]
4000c6bc:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c6c0:	e59d1014 	ldr	r1, [sp, #20]
4000c6c4:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c6c8:	e59d000c 	ldr	r0, [sp, #12]
4000c6cc:	e3500000 	cmp	r0, #0
4000c6d0:	1a000007 	bne	4000c6f4 <_tx_event_flags_set+0x488>
4000c6d4:	e59d0014 	ldr	r0, [sp, #20]
4000c6d8:	e58d000c 	str	r0, [sp, #12]
4000c6dc:	e59d0014 	ldr	r0, [sp, #20]
4000c6e0:	e58d0008 	str	r0, [sp, #8]
4000c6e4:	e3a01000 	mov	r1, #0
4000c6e8:	e59d0014 	ldr	r0, [sp, #20]
4000c6ec:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c6f0:	ea000007 	b	4000c714 <_tx_event_flags_set+0x4a8>
4000c6f4:	e59d0014 	ldr	r0, [sp, #20]
4000c6f8:	e59d1008 	ldr	r1, [sp, #8]
4000c6fc:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c700:	e3a00000 	mov	r0, #0
4000c704:	e59d1014 	ldr	r1, [sp, #20]
4000c708:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c70c:	e59d0014 	ldr	r0, [sp, #20]
4000c710:	e58d0008 	str	r0, [sp, #8]
4000c714:	e59d0010 	ldr	r0, [sp, #16]
4000c718:	e58d0014 	str	r0, [sp, #20]
4000c71c:	e59d0000 	ldr	r0, [sp]
4000c720:	e2500001 	subs	r0, r0, #1
4000c724:	e58d0000 	str	r0, [sp]
4000c728:	1affff8c 	bne	4000c560 <_tx_event_flags_set+0x2f4>
4000c72c:	e1a00000 	nop			; (mov r0, r0)
4000c730:	e59d0004 	ldr	r0, [sp, #4]
4000c734:	e5840010 	str	r0, [r4, #16]
4000c738:	e5940020 	ldr	r0, [r4, #32]
4000c73c:	e3500000 	cmp	r0, #0
4000c740:	0a000005 	beq	4000c75c <_tx_event_flags_set+0x4f0>
4000c744:	e5940008 	ldr	r0, [r4, #8]
4000c748:	e5941020 	ldr	r1, [r4, #32]
4000c74c:	e1c00001 	bic	r0, r0, r1
4000c750:	e5840008 	str	r0, [r4, #8]
4000c754:	e3a00000 	mov	r0, #0
4000c758:	e5840020 	str	r0, [r4, #32]
4000c75c:	e121f007 	msr	CPSR_c, r7
4000c760:	e59d000c 	ldr	r0, [sp, #12]
4000c764:	e58d0014 	str	r0, [sp, #20]
4000c768:	ea000011 	b	4000c7b4 <_tx_event_flags_set+0x548>
4000c76c:	e59d0014 	ldr	r0, [sp, #20]
4000c770:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c774:	e58d0010 	str	r0, [sp, #16]
4000c778:	e10f7000 	mrs	r7, CPSR
4000c77c:	e3870080 	orr	r0, r7, #128	; 0x80
4000c780:	e58d0018 	str	r0, [sp, #24]
4000c784:	e59d0018 	ldr	r0, [sp, #24]
4000c788:	e121f000 	msr	CPSR_c, r0
4000c78c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000c850 <_tx_event_flags_set+0x5e4>
4000c790:	e5900000 	ldr	r0, [r0]
4000c794:	e2800001 	add	r0, r0, #1
4000c798:	e59f10b0 	ldr	r1, [pc, #176]	; 4000c850 <_tx_event_flags_set+0x5e4>
4000c79c:	e5810000 	str	r0, [r1]
4000c7a0:	e121f007 	msr	CPSR_c, r7
4000c7a4:	e59d0014 	ldr	r0, [sp, #20]
4000c7a8:	eb000a75 	bl	4000f184 <_tx_thread_system_resume>
4000c7ac:	e59d0010 	ldr	r0, [sp, #16]
4000c7b0:	e58d0014 	str	r0, [sp, #20]
4000c7b4:	e59d0014 	ldr	r0, [sp, #20]
4000c7b8:	e3500000 	cmp	r0, #0
4000c7bc:	1affffea 	bne	4000c76c <_tx_event_flags_set+0x500>
4000c7c0:	e10f7000 	mrs	r7, CPSR
4000c7c4:	e3870080 	orr	r0, r7, #128	; 0x80
4000c7c8:	e58d0018 	str	r0, [sp, #24]
4000c7cc:	e59d0018 	ldr	r0, [sp, #24]
4000c7d0:	e121f000 	msr	CPSR_c, r0
4000c7d4:	e59f0074 	ldr	r0, [pc, #116]	; 4000c850 <_tx_event_flags_set+0x5e4>
4000c7d8:	e5900000 	ldr	r0, [r0]
4000c7dc:	e2400001 	sub	r0, r0, #1
4000c7e0:	e59f1068 	ldr	r1, [pc, #104]	; 4000c850 <_tx_event_flags_set+0x5e4>
4000c7e4:	e5810000 	str	r0, [r1]
4000c7e8:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c7ec:	e121f007 	msr	CPSR_c, r7
4000c7f0:	eb000a37 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000c7f4:	ea000007 	b	4000c818 <_tx_event_flags_set+0x5ac>
4000c7f8:	e5940014 	ldr	r0, [r4, #20]
4000c7fc:	e3500000 	cmp	r0, #0
4000c800:	0a000002 	beq	4000c810 <_tx_event_flags_set+0x5a4>
4000c804:	e594000c 	ldr	r0, [r4, #12]
4000c808:	e2800001 	add	r0, r0, #1
4000c80c:	e584000c 	str	r0, [r4, #12]
4000c810:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c814:	e121f007 	msr	CPSR_c, r7
4000c818:	e35b0000 	cmp	fp, #0
4000c81c:	0a000001 	beq	4000c828 <_tx_event_flags_set+0x5bc>
4000c820:	e1a00004 	mov	r0, r4
4000c824:	e12fff3b 	blx	fp
4000c828:	e3a00000 	mov	r0, #0
4000c82c:	eafffee0 	b	4000c3b4 <_tx_event_flags_set+0x148>
4000c830:	40030ea0 	.word	0x40030ea0
4000c834:	40030ea4 	.word	0x40030ea4
4000c838:	40030e2c 	.word	0x40030e2c
4000c83c:	40030e34 	.word	0x40030e34
4000c840:	f0f0f0f0 	.word	0xf0f0f0f0
4000c844:	40030e9c 	.word	0x40030e9c
4000c848:	40030e98 	.word	0x40030e98
4000c84c:	40030e8c 	.word	0x40030e8c
4000c850:	40030e50 	.word	0x40030e50

4000c854 <_tx_initialize_high_level>:
4000c854:	e92d4010 	push	{r4, lr}
4000c858:	ebfff38a 	bl	40009688 <_tx_trace_initialize>
4000c85c:	ebffeff0 	bl	40008824 <_tx_thread_initialize>
4000c860:	ebfff26b 	bl	40009214 <_tx_timer_initialize>
4000c864:	e3a00000 	mov	r0, #0
4000c868:	e59f105c 	ldr	r1, [pc, #92]	; 4000c8cc <_tx_initialize_high_level+0x78>
4000c86c:	e5810000 	str	r0, [r1]
4000c870:	e59f1058 	ldr	r1, [pc, #88]	; 4000c8d0 <_tx_initialize_high_level+0x7c>
4000c874:	e5810000 	str	r0, [r1]
4000c878:	e59f1054 	ldr	r1, [pc, #84]	; 4000c8d4 <_tx_initialize_high_level+0x80>
4000c87c:	e5810000 	str	r0, [r1]
4000c880:	e59f1050 	ldr	r1, [pc, #80]	; 4000c8d8 <_tx_initialize_high_level+0x84>
4000c884:	e5810000 	str	r0, [r1]
4000c888:	e59f104c 	ldr	r1, [pc, #76]	; 4000c8dc <_tx_initialize_high_level+0x88>
4000c88c:	e5810000 	str	r0, [r1]
4000c890:	e59f1048 	ldr	r1, [pc, #72]	; 4000c8e0 <_tx_initialize_high_level+0x8c>
4000c894:	e5810000 	str	r0, [r1]
4000c898:	e59f1044 	ldr	r1, [pc, #68]	; 4000c8e4 <_tx_initialize_high_level+0x90>
4000c89c:	e5810000 	str	r0, [r1]
4000c8a0:	e59f1040 	ldr	r1, [pc, #64]	; 4000c8e8 <_tx_initialize_high_level+0x94>
4000c8a4:	e5810000 	str	r0, [r1]
4000c8a8:	e59f103c 	ldr	r1, [pc, #60]	; 4000c8ec <_tx_initialize_high_level+0x98>
4000c8ac:	e5810000 	str	r0, [r1]
4000c8b0:	e59f1038 	ldr	r1, [pc, #56]	; 4000c8f0 <_tx_initialize_high_level+0x9c>
4000c8b4:	e5810000 	str	r0, [r1]
4000c8b8:	e59f1034 	ldr	r1, [pc, #52]	; 4000c8f4 <_tx_initialize_high_level+0xa0>
4000c8bc:	e5810000 	str	r0, [r1]
4000c8c0:	e59f1030 	ldr	r1, [pc, #48]	; 4000c8f8 <_tx_initialize_high_level+0xa4>
4000c8c4:	e5810000 	str	r0, [r1]
4000c8c8:	e8bd8010 	pop	{r4, pc}
4000c8cc:	40030ea8 	.word	0x40030ea8
4000c8d0:	40030eac 	.word	0x40030eac
4000c8d4:	40030eb0 	.word	0x40030eb0
4000c8d8:	40030eb4 	.word	0x40030eb4
4000c8dc:	40030eb8 	.word	0x40030eb8
4000c8e0:	40030ebc 	.word	0x40030ebc
4000c8e4:	40030ec8 	.word	0x40030ec8
4000c8e8:	40030ecc 	.word	0x40030ecc
4000c8ec:	40030ed0 	.word	0x40030ed0
4000c8f0:	40030ed4 	.word	0x40030ed4
4000c8f4:	40030ec0 	.word	0x40030ec0
4000c8f8:	40030ec4 	.word	0x40030ec4

4000c8fc <_tx_mutex_create>:
4000c8fc:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000c900:	e1a04000 	mov	r4, r0
4000c904:	e1a05001 	mov	r5, r1
4000c908:	e1a06002 	mov	r6, r2
4000c90c:	e3a01038 	mov	r1, #56	; 0x38
4000c910:	e1a00004 	mov	r0, r4
4000c914:	eb001ae2 	bl	400134a4 <__aeabi_memclr4>
4000c918:	e5845004 	str	r5, [r4, #4]
4000c91c:	e5846010 	str	r6, [r4, #16]
4000c920:	e10f7000 	mrs	r7, CPSR
4000c924:	e3878080 	orr	r8, r7, #128	; 0x80
4000c928:	e121f008 	msr	CPSR_c, r8
4000c92c:	e59f0174 	ldr	r0, [pc, #372]	; 4000caa8 <_tx_mutex_create+0x1ac>
4000c930:	e5840000 	str	r0, [r4]
4000c934:	e59f0170 	ldr	r0, [pc, #368]	; 4000caac <_tx_mutex_create+0x1b0>
4000c938:	e5900000 	ldr	r0, [r0]
4000c93c:	e3500000 	cmp	r0, #0
4000c940:	0a00000e 	beq	4000c980 <_tx_mutex_create+0x84>
4000c944:	e59f0160 	ldr	r0, [pc, #352]	; 4000caac <_tx_mutex_create+0x1b0>
4000c948:	e5900000 	ldr	r0, [r0]
4000c94c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000c950:	e58d0004 	str	r0, [sp, #4]
4000c954:	e59f0150 	ldr	r0, [pc, #336]	; 4000caac <_tx_mutex_create+0x1b0>
4000c958:	e5900000 	ldr	r0, [r0]
4000c95c:	e5804028 	str	r4, [r0, #40]	; 0x28
4000c960:	e59d0004 	ldr	r0, [sp, #4]
4000c964:	e5804024 	str	r4, [r0, #36]	; 0x24
4000c968:	e59d0004 	ldr	r0, [sp, #4]
4000c96c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000c970:	e59f0134 	ldr	r0, [pc, #308]	; 4000caac <_tx_mutex_create+0x1b0>
4000c974:	e5900000 	ldr	r0, [r0]
4000c978:	e5840024 	str	r0, [r4, #36]	; 0x24
4000c97c:	ea000003 	b	4000c990 <_tx_mutex_create+0x94>
4000c980:	e59f0124 	ldr	r0, [pc, #292]	; 4000caac <_tx_mutex_create+0x1b0>
4000c984:	e5804000 	str	r4, [r0]
4000c988:	e5844024 	str	r4, [r4, #36]	; 0x24
4000c98c:	e5844028 	str	r4, [r4, #40]	; 0x28
4000c990:	e59f0118 	ldr	r0, [pc, #280]	; 4000cab0 <_tx_mutex_create+0x1b4>
4000c994:	e5900000 	ldr	r0, [r0]
4000c998:	e2800001 	add	r0, r0, #1
4000c99c:	e59f110c 	ldr	r1, [pc, #268]	; 4000cab0 <_tx_mutex_create+0x1b4>
4000c9a0:	e5810000 	str	r0, [r1]
4000c9a4:	e3a03000 	mov	r3, #0
4000c9a8:	e58d3000 	str	r3, [sp]
4000c9ac:	e1a03006 	mov	r3, r6
4000c9b0:	e1a02005 	mov	r2, r5
4000c9b4:	e1a01004 	mov	r1, r4
4000c9b8:	e3a00005 	mov	r0, #5
4000c9bc:	eb000d46 	bl	4000fedc <_tx_trace_object_register>
4000c9c0:	e59f10ec 	ldr	r1, [pc, #236]	; 4000cab4 <_tx_mutex_create+0x1b8>
4000c9c4:	e5910000 	ldr	r0, [r1]
4000c9c8:	e3500000 	cmp	r0, #0
4000c9cc:	0a000032 	beq	4000ca9c <_tx_mutex_create+0x1a0>
4000c9d0:	e59f10e0 	ldr	r1, [pc, #224]	; 4000cab8 <_tx_mutex_create+0x1bc>
4000c9d4:	e5911000 	ldr	r1, [r1]
4000c9d8:	e2811001 	add	r1, r1, #1
4000c9dc:	e59f20d4 	ldr	r2, [pc, #212]	; 4000cab8 <_tx_mutex_create+0x1bc>
4000c9e0:	e5821000 	str	r1, [r2]
4000c9e4:	e580100c 	str	r1, [r0, #12]
4000c9e8:	e59f10cc 	ldr	r1, [pc, #204]	; 4000cabc <_tx_mutex_create+0x1c0>
4000c9ec:	e5911000 	ldr	r1, [r1]
4000c9f0:	e3510000 	cmp	r1, #0
4000c9f4:	1a000006 	bne	4000ca14 <_tx_mutex_create+0x118>
4000c9f8:	e59f10c0 	ldr	r1, [pc, #192]	; 4000cac0 <_tx_mutex_create+0x1c4>
4000c9fc:	e5911000 	ldr	r1, [r1]
4000ca00:	e5801000 	str	r1, [r0]
4000ca04:	e5901000 	ldr	r1, [r0]
4000ca08:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ca0c:	e5801004 	str	r1, [r0, #4]
4000ca10:	ea00000d 	b	4000ca4c <_tx_mutex_create+0x150>
4000ca14:	e59f10a0 	ldr	r1, [pc, #160]	; 4000cabc <_tx_mutex_create+0x1c0>
4000ca18:	e5911000 	ldr	r1, [r1]
4000ca1c:	e59f20a0 	ldr	r2, [pc, #160]	; 4000cac4 <_tx_mutex_create+0x1c8>
4000ca20:	e1510002 	cmp	r1, r2
4000ca24:	2a000004 	bcs	4000ca3c <_tx_mutex_create+0x140>
4000ca28:	e3e01000 	mvn	r1, #0
4000ca2c:	e5801000 	str	r1, [r0]
4000ca30:	e3a01000 	mov	r1, #0
4000ca34:	e5801004 	str	r1, [r0, #4]
4000ca38:	ea000003 	b	4000ca4c <_tx_mutex_create+0x150>
4000ca3c:	e59f1080 	ldr	r1, [pc, #128]	; 4000cac4 <_tx_mutex_create+0x1c8>
4000ca40:	e5801000 	str	r1, [r0]
4000ca44:	e3a01000 	mov	r1, #0
4000ca48:	e5801004 	str	r1, [r0, #4]
4000ca4c:	e3a01032 	mov	r1, #50	; 0x32
4000ca50:	e5801008 	str	r1, [r0, #8]
4000ca54:	e5804010 	str	r4, [r0, #16]
4000ca58:	e5806014 	str	r6, [r0, #20]
4000ca5c:	e28d1004 	add	r1, sp, #4
4000ca60:	e5801018 	str	r1, [r0, #24]
4000ca64:	e3a01000 	mov	r1, #0
4000ca68:	e580101c 	str	r1, [r0, #28]
4000ca6c:	e2800020 	add	r0, r0, #32
4000ca70:	e59f1050 	ldr	r1, [pc, #80]	; 4000cac8 <_tx_mutex_create+0x1cc>
4000ca74:	e5911000 	ldr	r1, [r1]
4000ca78:	e1500001 	cmp	r0, r1
4000ca7c:	3a000001 	bcc	4000ca88 <_tx_mutex_create+0x18c>
4000ca80:	e59f1044 	ldr	r1, [pc, #68]	; 4000cacc <_tx_mutex_create+0x1d0>
4000ca84:	e5910000 	ldr	r0, [r1]
4000ca88:	e59f1024 	ldr	r1, [pc, #36]	; 4000cab4 <_tx_mutex_create+0x1b8>
4000ca8c:	e5810000 	str	r0, [r1]
4000ca90:	e59f1038 	ldr	r1, [pc, #56]	; 4000cad0 <_tx_mutex_create+0x1d4>
4000ca94:	e5911000 	ldr	r1, [r1]
4000ca98:	e5810020 	str	r0, [r1, #32]
4000ca9c:	e121f007 	msr	CPSR_c, r7
4000caa0:	e3a00000 	mov	r0, #0
4000caa4:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000caa8:	4d555445 	.word	0x4d555445
4000caac:	40030ec0 	.word	0x40030ec0
4000cab0:	40030ec4 	.word	0x40030ec4
4000cab4:	40030ea0 	.word	0x40030ea0
4000cab8:	40030ea4 	.word	0x40030ea4
4000cabc:	40030e2c 	.word	0x40030e2c
4000cac0:	40030e34 	.word	0x40030e34
4000cac4:	f0f0f0f0 	.word	0xf0f0f0f0
4000cac8:	40030e9c 	.word	0x40030e9c
4000cacc:	40030e98 	.word	0x40030e98
4000cad0:	40030e8c 	.word	0x40030e8c

4000cad4 <_tx_mutex_delete>:
4000cad4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000cad8:	e1a04000 	mov	r4, r0
4000cadc:	e10f5000 	mrs	r5, CPSR
4000cae0:	e3856080 	orr	r6, r5, #128	; 0x80
4000cae4:	e121f006 	msr	CPSR_c, r6
4000cae8:	e59f1294 	ldr	r1, [pc, #660]	; 4000cd84 <_tx_mutex_delete+0x2b0>
4000caec:	e5910000 	ldr	r0, [r1]
4000caf0:	e3500000 	cmp	r0, #0
4000caf4:	0a000031 	beq	4000cbc0 <_tx_mutex_delete+0xec>
4000caf8:	e59f1288 	ldr	r1, [pc, #648]	; 4000cd88 <_tx_mutex_delete+0x2b4>
4000cafc:	e5911000 	ldr	r1, [r1]
4000cb00:	e2811001 	add	r1, r1, #1
4000cb04:	e59f227c 	ldr	r2, [pc, #636]	; 4000cd88 <_tx_mutex_delete+0x2b4>
4000cb08:	e5821000 	str	r1, [r2]
4000cb0c:	e580100c 	str	r1, [r0, #12]
4000cb10:	e59f1274 	ldr	r1, [pc, #628]	; 4000cd8c <_tx_mutex_delete+0x2b8>
4000cb14:	e5911000 	ldr	r1, [r1]
4000cb18:	e3510000 	cmp	r1, #0
4000cb1c:	1a000006 	bne	4000cb3c <_tx_mutex_delete+0x68>
4000cb20:	e59f1268 	ldr	r1, [pc, #616]	; 4000cd90 <_tx_mutex_delete+0x2bc>
4000cb24:	e5911000 	ldr	r1, [r1]
4000cb28:	e5801000 	str	r1, [r0]
4000cb2c:	e5901000 	ldr	r1, [r0]
4000cb30:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cb34:	e5801004 	str	r1, [r0, #4]
4000cb38:	ea00000d 	b	4000cb74 <_tx_mutex_delete+0xa0>
4000cb3c:	e59f1248 	ldr	r1, [pc, #584]	; 4000cd8c <_tx_mutex_delete+0x2b8>
4000cb40:	e5911000 	ldr	r1, [r1]
4000cb44:	e59f2248 	ldr	r2, [pc, #584]	; 4000cd94 <_tx_mutex_delete+0x2c0>
4000cb48:	e1510002 	cmp	r1, r2
4000cb4c:	2a000004 	bcs	4000cb64 <_tx_mutex_delete+0x90>
4000cb50:	e3e01000 	mvn	r1, #0
4000cb54:	e5801000 	str	r1, [r0]
4000cb58:	e3a01000 	mov	r1, #0
4000cb5c:	e5801004 	str	r1, [r0, #4]
4000cb60:	ea000003 	b	4000cb74 <_tx_mutex_delete+0xa0>
4000cb64:	e59f1228 	ldr	r1, [pc, #552]	; 4000cd94 <_tx_mutex_delete+0x2c0>
4000cb68:	e5801000 	str	r1, [r0]
4000cb6c:	e3a01000 	mov	r1, #0
4000cb70:	e5801004 	str	r1, [r0, #4]
4000cb74:	e3a01033 	mov	r1, #51	; 0x33
4000cb78:	e5801008 	str	r1, [r0, #8]
4000cb7c:	e5804010 	str	r4, [r0, #16]
4000cb80:	e580d014 	str	sp, [r0, #20]
4000cb84:	e3a01000 	mov	r1, #0
4000cb88:	e5801018 	str	r1, [r0, #24]
4000cb8c:	e580101c 	str	r1, [r0, #28]
4000cb90:	e2800020 	add	r0, r0, #32
4000cb94:	e59f11fc 	ldr	r1, [pc, #508]	; 4000cd98 <_tx_mutex_delete+0x2c4>
4000cb98:	e5911000 	ldr	r1, [r1]
4000cb9c:	e1500001 	cmp	r0, r1
4000cba0:	3a000001 	bcc	4000cbac <_tx_mutex_delete+0xd8>
4000cba4:	e59f11f0 	ldr	r1, [pc, #496]	; 4000cd9c <_tx_mutex_delete+0x2c8>
4000cba8:	e5910000 	ldr	r0, [r1]
4000cbac:	e59f11d0 	ldr	r1, [pc, #464]	; 4000cd84 <_tx_mutex_delete+0x2b0>
4000cbb0:	e5810000 	str	r0, [r1]
4000cbb4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000cda0 <_tx_mutex_delete+0x2cc>
4000cbb8:	e5911000 	ldr	r1, [r1]
4000cbbc:	e5810020 	str	r0, [r1, #32]
4000cbc0:	e1a00004 	mov	r0, r4
4000cbc4:	eb000d2f 	bl	40010088 <_tx_trace_object_unregister>
4000cbc8:	e59f01d4 	ldr	r0, [pc, #468]	; 4000cda4 <_tx_mutex_delete+0x2d0>
4000cbcc:	e5900000 	ldr	r0, [r0]
4000cbd0:	e2400001 	sub	r0, r0, #1
4000cbd4:	e59f11c8 	ldr	r1, [pc, #456]	; 4000cda4 <_tx_mutex_delete+0x2d0>
4000cbd8:	e5810000 	str	r0, [r1]
4000cbdc:	e3a00000 	mov	r0, #0
4000cbe0:	e5840000 	str	r0, [r4]
4000cbe4:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cbe8:	e1500004 	cmp	r0, r4
4000cbec:	1a000003 	bne	4000cc00 <_tx_mutex_delete+0x12c>
4000cbf0:	e3a00000 	mov	r0, #0
4000cbf4:	e59f11ac 	ldr	r1, [pc, #428]	; 4000cda8 <_tx_mutex_delete+0x2d4>
4000cbf8:	e5810000 	str	r0, [r1]
4000cbfc:	ea00000c 	b	4000cc34 <_tx_mutex_delete+0x160>
4000cc00:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cc04:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cc08:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cc0c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc10:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cc14:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cc18:	e59f0188 	ldr	r0, [pc, #392]	; 4000cda8 <_tx_mutex_delete+0x2d4>
4000cc1c:	e5900000 	ldr	r0, [r0]
4000cc20:	e1500004 	cmp	r0, r4
4000cc24:	1a000002 	bne	4000cc34 <_tx_mutex_delete+0x160>
4000cc28:	e59f1178 	ldr	r1, [pc, #376]	; 4000cda8 <_tx_mutex_delete+0x2d4>
4000cc2c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc30:	e5810000 	str	r0, [r1]
4000cc34:	e594000c 	ldr	r0, [r4, #12]
4000cc38:	e58d0000 	str	r0, [sp]
4000cc3c:	e5940010 	ldr	r0, [r4, #16]
4000cc40:	e3500000 	cmp	r0, #0
4000cc44:	0a00001c 	beq	4000ccbc <_tx_mutex_delete+0x1e8>
4000cc48:	e59d0000 	ldr	r0, [sp]
4000cc4c:	e3500000 	cmp	r0, #0
4000cc50:	0a000019 	beq	4000ccbc <_tx_mutex_delete+0x1e8>
4000cc54:	e59d0000 	ldr	r0, [sp]
4000cc58:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cc5c:	e2400001 	sub	r0, r0, #1
4000cc60:	e59d1000 	ldr	r1, [sp]
4000cc64:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000cc68:	e59d0000 	ldr	r0, [sp]
4000cc6c:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cc70:	e3500000 	cmp	r0, #0
4000cc74:	1a000003 	bne	4000cc88 <_tx_mutex_delete+0x1b4>
4000cc78:	e3a00000 	mov	r0, #0
4000cc7c:	e59d1000 	ldr	r1, [sp]
4000cc80:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cc84:	ea00000c 	b	4000ccbc <_tx_mutex_delete+0x1e8>
4000cc88:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000cc8c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000cc90:	e5810034 	str	r0, [r1, #52]	; 0x34
4000cc94:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cc98:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000cc9c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000cca0:	e59d0000 	ldr	r0, [sp]
4000cca4:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000cca8:	e1500004 	cmp	r0, r4
4000ccac:	1a000002 	bne	4000ccbc <_tx_mutex_delete+0x1e8>
4000ccb0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ccb4:	e59d1000 	ldr	r1, [sp]
4000ccb8:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000ccbc:	e3a00000 	mov	r0, #0
4000ccc0:	e584000c 	str	r0, [r4, #12]
4000ccc4:	e59f00e0 	ldr	r0, [pc, #224]	; 4000cdac <_tx_mutex_delete+0x2d8>
4000ccc8:	e5900000 	ldr	r0, [r0]
4000cccc:	e2800001 	add	r0, r0, #1
4000ccd0:	e59f10d4 	ldr	r1, [pc, #212]	; 4000cdac <_tx_mutex_delete+0x2d8>
4000ccd4:	e5810000 	str	r0, [r1]
4000ccd8:	e121f005 	msr	CPSR_c, r5
4000ccdc:	e594001c 	ldr	r0, [r4, #28]
4000cce0:	e58d0000 	str	r0, [sp]
4000cce4:	ea000017 	b	4000cd48 <_tx_mutex_delete+0x274>
4000cce8:	e10f5000 	mrs	r5, CPSR
4000ccec:	e3856080 	orr	r6, r5, #128	; 0x80
4000ccf0:	e121f006 	msr	CPSR_c, r6
4000ccf4:	e3a00000 	mov	r0, #0
4000ccf8:	e59d1000 	ldr	r1, [sp]
4000ccfc:	e5810068 	str	r0, [r1, #104]	; 0x68
4000cd00:	e59f00a4 	ldr	r0, [pc, #164]	; 4000cdac <_tx_mutex_delete+0x2d8>
4000cd04:	e5900000 	ldr	r0, [r0]
4000cd08:	e2800001 	add	r0, r0, #1
4000cd0c:	e59f1098 	ldr	r1, [pc, #152]	; 4000cdac <_tx_mutex_delete+0x2d8>
4000cd10:	e5810000 	str	r0, [r1]
4000cd14:	e121f005 	msr	CPSR_c, r5
4000cd18:	e3a00001 	mov	r0, #1
4000cd1c:	e59d1000 	ldr	r1, [sp]
4000cd20:	e5810084 	str	r0, [r1, #132]	; 0x84
4000cd24:	e59d0000 	ldr	r0, [sp]
4000cd28:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cd2c:	e58d0000 	str	r0, [sp]
4000cd30:	e59d1000 	ldr	r1, [sp]
4000cd34:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000cd38:	eb000911 	bl	4000f184 <_tx_thread_system_resume>
4000cd3c:	e5940020 	ldr	r0, [r4, #32]
4000cd40:	e2400001 	sub	r0, r0, #1
4000cd44:	e5840020 	str	r0, [r4, #32]
4000cd48:	e5940020 	ldr	r0, [r4, #32]
4000cd4c:	e3500000 	cmp	r0, #0
4000cd50:	1affffe4 	bne	4000cce8 <_tx_mutex_delete+0x214>
4000cd54:	e10f5000 	mrs	r5, CPSR
4000cd58:	e3856080 	orr	r6, r5, #128	; 0x80
4000cd5c:	e121f006 	msr	CPSR_c, r6
4000cd60:	e59f0044 	ldr	r0, [pc, #68]	; 4000cdac <_tx_mutex_delete+0x2d8>
4000cd64:	e5900000 	ldr	r0, [r0]
4000cd68:	e2400001 	sub	r0, r0, #1
4000cd6c:	e59f1038 	ldr	r1, [pc, #56]	; 4000cdac <_tx_mutex_delete+0x2d8>
4000cd70:	e5810000 	str	r0, [r1]
4000cd74:	e121f005 	msr	CPSR_c, r5
4000cd78:	eb0008d5 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000cd7c:	e3a00000 	mov	r0, #0
4000cd80:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000cd84:	40030ea0 	.word	0x40030ea0
4000cd88:	40030ea4 	.word	0x40030ea4
4000cd8c:	40030e2c 	.word	0x40030e2c
4000cd90:	40030e34 	.word	0x40030e34
4000cd94:	f0f0f0f0 	.word	0xf0f0f0f0
4000cd98:	40030e9c 	.word	0x40030e9c
4000cd9c:	40030e98 	.word	0x40030e98
4000cda0:	40030e8c 	.word	0x40030e8c
4000cda4:	40030ec4 	.word	0x40030ec4
4000cda8:	40030ec0 	.word	0x40030ec0
4000cdac:	40030e50 	.word	0x40030e50

4000cdb0 <_tx_mutex_get>:
4000cdb0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000cdb4:	e1a04000 	mov	r4, r0
4000cdb8:	e1a05001 	mov	r5, r1
4000cdbc:	e10f6000 	mrs	r6, CPSR
4000cdc0:	e3867080 	orr	r7, r6, #128	; 0x80
4000cdc4:	e121f007 	msr	CPSR_c, r7
4000cdc8:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d07c <_tx_mutex_get+0x2cc>
4000cdcc:	e5910000 	ldr	r0, [r1]
4000cdd0:	e3500000 	cmp	r0, #0
4000cdd4:	0a000032 	beq	4000cea4 <_tx_mutex_get+0xf4>
4000cdd8:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d080 <_tx_mutex_get+0x2d0>
4000cddc:	e5911000 	ldr	r1, [r1]
4000cde0:	e2811001 	add	r1, r1, #1
4000cde4:	e59f2294 	ldr	r2, [pc, #660]	; 4000d080 <_tx_mutex_get+0x2d0>
4000cde8:	e5821000 	str	r1, [r2]
4000cdec:	e580100c 	str	r1, [r0, #12]
4000cdf0:	e59f128c 	ldr	r1, [pc, #652]	; 4000d084 <_tx_mutex_get+0x2d4>
4000cdf4:	e5911000 	ldr	r1, [r1]
4000cdf8:	e3510000 	cmp	r1, #0
4000cdfc:	1a000006 	bne	4000ce1c <_tx_mutex_get+0x6c>
4000ce00:	e59f1280 	ldr	r1, [pc, #640]	; 4000d088 <_tx_mutex_get+0x2d8>
4000ce04:	e5911000 	ldr	r1, [r1]
4000ce08:	e5801000 	str	r1, [r0]
4000ce0c:	e5901000 	ldr	r1, [r0]
4000ce10:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ce14:	e5801004 	str	r1, [r0, #4]
4000ce18:	ea00000d 	b	4000ce54 <_tx_mutex_get+0xa4>
4000ce1c:	e59f1260 	ldr	r1, [pc, #608]	; 4000d084 <_tx_mutex_get+0x2d4>
4000ce20:	e5911000 	ldr	r1, [r1]
4000ce24:	e59f2260 	ldr	r2, [pc, #608]	; 4000d08c <_tx_mutex_get+0x2dc>
4000ce28:	e1510002 	cmp	r1, r2
4000ce2c:	2a000004 	bcs	4000ce44 <_tx_mutex_get+0x94>
4000ce30:	e3e01000 	mvn	r1, #0
4000ce34:	e5801000 	str	r1, [r0]
4000ce38:	e3a01000 	mov	r1, #0
4000ce3c:	e5801004 	str	r1, [r0, #4]
4000ce40:	ea000003 	b	4000ce54 <_tx_mutex_get+0xa4>
4000ce44:	e59f1240 	ldr	r1, [pc, #576]	; 4000d08c <_tx_mutex_get+0x2dc>
4000ce48:	e5801000 	str	r1, [r0]
4000ce4c:	e3a01000 	mov	r1, #0
4000ce50:	e5801004 	str	r1, [r0, #4]
4000ce54:	e3a01034 	mov	r1, #52	; 0x34
4000ce58:	e5801008 	str	r1, [r0, #8]
4000ce5c:	e5804010 	str	r4, [r0, #16]
4000ce60:	e5805014 	str	r5, [r0, #20]
4000ce64:	e594100c 	ldr	r1, [r4, #12]
4000ce68:	e5801018 	str	r1, [r0, #24]
4000ce6c:	e5941008 	ldr	r1, [r4, #8]
4000ce70:	e580101c 	str	r1, [r0, #28]
4000ce74:	e2800020 	add	r0, r0, #32
4000ce78:	e59f1210 	ldr	r1, [pc, #528]	; 4000d090 <_tx_mutex_get+0x2e0>
4000ce7c:	e5911000 	ldr	r1, [r1]
4000ce80:	e1500001 	cmp	r0, r1
4000ce84:	3a000001 	bcc	4000ce90 <_tx_mutex_get+0xe0>
4000ce88:	e59f1204 	ldr	r1, [pc, #516]	; 4000d094 <_tx_mutex_get+0x2e4>
4000ce8c:	e5910000 	ldr	r0, [r1]
4000ce90:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d07c <_tx_mutex_get+0x2cc>
4000ce94:	e5810000 	str	r0, [r1]
4000ce98:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d098 <_tx_mutex_get+0x2e8>
4000ce9c:	e5911000 	ldr	r1, [r1]
4000cea0:	e5810020 	str	r0, [r1, #32]
4000cea4:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d088 <_tx_mutex_get+0x2d8>
4000cea8:	e5909000 	ldr	r9, [r0]
4000ceac:	e5940008 	ldr	r0, [r4, #8]
4000ceb0:	e3500000 	cmp	r0, #0
4000ceb4:	1a000025 	bne	4000cf50 <_tx_mutex_get+0x1a0>
4000ceb8:	e3a00001 	mov	r0, #1
4000cebc:	e5840008 	str	r0, [r4, #8]
4000cec0:	e584900c 	str	r9, [r4, #12]
4000cec4:	e5940010 	ldr	r0, [r4, #16]
4000cec8:	e3500000 	cmp	r0, #0
4000cecc:	0a00001d 	beq	4000cf48 <_tx_mutex_get+0x198>
4000ced0:	e3590000 	cmp	r9, #0
4000ced4:	0a00001b 	beq	4000cf48 <_tx_mutex_get+0x198>
4000ced8:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cedc:	e5840014 	str	r0, [r4, #20]
4000cee0:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000cee4:	e5840018 	str	r0, [r4, #24]
4000cee8:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000ceec:	e3500000 	cmp	r0, #0
4000cef0:	0a000008 	beq	4000cf18 <_tx_mutex_get+0x168>
4000cef4:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cef8:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000cefc:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf00:	e5804034 	str	r4, [r0, #52]	; 0x34
4000cf04:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000cf08:	e584a034 	str	sl, [r4, #52]	; 0x34
4000cf0c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf10:	e5840030 	str	r0, [r4, #48]	; 0x30
4000cf14:	ea000006 	b	4000cf34 <_tx_mutex_get+0x184>
4000cf18:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000cf1c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000cf20:	e5844034 	str	r4, [r4, #52]	; 0x34
4000cf24:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cf28:	e5890094 	str	r0, [r9, #148]	; 0x94
4000cf2c:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000cf30:	e5890098 	str	r0, [r9, #152]	; 0x98
4000cf34:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000cf38:	e2800001 	add	r0, r0, #1
4000cf3c:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000cf40:	e3a00020 	mov	r0, #32
4000cf44:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000cf48:	e3a08000 	mov	r8, #0
4000cf4c:	ea000047 	b	4000d070 <_tx_mutex_get+0x2c0>
4000cf50:	e594000c 	ldr	r0, [r4, #12]
4000cf54:	e1500009 	cmp	r0, r9
4000cf58:	1a000004 	bne	4000cf70 <_tx_mutex_get+0x1c0>
4000cf5c:	e5940008 	ldr	r0, [r4, #8]
4000cf60:	e2800001 	add	r0, r0, #1
4000cf64:	e5840008 	str	r0, [r4, #8]
4000cf68:	e3a08000 	mov	r8, #0
4000cf6c:	ea00003f 	b	4000d070 <_tx_mutex_get+0x2c0>
4000cf70:	e3550000 	cmp	r5, #0
4000cf74:	0a00003c 	beq	4000d06c <_tx_mutex_get+0x2bc>
4000cf78:	e59f011c 	ldr	r0, [pc, #284]	; 4000d09c <_tx_mutex_get+0x2ec>
4000cf7c:	e5890068 	str	r0, [r9, #104]	; 0x68
4000cf80:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000cf84:	e594001c 	ldr	r0, [r4, #28]
4000cf88:	e3500000 	cmp	r0, #0
4000cf8c:	0a00000a 	beq	4000cfbc <_tx_mutex_get+0x20c>
4000cf90:	e594001c 	ldr	r0, [r4, #28]
4000cf94:	e5890070 	str	r0, [r9, #112]	; 0x70
4000cf98:	e594001c 	ldr	r0, [r4, #28]
4000cf9c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000cfa0:	e5890074 	str	r0, [r9, #116]	; 0x74
4000cfa4:	e594001c 	ldr	r0, [r4, #28]
4000cfa8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000cfac:	e5809070 	str	r9, [r0, #112]	; 0x70
4000cfb0:	e594001c 	ldr	r0, [r4, #28]
4000cfb4:	e5809074 	str	r9, [r0, #116]	; 0x74
4000cfb8:	ea000002 	b	4000cfc8 <_tx_mutex_get+0x218>
4000cfbc:	e584901c 	str	r9, [r4, #28]
4000cfc0:	e5899070 	str	r9, [r9, #112]	; 0x70
4000cfc4:	e5899074 	str	r9, [r9, #116]	; 0x74
4000cfc8:	e5940020 	ldr	r0, [r4, #32]
4000cfcc:	e2800001 	add	r0, r0, #1
4000cfd0:	e5840020 	str	r0, [r4, #32]
4000cfd4:	e3a0000d 	mov	r0, #13
4000cfd8:	e5890030 	str	r0, [r9, #48]	; 0x30
4000cfdc:	e3a00001 	mov	r0, #1
4000cfe0:	e5890038 	str	r0, [r9, #56]	; 0x38
4000cfe4:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000cfe8:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d0a0 <_tx_mutex_get+0x2f0>
4000cfec:	e5900000 	ldr	r0, [r0]
4000cff0:	e2800001 	add	r0, r0, #1
4000cff4:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d0a0 <_tx_mutex_get+0x2f0>
4000cff8:	e5810000 	str	r0, [r1]
4000cffc:	e121f006 	msr	CPSR_c, r6
4000d000:	e5940010 	ldr	r0, [r4, #16]
4000d004:	e3500000 	cmp	r0, #0
4000d008:	0a000013 	beq	4000d05c <_tx_mutex_get+0x2ac>
4000d00c:	e594000c 	ldr	r0, [r4, #12]
4000d010:	e3500000 	cmp	r0, #0
4000d014:	0a000010 	beq	4000d05c <_tx_mutex_get+0x2ac>
4000d018:	e3590000 	cmp	r9, #0
4000d01c:	0a00000e 	beq	4000d05c <_tx_mutex_get+0x2ac>
4000d020:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d024:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d028:	e1500001 	cmp	r0, r1
4000d02c:	9a000001 	bls	4000d038 <_tx_mutex_get+0x288>
4000d030:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d034:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d038:	e594000c 	ldr	r0, [r4, #12]
4000d03c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d040:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d044:	e1500001 	cmp	r0, r1
4000d048:	9a000003 	bls	4000d05c <_tx_mutex_get+0x2ac>
4000d04c:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d050:	e1a01002 	mov	r1, r2
4000d054:	e594000c 	ldr	r0, [r4, #12]
4000d058:	eb000011 	bl	4000d0a4 <_tx_mutex_priority_change>
4000d05c:	e1a00009 	mov	r0, r9
4000d060:	ebffeea0 	bl	40008ae8 <_tx_thread_system_suspend>
4000d064:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d068:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d06c:	e3a0801d 	mov	r8, #29
4000d070:	e121f006 	msr	CPSR_c, r6
4000d074:	e1a00008 	mov	r0, r8
4000d078:	eafffffa 	b	4000d068 <_tx_mutex_get+0x2b8>
4000d07c:	40030ea0 	.word	0x40030ea0
4000d080:	40030ea4 	.word	0x40030ea4
4000d084:	40030e2c 	.word	0x40030e2c
4000d088:	40030e34 	.word	0x40030e34
4000d08c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d090:	40030e9c 	.word	0x40030e9c
4000d094:	40030e98 	.word	0x40030e98
4000d098:	40030e8c 	.word	0x40030e8c
4000d09c:	40010264 	.word	0x40010264
4000d0a0:	40030e50 	.word	0x40030e50

4000d0a4 <_tx_mutex_priority_change>:
4000d0a4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d0a8:	e1a04000 	mov	r4, r0
4000d0ac:	e1a05001 	mov	r5, r1
4000d0b0:	e1a06002 	mov	r6, r2
4000d0b4:	e10f7000 	mrs	r7, CPSR
4000d0b8:	e3878080 	orr	r8, r7, #128	; 0x80
4000d0bc:	e121f008 	msr	CPSR_c, r8
4000d0c0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d0c4:	e3500000 	cmp	r0, #0
4000d0c8:	0a000003 	beq	4000d0dc <_tx_mutex_priority_change+0x38>
4000d0cc:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d0d0:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d0d4:	e121f007 	msr	CPSR_c, r7
4000d0d8:	ea000011 	b	4000d124 <_tx_mutex_priority_change+0x80>
4000d0dc:	e59f0044 	ldr	r0, [pc, #68]	; 4000d128 <_tx_mutex_priority_change+0x84>
4000d0e0:	e5900000 	ldr	r0, [r0]
4000d0e4:	e2800002 	add	r0, r0, #2
4000d0e8:	e59f1038 	ldr	r1, [pc, #56]	; 4000d128 <_tx_mutex_priority_change+0x84>
4000d0ec:	e5810000 	str	r0, [r1]
4000d0f0:	e3a00003 	mov	r0, #3
4000d0f4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d0f8:	e3a00001 	mov	r0, #1
4000d0fc:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d100:	e3a00000 	mov	r0, #0
4000d104:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d108:	e121f007 	msr	CPSR_c, r7
4000d10c:	e1a00004 	mov	r0, r4
4000d110:	ebffee74 	bl	40008ae8 <_tx_thread_system_suspend>
4000d114:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d118:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d11c:	e1a00004 	mov	r0, r4
4000d120:	eb000817 	bl	4000f184 <_tx_thread_system_resume>
4000d124:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d128:	40030e50 	.word	0x40030e50

4000d12c <_tx_mutex_put>:
4000d12c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d130:	e1a04000 	mov	r4, r0
4000d134:	e10f5000 	mrs	r5, CPSR
4000d138:	e3856080 	orr	r6, r5, #128	; 0x80
4000d13c:	e121f006 	msr	CPSR_c, r6
4000d140:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d5dc <_tx_mutex_put+0x4b0>
4000d144:	e5910000 	ldr	r0, [r1]
4000d148:	e3500000 	cmp	r0, #0
4000d14c:	0a000032 	beq	4000d21c <_tx_mutex_put+0xf0>
4000d150:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d5e0 <_tx_mutex_put+0x4b4>
4000d154:	e5911000 	ldr	r1, [r1]
4000d158:	e2811001 	add	r1, r1, #1
4000d15c:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d5e0 <_tx_mutex_put+0x4b4>
4000d160:	e5821000 	str	r1, [r2]
4000d164:	e580100c 	str	r1, [r0, #12]
4000d168:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d5e4 <_tx_mutex_put+0x4b8>
4000d16c:	e5911000 	ldr	r1, [r1]
4000d170:	e3510000 	cmp	r1, #0
4000d174:	1a000006 	bne	4000d194 <_tx_mutex_put+0x68>
4000d178:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d5e8 <_tx_mutex_put+0x4bc>
4000d17c:	e5911000 	ldr	r1, [r1]
4000d180:	e5801000 	str	r1, [r0]
4000d184:	e5901000 	ldr	r1, [r0]
4000d188:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d18c:	e5801004 	str	r1, [r0, #4]
4000d190:	ea00000d 	b	4000d1cc <_tx_mutex_put+0xa0>
4000d194:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d5e4 <_tx_mutex_put+0x4b8>
4000d198:	e5911000 	ldr	r1, [r1]
4000d19c:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d5ec <_tx_mutex_put+0x4c0>
4000d1a0:	e1510002 	cmp	r1, r2
4000d1a4:	2a000004 	bcs	4000d1bc <_tx_mutex_put+0x90>
4000d1a8:	e3e01000 	mvn	r1, #0
4000d1ac:	e5801000 	str	r1, [r0]
4000d1b0:	e3a01000 	mov	r1, #0
4000d1b4:	e5801004 	str	r1, [r0, #4]
4000d1b8:	ea000003 	b	4000d1cc <_tx_mutex_put+0xa0>
4000d1bc:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d5ec <_tx_mutex_put+0x4c0>
4000d1c0:	e5801000 	str	r1, [r0]
4000d1c4:	e3a01000 	mov	r1, #0
4000d1c8:	e5801004 	str	r1, [r0, #4]
4000d1cc:	e3a01039 	mov	r1, #57	; 0x39
4000d1d0:	e5801008 	str	r1, [r0, #8]
4000d1d4:	e5804010 	str	r4, [r0, #16]
4000d1d8:	e594100c 	ldr	r1, [r4, #12]
4000d1dc:	e5801014 	str	r1, [r0, #20]
4000d1e0:	e5941008 	ldr	r1, [r4, #8]
4000d1e4:	e5801018 	str	r1, [r0, #24]
4000d1e8:	e580d01c 	str	sp, [r0, #28]
4000d1ec:	e2800020 	add	r0, r0, #32
4000d1f0:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d5f0 <_tx_mutex_put+0x4c4>
4000d1f4:	e5911000 	ldr	r1, [r1]
4000d1f8:	e1500001 	cmp	r0, r1
4000d1fc:	3a000001 	bcc	4000d208 <_tx_mutex_put+0xdc>
4000d200:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d5f4 <_tx_mutex_put+0x4c8>
4000d204:	e5910000 	ldr	r0, [r1]
4000d208:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d5dc <_tx_mutex_put+0x4b0>
4000d20c:	e5810000 	str	r0, [r1]
4000d210:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d5f8 <_tx_mutex_put+0x4cc>
4000d214:	e5911000 	ldr	r1, [r1]
4000d218:	e5810020 	str	r0, [r1, #32]
4000d21c:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d5e8 <_tx_mutex_put+0x4bc>
4000d220:	e5907000 	ldr	r7, [r0]
4000d224:	e5940008 	ldr	r0, [r4, #8]
4000d228:	e3500000 	cmp	r0, #0
4000d22c:	0a0000e7 	beq	4000d5d0 <_tx_mutex_put+0x4a4>
4000d230:	e594000c 	ldr	r0, [r4, #12]
4000d234:	e1500007 	cmp	r0, r7
4000d238:	1a0000e4 	bne	4000d5d0 <_tx_mutex_put+0x4a4>
4000d23c:	e5940008 	ldr	r0, [r4, #8]
4000d240:	e2400001 	sub	r0, r0, #1
4000d244:	e5840008 	str	r0, [r4, #8]
4000d248:	e5940008 	ldr	r0, [r4, #8]
4000d24c:	e3500000 	cmp	r0, #0
4000d250:	0a000002 	beq	4000d260 <_tx_mutex_put+0x134>
4000d254:	e121f005 	msr	CPSR_c, r5
4000d258:	e3a00000 	mov	r0, #0
4000d25c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d260:	e3a08000 	mov	r8, #0
4000d264:	e3a09000 	mov	r9, #0
4000d268:	e3a0a000 	mov	sl, #0
4000d26c:	e5940010 	ldr	r0, [r4, #16]
4000d270:	e3500000 	cmp	r0, #0
4000d274:	0a000033 	beq	4000d348 <_tx_mutex_put+0x21c>
4000d278:	e3570000 	cmp	r7, #0
4000d27c:	0a000031 	beq	4000d348 <_tx_mutex_put+0x21c>
4000d280:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d284:	e2400001 	sub	r0, r0, #1
4000d288:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d28c:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d290:	e3500000 	cmp	r0, #0
4000d294:	1a000002 	bne	4000d2a4 <_tx_mutex_put+0x178>
4000d298:	e3a00000 	mov	r0, #0
4000d29c:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d2a0:	ea00000a 	b	4000d2d0 <_tx_mutex_put+0x1a4>
4000d2a4:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d2a8:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d2ac:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d2b0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d2b4:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d2b8:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d2bc:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d2c0:	e1500004 	cmp	r0, r4
4000d2c4:	1a000001 	bne	4000d2d0 <_tx_mutex_put+0x1a4>
4000d2c8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d2cc:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d2d0:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d2d4:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d2d8:	e59f031c 	ldr	r0, [pc, #796]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d2dc:	e5900000 	ldr	r0, [r0]
4000d2e0:	e2800001 	add	r0, r0, #1
4000d2e4:	e59f1310 	ldr	r1, [pc, #784]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d2e8:	e5810000 	str	r0, [r1]
4000d2ec:	e121f005 	msr	CPSR_c, r5
4000d2f0:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d2f4:	ea000009 	b	4000d320 <_tx_mutex_put+0x1f4>
4000d2f8:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d2fc:	e1500009 	cmp	r0, r9
4000d300:	2a000001 	bcs	4000d30c <_tx_mutex_put+0x1e0>
4000d304:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d308:	e1a0a009 	mov	sl, r9
4000d30c:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d310:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d314:	e150000b 	cmp	r0, fp
4000d318:	1a000000 	bne	4000d320 <_tx_mutex_put+0x1f4>
4000d31c:	e3a0b000 	mov	fp, #0
4000d320:	e35b0000 	cmp	fp, #0
4000d324:	1afffff3 	bne	4000d2f8 <_tx_mutex_put+0x1cc>
4000d328:	e10f5000 	mrs	r5, CPSR
4000d32c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d330:	e121f006 	msr	CPSR_c, r6
4000d334:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d338:	e5900000 	ldr	r0, [r0]
4000d33c:	e2400001 	sub	r0, r0, #1
4000d340:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d344:	e5810000 	str	r0, [r1]
4000d348:	e5940020 	ldr	r0, [r4, #32]
4000d34c:	e3500001 	cmp	r0, #1
4000d350:	9a000012 	bls	4000d3a0 <_tx_mutex_put+0x274>
4000d354:	e5940010 	ldr	r0, [r4, #16]
4000d358:	e3500000 	cmp	r0, #0
4000d35c:	0a00000f 	beq	4000d3a0 <_tx_mutex_put+0x274>
4000d360:	e59f0294 	ldr	r0, [pc, #660]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d364:	e5900000 	ldr	r0, [r0]
4000d368:	e2800001 	add	r0, r0, #1
4000d36c:	e59f1288 	ldr	r1, [pc, #648]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d370:	e5810000 	str	r0, [r1]
4000d374:	e121f005 	msr	CPSR_c, r5
4000d378:	e1a00004 	mov	r0, r4
4000d37c:	eb000bec 	bl	40010334 <_tx_mutex_prioritize>
4000d380:	e10f5000 	mrs	r5, CPSR
4000d384:	e3856080 	orr	r6, r5, #128	; 0x80
4000d388:	e121f006 	msr	CPSR_c, r6
4000d38c:	e59f0268 	ldr	r0, [pc, #616]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d390:	e5900000 	ldr	r0, [r0]
4000d394:	e2400001 	sub	r0, r0, #1
4000d398:	e59f125c 	ldr	r1, [pc, #604]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d39c:	e5810000 	str	r0, [r1]
4000d3a0:	e594001c 	ldr	r0, [r4, #28]
4000d3a4:	e3500000 	cmp	r0, #0
4000d3a8:	1a000024 	bne	4000d440 <_tx_mutex_put+0x314>
4000d3ac:	e59f0248 	ldr	r0, [pc, #584]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d3b0:	e5900000 	ldr	r0, [r0]
4000d3b4:	e2800001 	add	r0, r0, #1
4000d3b8:	e59f123c 	ldr	r1, [pc, #572]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d3bc:	e5810000 	str	r0, [r1]
4000d3c0:	e121f005 	msr	CPSR_c, r5
4000d3c4:	e5940010 	ldr	r0, [r4, #16]
4000d3c8:	e3500000 	cmp	r0, #0
4000d3cc:	0a00000a 	beq	4000d3fc <_tx_mutex_put+0x2d0>
4000d3d0:	e3a00020 	mov	r0, #32
4000d3d4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d3d8:	e3570000 	cmp	r7, #0
4000d3dc:	0a000006 	beq	4000d3fc <_tx_mutex_put+0x2d0>
4000d3e0:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d3e4:	e1500009 	cmp	r0, r9
4000d3e8:	0a000003 	beq	4000d3fc <_tx_mutex_put+0x2d0>
4000d3ec:	e1a0200a 	mov	r2, sl
4000d3f0:	e1a01009 	mov	r1, r9
4000d3f4:	e594000c 	ldr	r0, [r4, #12]
4000d3f8:	ebffff29 	bl	4000d0a4 <_tx_mutex_priority_change>
4000d3fc:	e10f5000 	mrs	r5, CPSR
4000d400:	e3856080 	orr	r6, r5, #128	; 0x80
4000d404:	e121f006 	msr	CPSR_c, r6
4000d408:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d40c:	e5900000 	ldr	r0, [r0]
4000d410:	e2400001 	sub	r0, r0, #1
4000d414:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d418:	e5810000 	str	r0, [r1]
4000d41c:	e5940008 	ldr	r0, [r4, #8]
4000d420:	e3500000 	cmp	r0, #0
4000d424:	1a000001 	bne	4000d430 <_tx_mutex_put+0x304>
4000d428:	e3a00000 	mov	r0, #0
4000d42c:	e584000c 	str	r0, [r4, #12]
4000d430:	e121f005 	msr	CPSR_c, r5
4000d434:	eb000726 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4000d438:	e3a00000 	mov	r0, #0
4000d43c:	eaffff86 	b	4000d25c <_tx_mutex_put+0x130>
4000d440:	e594701c 	ldr	r7, [r4, #28]
4000d444:	e5940010 	ldr	r0, [r4, #16]
4000d448:	e3500000 	cmp	r0, #0
4000d44c:	0a00001f 	beq	4000d4d0 <_tx_mutex_put+0x3a4>
4000d450:	e594800c 	ldr	r8, [r4, #12]
4000d454:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d458:	e5840014 	str	r0, [r4, #20]
4000d45c:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d460:	e5840018 	str	r0, [r4, #24]
4000d464:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d468:	e3500000 	cmp	r0, #0
4000d46c:	0a00000b 	beq	4000d4a0 <_tx_mutex_put+0x374>
4000d470:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d474:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d478:	e58d0000 	str	r0, [sp]
4000d47c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d480:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d484:	e59d0000 	ldr	r0, [sp]
4000d488:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d48c:	e59d0000 	ldr	r0, [sp]
4000d490:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d494:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d498:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d49c:	ea000006 	b	4000d4bc <_tx_mutex_put+0x390>
4000d4a0:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d4a4:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d4a8:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d4ac:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d4b0:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d4b4:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d4b8:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d4bc:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d4c0:	e2800001 	add	r0, r0, #1
4000d4c4:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d4c8:	e3a00020 	mov	r0, #32
4000d4cc:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d4d0:	e3a00001 	mov	r0, #1
4000d4d4:	e5840008 	str	r0, [r4, #8]
4000d4d8:	e584700c 	str	r7, [r4, #12]
4000d4dc:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d4e0:	e1500007 	cmp	r0, r7
4000d4e4:	1a000002 	bne	4000d4f4 <_tx_mutex_put+0x3c8>
4000d4e8:	e3a00000 	mov	r0, #0
4000d4ec:	e584001c 	str	r0, [r4, #28]
4000d4f0:	ea000007 	b	4000d514 <_tx_mutex_put+0x3e8>
4000d4f4:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d4f8:	e584001c 	str	r0, [r4, #28]
4000d4fc:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d500:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d504:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d508:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d50c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d510:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d514:	e5940020 	ldr	r0, [r4, #32]
4000d518:	e2400001 	sub	r0, r0, #1
4000d51c:	e5840020 	str	r0, [r4, #32]
4000d520:	e3a00000 	mov	r0, #0
4000d524:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d528:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d52c:	e5900000 	ldr	r0, [r0]
4000d530:	e2800001 	add	r0, r0, #1
4000d534:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d5fc <_tx_mutex_put+0x4d0>
4000d538:	e5810000 	str	r0, [r1]
4000d53c:	e121f005 	msr	CPSR_c, r5
4000d540:	e3a00000 	mov	r0, #0
4000d544:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d548:	e5940010 	ldr	r0, [r4, #16]
4000d54c:	e3500000 	cmp	r0, #0
4000d550:	0a00001a 	beq	4000d5c0 <_tx_mutex_put+0x494>
4000d554:	e5940020 	ldr	r0, [r4, #32]
4000d558:	e3500000 	cmp	r0, #0
4000d55c:	0a00000e 	beq	4000d59c <_tx_mutex_put+0x470>
4000d560:	e5940020 	ldr	r0, [r4, #32]
4000d564:	e3500001 	cmp	r0, #1
4000d568:	9a000001 	bls	4000d574 <_tx_mutex_put+0x448>
4000d56c:	e1a00004 	mov	r0, r4
4000d570:	eb000b6f 	bl	40010334 <_tx_mutex_prioritize>
4000d574:	e10f5000 	mrs	r5, CPSR
4000d578:	e3856080 	orr	r6, r5, #128	; 0x80
4000d57c:	e121f006 	msr	CPSR_c, r6
4000d580:	e594001c 	ldr	r0, [r4, #28]
4000d584:	e3500000 	cmp	r0, #0
4000d588:	0a000002 	beq	4000d598 <_tx_mutex_put+0x46c>
4000d58c:	e594001c 	ldr	r0, [r4, #28]
4000d590:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d594:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d598:	e121f005 	msr	CPSR_c, r5
4000d59c:	e3580000 	cmp	r8, #0
4000d5a0:	0a000006 	beq	4000d5c0 <_tx_mutex_put+0x494>
4000d5a4:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d5a8:	e1500009 	cmp	r0, r9
4000d5ac:	0a000003 	beq	4000d5c0 <_tx_mutex_put+0x494>
4000d5b0:	e1a0200a 	mov	r2, sl
4000d5b4:	e1a01009 	mov	r1, r9
4000d5b8:	e1a00008 	mov	r0, r8
4000d5bc:	ebfffeb8 	bl	4000d0a4 <_tx_mutex_priority_change>
4000d5c0:	e1a00007 	mov	r0, r7
4000d5c4:	eb0006ee 	bl	4000f184 <_tx_thread_system_resume>
4000d5c8:	e3a00000 	mov	r0, #0
4000d5cc:	eaffff22 	b	4000d25c <_tx_mutex_put+0x130>
4000d5d0:	e121f005 	msr	CPSR_c, r5
4000d5d4:	e3a0001e 	mov	r0, #30
4000d5d8:	eaffff1f 	b	4000d25c <_tx_mutex_put+0x130>
4000d5dc:	40030ea0 	.word	0x40030ea0
4000d5e0:	40030ea4 	.word	0x40030ea4
4000d5e4:	40030e2c 	.word	0x40030e2c
4000d5e8:	40030e34 	.word	0x40030e34
4000d5ec:	f0f0f0f0 	.word	0xf0f0f0f0
4000d5f0:	40030e9c 	.word	0x40030e9c
4000d5f4:	40030e98 	.word	0x40030e98
4000d5f8:	40030e8c 	.word	0x40030e8c
4000d5fc:	40030e50 	.word	0x40030e50

4000d600 <_tx_queue_create>:
4000d600:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d604:	e1a04000 	mov	r4, r0
4000d608:	e1a05001 	mov	r5, r1
4000d60c:	e1a06002 	mov	r6, r2
4000d610:	e1a07003 	mov	r7, r3
4000d614:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d618:	e3a0103c 	mov	r1, #60	; 0x3c
4000d61c:	e1a00004 	mov	r0, r4
4000d620:	eb00179f 	bl	400134a4 <__aeabi_memclr4>
4000d624:	e5845004 	str	r5, [r4, #4]
4000d628:	e5846008 	str	r6, [r4, #8]
4000d62c:	e1a01106 	lsl	r1, r6, #2
4000d630:	e1a00008 	mov	r0, r8
4000d634:	eb000ca6 	bl	400108d4 <__aeabi_uidivmod>
4000d638:	e1a0b000 	mov	fp, r0
4000d63c:	e000069b 	mul	r0, fp, r6
4000d640:	e58d0004 	str	r0, [sp, #4]
4000d644:	e5847018 	str	r7, [r4, #24]
4000d648:	e59d0004 	ldr	r0, [sp, #4]
4000d64c:	e0870100 	add	r0, r7, r0, lsl #2
4000d650:	e584001c 	str	r0, [r4, #28]
4000d654:	e5847020 	str	r7, [r4, #32]
4000d658:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d65c:	e584b014 	str	fp, [r4, #20]
4000d660:	e584b00c 	str	fp, [r4, #12]
4000d664:	e10f9000 	mrs	r9, CPSR
4000d668:	e3890080 	orr	r0, r9, #128	; 0x80
4000d66c:	e58d0008 	str	r0, [sp, #8]
4000d670:	e59d0008 	ldr	r0, [sp, #8]
4000d674:	e121f000 	msr	CPSR_c, r0
4000d678:	e59f0160 	ldr	r0, [pc, #352]	; 4000d7e0 <_tx_queue_create+0x1e0>
4000d67c:	e5840000 	str	r0, [r4]
4000d680:	e59f015c 	ldr	r0, [pc, #348]	; 4000d7e4 <_tx_queue_create+0x1e4>
4000d684:	e5900000 	ldr	r0, [r0]
4000d688:	e3500000 	cmp	r0, #0
4000d68c:	0a00000b 	beq	4000d6c0 <_tx_queue_create+0xc0>
4000d690:	e59f014c 	ldr	r0, [pc, #332]	; 4000d7e4 <_tx_queue_create+0x1e4>
4000d694:	e5900000 	ldr	r0, [r0]
4000d698:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d69c:	e59f0140 	ldr	r0, [pc, #320]	; 4000d7e4 <_tx_queue_create+0x1e4>
4000d6a0:	e5900000 	ldr	r0, [r0]
4000d6a4:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d6a8:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d6ac:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d6b0:	e59f012c 	ldr	r0, [pc, #300]	; 4000d7e4 <_tx_queue_create+0x1e4>
4000d6b4:	e5900000 	ldr	r0, [r0]
4000d6b8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d6bc:	ea000003 	b	4000d6d0 <_tx_queue_create+0xd0>
4000d6c0:	e59f011c 	ldr	r0, [pc, #284]	; 4000d7e4 <_tx_queue_create+0x1e4>
4000d6c4:	e5804000 	str	r4, [r0]
4000d6c8:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d6cc:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d6d0:	e59f0110 	ldr	r0, [pc, #272]	; 4000d7e8 <_tx_queue_create+0x1e8>
4000d6d4:	e5900000 	ldr	r0, [r0]
4000d6d8:	e2800001 	add	r0, r0, #1
4000d6dc:	e59f1104 	ldr	r1, [pc, #260]	; 4000d7e8 <_tx_queue_create+0x1e8>
4000d6e0:	e5810000 	str	r0, [r1]
4000d6e4:	e3a03000 	mov	r3, #0
4000d6e8:	e58d3000 	str	r3, [sp]
4000d6ec:	e1a03008 	mov	r3, r8
4000d6f0:	e1a02005 	mov	r2, r5
4000d6f4:	e1a01004 	mov	r1, r4
4000d6f8:	e3a00003 	mov	r0, #3
4000d6fc:	eb0009f6 	bl	4000fedc <_tx_trace_object_register>
4000d700:	e59f10e4 	ldr	r1, [pc, #228]	; 4000d7ec <_tx_queue_create+0x1ec>
4000d704:	e5910000 	ldr	r0, [r1]
4000d708:	e3500000 	cmp	r0, #0
4000d70c:	0a000030 	beq	4000d7d4 <_tx_queue_create+0x1d4>
4000d710:	e59f10d8 	ldr	r1, [pc, #216]	; 4000d7f0 <_tx_queue_create+0x1f0>
4000d714:	e5911000 	ldr	r1, [r1]
4000d718:	e2811001 	add	r1, r1, #1
4000d71c:	e59f20cc 	ldr	r2, [pc, #204]	; 4000d7f0 <_tx_queue_create+0x1f0>
4000d720:	e5821000 	str	r1, [r2]
4000d724:	e580100c 	str	r1, [r0, #12]
4000d728:	e59f10c4 	ldr	r1, [pc, #196]	; 4000d7f4 <_tx_queue_create+0x1f4>
4000d72c:	e5911000 	ldr	r1, [r1]
4000d730:	e3510000 	cmp	r1, #0
4000d734:	1a000006 	bne	4000d754 <_tx_queue_create+0x154>
4000d738:	e59f10b8 	ldr	r1, [pc, #184]	; 4000d7f8 <_tx_queue_create+0x1f8>
4000d73c:	e5911000 	ldr	r1, [r1]
4000d740:	e5801000 	str	r1, [r0]
4000d744:	e5901000 	ldr	r1, [r0]
4000d748:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d74c:	e5801004 	str	r1, [r0, #4]
4000d750:	ea00000d 	b	4000d78c <_tx_queue_create+0x18c>
4000d754:	e59f1098 	ldr	r1, [pc, #152]	; 4000d7f4 <_tx_queue_create+0x1f4>
4000d758:	e5911000 	ldr	r1, [r1]
4000d75c:	e59f2098 	ldr	r2, [pc, #152]	; 4000d7fc <_tx_queue_create+0x1fc>
4000d760:	e1510002 	cmp	r1, r2
4000d764:	2a000004 	bcs	4000d77c <_tx_queue_create+0x17c>
4000d768:	e3e01000 	mvn	r1, #0
4000d76c:	e5801000 	str	r1, [r0]
4000d770:	e3a01000 	mov	r1, #0
4000d774:	e5801004 	str	r1, [r0, #4]
4000d778:	ea000003 	b	4000d78c <_tx_queue_create+0x18c>
4000d77c:	e59f1078 	ldr	r1, [pc, #120]	; 4000d7fc <_tx_queue_create+0x1fc>
4000d780:	e5801000 	str	r1, [r0]
4000d784:	e3a01000 	mov	r1, #0
4000d788:	e5801004 	str	r1, [r0, #4]
4000d78c:	e3a0103c 	mov	r1, #60	; 0x3c
4000d790:	e5801008 	str	r1, [r0, #8]
4000d794:	e5804010 	str	r4, [r0, #16]
4000d798:	e5806014 	str	r6, [r0, #20]
4000d79c:	e5807018 	str	r7, [r0, #24]
4000d7a0:	e580801c 	str	r8, [r0, #28]
4000d7a4:	e2800020 	add	r0, r0, #32
4000d7a8:	e59f1050 	ldr	r1, [pc, #80]	; 4000d800 <_tx_queue_create+0x200>
4000d7ac:	e5911000 	ldr	r1, [r1]
4000d7b0:	e1500001 	cmp	r0, r1
4000d7b4:	3a000001 	bcc	4000d7c0 <_tx_queue_create+0x1c0>
4000d7b8:	e59f1044 	ldr	r1, [pc, #68]	; 4000d804 <_tx_queue_create+0x204>
4000d7bc:	e5910000 	ldr	r0, [r1]
4000d7c0:	e59f1024 	ldr	r1, [pc, #36]	; 4000d7ec <_tx_queue_create+0x1ec>
4000d7c4:	e5810000 	str	r0, [r1]
4000d7c8:	e59f1038 	ldr	r1, [pc, #56]	; 4000d808 <_tx_queue_create+0x208>
4000d7cc:	e5911000 	ldr	r1, [r1]
4000d7d0:	e5810020 	str	r0, [r1, #32]
4000d7d4:	e121f009 	msr	CPSR_c, r9
4000d7d8:	e3a00000 	mov	r0, #0
4000d7dc:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d7e0:	51554555 	.word	0x51554555
4000d7e4:	40030eb0 	.word	0x40030eb0
4000d7e8:	40030eb4 	.word	0x40030eb4
4000d7ec:	40030ea0 	.word	0x40030ea0
4000d7f0:	40030ea4 	.word	0x40030ea4
4000d7f4:	40030e2c 	.word	0x40030e2c
4000d7f8:	40030e34 	.word	0x40030e34
4000d7fc:	f0f0f0f0 	.word	0xf0f0f0f0
4000d800:	40030e9c 	.word	0x40030e9c
4000d804:	40030e98 	.word	0x40030e98
4000d808:	40030e8c 	.word	0x40030e8c

4000d80c <_tx_queue_front_send>:
4000d80c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000d810:	e1a04000 	mov	r4, r0
4000d814:	e1a05001 	mov	r5, r1
4000d818:	e1a06002 	mov	r6, r2
4000d81c:	e10f7000 	mrs	r7, CPSR
4000d820:	e3870080 	orr	r0, r7, #128	; 0x80
4000d824:	e58d0004 	str	r0, [sp, #4]
4000d828:	e59d0004 	ldr	r0, [sp, #4]
4000d82c:	e121f000 	msr	CPSR_c, r0
4000d830:	e59f1368 	ldr	r1, [pc, #872]	; 4000dba0 <_tx_queue_front_send+0x394>
4000d834:	e5910000 	ldr	r0, [r1]
4000d838:	e3500000 	cmp	r0, #0
4000d83c:	0a000031 	beq	4000d908 <_tx_queue_front_send+0xfc>
4000d840:	e59f135c 	ldr	r1, [pc, #860]	; 4000dba4 <_tx_queue_front_send+0x398>
4000d844:	e5911000 	ldr	r1, [r1]
4000d848:	e2811001 	add	r1, r1, #1
4000d84c:	e59f2350 	ldr	r2, [pc, #848]	; 4000dba4 <_tx_queue_front_send+0x398>
4000d850:	e5821000 	str	r1, [r2]
4000d854:	e580100c 	str	r1, [r0, #12]
4000d858:	e59f1348 	ldr	r1, [pc, #840]	; 4000dba8 <_tx_queue_front_send+0x39c>
4000d85c:	e5911000 	ldr	r1, [r1]
4000d860:	e3510000 	cmp	r1, #0
4000d864:	1a000006 	bne	4000d884 <_tx_queue_front_send+0x78>
4000d868:	e59f133c 	ldr	r1, [pc, #828]	; 4000dbac <_tx_queue_front_send+0x3a0>
4000d86c:	e5911000 	ldr	r1, [r1]
4000d870:	e5801000 	str	r1, [r0]
4000d874:	e5901000 	ldr	r1, [r0]
4000d878:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d87c:	e5801004 	str	r1, [r0, #4]
4000d880:	ea00000d 	b	4000d8bc <_tx_queue_front_send+0xb0>
4000d884:	e59f131c 	ldr	r1, [pc, #796]	; 4000dba8 <_tx_queue_front_send+0x39c>
4000d888:	e5911000 	ldr	r1, [r1]
4000d88c:	e59f231c 	ldr	r2, [pc, #796]	; 4000dbb0 <_tx_queue_front_send+0x3a4>
4000d890:	e1510002 	cmp	r1, r2
4000d894:	2a000004 	bcs	4000d8ac <_tx_queue_front_send+0xa0>
4000d898:	e3e01000 	mvn	r1, #0
4000d89c:	e5801000 	str	r1, [r0]
4000d8a0:	e3a01000 	mov	r1, #0
4000d8a4:	e5801004 	str	r1, [r0, #4]
4000d8a8:	ea000003 	b	4000d8bc <_tx_queue_front_send+0xb0>
4000d8ac:	e59f12fc 	ldr	r1, [pc, #764]	; 4000dbb0 <_tx_queue_front_send+0x3a4>
4000d8b0:	e5801000 	str	r1, [r0]
4000d8b4:	e3a01000 	mov	r1, #0
4000d8b8:	e5801004 	str	r1, [r0, #4]
4000d8bc:	e3a0103f 	mov	r1, #63	; 0x3f
4000d8c0:	e5801008 	str	r1, [r0, #8]
4000d8c4:	e5804010 	str	r4, [r0, #16]
4000d8c8:	e5805014 	str	r5, [r0, #20]
4000d8cc:	e5806018 	str	r6, [r0, #24]
4000d8d0:	e5941010 	ldr	r1, [r4, #16]
4000d8d4:	e580101c 	str	r1, [r0, #28]
4000d8d8:	e2800020 	add	r0, r0, #32
4000d8dc:	e59f12d0 	ldr	r1, [pc, #720]	; 4000dbb4 <_tx_queue_front_send+0x3a8>
4000d8e0:	e5911000 	ldr	r1, [r1]
4000d8e4:	e1500001 	cmp	r0, r1
4000d8e8:	3a000001 	bcc	4000d8f4 <_tx_queue_front_send+0xe8>
4000d8ec:	e59f12c4 	ldr	r1, [pc, #708]	; 4000dbb8 <_tx_queue_front_send+0x3ac>
4000d8f0:	e5910000 	ldr	r0, [r1]
4000d8f4:	e59f12a4 	ldr	r1, [pc, #676]	; 4000dba0 <_tx_queue_front_send+0x394>
4000d8f8:	e5810000 	str	r0, [r1]
4000d8fc:	e59f12b8 	ldr	r1, [pc, #696]	; 4000dbbc <_tx_queue_front_send+0x3b0>
4000d900:	e5911000 	ldr	r1, [r1]
4000d904:	e5810020 	str	r0, [r1, #32]
4000d908:	e5940014 	ldr	r0, [r4, #20]
4000d90c:	e3500000 	cmp	r0, #0
4000d910:	0a000064 	beq	4000daa8 <_tx_queue_front_send+0x29c>
4000d914:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000d918:	e3500000 	cmp	r0, #0
4000d91c:	1a00002b 	bne	4000d9d0 <_tx_queue_front_send+0x1c4>
4000d920:	e5940020 	ldr	r0, [r4, #32]
4000d924:	e5941018 	ldr	r1, [r4, #24]
4000d928:	e1500001 	cmp	r0, r1
4000d92c:	1a000004 	bne	4000d944 <_tx_queue_front_send+0x138>
4000d930:	e594001c 	ldr	r0, [r4, #28]
4000d934:	e5941008 	ldr	r1, [r4, #8]
4000d938:	e0400101 	sub	r0, r0, r1, lsl #2
4000d93c:	e5840020 	str	r0, [r4, #32]
4000d940:	ea000003 	b	4000d954 <_tx_queue_front_send+0x148>
4000d944:	e5940020 	ldr	r0, [r4, #32]
4000d948:	e5941008 	ldr	r1, [r4, #8]
4000d94c:	e0400101 	sub	r0, r0, r1, lsl #2
4000d950:	e5840020 	str	r0, [r4, #32]
4000d954:	e5940014 	ldr	r0, [r4, #20]
4000d958:	e2400001 	sub	r0, r0, #1
4000d95c:	e5840014 	str	r0, [r4, #20]
4000d960:	e5940010 	ldr	r0, [r4, #16]
4000d964:	e2800001 	add	r0, r0, #1
4000d968:	e5840010 	str	r0, [r4, #16]
4000d96c:	e1a09005 	mov	r9, r5
4000d970:	e594a020 	ldr	sl, [r4, #32]
4000d974:	e594b008 	ldr	fp, [r4, #8]
4000d978:	e1a00000 	nop			; (mov r0, r0)
4000d97c:	e5990000 	ldr	r0, [r9]
4000d980:	e58a0000 	str	r0, [sl]
4000d984:	e24bb001 	sub	fp, fp, #1
4000d988:	e35b0000 	cmp	fp, #0
4000d98c:	1a000000 	bne	4000d994 <_tx_queue_front_send+0x188>
4000d990:	ea000002 	b	4000d9a0 <_tx_queue_front_send+0x194>
4000d994:	e28aa004 	add	sl, sl, #4
4000d998:	e2899004 	add	r9, r9, #4
4000d99c:	eafffff6 	b	4000d97c <_tx_queue_front_send+0x170>
4000d9a0:	e1a00000 	nop			; (mov r0, r0)
4000d9a4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000d9a8:	e58d0000 	str	r0, [sp]
4000d9ac:	e121f007 	msr	CPSR_c, r7
4000d9b0:	e59d0000 	ldr	r0, [sp]
4000d9b4:	e3500000 	cmp	r0, #0
4000d9b8:	0a000002 	beq	4000d9c8 <_tx_queue_front_send+0x1bc>
4000d9bc:	e1a00004 	mov	r0, r4
4000d9c0:	e59d1000 	ldr	r1, [sp]
4000d9c4:	e12fff31 	blx	r1
4000d9c8:	e3a00000 	mov	r0, #0
4000d9cc:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000d9d0:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000d9d4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000d9d8:	e1500008 	cmp	r0, r8
4000d9dc:	1a000002 	bne	4000d9ec <_tx_queue_front_send+0x1e0>
4000d9e0:	e3a00000 	mov	r0, #0
4000d9e4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000d9e8:	ea000007 	b	4000da0c <_tx_queue_front_send+0x200>
4000d9ec:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000d9f0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000d9f4:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000d9f8:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000d9fc:	e5810074 	str	r0, [r1, #116]	; 0x74
4000da00:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da04:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000da08:	e5810070 	str	r0, [r1, #112]	; 0x70
4000da0c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000da10:	e2400001 	sub	r0, r0, #1
4000da14:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000da18:	e3a00000 	mov	r0, #0
4000da1c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000da20:	e59f0198 	ldr	r0, [pc, #408]	; 4000dbc0 <_tx_queue_front_send+0x3b4>
4000da24:	e5900000 	ldr	r0, [r0]
4000da28:	e2800001 	add	r0, r0, #1
4000da2c:	e59f118c 	ldr	r1, [pc, #396]	; 4000dbc0 <_tx_queue_front_send+0x3b4>
4000da30:	e5810000 	str	r0, [r1]
4000da34:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000da38:	e58d0000 	str	r0, [sp]
4000da3c:	e121f007 	msr	CPSR_c, r7
4000da40:	e1a09005 	mov	r9, r5
4000da44:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000da48:	e594b008 	ldr	fp, [r4, #8]
4000da4c:	e1a00000 	nop			; (mov r0, r0)
4000da50:	e5990000 	ldr	r0, [r9]
4000da54:	e58a0000 	str	r0, [sl]
4000da58:	e24bb001 	sub	fp, fp, #1
4000da5c:	e35b0000 	cmp	fp, #0
4000da60:	1a000000 	bne	4000da68 <_tx_queue_front_send+0x25c>
4000da64:	ea000002 	b	4000da74 <_tx_queue_front_send+0x268>
4000da68:	e28aa004 	add	sl, sl, #4
4000da6c:	e2899004 	add	r9, r9, #4
4000da70:	eafffff6 	b	4000da50 <_tx_queue_front_send+0x244>
4000da74:	e1a00000 	nop			; (mov r0, r0)
4000da78:	e3a00000 	mov	r0, #0
4000da7c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000da80:	e1a00008 	mov	r0, r8
4000da84:	eb0005be 	bl	4000f184 <_tx_thread_system_resume>
4000da88:	e59d0000 	ldr	r0, [sp]
4000da8c:	e3500000 	cmp	r0, #0
4000da90:	0a000002 	beq	4000daa0 <_tx_queue_front_send+0x294>
4000da94:	e1a00004 	mov	r0, r4
4000da98:	e59d1000 	ldr	r1, [sp]
4000da9c:	e12fff31 	blx	r1
4000daa0:	e3a00000 	mov	r0, #0
4000daa4:	eaffffc8 	b	4000d9cc <_tx_queue_front_send+0x1c0>
4000daa8:	e3560000 	cmp	r6, #0
4000daac:	0a000038 	beq	4000db94 <_tx_queue_front_send+0x388>
4000dab0:	e59f00f4 	ldr	r0, [pc, #244]	; 4000dbac <_tx_queue_front_send+0x3a0>
4000dab4:	e5908000 	ldr	r8, [r0]
4000dab8:	e59f0104 	ldr	r0, [pc, #260]	; 4000dbc4 <_tx_queue_front_send+0x3b8>
4000dabc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dac0:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000dac4:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000dac8:	e3a00001 	mov	r0, #1
4000dacc:	e5880080 	str	r0, [r8, #128]	; 0x80
4000dad0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dad4:	e3500000 	cmp	r0, #0
4000dad8:	0a00000b 	beq	4000db0c <_tx_queue_front_send+0x300>
4000dadc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dae0:	e5880070 	str	r0, [r8, #112]	; 0x70
4000dae4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dae8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000daec:	e5880074 	str	r0, [r8, #116]	; 0x74
4000daf0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000daf4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000daf8:	e5808070 	str	r8, [r0, #112]	; 0x70
4000dafc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db00:	e5808074 	str	r8, [r0, #116]	; 0x74
4000db04:	e5848028 	str	r8, [r4, #40]	; 0x28
4000db08:	ea000002 	b	4000db18 <_tx_queue_front_send+0x30c>
4000db0c:	e5848028 	str	r8, [r4, #40]	; 0x28
4000db10:	e5888070 	str	r8, [r8, #112]	; 0x70
4000db14:	e5888074 	str	r8, [r8, #116]	; 0x74
4000db18:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000db1c:	e2800001 	add	r0, r0, #1
4000db20:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000db24:	e3a00005 	mov	r0, #5
4000db28:	e5880030 	str	r0, [r8, #48]	; 0x30
4000db2c:	e3a00001 	mov	r0, #1
4000db30:	e5880038 	str	r0, [r8, #56]	; 0x38
4000db34:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000db38:	e59f0080 	ldr	r0, [pc, #128]	; 4000dbc0 <_tx_queue_front_send+0x3b4>
4000db3c:	e5900000 	ldr	r0, [r0]
4000db40:	e2800001 	add	r0, r0, #1
4000db44:	e59f1074 	ldr	r1, [pc, #116]	; 4000dbc0 <_tx_queue_front_send+0x3b4>
4000db48:	e5810000 	str	r0, [r1]
4000db4c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000db50:	e58d0000 	str	r0, [sp]
4000db54:	e121f007 	msr	CPSR_c, r7
4000db58:	e1a00008 	mov	r0, r8
4000db5c:	ebffebe1 	bl	40008ae8 <_tx_thread_system_suspend>
4000db60:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000db64:	e58d0000 	str	r0, [sp]
4000db68:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000db6c:	e3500000 	cmp	r0, #0
4000db70:	1a000005 	bne	4000db8c <_tx_queue_front_send+0x380>
4000db74:	e59d0000 	ldr	r0, [sp]
4000db78:	e3500000 	cmp	r0, #0
4000db7c:	0a000002 	beq	4000db8c <_tx_queue_front_send+0x380>
4000db80:	e1a00004 	mov	r0, r4
4000db84:	e59d1000 	ldr	r1, [sp]
4000db88:	e12fff31 	blx	r1
4000db8c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000db90:	eaffff8d 	b	4000d9cc <_tx_queue_front_send+0x1c0>
4000db94:	e121f007 	msr	CPSR_c, r7
4000db98:	e3a0000b 	mov	r0, #11
4000db9c:	eaffff8a 	b	4000d9cc <_tx_queue_front_send+0x1c0>
4000dba0:	40030ea0 	.word	0x40030ea0
4000dba4:	40030ea4 	.word	0x40030ea4
4000dba8:	40030e2c 	.word	0x40030e2c
4000dbac:	40030e34 	.word	0x40030e34
4000dbb0:	f0f0f0f0 	.word	0xf0f0f0f0
4000dbb4:	40030e9c 	.word	0x40030e9c
4000dbb8:	40030e98 	.word	0x40030e98
4000dbbc:	40030e8c 	.word	0x40030e8c
4000dbc0:	40030e50 	.word	0x40030e50
4000dbc4:	400105a8 	.word	0x400105a8

4000dbc8 <_tx_queue_receive>:
4000dbc8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000dbcc:	e1a04000 	mov	r4, r0
4000dbd0:	e1a05001 	mov	r5, r1
4000dbd4:	e1a06002 	mov	r6, r2
4000dbd8:	e10f7000 	mrs	r7, CPSR
4000dbdc:	e3870080 	orr	r0, r7, #128	; 0x80
4000dbe0:	e58d0000 	str	r0, [sp]
4000dbe4:	e59d0000 	ldr	r0, [sp]
4000dbe8:	e121f000 	msr	CPSR_c, r0
4000dbec:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e000 <_tx_queue_receive+0x438>
4000dbf0:	e5910000 	ldr	r0, [r1]
4000dbf4:	e3500000 	cmp	r0, #0
4000dbf8:	0a000031 	beq	4000dcc4 <_tx_queue_receive+0xfc>
4000dbfc:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e004 <_tx_queue_receive+0x43c>
4000dc00:	e5911000 	ldr	r1, [r1]
4000dc04:	e2811001 	add	r1, r1, #1
4000dc08:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e004 <_tx_queue_receive+0x43c>
4000dc0c:	e5821000 	str	r1, [r2]
4000dc10:	e580100c 	str	r1, [r0, #12]
4000dc14:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e008 <_tx_queue_receive+0x440>
4000dc18:	e5911000 	ldr	r1, [r1]
4000dc1c:	e3510000 	cmp	r1, #0
4000dc20:	1a000006 	bne	4000dc40 <_tx_queue_receive+0x78>
4000dc24:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e00c <_tx_queue_receive+0x444>
4000dc28:	e5911000 	ldr	r1, [r1]
4000dc2c:	e5801000 	str	r1, [r0]
4000dc30:	e5901000 	ldr	r1, [r0]
4000dc34:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dc38:	e5801004 	str	r1, [r0, #4]
4000dc3c:	ea00000d 	b	4000dc78 <_tx_queue_receive+0xb0>
4000dc40:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e008 <_tx_queue_receive+0x440>
4000dc44:	e5911000 	ldr	r1, [r1]
4000dc48:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e010 <_tx_queue_receive+0x448>
4000dc4c:	e1510002 	cmp	r1, r2
4000dc50:	2a000004 	bcs	4000dc68 <_tx_queue_receive+0xa0>
4000dc54:	e3e01000 	mvn	r1, #0
4000dc58:	e5801000 	str	r1, [r0]
4000dc5c:	e3a01000 	mov	r1, #0
4000dc60:	e5801004 	str	r1, [r0, #4]
4000dc64:	ea000003 	b	4000dc78 <_tx_queue_receive+0xb0>
4000dc68:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e010 <_tx_queue_receive+0x448>
4000dc6c:	e5801000 	str	r1, [r0]
4000dc70:	e3a01000 	mov	r1, #0
4000dc74:	e5801004 	str	r1, [r0, #4]
4000dc78:	e3a01044 	mov	r1, #68	; 0x44
4000dc7c:	e5801008 	str	r1, [r0, #8]
4000dc80:	e5804010 	str	r4, [r0, #16]
4000dc84:	e5805014 	str	r5, [r0, #20]
4000dc88:	e5806018 	str	r6, [r0, #24]
4000dc8c:	e5941010 	ldr	r1, [r4, #16]
4000dc90:	e580101c 	str	r1, [r0, #28]
4000dc94:	e2800020 	add	r0, r0, #32
4000dc98:	e59f1374 	ldr	r1, [pc, #884]	; 4000e014 <_tx_queue_receive+0x44c>
4000dc9c:	e5911000 	ldr	r1, [r1]
4000dca0:	e1500001 	cmp	r0, r1
4000dca4:	3a000001 	bcc	4000dcb0 <_tx_queue_receive+0xe8>
4000dca8:	e59f1368 	ldr	r1, [pc, #872]	; 4000e018 <_tx_queue_receive+0x450>
4000dcac:	e5910000 	ldr	r0, [r1]
4000dcb0:	e59f1348 	ldr	r1, [pc, #840]	; 4000e000 <_tx_queue_receive+0x438>
4000dcb4:	e5810000 	str	r0, [r1]
4000dcb8:	e59f135c 	ldr	r1, [pc, #860]	; 4000e01c <_tx_queue_receive+0x454>
4000dcbc:	e5911000 	ldr	r1, [r1]
4000dcc0:	e5810020 	str	r0, [r1, #32]
4000dcc4:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000dcc8:	e3580000 	cmp	r8, #0
4000dccc:	0a00002f 	beq	4000dd90 <_tx_queue_receive+0x1c8>
4000dcd0:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000dcd4:	e3500000 	cmp	r0, #0
4000dcd8:	0a00002c 	beq	4000dd90 <_tx_queue_receive+0x1c8>
4000dcdc:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000dce0:	e1a0a005 	mov	sl, r5
4000dce4:	e594b008 	ldr	fp, [r4, #8]
4000dce8:	e1a00000 	nop			; (mov r0, r0)
4000dcec:	e5990000 	ldr	r0, [r9]
4000dcf0:	e58a0000 	str	r0, [sl]
4000dcf4:	e24bb001 	sub	fp, fp, #1
4000dcf8:	e35b0000 	cmp	fp, #0
4000dcfc:	1a000000 	bne	4000dd04 <_tx_queue_receive+0x13c>
4000dd00:	ea000002 	b	4000dd10 <_tx_queue_receive+0x148>
4000dd04:	e28aa004 	add	sl, sl, #4
4000dd08:	e2899004 	add	r9, r9, #4
4000dd0c:	eafffff6 	b	4000dcec <_tx_queue_receive+0x124>
4000dd10:	e1a00000 	nop			; (mov r0, r0)
4000dd14:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd18:	e1500008 	cmp	r0, r8
4000dd1c:	1a000002 	bne	4000dd2c <_tx_queue_receive+0x164>
4000dd20:	e3a00000 	mov	r0, #0
4000dd24:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd28:	ea000007 	b	4000dd4c <_tx_queue_receive+0x184>
4000dd2c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd30:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd34:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dd38:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dd3c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000dd40:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd44:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000dd48:	e5810070 	str	r0, [r1, #112]	; 0x70
4000dd4c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dd50:	e2400001 	sub	r0, r0, #1
4000dd54:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dd58:	e3a00000 	mov	r0, #0
4000dd5c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dd60:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e020 <_tx_queue_receive+0x458>
4000dd64:	e5900000 	ldr	r0, [r0]
4000dd68:	e2800001 	add	r0, r0, #1
4000dd6c:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e020 <_tx_queue_receive+0x458>
4000dd70:	e5810000 	str	r0, [r1]
4000dd74:	e121f007 	msr	CPSR_c, r7
4000dd78:	e3a00000 	mov	r0, #0
4000dd7c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dd80:	e1a00008 	mov	r0, r8
4000dd84:	eb0004fe 	bl	4000f184 <_tx_thread_system_resume>
4000dd88:	e3a00000 	mov	r0, #0
4000dd8c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000dd90:	e5940010 	ldr	r0, [r4, #16]
4000dd94:	e3500000 	cmp	r0, #0
4000dd98:	0a000068 	beq	4000df40 <_tx_queue_receive+0x378>
4000dd9c:	e5949020 	ldr	r9, [r4, #32]
4000dda0:	e1a0a005 	mov	sl, r5
4000dda4:	e594b008 	ldr	fp, [r4, #8]
4000dda8:	e1a00000 	nop			; (mov r0, r0)
4000ddac:	e5990000 	ldr	r0, [r9]
4000ddb0:	e58a0000 	str	r0, [sl]
4000ddb4:	e24bb001 	sub	fp, fp, #1
4000ddb8:	e35b0000 	cmp	fp, #0
4000ddbc:	1a000000 	bne	4000ddc4 <_tx_queue_receive+0x1fc>
4000ddc0:	ea000002 	b	4000ddd0 <_tx_queue_receive+0x208>
4000ddc4:	e28aa004 	add	sl, sl, #4
4000ddc8:	e2899004 	add	r9, r9, #4
4000ddcc:	eafffff6 	b	4000ddac <_tx_queue_receive+0x1e4>
4000ddd0:	e1a00000 	nop			; (mov r0, r0)
4000ddd4:	e5940020 	ldr	r0, [r4, #32]
4000ddd8:	e5941008 	ldr	r1, [r4, #8]
4000dddc:	e0800101 	add	r0, r0, r1, lsl #2
4000dde0:	e5840020 	str	r0, [r4, #32]
4000dde4:	e5940020 	ldr	r0, [r4, #32]
4000dde8:	e594101c 	ldr	r1, [r4, #28]
4000ddec:	e1500001 	cmp	r0, r1
4000ddf0:	3a000001 	bcc	4000ddfc <_tx_queue_receive+0x234>
4000ddf4:	e5940018 	ldr	r0, [r4, #24]
4000ddf8:	e5840020 	str	r0, [r4, #32]
4000ddfc:	e3580000 	cmp	r8, #0
4000de00:	1a000008 	bne	4000de28 <_tx_queue_receive+0x260>
4000de04:	e5940014 	ldr	r0, [r4, #20]
4000de08:	e2800001 	add	r0, r0, #1
4000de0c:	e5840014 	str	r0, [r4, #20]
4000de10:	e5940010 	ldr	r0, [r4, #16]
4000de14:	e2400001 	sub	r0, r0, #1
4000de18:	e5840010 	str	r0, [r4, #16]
4000de1c:	e121f007 	msr	CPSR_c, r7
4000de20:	e3a00000 	mov	r0, #0
4000de24:	eaffffd8 	b	4000dd8c <_tx_queue_receive+0x1c4>
4000de28:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e020 <_tx_queue_receive+0x458>
4000de2c:	e5900000 	ldr	r0, [r0]
4000de30:	e2800001 	add	r0, r0, #1
4000de34:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e020 <_tx_queue_receive+0x458>
4000de38:	e5810000 	str	r0, [r1]
4000de3c:	e121f007 	msr	CPSR_c, r7
4000de40:	e10f7000 	mrs	r7, CPSR
4000de44:	e3870080 	orr	r0, r7, #128	; 0x80
4000de48:	e58d0000 	str	r0, [sp]
4000de4c:	e59d0000 	ldr	r0, [sp]
4000de50:	e121f000 	msr	CPSR_c, r0
4000de54:	e2810000 	add	r0, r1, #0
4000de58:	e5900000 	ldr	r0, [r0]
4000de5c:	e2400001 	sub	r0, r0, #1
4000de60:	e5810000 	str	r0, [r1]
4000de64:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000de68:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000de6c:	e594b008 	ldr	fp, [r4, #8]
4000de70:	e1a00000 	nop			; (mov r0, r0)
4000de74:	e5990000 	ldr	r0, [r9]
4000de78:	e58a0000 	str	r0, [sl]
4000de7c:	e24bb001 	sub	fp, fp, #1
4000de80:	e35b0000 	cmp	fp, #0
4000de84:	1a000000 	bne	4000de8c <_tx_queue_receive+0x2c4>
4000de88:	ea000002 	b	4000de98 <_tx_queue_receive+0x2d0>
4000de8c:	e28aa004 	add	sl, sl, #4
4000de90:	e2899004 	add	r9, r9, #4
4000de94:	eafffff6 	b	4000de74 <_tx_queue_receive+0x2ac>
4000de98:	e1a00000 	nop			; (mov r0, r0)
4000de9c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000dea0:	e5941008 	ldr	r1, [r4, #8]
4000dea4:	e0800101 	add	r0, r0, r1, lsl #2
4000dea8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000deac:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000deb0:	e594101c 	ldr	r1, [r4, #28]
4000deb4:	e1500001 	cmp	r0, r1
4000deb8:	3a000001 	bcc	4000dec4 <_tx_queue_receive+0x2fc>
4000debc:	e5940018 	ldr	r0, [r4, #24]
4000dec0:	e5840024 	str	r0, [r4, #36]	; 0x24
4000dec4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dec8:	e1500008 	cmp	r0, r8
4000decc:	1a000002 	bne	4000dedc <_tx_queue_receive+0x314>
4000ded0:	e3a00000 	mov	r0, #0
4000ded4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ded8:	ea000007 	b	4000defc <_tx_queue_receive+0x334>
4000dedc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dee0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dee4:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dee8:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000deec:	e5810074 	str	r0, [r1, #116]	; 0x74
4000def0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000def4:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000def8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000defc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000df00:	e2400001 	sub	r0, r0, #1
4000df04:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000df08:	e3a00000 	mov	r0, #0
4000df0c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000df10:	e59f0108 	ldr	r0, [pc, #264]	; 4000e020 <_tx_queue_receive+0x458>
4000df14:	e5900000 	ldr	r0, [r0]
4000df18:	e2800001 	add	r0, r0, #1
4000df1c:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e020 <_tx_queue_receive+0x458>
4000df20:	e5810000 	str	r0, [r1]
4000df24:	e121f007 	msr	CPSR_c, r7
4000df28:	e3a00000 	mov	r0, #0
4000df2c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000df30:	e1a00008 	mov	r0, r8
4000df34:	eb000492 	bl	4000f184 <_tx_thread_system_resume>
4000df38:	e3a00000 	mov	r0, #0
4000df3c:	eaffff92 	b	4000dd8c <_tx_queue_receive+0x1c4>
4000df40:	e3560000 	cmp	r6, #0
4000df44:	0a00002a 	beq	4000dff4 <_tx_queue_receive+0x42c>
4000df48:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e00c <_tx_queue_receive+0x444>
4000df4c:	e5908000 	ldr	r8, [r0]
4000df50:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e024 <_tx_queue_receive+0x45c>
4000df54:	e5880068 	str	r0, [r8, #104]	; 0x68
4000df58:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000df5c:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000df60:	e3a00000 	mov	r0, #0
4000df64:	e5880080 	str	r0, [r8, #128]	; 0x80
4000df68:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000df6c:	e3500000 	cmp	r0, #0
4000df70:	0a00000a 	beq	4000dfa0 <_tx_queue_receive+0x3d8>
4000df74:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000df78:	e5880070 	str	r0, [r8, #112]	; 0x70
4000df7c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000df80:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000df84:	e5880074 	str	r0, [r8, #116]	; 0x74
4000df88:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000df8c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000df90:	e5808070 	str	r8, [r0, #112]	; 0x70
4000df94:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000df98:	e5808074 	str	r8, [r0, #116]	; 0x74
4000df9c:	ea000002 	b	4000dfac <_tx_queue_receive+0x3e4>
4000dfa0:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dfa4:	e5888070 	str	r8, [r8, #112]	; 0x70
4000dfa8:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dfac:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dfb0:	e2800001 	add	r0, r0, #1
4000dfb4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dfb8:	e3a00005 	mov	r0, #5
4000dfbc:	e5880030 	str	r0, [r8, #48]	; 0x30
4000dfc0:	e3a00001 	mov	r0, #1
4000dfc4:	e5880038 	str	r0, [r8, #56]	; 0x38
4000dfc8:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000dfcc:	e59f004c 	ldr	r0, [pc, #76]	; 4000e020 <_tx_queue_receive+0x458>
4000dfd0:	e5900000 	ldr	r0, [r0]
4000dfd4:	e2800001 	add	r0, r0, #1
4000dfd8:	e59f1040 	ldr	r1, [pc, #64]	; 4000e020 <_tx_queue_receive+0x458>
4000dfdc:	e5810000 	str	r0, [r1]
4000dfe0:	e121f007 	msr	CPSR_c, r7
4000dfe4:	e1a00008 	mov	r0, r8
4000dfe8:	ebffeabe 	bl	40008ae8 <_tx_thread_system_suspend>
4000dfec:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dff0:	eaffff65 	b	4000dd8c <_tx_queue_receive+0x1c4>
4000dff4:	e121f007 	msr	CPSR_c, r7
4000dff8:	e3a0000a 	mov	r0, #10
4000dffc:	eaffff62 	b	4000dd8c <_tx_queue_receive+0x1c4>
4000e000:	40030ea0 	.word	0x40030ea0
4000e004:	40030ea4 	.word	0x40030ea4
4000e008:	40030e2c 	.word	0x40030e2c
4000e00c:	40030e34 	.word	0x40030e34
4000e010:	f0f0f0f0 	.word	0xf0f0f0f0
4000e014:	40030e9c 	.word	0x40030e9c
4000e018:	40030e98 	.word	0x40030e98
4000e01c:	40030e8c 	.word	0x40030e8c
4000e020:	40030e50 	.word	0x40030e50
4000e024:	400105a8 	.word	0x400105a8

4000e028 <_tx_queue_send>:
4000e028:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e02c:	e1a04000 	mov	r4, r0
4000e030:	e1a05001 	mov	r5, r1
4000e034:	e1a06002 	mov	r6, r2
4000e038:	e10f7000 	mrs	r7, CPSR
4000e03c:	e3870080 	orr	r0, r7, #128	; 0x80
4000e040:	e58d0004 	str	r0, [sp, #4]
4000e044:	e59d0004 	ldr	r0, [sp, #4]
4000e048:	e121f000 	msr	CPSR_c, r0
4000e04c:	e59f1358 	ldr	r1, [pc, #856]	; 4000e3ac <_tx_queue_send+0x384>
4000e050:	e5910000 	ldr	r0, [r1]
4000e054:	e3500000 	cmp	r0, #0
4000e058:	0a000031 	beq	4000e124 <_tx_queue_send+0xfc>
4000e05c:	e59f134c 	ldr	r1, [pc, #844]	; 4000e3b0 <_tx_queue_send+0x388>
4000e060:	e5911000 	ldr	r1, [r1]
4000e064:	e2811001 	add	r1, r1, #1
4000e068:	e59f2340 	ldr	r2, [pc, #832]	; 4000e3b0 <_tx_queue_send+0x388>
4000e06c:	e5821000 	str	r1, [r2]
4000e070:	e580100c 	str	r1, [r0, #12]
4000e074:	e59f1338 	ldr	r1, [pc, #824]	; 4000e3b4 <_tx_queue_send+0x38c>
4000e078:	e5911000 	ldr	r1, [r1]
4000e07c:	e3510000 	cmp	r1, #0
4000e080:	1a000006 	bne	4000e0a0 <_tx_queue_send+0x78>
4000e084:	e59f132c 	ldr	r1, [pc, #812]	; 4000e3b8 <_tx_queue_send+0x390>
4000e088:	e5911000 	ldr	r1, [r1]
4000e08c:	e5801000 	str	r1, [r0]
4000e090:	e5901000 	ldr	r1, [r0]
4000e094:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e098:	e5801004 	str	r1, [r0, #4]
4000e09c:	ea00000d 	b	4000e0d8 <_tx_queue_send+0xb0>
4000e0a0:	e59f130c 	ldr	r1, [pc, #780]	; 4000e3b4 <_tx_queue_send+0x38c>
4000e0a4:	e5911000 	ldr	r1, [r1]
4000e0a8:	e59f230c 	ldr	r2, [pc, #780]	; 4000e3bc <_tx_queue_send+0x394>
4000e0ac:	e1510002 	cmp	r1, r2
4000e0b0:	2a000004 	bcs	4000e0c8 <_tx_queue_send+0xa0>
4000e0b4:	e3e01000 	mvn	r1, #0
4000e0b8:	e5801000 	str	r1, [r0]
4000e0bc:	e3a01000 	mov	r1, #0
4000e0c0:	e5801004 	str	r1, [r0, #4]
4000e0c4:	ea000003 	b	4000e0d8 <_tx_queue_send+0xb0>
4000e0c8:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e3bc <_tx_queue_send+0x394>
4000e0cc:	e5801000 	str	r1, [r0]
4000e0d0:	e3a01000 	mov	r1, #0
4000e0d4:	e5801004 	str	r1, [r0, #4]
4000e0d8:	e3a01045 	mov	r1, #69	; 0x45
4000e0dc:	e5801008 	str	r1, [r0, #8]
4000e0e0:	e5804010 	str	r4, [r0, #16]
4000e0e4:	e5805014 	str	r5, [r0, #20]
4000e0e8:	e5806018 	str	r6, [r0, #24]
4000e0ec:	e5941010 	ldr	r1, [r4, #16]
4000e0f0:	e580101c 	str	r1, [r0, #28]
4000e0f4:	e2800020 	add	r0, r0, #32
4000e0f8:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e3c0 <_tx_queue_send+0x398>
4000e0fc:	e5911000 	ldr	r1, [r1]
4000e100:	e1500001 	cmp	r0, r1
4000e104:	3a000001 	bcc	4000e110 <_tx_queue_send+0xe8>
4000e108:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e3c4 <_tx_queue_send+0x39c>
4000e10c:	e5910000 	ldr	r0, [r1]
4000e110:	e59f1294 	ldr	r1, [pc, #660]	; 4000e3ac <_tx_queue_send+0x384>
4000e114:	e5810000 	str	r0, [r1]
4000e118:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e3c8 <_tx_queue_send+0x3a0>
4000e11c:	e5911000 	ldr	r1, [r1]
4000e120:	e5810020 	str	r0, [r1, #32]
4000e124:	e5940014 	ldr	r0, [r4, #20]
4000e128:	e3500000 	cmp	r0, #0
4000e12c:	0a000061 	beq	4000e2b8 <_tx_queue_send+0x290>
4000e130:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e134:	e3500000 	cmp	r0, #0
4000e138:	1a000028 	bne	4000e1e0 <_tx_queue_send+0x1b8>
4000e13c:	e5940014 	ldr	r0, [r4, #20]
4000e140:	e2400001 	sub	r0, r0, #1
4000e144:	e5840014 	str	r0, [r4, #20]
4000e148:	e5940010 	ldr	r0, [r4, #16]
4000e14c:	e2800001 	add	r0, r0, #1
4000e150:	e5840010 	str	r0, [r4, #16]
4000e154:	e1a09005 	mov	r9, r5
4000e158:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e15c:	e594b008 	ldr	fp, [r4, #8]
4000e160:	e1a00000 	nop			; (mov r0, r0)
4000e164:	e5990000 	ldr	r0, [r9]
4000e168:	e58a0000 	str	r0, [sl]
4000e16c:	e24bb001 	sub	fp, fp, #1
4000e170:	e35b0000 	cmp	fp, #0
4000e174:	1a000000 	bne	4000e17c <_tx_queue_send+0x154>
4000e178:	ea000002 	b	4000e188 <_tx_queue_send+0x160>
4000e17c:	e28aa004 	add	sl, sl, #4
4000e180:	e2899004 	add	r9, r9, #4
4000e184:	eafffff6 	b	4000e164 <_tx_queue_send+0x13c>
4000e188:	e1a00000 	nop			; (mov r0, r0)
4000e18c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e190:	e5941008 	ldr	r1, [r4, #8]
4000e194:	e0800101 	add	r0, r0, r1, lsl #2
4000e198:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e19c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e1a0:	e594101c 	ldr	r1, [r4, #28]
4000e1a4:	e1500001 	cmp	r0, r1
4000e1a8:	3a000001 	bcc	4000e1b4 <_tx_queue_send+0x18c>
4000e1ac:	e5940018 	ldr	r0, [r4, #24]
4000e1b0:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e1b4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e1b8:	e58d0000 	str	r0, [sp]
4000e1bc:	e121f007 	msr	CPSR_c, r7
4000e1c0:	e59d0000 	ldr	r0, [sp]
4000e1c4:	e3500000 	cmp	r0, #0
4000e1c8:	0a000002 	beq	4000e1d8 <_tx_queue_send+0x1b0>
4000e1cc:	e1a00004 	mov	r0, r4
4000e1d0:	e59d1000 	ldr	r1, [sp]
4000e1d4:	e12fff31 	blx	r1
4000e1d8:	e3a00000 	mov	r0, #0
4000e1dc:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e1e0:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e1e4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e1e8:	e1500008 	cmp	r0, r8
4000e1ec:	1a000002 	bne	4000e1fc <_tx_queue_send+0x1d4>
4000e1f0:	e3a00000 	mov	r0, #0
4000e1f4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e1f8:	ea000007 	b	4000e21c <_tx_queue_send+0x1f4>
4000e1fc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e200:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e204:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e208:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e20c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e210:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e214:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e218:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e21c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e220:	e2400001 	sub	r0, r0, #1
4000e224:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e228:	e3a00000 	mov	r0, #0
4000e22c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e230:	e59f0194 	ldr	r0, [pc, #404]	; 4000e3cc <_tx_queue_send+0x3a4>
4000e234:	e5900000 	ldr	r0, [r0]
4000e238:	e2800001 	add	r0, r0, #1
4000e23c:	e59f1188 	ldr	r1, [pc, #392]	; 4000e3cc <_tx_queue_send+0x3a4>
4000e240:	e5810000 	str	r0, [r1]
4000e244:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e248:	e58d0000 	str	r0, [sp]
4000e24c:	e121f007 	msr	CPSR_c, r7
4000e250:	e1a09005 	mov	r9, r5
4000e254:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e258:	e594b008 	ldr	fp, [r4, #8]
4000e25c:	e1a00000 	nop			; (mov r0, r0)
4000e260:	e5990000 	ldr	r0, [r9]
4000e264:	e58a0000 	str	r0, [sl]
4000e268:	e24bb001 	sub	fp, fp, #1
4000e26c:	e35b0000 	cmp	fp, #0
4000e270:	1a000000 	bne	4000e278 <_tx_queue_send+0x250>
4000e274:	ea000002 	b	4000e284 <_tx_queue_send+0x25c>
4000e278:	e28aa004 	add	sl, sl, #4
4000e27c:	e2899004 	add	r9, r9, #4
4000e280:	eafffff6 	b	4000e260 <_tx_queue_send+0x238>
4000e284:	e1a00000 	nop			; (mov r0, r0)
4000e288:	e3a00000 	mov	r0, #0
4000e28c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e290:	e1a00008 	mov	r0, r8
4000e294:	eb0003ba 	bl	4000f184 <_tx_thread_system_resume>
4000e298:	e59d0000 	ldr	r0, [sp]
4000e29c:	e3500000 	cmp	r0, #0
4000e2a0:	0a000002 	beq	4000e2b0 <_tx_queue_send+0x288>
4000e2a4:	e1a00004 	mov	r0, r4
4000e2a8:	e59d1000 	ldr	r1, [sp]
4000e2ac:	e12fff31 	blx	r1
4000e2b0:	e3a00000 	mov	r0, #0
4000e2b4:	eaffffc8 	b	4000e1dc <_tx_queue_send+0x1b4>
4000e2b8:	e3560000 	cmp	r6, #0
4000e2bc:	0a000037 	beq	4000e3a0 <_tx_queue_send+0x378>
4000e2c0:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e3b8 <_tx_queue_send+0x390>
4000e2c4:	e5908000 	ldr	r8, [r0]
4000e2c8:	e59f0100 	ldr	r0, [pc, #256]	; 4000e3d0 <_tx_queue_send+0x3a8>
4000e2cc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e2d0:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e2d4:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e2d8:	e3a00000 	mov	r0, #0
4000e2dc:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e2e0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2e4:	e3500000 	cmp	r0, #0
4000e2e8:	0a00000a 	beq	4000e318 <_tx_queue_send+0x2f0>
4000e2ec:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2f0:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e2f4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2f8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e2fc:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e300:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e304:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e308:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e30c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e310:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e314:	ea000002 	b	4000e324 <_tx_queue_send+0x2fc>
4000e318:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e31c:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e320:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e324:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e328:	e2800001 	add	r0, r0, #1
4000e32c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e330:	e3a00005 	mov	r0, #5
4000e334:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e338:	e3a00001 	mov	r0, #1
4000e33c:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e340:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e344:	e59f0080 	ldr	r0, [pc, #128]	; 4000e3cc <_tx_queue_send+0x3a4>
4000e348:	e5900000 	ldr	r0, [r0]
4000e34c:	e2800001 	add	r0, r0, #1
4000e350:	e59f1074 	ldr	r1, [pc, #116]	; 4000e3cc <_tx_queue_send+0x3a4>
4000e354:	e5810000 	str	r0, [r1]
4000e358:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e35c:	e58d0000 	str	r0, [sp]
4000e360:	e121f007 	msr	CPSR_c, r7
4000e364:	e1a00008 	mov	r0, r8
4000e368:	ebffe9de 	bl	40008ae8 <_tx_thread_system_suspend>
4000e36c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e370:	e58d0000 	str	r0, [sp]
4000e374:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e378:	e3500000 	cmp	r0, #0
4000e37c:	1a000005 	bne	4000e398 <_tx_queue_send+0x370>
4000e380:	e59d0000 	ldr	r0, [sp]
4000e384:	e3500000 	cmp	r0, #0
4000e388:	0a000002 	beq	4000e398 <_tx_queue_send+0x370>
4000e38c:	e1a00004 	mov	r0, r4
4000e390:	e59d1000 	ldr	r1, [sp]
4000e394:	e12fff31 	blx	r1
4000e398:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e39c:	eaffff8e 	b	4000e1dc <_tx_queue_send+0x1b4>
4000e3a0:	e121f007 	msr	CPSR_c, r7
4000e3a4:	e3a0000b 	mov	r0, #11
4000e3a8:	eaffff8b 	b	4000e1dc <_tx_queue_send+0x1b4>
4000e3ac:	40030ea0 	.word	0x40030ea0
4000e3b0:	40030ea4 	.word	0x40030ea4
4000e3b4:	40030e2c 	.word	0x40030e2c
4000e3b8:	40030e34 	.word	0x40030e34
4000e3bc:	f0f0f0f0 	.word	0xf0f0f0f0
4000e3c0:	40030e9c 	.word	0x40030e9c
4000e3c4:	40030e98 	.word	0x40030e98
4000e3c8:	40030e8c 	.word	0x40030e8c
4000e3cc:	40030e50 	.word	0x40030e50
4000e3d0:	400105a8 	.word	0x400105a8

4000e3d4 <_tx_thread_create>:
4000e3d4:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e3d8:	e24dd014 	sub	sp, sp, #20
4000e3dc:	e1a04000 	mov	r4, r0
4000e3e0:	e1a05001 	mov	r5, r1
4000e3e4:	e28da048 	add	sl, sp, #72	; 0x48
4000e3e8:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e3ec:	e3a00000 	mov	r0, #0
4000e3f0:	e58d0004 	str	r0, [sp, #4]
4000e3f4:	e3a020ef 	mov	r2, #239	; 0xef
4000e3f8:	e1a01007 	mov	r1, r7
4000e3fc:	e1a00006 	mov	r0, r6
4000e400:	eb00144f 	bl	40013544 <__aeabi_memset>
4000e404:	e1a00127 	lsr	r0, r7, #2
4000e408:	e3a01004 	mov	r1, #4
4000e40c:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e410:	e3a010a8 	mov	r1, #168	; 0xa8
4000e414:	e1a00004 	mov	r0, r4
4000e418:	eb001421 	bl	400134a4 <__aeabi_memclr4>
4000e41c:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e420:	e59d001c 	ldr	r0, [sp, #28]
4000e424:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e428:	e59d0020 	ldr	r0, [sp, #32]
4000e42c:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e430:	e584600c 	str	r6, [r4, #12]
4000e434:	e5847014 	str	r7, [r4, #20]
4000e438:	e2470001 	sub	r0, r7, #1
4000e43c:	e0800006 	add	r0, r0, r6
4000e440:	e5840010 	str	r0, [r4, #16]
4000e444:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e448:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e44c:	e584a018 	str	sl, [r4, #24]
4000e450:	e584a01c 	str	sl, [r4, #28]
4000e454:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e458:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e45c:	e3a00003 	mov	r0, #3
4000e460:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e464:	e59f0268 	ldr	r0, [pc, #616]	; 4000e6d4 <_tx_thread_create+0x300>
4000e468:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e46c:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e470:	e59f1260 	ldr	r1, [pc, #608]	; 4000e6d8 <_tx_thread_create+0x304>
4000e474:	e1a00004 	mov	r0, r4
4000e478:	eb000727 	bl	4001011c <_tx_thread_stack_build>
4000e47c:	e5940008 	ldr	r0, [r4, #8]
4000e480:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e484:	e10f0000 	mrs	r0, CPSR
4000e488:	e58d0010 	str	r0, [sp, #16]
4000e48c:	e59d0010 	ldr	r0, [sp, #16]
4000e490:	e380b080 	orr	fp, r0, #128	; 0x80
4000e494:	e121f00b 	msr	CPSR_c, fp
4000e498:	e59f023c 	ldr	r0, [pc, #572]	; 4000e6dc <_tx_thread_create+0x308>
4000e49c:	e5840000 	str	r0, [r4]
4000e4a0:	e59f0238 	ldr	r0, [pc, #568]	; 4000e6e0 <_tx_thread_create+0x30c>
4000e4a4:	e5900000 	ldr	r0, [r0]
4000e4a8:	e3500000 	cmp	r0, #0
4000e4ac:	0a00000e 	beq	4000e4ec <_tx_thread_create+0x118>
4000e4b0:	e59f0228 	ldr	r0, [pc, #552]	; 4000e6e0 <_tx_thread_create+0x30c>
4000e4b4:	e5900000 	ldr	r0, [r0]
4000e4b8:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e4bc:	e58d000c 	str	r0, [sp, #12]
4000e4c0:	e59f0218 	ldr	r0, [pc, #536]	; 4000e6e0 <_tx_thread_create+0x30c>
4000e4c4:	e5900000 	ldr	r0, [r0]
4000e4c8:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e4cc:	e59d000c 	ldr	r0, [sp, #12]
4000e4d0:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e4d4:	e59d000c 	ldr	r0, [sp, #12]
4000e4d8:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e4dc:	e59f01fc 	ldr	r0, [pc, #508]	; 4000e6e0 <_tx_thread_create+0x30c>
4000e4e0:	e5900000 	ldr	r0, [r0]
4000e4e4:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e4e8:	ea000003 	b	4000e4fc <_tx_thread_create+0x128>
4000e4ec:	e59f01ec 	ldr	r0, [pc, #492]	; 4000e6e0 <_tx_thread_create+0x30c>
4000e4f0:	e5804000 	str	r4, [r0]
4000e4f4:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e4f8:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e4fc:	e59f01e0 	ldr	r0, [pc, #480]	; 4000e6e4 <_tx_thread_create+0x310>
4000e500:	e5900000 	ldr	r0, [r0]
4000e504:	e2800001 	add	r0, r0, #1
4000e508:	e59f11d4 	ldr	r1, [pc, #468]	; 4000e6e4 <_tx_thread_create+0x310>
4000e50c:	e5810000 	str	r0, [r1]
4000e510:	e59f01d0 	ldr	r0, [pc, #464]	; 4000e6e8 <_tx_thread_create+0x314>
4000e514:	e5900000 	ldr	r0, [r0]
4000e518:	e2800001 	add	r0, r0, #1
4000e51c:	e59f11c4 	ldr	r1, [pc, #452]	; 4000e6e8 <_tx_thread_create+0x314>
4000e520:	e5810000 	str	r0, [r1]
4000e524:	e1a03006 	mov	r3, r6
4000e528:	e1a02005 	mov	r2, r5
4000e52c:	e1a01004 	mov	r1, r4
4000e530:	e3a00001 	mov	r0, #1
4000e534:	e58d7000 	str	r7, [sp]
4000e538:	eb000667 	bl	4000fedc <_tx_trace_object_register>
4000e53c:	e59f11a8 	ldr	r1, [pc, #424]	; 4000e6ec <_tx_thread_create+0x318>
4000e540:	e5910000 	ldr	r0, [r1]
4000e544:	e3500000 	cmp	r0, #0
4000e548:	0a000030 	beq	4000e610 <_tx_thread_create+0x23c>
4000e54c:	e59f119c 	ldr	r1, [pc, #412]	; 4000e6f0 <_tx_thread_create+0x31c>
4000e550:	e5911000 	ldr	r1, [r1]
4000e554:	e2811001 	add	r1, r1, #1
4000e558:	e59f2190 	ldr	r2, [pc, #400]	; 4000e6f0 <_tx_thread_create+0x31c>
4000e55c:	e5821000 	str	r1, [r2]
4000e560:	e580100c 	str	r1, [r0, #12]
4000e564:	e59f1188 	ldr	r1, [pc, #392]	; 4000e6f4 <_tx_thread_create+0x320>
4000e568:	e5911000 	ldr	r1, [r1]
4000e56c:	e3510000 	cmp	r1, #0
4000e570:	1a000006 	bne	4000e590 <_tx_thread_create+0x1bc>
4000e574:	e59f117c 	ldr	r1, [pc, #380]	; 4000e6f8 <_tx_thread_create+0x324>
4000e578:	e5911000 	ldr	r1, [r1]
4000e57c:	e5801000 	str	r1, [r0]
4000e580:	e5901000 	ldr	r1, [r0]
4000e584:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e588:	e5801004 	str	r1, [r0, #4]
4000e58c:	ea00000d 	b	4000e5c8 <_tx_thread_create+0x1f4>
4000e590:	e59f115c 	ldr	r1, [pc, #348]	; 4000e6f4 <_tx_thread_create+0x320>
4000e594:	e5911000 	ldr	r1, [r1]
4000e598:	e59f215c 	ldr	r2, [pc, #348]	; 4000e6fc <_tx_thread_create+0x328>
4000e59c:	e1510002 	cmp	r1, r2
4000e5a0:	2a000004 	bcs	4000e5b8 <_tx_thread_create+0x1e4>
4000e5a4:	e3e01000 	mvn	r1, #0
4000e5a8:	e5801000 	str	r1, [r0]
4000e5ac:	e3a01000 	mov	r1, #0
4000e5b0:	e5801004 	str	r1, [r0, #4]
4000e5b4:	ea000003 	b	4000e5c8 <_tx_thread_create+0x1f4>
4000e5b8:	e59f113c 	ldr	r1, [pc, #316]	; 4000e6fc <_tx_thread_create+0x328>
4000e5bc:	e5801000 	str	r1, [r0]
4000e5c0:	e3a01000 	mov	r1, #0
4000e5c4:	e5801004 	str	r1, [r0, #4]
4000e5c8:	e3a01064 	mov	r1, #100	; 0x64
4000e5cc:	e5801008 	str	r1, [r0, #8]
4000e5d0:	e5804010 	str	r4, [r0, #16]
4000e5d4:	e5808014 	str	r8, [r0, #20]
4000e5d8:	e5806018 	str	r6, [r0, #24]
4000e5dc:	e580701c 	str	r7, [r0, #28]
4000e5e0:	e2800020 	add	r0, r0, #32
4000e5e4:	e59f1114 	ldr	r1, [pc, #276]	; 4000e700 <_tx_thread_create+0x32c>
4000e5e8:	e5911000 	ldr	r1, [r1]
4000e5ec:	e1500001 	cmp	r0, r1
4000e5f0:	3a000001 	bcc	4000e5fc <_tx_thread_create+0x228>
4000e5f4:	e59f1108 	ldr	r1, [pc, #264]	; 4000e704 <_tx_thread_create+0x330>
4000e5f8:	e5910000 	ldr	r0, [r1]
4000e5fc:	e59f10e8 	ldr	r1, [pc, #232]	; 4000e6ec <_tx_thread_create+0x318>
4000e600:	e5810000 	str	r0, [r1]
4000e604:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e708 <_tx_thread_create+0x334>
4000e608:	e5911000 	ldr	r1, [r1]
4000e60c:	e5810020 	str	r0, [r1, #32]
4000e610:	e59d0010 	ldr	r0, [sp, #16]
4000e614:	e121f000 	msr	CPSR_c, r0
4000e618:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e61c:	e3500000 	cmp	r0, #0
4000e620:	0a00001c 	beq	4000e698 <_tx_thread_create+0x2c4>
4000e624:	e59f00c8 	ldr	r0, [pc, #200]	; 4000e6f4 <_tx_thread_create+0x320>
4000e628:	e5900000 	ldr	r0, [r0]
4000e62c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000e6fc <_tx_thread_create+0x328>
4000e630:	e1500001 	cmp	r0, r1
4000e634:	3a00000c 	bcc	4000e66c <_tx_thread_create+0x298>
4000e638:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e70c <_tx_thread_create+0x338>
4000e63c:	e5900000 	ldr	r0, [r0]
4000e640:	e58d0008 	str	r0, [sp, #8]
4000e644:	e59d0008 	ldr	r0, [sp, #8]
4000e648:	e3500000 	cmp	r0, #0
4000e64c:	0a000008 	beq	4000e674 <_tx_thread_create+0x2a0>
4000e650:	e59d0008 	ldr	r0, [sp, #8]
4000e654:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e658:	e58d0004 	str	r0, [sp, #4]
4000e65c:	e59d0008 	ldr	r0, [sp, #8]
4000e660:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e664:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e668:	ea000001 	b	4000e674 <_tx_thread_create+0x2a0>
4000e66c:	e3a00000 	mov	r0, #0
4000e670:	e58d0008 	str	r0, [sp, #8]
4000e674:	e1a00004 	mov	r0, r4
4000e678:	eb0002c1 	bl	4000f184 <_tx_thread_system_resume>
4000e67c:	e59d0008 	ldr	r0, [sp, #8]
4000e680:	e3500000 	cmp	r0, #0
4000e684:	0a00000f 	beq	4000e6c8 <_tx_thread_create+0x2f4>
4000e688:	e59d0008 	ldr	r0, [sp, #8]
4000e68c:	e59d1004 	ldr	r1, [sp, #4]
4000e690:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e694:	ea00000b 	b	4000e6c8 <_tx_thread_create+0x2f4>
4000e698:	e10f0000 	mrs	r0, CPSR
4000e69c:	e58d0010 	str	r0, [sp, #16]
4000e6a0:	e59d0010 	ldr	r0, [sp, #16]
4000e6a4:	e380b080 	orr	fp, r0, #128	; 0x80
4000e6a8:	e121f00b 	msr	CPSR_c, fp
4000e6ac:	e59f0034 	ldr	r0, [pc, #52]	; 4000e6e8 <_tx_thread_create+0x314>
4000e6b0:	e5900000 	ldr	r0, [r0]
4000e6b4:	e2400001 	sub	r0, r0, #1
4000e6b8:	e59f1028 	ldr	r1, [pc, #40]	; 4000e6e8 <_tx_thread_create+0x314>
4000e6bc:	e5810000 	str	r0, [r1]
4000e6c0:	e59d0010 	ldr	r0, [sp, #16]
4000e6c4:	e121f000 	msr	CPSR_c, r0
4000e6c8:	e3a00000 	mov	r0, #0
4000e6cc:	e28dd024 	add	sp, sp, #36	; 0x24
4000e6d0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e6d4:	4000f6b4 	.word	0x4000f6b4
4000e6d8:	4000ef18 	.word	0x4000ef18
4000e6dc:	54485244 	.word	0x54485244
4000e6e0:	40030e3c 	.word	0x40030e3c
4000e6e4:	40030e40 	.word	0x40030e40
4000e6e8:	40030e50 	.word	0x40030e50
4000e6ec:	40030ea0 	.word	0x40030ea0
4000e6f0:	40030ea4 	.word	0x40030ea4
4000e6f4:	40030e2c 	.word	0x40030e2c
4000e6f8:	40030e34 	.word	0x40030e34
4000e6fc:	f0f0f0f0 	.word	0xf0f0f0f0
4000e700:	40030e9c 	.word	0x40030e9c
4000e704:	40030e98 	.word	0x40030e98
4000e708:	40030e8c 	.word	0x40030e8c
4000e70c:	40030e38 	.word	0x40030e38

4000e710 <_tx_thread_info_get>:
4000e710:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e714:	e1a0c000 	mov	ip, r0
4000e718:	e28d7028 	add	r7, sp, #40	; 0x28
4000e71c:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000e720:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000e724:	e10f8000 	mrs	r8, CPSR
4000e728:	e3889080 	orr	r9, r8, #128	; 0x80
4000e72c:	e121f009 	msr	CPSR_c, r9
4000e730:	e59fa160 	ldr	sl, [pc, #352]	; 4000e898 <_tx_thread_info_get+0x188>
4000e734:	e59a0000 	ldr	r0, [sl]
4000e738:	e3500000 	cmp	r0, #0
4000e73c:	0a000032 	beq	4000e80c <_tx_thread_info_get+0xfc>
4000e740:	e59fa154 	ldr	sl, [pc, #340]	; 4000e89c <_tx_thread_info_get+0x18c>
4000e744:	e59aa000 	ldr	sl, [sl]
4000e748:	e28aa001 	add	sl, sl, #1
4000e74c:	e59fb148 	ldr	fp, [pc, #328]	; 4000e89c <_tx_thread_info_get+0x18c>
4000e750:	e58ba000 	str	sl, [fp]
4000e754:	e580a00c 	str	sl, [r0, #12]
4000e758:	e59fa140 	ldr	sl, [pc, #320]	; 4000e8a0 <_tx_thread_info_get+0x190>
4000e75c:	e59aa000 	ldr	sl, [sl]
4000e760:	e35a0000 	cmp	sl, #0
4000e764:	1a000006 	bne	4000e784 <_tx_thread_info_get+0x74>
4000e768:	e59fa134 	ldr	sl, [pc, #308]	; 4000e8a4 <_tx_thread_info_get+0x194>
4000e76c:	e59aa000 	ldr	sl, [sl]
4000e770:	e580a000 	str	sl, [r0]
4000e774:	e590a000 	ldr	sl, [r0]
4000e778:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000e77c:	e580a004 	str	sl, [r0, #4]
4000e780:	ea00000d 	b	4000e7bc <_tx_thread_info_get+0xac>
4000e784:	e59fa114 	ldr	sl, [pc, #276]	; 4000e8a0 <_tx_thread_info_get+0x190>
4000e788:	e59aa000 	ldr	sl, [sl]
4000e78c:	e59fb114 	ldr	fp, [pc, #276]	; 4000e8a8 <_tx_thread_info_get+0x198>
4000e790:	e15a000b 	cmp	sl, fp
4000e794:	2a000004 	bcs	4000e7ac <_tx_thread_info_get+0x9c>
4000e798:	e3e0a000 	mvn	sl, #0
4000e79c:	e580a000 	str	sl, [r0]
4000e7a0:	e3a0a000 	mov	sl, #0
4000e7a4:	e580a004 	str	sl, [r0, #4]
4000e7a8:	ea000003 	b	4000e7bc <_tx_thread_info_get+0xac>
4000e7ac:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000e8a8 <_tx_thread_info_get+0x198>
4000e7b0:	e580a000 	str	sl, [r0]
4000e7b4:	e3a0a000 	mov	sl, #0
4000e7b8:	e580a004 	str	sl, [r0, #4]
4000e7bc:	e3a0a068 	mov	sl, #104	; 0x68
4000e7c0:	e580a008 	str	sl, [r0, #8]
4000e7c4:	e580c010 	str	ip, [r0, #16]
4000e7c8:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000e7cc:	e580a014 	str	sl, [r0, #20]
4000e7d0:	e3a0a000 	mov	sl, #0
4000e7d4:	e580a018 	str	sl, [r0, #24]
4000e7d8:	e580a01c 	str	sl, [r0, #28]
4000e7dc:	e2800020 	add	r0, r0, #32
4000e7e0:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000e8ac <_tx_thread_info_get+0x19c>
4000e7e4:	e59aa000 	ldr	sl, [sl]
4000e7e8:	e150000a 	cmp	r0, sl
4000e7ec:	3a000001 	bcc	4000e7f8 <_tx_thread_info_get+0xe8>
4000e7f0:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000e8b0 <_tx_thread_info_get+0x1a0>
4000e7f4:	e59a0000 	ldr	r0, [sl]
4000e7f8:	e59fa098 	ldr	sl, [pc, #152]	; 4000e898 <_tx_thread_info_get+0x188>
4000e7fc:	e58a0000 	str	r0, [sl]
4000e800:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000e8b4 <_tx_thread_info_get+0x1a4>
4000e804:	e59aa000 	ldr	sl, [sl]
4000e808:	e58a0020 	str	r0, [sl, #32]
4000e80c:	e3510000 	cmp	r1, #0
4000e810:	0a000001 	beq	4000e81c <_tx_thread_info_get+0x10c>
4000e814:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000e818:	e5810000 	str	r0, [r1]
4000e81c:	e3520000 	cmp	r2, #0
4000e820:	0a000001 	beq	4000e82c <_tx_thread_info_get+0x11c>
4000e824:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000e828:	e5820000 	str	r0, [r2]
4000e82c:	e3530000 	cmp	r3, #0
4000e830:	0a000001 	beq	4000e83c <_tx_thread_info_get+0x12c>
4000e834:	e59c0004 	ldr	r0, [ip, #4]
4000e838:	e5830000 	str	r0, [r3]
4000e83c:	e35e0000 	cmp	lr, #0
4000e840:	0a000001 	beq	4000e84c <_tx_thread_info_get+0x13c>
4000e844:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000e848:	e58e0000 	str	r0, [lr]
4000e84c:	e3540000 	cmp	r4, #0
4000e850:	0a000001 	beq	4000e85c <_tx_thread_info_get+0x14c>
4000e854:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000e858:	e5840000 	str	r0, [r4]
4000e85c:	e3550000 	cmp	r5, #0
4000e860:	0a000001 	beq	4000e86c <_tx_thread_info_get+0x15c>
4000e864:	e59c0018 	ldr	r0, [ip, #24]
4000e868:	e5850000 	str	r0, [r5]
4000e86c:	e3560000 	cmp	r6, #0
4000e870:	0a000001 	beq	4000e87c <_tx_thread_info_get+0x16c>
4000e874:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000e878:	e5860000 	str	r0, [r6]
4000e87c:	e3570000 	cmp	r7, #0
4000e880:	0a000001 	beq	4000e88c <_tx_thread_info_get+0x17c>
4000e884:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000e888:	e5870000 	str	r0, [r7]
4000e88c:	e121f008 	msr	CPSR_c, r8
4000e890:	e3a00000 	mov	r0, #0
4000e894:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e898:	40030ea0 	.word	0x40030ea0
4000e89c:	40030ea4 	.word	0x40030ea4
4000e8a0:	40030e2c 	.word	0x40030e2c
4000e8a4:	40030e34 	.word	0x40030e34
4000e8a8:	f0f0f0f0 	.word	0xf0f0f0f0
4000e8ac:	40030e9c 	.word	0x40030e9c
4000e8b0:	40030e98 	.word	0x40030e98
4000e8b4:	40030e8c 	.word	0x40030e8c

4000e8b8 <_tx_thread_priority_change>:
4000e8b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000e8bc:	e1a04000 	mov	r4, r0
4000e8c0:	e1a05001 	mov	r5, r1
4000e8c4:	e1a06002 	mov	r6, r2
4000e8c8:	e10f7000 	mrs	r7, CPSR
4000e8cc:	e3878080 	orr	r8, r7, #128	; 0x80
4000e8d0:	e121f008 	msr	CPSR_c, r8
4000e8d4:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000e8d8:	e5860000 	str	r0, [r6]
4000e8dc:	e59f1150 	ldr	r1, [pc, #336]	; 4000ea34 <_tx_thread_priority_change+0x17c>
4000e8e0:	e5910000 	ldr	r0, [r1]
4000e8e4:	e3500000 	cmp	r0, #0
4000e8e8:	0a000032 	beq	4000e9b8 <_tx_thread_priority_change+0x100>
4000e8ec:	e59f1144 	ldr	r1, [pc, #324]	; 4000ea38 <_tx_thread_priority_change+0x180>
4000e8f0:	e5911000 	ldr	r1, [r1]
4000e8f4:	e2811001 	add	r1, r1, #1
4000e8f8:	e59f2138 	ldr	r2, [pc, #312]	; 4000ea38 <_tx_thread_priority_change+0x180>
4000e8fc:	e5821000 	str	r1, [r2]
4000e900:	e580100c 	str	r1, [r0, #12]
4000e904:	e59f1130 	ldr	r1, [pc, #304]	; 4000ea3c <_tx_thread_priority_change+0x184>
4000e908:	e5911000 	ldr	r1, [r1]
4000e90c:	e3510000 	cmp	r1, #0
4000e910:	1a000006 	bne	4000e930 <_tx_thread_priority_change+0x78>
4000e914:	e59f1124 	ldr	r1, [pc, #292]	; 4000ea40 <_tx_thread_priority_change+0x188>
4000e918:	e5911000 	ldr	r1, [r1]
4000e91c:	e5801000 	str	r1, [r0]
4000e920:	e5901000 	ldr	r1, [r0]
4000e924:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e928:	e5801004 	str	r1, [r0, #4]
4000e92c:	ea00000d 	b	4000e968 <_tx_thread_priority_change+0xb0>
4000e930:	e59f1104 	ldr	r1, [pc, #260]	; 4000ea3c <_tx_thread_priority_change+0x184>
4000e934:	e5911000 	ldr	r1, [r1]
4000e938:	e59f2104 	ldr	r2, [pc, #260]	; 4000ea44 <_tx_thread_priority_change+0x18c>
4000e93c:	e1510002 	cmp	r1, r2
4000e940:	2a000004 	bcs	4000e958 <_tx_thread_priority_change+0xa0>
4000e944:	e3e01000 	mvn	r1, #0
4000e948:	e5801000 	str	r1, [r0]
4000e94c:	e3a01000 	mov	r1, #0
4000e950:	e5801004 	str	r1, [r0, #4]
4000e954:	ea000003 	b	4000e968 <_tx_thread_priority_change+0xb0>
4000e958:	e59f10e4 	ldr	r1, [pc, #228]	; 4000ea44 <_tx_thread_priority_change+0x18c>
4000e95c:	e5801000 	str	r1, [r0]
4000e960:	e3a01000 	mov	r1, #0
4000e964:	e5801004 	str	r1, [r0, #4]
4000e968:	e3a0106c 	mov	r1, #108	; 0x6c
4000e96c:	e5801008 	str	r1, [r0, #8]
4000e970:	e5804010 	str	r4, [r0, #16]
4000e974:	e5805014 	str	r5, [r0, #20]
4000e978:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000e97c:	e5801018 	str	r1, [r0, #24]
4000e980:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000e984:	e580101c 	str	r1, [r0, #28]
4000e988:	e2800020 	add	r0, r0, #32
4000e98c:	e59f10b4 	ldr	r1, [pc, #180]	; 4000ea48 <_tx_thread_priority_change+0x190>
4000e990:	e5911000 	ldr	r1, [r1]
4000e994:	e1500001 	cmp	r0, r1
4000e998:	3a000001 	bcc	4000e9a4 <_tx_thread_priority_change+0xec>
4000e99c:	e59f10a8 	ldr	r1, [pc, #168]	; 4000ea4c <_tx_thread_priority_change+0x194>
4000e9a0:	e5910000 	ldr	r0, [r1]
4000e9a4:	e59f1088 	ldr	r1, [pc, #136]	; 4000ea34 <_tx_thread_priority_change+0x17c>
4000e9a8:	e5810000 	str	r0, [r1]
4000e9ac:	e59f109c 	ldr	r1, [pc, #156]	; 4000ea50 <_tx_thread_priority_change+0x198>
4000e9b0:	e5911000 	ldr	r1, [r1]
4000e9b4:	e5810020 	str	r0, [r1, #32]
4000e9b8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000e9bc:	e3500000 	cmp	r0, #0
4000e9c0:	0a000005 	beq	4000e9dc <_tx_thread_priority_change+0x124>
4000e9c4:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000e9c8:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000e9cc:	e5845094 	str	r5, [r4, #148]	; 0x94
4000e9d0:	e5845098 	str	r5, [r4, #152]	; 0x98
4000e9d4:	e121f007 	msr	CPSR_c, r7
4000e9d8:	ea000013 	b	4000ea2c <_tx_thread_priority_change+0x174>
4000e9dc:	e59f0070 	ldr	r0, [pc, #112]	; 4000ea54 <_tx_thread_priority_change+0x19c>
4000e9e0:	e5900000 	ldr	r0, [r0]
4000e9e4:	e2800002 	add	r0, r0, #2
4000e9e8:	e59f1064 	ldr	r1, [pc, #100]	; 4000ea54 <_tx_thread_priority_change+0x19c>
4000e9ec:	e5810000 	str	r0, [r1]
4000e9f0:	e3a00003 	mov	r0, #3
4000e9f4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e9f8:	e3a00001 	mov	r0, #1
4000e9fc:	e5840038 	str	r0, [r4, #56]	; 0x38
4000ea00:	e3a00000 	mov	r0, #0
4000ea04:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000ea08:	e121f007 	msr	CPSR_c, r7
4000ea0c:	e1a00004 	mov	r0, r4
4000ea10:	ebffe834 	bl	40008ae8 <_tx_thread_system_suspend>
4000ea14:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ea18:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ea1c:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ea20:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ea24:	e1a00004 	mov	r0, r4
4000ea28:	eb0001d5 	bl	4000f184 <_tx_thread_system_resume>
4000ea2c:	e3a00000 	mov	r0, #0
4000ea30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ea34:	40030ea0 	.word	0x40030ea0
4000ea38:	40030ea4 	.word	0x40030ea4
4000ea3c:	40030e2c 	.word	0x40030e2c
4000ea40:	40030e34 	.word	0x40030e34
4000ea44:	f0f0f0f0 	.word	0xf0f0f0f0
4000ea48:	40030e9c 	.word	0x40030e9c
4000ea4c:	40030e98 	.word	0x40030e98
4000ea50:	40030e8c 	.word	0x40030e8c
4000ea54:	40030e50 	.word	0x40030e50

4000ea58 <_tx_thread_relinquish>:
4000ea58:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ea5c:	e59f02b0 	ldr	r0, [pc, #688]	; 4000ed14 <_tx_thread_relinquish+0x2bc>
4000ea60:	e5900000 	ldr	r0, [r0]
4000ea64:	e58d0000 	str	r0, [sp]
4000ea68:	e59d0000 	ldr	r0, [sp]
4000ea6c:	e5900008 	ldr	r0, [r0, #8]
4000ea70:	e59d1000 	ldr	r1, [sp]
4000ea74:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ea78:	e1500001 	cmp	r0, r1
4000ea7c:	2a000003 	bcs	4000ea90 <_tx_thread_relinquish+0x38>
4000ea80:	e59d0000 	ldr	r0, [sp]
4000ea84:	e5900008 	ldr	r0, [r0, #8]
4000ea88:	e59d1000 	ldr	r1, [sp]
4000ea8c:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ea90:	e59d0000 	ldr	r0, [sp]
4000ea94:	e590000c 	ldr	r0, [r0, #12]
4000ea98:	e5900000 	ldr	r0, [r0]
4000ea9c:	e59f1274 	ldr	r1, [pc, #628]	; 4000ed18 <_tx_thread_relinquish+0x2c0>
4000eaa0:	e1500001 	cmp	r0, r1
4000eaa4:	1a00000a 	bne	4000ead4 <_tx_thread_relinquish+0x7c>
4000eaa8:	e59d0000 	ldr	r0, [sp]
4000eaac:	e5900010 	ldr	r0, [r0, #16]
4000eab0:	e5900001 	ldr	r0, [r0, #1]
4000eab4:	e1500001 	cmp	r0, r1
4000eab8:	1a000005 	bne	4000ead4 <_tx_thread_relinquish+0x7c>
4000eabc:	e59d0000 	ldr	r0, [sp]
4000eac0:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eac4:	e59d1000 	ldr	r1, [sp]
4000eac8:	e591100c 	ldr	r1, [r1, #12]
4000eacc:	e1500001 	cmp	r0, r1
4000ead0:	2a000001 	bcs	4000eadc <_tx_thread_relinquish+0x84>
4000ead4:	e59d0000 	ldr	r0, [sp]
4000ead8:	eb00016a 	bl	4000f088 <_tx_thread_stack_error_handler>
4000eadc:	e59d0000 	ldr	r0, [sp]
4000eae0:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eae4:	e5100004 	ldr	r0, [r0, #-4]
4000eae8:	e59f1228 	ldr	r1, [pc, #552]	; 4000ed18 <_tx_thread_relinquish+0x2c0>
4000eaec:	e1500001 	cmp	r0, r1
4000eaf0:	0a000001 	beq	4000eafc <_tx_thread_relinquish+0xa4>
4000eaf4:	e59d0000 	ldr	r0, [sp]
4000eaf8:	eb00012d 	bl	4000efb4 <_tx_thread_stack_analyze>
4000eafc:	e10f4000 	mrs	r4, CPSR
4000eb00:	e3845080 	orr	r5, r4, #128	; 0x80
4000eb04:	e121f005 	msr	CPSR_c, r5
4000eb08:	e59f120c 	ldr	r1, [pc, #524]	; 4000ed1c <_tx_thread_relinquish+0x2c4>
4000eb0c:	e5910000 	ldr	r0, [r1]
4000eb10:	e3500000 	cmp	r0, #0
4000eb14:	0a000031 	beq	4000ebe0 <_tx_thread_relinquish+0x188>
4000eb18:	e59f1200 	ldr	r1, [pc, #512]	; 4000ed20 <_tx_thread_relinquish+0x2c8>
4000eb1c:	e5911000 	ldr	r1, [r1]
4000eb20:	e2811001 	add	r1, r1, #1
4000eb24:	e59f21f4 	ldr	r2, [pc, #500]	; 4000ed20 <_tx_thread_relinquish+0x2c8>
4000eb28:	e5821000 	str	r1, [r2]
4000eb2c:	e580100c 	str	r1, [r0, #12]
4000eb30:	e59f11ec 	ldr	r1, [pc, #492]	; 4000ed24 <_tx_thread_relinquish+0x2cc>
4000eb34:	e5911000 	ldr	r1, [r1]
4000eb38:	e3510000 	cmp	r1, #0
4000eb3c:	1a000006 	bne	4000eb5c <_tx_thread_relinquish+0x104>
4000eb40:	e59f11cc 	ldr	r1, [pc, #460]	; 4000ed14 <_tx_thread_relinquish+0x2bc>
4000eb44:	e5911000 	ldr	r1, [r1]
4000eb48:	e5801000 	str	r1, [r0]
4000eb4c:	e5901000 	ldr	r1, [r0]
4000eb50:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eb54:	e5801004 	str	r1, [r0, #4]
4000eb58:	ea00000d 	b	4000eb94 <_tx_thread_relinquish+0x13c>
4000eb5c:	e59f11c0 	ldr	r1, [pc, #448]	; 4000ed24 <_tx_thread_relinquish+0x2cc>
4000eb60:	e5911000 	ldr	r1, [r1]
4000eb64:	e59f21bc 	ldr	r2, [pc, #444]	; 4000ed28 <_tx_thread_relinquish+0x2d0>
4000eb68:	e1510002 	cmp	r1, r2
4000eb6c:	2a000004 	bcs	4000eb84 <_tx_thread_relinquish+0x12c>
4000eb70:	e3e01000 	mvn	r1, #0
4000eb74:	e5801000 	str	r1, [r0]
4000eb78:	e3a01000 	mov	r1, #0
4000eb7c:	e5801004 	str	r1, [r0, #4]
4000eb80:	ea000003 	b	4000eb94 <_tx_thread_relinquish+0x13c>
4000eb84:	e59f119c 	ldr	r1, [pc, #412]	; 4000ed28 <_tx_thread_relinquish+0x2d0>
4000eb88:	e5801000 	str	r1, [r0]
4000eb8c:	e3a01000 	mov	r1, #0
4000eb90:	e5801004 	str	r1, [r0, #4]
4000eb94:	e3a0106d 	mov	r1, #109	; 0x6d
4000eb98:	e5801008 	str	r1, [r0, #8]
4000eb9c:	e580d010 	str	sp, [r0, #16]
4000eba0:	e3a01000 	mov	r1, #0
4000eba4:	e5801014 	str	r1, [r0, #20]
4000eba8:	e5801018 	str	r1, [r0, #24]
4000ebac:	e580101c 	str	r1, [r0, #28]
4000ebb0:	e2800020 	add	r0, r0, #32
4000ebb4:	e59f1170 	ldr	r1, [pc, #368]	; 4000ed2c <_tx_thread_relinquish+0x2d4>
4000ebb8:	e5911000 	ldr	r1, [r1]
4000ebbc:	e1500001 	cmp	r0, r1
4000ebc0:	3a000001 	bcc	4000ebcc <_tx_thread_relinquish+0x174>
4000ebc4:	e59f1164 	ldr	r1, [pc, #356]	; 4000ed30 <_tx_thread_relinquish+0x2d8>
4000ebc8:	e5910000 	ldr	r0, [r1]
4000ebcc:	e59f1148 	ldr	r1, [pc, #328]	; 4000ed1c <_tx_thread_relinquish+0x2c4>
4000ebd0:	e5810000 	str	r0, [r1]
4000ebd4:	e59f1158 	ldr	r1, [pc, #344]	; 4000ed34 <_tx_thread_relinquish+0x2dc>
4000ebd8:	e5911000 	ldr	r1, [r1]
4000ebdc:	e5810020 	str	r0, [r1, #32]
4000ebe0:	e59d0000 	ldr	r0, [sp]
4000ebe4:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ebe8:	e59d0000 	ldr	r0, [sp]
4000ebec:	e5900020 	ldr	r0, [r0, #32]
4000ebf0:	e59d1000 	ldr	r1, [sp]
4000ebf4:	e1500001 	cmp	r0, r1
4000ebf8:	0a000013 	beq	4000ec4c <_tx_thread_relinquish+0x1f4>
4000ebfc:	e59d0000 	ldr	r0, [sp]
4000ec00:	e5900020 	ldr	r0, [r0, #32]
4000ec04:	e59f112c 	ldr	r1, [pc, #300]	; 4000ed38 <_tx_thread_relinquish+0x2e0>
4000ec08:	e7810106 	str	r0, [r1, r6, lsl #2]
4000ec0c:	e59d0000 	ldr	r0, [sp]
4000ec10:	e5900020 	ldr	r0, [r0, #32]
4000ec14:	e59f1120 	ldr	r1, [pc, #288]	; 4000ed3c <_tx_thread_relinquish+0x2e4>
4000ec18:	e5810000 	str	r0, [r1]
4000ec1c:	e59f011c 	ldr	r0, [pc, #284]	; 4000ed40 <_tx_thread_relinquish+0x2e8>
4000ec20:	e5900000 	ldr	r0, [r0]
4000ec24:	e3500000 	cmp	r0, #0
4000ec28:	0a000007 	beq	4000ec4c <_tx_thread_relinquish+0x1f4>
4000ec2c:	e59f010c 	ldr	r0, [pc, #268]	; 4000ed40 <_tx_thread_relinquish+0x2e8>
4000ec30:	e5900000 	ldr	r0, [r0]
4000ec34:	e59d1000 	ldr	r1, [sp]
4000ec38:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ec3c:	e3a02001 	mov	r2, #1
4000ec40:	e1c00112 	bic	r0, r0, r2, lsl r1
4000ec44:	e59f10f4 	ldr	r1, [pc, #244]	; 4000ed40 <_tx_thread_relinquish+0x2e8>
4000ec48:	e5810000 	str	r0, [r1]
4000ec4c:	e59f00f0 	ldr	r0, [pc, #240]	; 4000ed44 <_tx_thread_relinquish+0x2ec>
4000ec50:	e5900000 	ldr	r0, [r0]
4000ec54:	e1500006 	cmp	r0, r6
4000ec58:	2a000005 	bcs	4000ec74 <_tx_thread_relinquish+0x21c>
4000ec5c:	e59f00d4 	ldr	r0, [pc, #212]	; 4000ed38 <_tx_thread_relinquish+0x2e0>
4000ec60:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ed44 <_tx_thread_relinquish+0x2ec>
4000ec64:	e5911000 	ldr	r1, [r1]
4000ec68:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000ec6c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000ed3c <_tx_thread_relinquish+0x2e4>
4000ec70:	e5810000 	str	r0, [r1]
4000ec74:	e121f004 	msr	CPSR_c, r4
4000ec78:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ed3c <_tx_thread_relinquish+0x2e4>
4000ec7c:	e5900000 	ldr	r0, [r0]
4000ec80:	e59d1000 	ldr	r1, [sp]
4000ec84:	e1500001 	cmp	r0, r1
4000ec88:	0a000020 	beq	4000ed10 <_tx_thread_relinquish+0x2b8>
4000ec8c:	e59f00a8 	ldr	r0, [pc, #168]	; 4000ed3c <_tx_thread_relinquish+0x2e4>
4000ec90:	e5900000 	ldr	r0, [r0]
4000ec94:	e58d0000 	str	r0, [sp]
4000ec98:	e59d0000 	ldr	r0, [sp]
4000ec9c:	e5900008 	ldr	r0, [r0, #8]
4000eca0:	e59d1000 	ldr	r1, [sp]
4000eca4:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000eca8:	e1500001 	cmp	r0, r1
4000ecac:	2a000003 	bcs	4000ecc0 <_tx_thread_relinquish+0x268>
4000ecb0:	e59d0000 	ldr	r0, [sp]
4000ecb4:	e5900008 	ldr	r0, [r0, #8]
4000ecb8:	e59d1000 	ldr	r1, [sp]
4000ecbc:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ecc0:	e59d0000 	ldr	r0, [sp]
4000ecc4:	e590000c 	ldr	r0, [r0, #12]
4000ecc8:	e5900000 	ldr	r0, [r0]
4000eccc:	e59f1044 	ldr	r1, [pc, #68]	; 4000ed18 <_tx_thread_relinquish+0x2c0>
4000ecd0:	e1500001 	cmp	r0, r1
4000ecd4:	1a00000a 	bne	4000ed04 <_tx_thread_relinquish+0x2ac>
4000ecd8:	e59d0000 	ldr	r0, [sp]
4000ecdc:	e5900010 	ldr	r0, [r0, #16]
4000ece0:	e5900001 	ldr	r0, [r0, #1]
4000ece4:	e1500001 	cmp	r0, r1
4000ece8:	1a000005 	bne	4000ed04 <_tx_thread_relinquish+0x2ac>
4000ecec:	e59d0000 	ldr	r0, [sp]
4000ecf0:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ecf4:	e59d1000 	ldr	r1, [sp]
4000ecf8:	e591100c 	ldr	r1, [r1, #12]
4000ecfc:	e1500001 	cmp	r0, r1
4000ed00:	2a000001 	bcs	4000ed0c <_tx_thread_relinquish+0x2b4>
4000ed04:	e59d0000 	ldr	r0, [sp]
4000ed08:	eb0000de 	bl	4000f088 <_tx_thread_stack_error_handler>
4000ed0c:	ebffef86 	bl	4000ab2c <_tx_thread_system_return>
4000ed10:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ed14:	40030e34 	.word	0x40030e34
4000ed18:	efefefef 	.word	0xefefefef
4000ed1c:	40030ea0 	.word	0x40030ea0
4000ed20:	40030ea4 	.word	0x40030ea4
4000ed24:	40030e2c 	.word	0x40030e2c
4000ed28:	f0f0f0f0 	.word	0xf0f0f0f0
4000ed2c:	40030e9c 	.word	0x40030e9c
4000ed30:	40030e98 	.word	0x40030e98
4000ed34:	40030e8c 	.word	0x40030e8c
4000ed38:	40032874 	.word	0x40032874
4000ed3c:	40030e38 	.word	0x40030e38
4000ed40:	40030e48 	.word	0x40030e48
4000ed44:	40030e4c 	.word	0x40030e4c

4000ed48 <_tx_thread_resume>:
4000ed48:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000ed4c:	e1a04000 	mov	r4, r0
4000ed50:	e3a00000 	mov	r0, #0
4000ed54:	e58d0000 	str	r0, [sp]
4000ed58:	e10f5000 	mrs	r5, CPSR
4000ed5c:	e3856080 	orr	r6, r5, #128	; 0x80
4000ed60:	e121f006 	msr	CPSR_c, r6
4000ed64:	e59f1184 	ldr	r1, [pc, #388]	; 4000eef0 <_tx_thread_resume+0x1a8>
4000ed68:	e5910000 	ldr	r0, [r1]
4000ed6c:	e3500000 	cmp	r0, #0
4000ed70:	0a000032 	beq	4000ee40 <_tx_thread_resume+0xf8>
4000ed74:	e59f1178 	ldr	r1, [pc, #376]	; 4000eef4 <_tx_thread_resume+0x1ac>
4000ed78:	e5911000 	ldr	r1, [r1]
4000ed7c:	e2811001 	add	r1, r1, #1
4000ed80:	e59f216c 	ldr	r2, [pc, #364]	; 4000eef4 <_tx_thread_resume+0x1ac>
4000ed84:	e5821000 	str	r1, [r2]
4000ed88:	e580100c 	str	r1, [r0, #12]
4000ed8c:	e59f1164 	ldr	r1, [pc, #356]	; 4000eef8 <_tx_thread_resume+0x1b0>
4000ed90:	e5911000 	ldr	r1, [r1]
4000ed94:	e3510000 	cmp	r1, #0
4000ed98:	1a000006 	bne	4000edb8 <_tx_thread_resume+0x70>
4000ed9c:	e59f1158 	ldr	r1, [pc, #344]	; 4000eefc <_tx_thread_resume+0x1b4>
4000eda0:	e5911000 	ldr	r1, [r1]
4000eda4:	e5801000 	str	r1, [r0]
4000eda8:	e5901000 	ldr	r1, [r0]
4000edac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000edb0:	e5801004 	str	r1, [r0, #4]
4000edb4:	ea00000d 	b	4000edf0 <_tx_thread_resume+0xa8>
4000edb8:	e59f1138 	ldr	r1, [pc, #312]	; 4000eef8 <_tx_thread_resume+0x1b0>
4000edbc:	e5911000 	ldr	r1, [r1]
4000edc0:	e59f2138 	ldr	r2, [pc, #312]	; 4000ef00 <_tx_thread_resume+0x1b8>
4000edc4:	e1510002 	cmp	r1, r2
4000edc8:	2a000004 	bcs	4000ede0 <_tx_thread_resume+0x98>
4000edcc:	e3e01000 	mvn	r1, #0
4000edd0:	e5801000 	str	r1, [r0]
4000edd4:	e3a01000 	mov	r1, #0
4000edd8:	e5801004 	str	r1, [r0, #4]
4000eddc:	ea000003 	b	4000edf0 <_tx_thread_resume+0xa8>
4000ede0:	e59f1118 	ldr	r1, [pc, #280]	; 4000ef00 <_tx_thread_resume+0x1b8>
4000ede4:	e5801000 	str	r1, [r0]
4000ede8:	e3a01000 	mov	r1, #0
4000edec:	e5801004 	str	r1, [r0, #4]
4000edf0:	e3a0106f 	mov	r1, #111	; 0x6f
4000edf4:	e5801008 	str	r1, [r0, #8]
4000edf8:	e5804010 	str	r4, [r0, #16]
4000edfc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ee00:	e5801014 	str	r1, [r0, #20]
4000ee04:	e580d018 	str	sp, [r0, #24]
4000ee08:	e3a01000 	mov	r1, #0
4000ee0c:	e580101c 	str	r1, [r0, #28]
4000ee10:	e2800020 	add	r0, r0, #32
4000ee14:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ef04 <_tx_thread_resume+0x1bc>
4000ee18:	e5911000 	ldr	r1, [r1]
4000ee1c:	e1500001 	cmp	r0, r1
4000ee20:	3a000001 	bcc	4000ee2c <_tx_thread_resume+0xe4>
4000ee24:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ef08 <_tx_thread_resume+0x1c0>
4000ee28:	e5910000 	ldr	r0, [r1]
4000ee2c:	e59f10bc 	ldr	r1, [pc, #188]	; 4000eef0 <_tx_thread_resume+0x1a8>
4000ee30:	e5810000 	str	r0, [r1]
4000ee34:	e59f10d0 	ldr	r1, [pc, #208]	; 4000ef0c <_tx_thread_resume+0x1c4>
4000ee38:	e5911000 	ldr	r1, [r1]
4000ee3c:	e5810020 	str	r0, [r1, #32]
4000ee40:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ee44:	e3500003 	cmp	r0, #3
4000ee48:	1a00001c 	bne	4000eec0 <_tx_thread_resume+0x178>
4000ee4c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ef10 <_tx_thread_resume+0x1c8>
4000ee50:	e5900000 	ldr	r0, [r0]
4000ee54:	e2800001 	add	r0, r0, #1
4000ee58:	e59f10b0 	ldr	r1, [pc, #176]	; 4000ef10 <_tx_thread_resume+0x1c8>
4000ee5c:	e5810000 	str	r0, [r1]
4000ee60:	e121f005 	msr	CPSR_c, r5
4000ee64:	e59f008c 	ldr	r0, [pc, #140]	; 4000eef8 <_tx_thread_resume+0x1b0>
4000ee68:	e5900000 	ldr	r0, [r0]
4000ee6c:	e59f108c 	ldr	r1, [pc, #140]	; 4000ef00 <_tx_thread_resume+0x1b8>
4000ee70:	e1500001 	cmp	r0, r1
4000ee74:	3a000008 	bcc	4000ee9c <_tx_thread_resume+0x154>
4000ee78:	e59f0094 	ldr	r0, [pc, #148]	; 4000ef14 <_tx_thread_resume+0x1cc>
4000ee7c:	e5907000 	ldr	r7, [r0]
4000ee80:	e3570000 	cmp	r7, #0
4000ee84:	0a000005 	beq	4000eea0 <_tx_thread_resume+0x158>
4000ee88:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000ee8c:	e58d0000 	str	r0, [sp]
4000ee90:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000ee94:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000ee98:	ea000000 	b	4000eea0 <_tx_thread_resume+0x158>
4000ee9c:	e3a07000 	mov	r7, #0
4000eea0:	e1a00004 	mov	r0, r4
4000eea4:	eb0000b6 	bl	4000f184 <_tx_thread_system_resume>
4000eea8:	e3570000 	cmp	r7, #0
4000eeac:	0a000001 	beq	4000eeb8 <_tx_thread_resume+0x170>
4000eeb0:	e59d0000 	ldr	r0, [sp]
4000eeb4:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000eeb8:	e3a08000 	mov	r8, #0
4000eebc:	ea000009 	b	4000eee8 <_tx_thread_resume+0x1a0>
4000eec0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000eec4:	e3500000 	cmp	r0, #0
4000eec8:	0a000004 	beq	4000eee0 <_tx_thread_resume+0x198>
4000eecc:	e3a00000 	mov	r0, #0
4000eed0:	e5840034 	str	r0, [r4, #52]	; 0x34
4000eed4:	e121f005 	msr	CPSR_c, r5
4000eed8:	e3a08019 	mov	r8, #25
4000eedc:	ea000001 	b	4000eee8 <_tx_thread_resume+0x1a0>
4000eee0:	e121f005 	msr	CPSR_c, r5
4000eee4:	e3a08012 	mov	r8, #18
4000eee8:	e1a00008 	mov	r0, r8
4000eeec:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000eef0:	40030ea0 	.word	0x40030ea0
4000eef4:	40030ea4 	.word	0x40030ea4
4000eef8:	40030e2c 	.word	0x40030e2c
4000eefc:	40030e34 	.word	0x40030e34
4000ef00:	f0f0f0f0 	.word	0xf0f0f0f0
4000ef04:	40030e9c 	.word	0x40030e9c
4000ef08:	40030e98 	.word	0x40030e98
4000ef0c:	40030e8c 	.word	0x40030e8c
4000ef10:	40030e50 	.word	0x40030e50
4000ef14:	40030e38 	.word	0x40030e38

4000ef18 <_tx_thread_shell_entry>:
4000ef18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ef1c:	e59f0088 	ldr	r0, [pc, #136]	; 4000efac <_tx_thread_shell_entry+0x94>
4000ef20:	e5907000 	ldr	r7, [r0]
4000ef24:	e10f4000 	mrs	r4, CPSR
4000ef28:	e3845080 	orr	r5, r4, #128	; 0x80
4000ef2c:	e121f005 	msr	CPSR_c, r5
4000ef30:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000ef34:	e121f004 	msr	CPSR_c, r4
4000ef38:	e3560000 	cmp	r6, #0
4000ef3c:	0a000002 	beq	4000ef4c <_tx_thread_shell_entry+0x34>
4000ef40:	e3a01000 	mov	r1, #0
4000ef44:	e1a00007 	mov	r0, r7
4000ef48:	e12fff36 	blx	r6
4000ef4c:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000ef50:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000ef54:	e12fff31 	blx	r1
4000ef58:	e10f4000 	mrs	r4, CPSR
4000ef5c:	e3845080 	orr	r5, r4, #128	; 0x80
4000ef60:	e121f005 	msr	CPSR_c, r5
4000ef64:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000ef68:	e3a00001 	mov	r0, #1
4000ef6c:	e5870030 	str	r0, [r7, #48]	; 0x30
4000ef70:	e5870038 	str	r0, [r7, #56]	; 0x38
4000ef74:	e59f0034 	ldr	r0, [pc, #52]	; 4000efb0 <_tx_thread_shell_entry+0x98>
4000ef78:	e5900000 	ldr	r0, [r0]
4000ef7c:	e2800001 	add	r0, r0, #1
4000ef80:	e59f1028 	ldr	r1, [pc, #40]	; 4000efb0 <_tx_thread_shell_entry+0x98>
4000ef84:	e5810000 	str	r0, [r1]
4000ef88:	e121f004 	msr	CPSR_c, r4
4000ef8c:	e3560000 	cmp	r6, #0
4000ef90:	0a000002 	beq	4000efa0 <_tx_thread_shell_entry+0x88>
4000ef94:	e3a01001 	mov	r1, #1
4000ef98:	e1a00007 	mov	r0, r7
4000ef9c:	e12fff36 	blx	r6
4000efa0:	e1a00007 	mov	r0, r7
4000efa4:	ebffe6cf 	bl	40008ae8 <_tx_thread_system_suspend>
4000efa8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000efac:	40030e34 	.word	0x40030e34
4000efb0:	40030e50 	.word	0x40030e50

4000efb4 <_tx_thread_stack_analyze>:
4000efb4:	e92d4070 	push	{r4, r5, r6, lr}
4000efb8:	e10f1000 	mrs	r1, CPSR
4000efbc:	e3812080 	orr	r2, r1, #128	; 0x80
4000efc0:	e121f002 	msr	CPSR_c, r2
4000efc4:	e3500000 	cmp	r0, #0
4000efc8:	0a000003 	beq	4000efdc <_tx_thread_stack_analyze+0x28>
4000efcc:	e5905000 	ldr	r5, [r0]
4000efd0:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f080 <_tx_thread_stack_analyze+0xcc>
4000efd4:	e1550006 	cmp	r5, r6
4000efd8:	0a000001 	beq	4000efe4 <_tx_thread_stack_analyze+0x30>
4000efdc:	e121f001 	msr	CPSR_c, r1
4000efe0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000efe4:	e590c008 	ldr	ip, [r0, #8]
4000efe8:	e590300c 	ldr	r3, [r0, #12]
4000efec:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000eff0:	e121f001 	msr	CPSR_c, r1
4000eff4:	e24ec004 	sub	ip, lr, #4
4000eff8:	e04e6003 	sub	r6, lr, r3
4000effc:	e1a05146 	asr	r5, r6, #2
4000f000:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f004:	e1a040c6 	asr	r4, r6, #1
4000f008:	e083c104 	add	ip, r3, r4, lsl #2
4000f00c:	e1a00000 	nop			; (mov r0, r0)
4000f010:	e59c5000 	ldr	r5, [ip]
4000f014:	e59f6068 	ldr	r6, [pc, #104]	; 4000f084 <_tx_thread_stack_analyze+0xd0>
4000f018:	e1550006 	cmp	r5, r6
4000f01c:	0a000002 	beq	4000f02c <_tx_thread_stack_analyze+0x78>
4000f020:	e1a050a4 	lsr	r5, r4, #1
4000f024:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f028:	ea000001 	b	4000f034 <_tx_thread_stack_analyze+0x80>
4000f02c:	e1a050a4 	lsr	r5, r4, #1
4000f030:	e08cc105 	add	ip, ip, r5, lsl #2
4000f034:	e1a040a4 	lsr	r4, r4, #1
4000f038:	e3540001 	cmp	r4, #1
4000f03c:	8afffff3 	bhi	4000f010 <_tx_thread_stack_analyze+0x5c>
4000f040:	ea000000 	b	4000f048 <_tx_thread_stack_analyze+0x94>
4000f044:	e28cc004 	add	ip, ip, #4
4000f048:	e59c5000 	ldr	r5, [ip]
4000f04c:	e59f6030 	ldr	r6, [pc, #48]	; 4000f084 <_tx_thread_stack_analyze+0xd0>
4000f050:	e1550006 	cmp	r5, r6
4000f054:	0afffffa 	beq	4000f044 <_tx_thread_stack_analyze+0x90>
4000f058:	e10f1000 	mrs	r1, CPSR
4000f05c:	e3812080 	orr	r2, r1, #128	; 0x80
4000f060:	e121f002 	msr	CPSR_c, r2
4000f064:	e5905000 	ldr	r5, [r0]
4000f068:	e59f6010 	ldr	r6, [pc, #16]	; 4000f080 <_tx_thread_stack_analyze+0xcc>
4000f06c:	e1550006 	cmp	r5, r6
4000f070:	1a000000 	bne	4000f078 <_tx_thread_stack_analyze+0xc4>
4000f074:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f078:	e121f001 	msr	CPSR_c, r1
4000f07c:	eaffffd7 	b	4000efe0 <_tx_thread_stack_analyze+0x2c>
4000f080:	54485244 	.word	0x54485244
4000f084:	efefefef 	.word	0xefefefef

4000f088 <_tx_thread_stack_error_handler>:
4000f088:	e92d4070 	push	{r4, r5, r6, lr}
4000f08c:	e1a04000 	mov	r4, r0
4000f090:	e10f5000 	mrs	r5, CPSR
4000f094:	e3856080 	orr	r6, r5, #128	; 0x80
4000f098:	e121f006 	msr	CPSR_c, r6
4000f09c:	e59f002c 	ldr	r0, [pc, #44]	; 4000f0d0 <_tx_thread_stack_error_handler+0x48>
4000f0a0:	e5900000 	ldr	r0, [r0]
4000f0a4:	e3500000 	cmp	r0, #0
4000f0a8:	0a000004 	beq	4000f0c0 <_tx_thread_stack_error_handler+0x38>
4000f0ac:	e1a00004 	mov	r0, r4
4000f0b0:	e59f1018 	ldr	r1, [pc, #24]	; 4000f0d0 <_tx_thread_stack_error_handler+0x48>
4000f0b4:	e5911000 	ldr	r1, [r1]
4000f0b8:	e12fff31 	blx	r1
4000f0bc:	ea000001 	b	4000f0c8 <_tx_thread_stack_error_handler+0x40>
4000f0c0:	e1a00000 	nop			; (mov r0, r0)
4000f0c4:	eafffffe 	b	4000f0c4 <_tx_thread_stack_error_handler+0x3c>
4000f0c8:	e121f005 	msr	CPSR_c, r5
4000f0cc:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f0d0:	40030e58 	.word	0x40030e58

4000f0d4 <_tx_thread_system_preempt_check>:
4000f0d4:	e92d4010 	push	{r4, lr}
4000f0d8:	e59f0090 	ldr	r0, [pc, #144]	; 4000f170 <_tx_thread_system_preempt_check+0x9c>
4000f0dc:	e5900000 	ldr	r0, [r0]
4000f0e0:	e59f108c 	ldr	r1, [pc, #140]	; 4000f174 <_tx_thread_system_preempt_check+0xa0>
4000f0e4:	e5911000 	ldr	r1, [r1]
4000f0e8:	e1500001 	cmp	r0, r1
4000f0ec:	0a00001e 	beq	4000f16c <_tx_thread_system_preempt_check+0x98>
4000f0f0:	e59f0080 	ldr	r0, [pc, #128]	; 4000f178 <_tx_thread_system_preempt_check+0xa4>
4000f0f4:	e5900000 	ldr	r0, [r0]
4000f0f8:	e59f107c 	ldr	r1, [pc, #124]	; 4000f17c <_tx_thread_system_preempt_check+0xa8>
4000f0fc:	e5911000 	ldr	r1, [r1]
4000f100:	e1900001 	orrs	r0, r0, r1
4000f104:	1a000018 	bne	4000f16c <_tx_thread_system_preempt_check+0x98>
4000f108:	e59f0064 	ldr	r0, [pc, #100]	; 4000f174 <_tx_thread_system_preempt_check+0xa0>
4000f10c:	e5904000 	ldr	r4, [r0]
4000f110:	e5940008 	ldr	r0, [r4, #8]
4000f114:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f118:	e1500001 	cmp	r0, r1
4000f11c:	2a000001 	bcs	4000f128 <_tx_thread_system_preempt_check+0x54>
4000f120:	e5940008 	ldr	r0, [r4, #8]
4000f124:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f128:	e594000c 	ldr	r0, [r4, #12]
4000f12c:	e5900000 	ldr	r0, [r0]
4000f130:	e59f1048 	ldr	r1, [pc, #72]	; 4000f180 <_tx_thread_system_preempt_check+0xac>
4000f134:	e1500001 	cmp	r0, r1
4000f138:	1a000007 	bne	4000f15c <_tx_thread_system_preempt_check+0x88>
4000f13c:	e5940010 	ldr	r0, [r4, #16]
4000f140:	e5900001 	ldr	r0, [r0, #1]
4000f144:	e1500001 	cmp	r0, r1
4000f148:	1a000003 	bne	4000f15c <_tx_thread_system_preempt_check+0x88>
4000f14c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f150:	e594100c 	ldr	r1, [r4, #12]
4000f154:	e1500001 	cmp	r0, r1
4000f158:	2a000001 	bcs	4000f164 <_tx_thread_system_preempt_check+0x90>
4000f15c:	e1a00004 	mov	r0, r4
4000f160:	ebffffc8 	bl	4000f088 <_tx_thread_stack_error_handler>
4000f164:	ebffee70 	bl	4000ab2c <_tx_thread_system_return>
4000f168:	e1a00000 	nop			; (mov r0, r0)
4000f16c:	e8bd8010 	pop	{r4, pc}
4000f170:	40030e34 	.word	0x40030e34
4000f174:	40030e38 	.word	0x40030e38
4000f178:	40030e2c 	.word	0x40030e2c
4000f17c:	40030e50 	.word	0x40030e50
4000f180:	efefefef 	.word	0xefefefef

4000f184 <_tx_thread_system_resume>:
4000f184:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f188:	e1a04000 	mov	r4, r0
4000f18c:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f190:	e3500000 	cmp	r0, #0
4000f194:	0a000002 	beq	4000f1a4 <_tx_thread_system_resume+0x20>
4000f198:	e284004c 	add	r0, r4, #76	; 0x4c
4000f19c:	eb000325 	bl	4000fe38 <_tx_timer_system_deactivate>
4000f1a0:	ea000001 	b	4000f1ac <_tx_thread_system_resume+0x28>
4000f1a4:	e3a00000 	mov	r0, #0
4000f1a8:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f1ac:	e5940008 	ldr	r0, [r4, #8]
4000f1b0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f1b4:	e1500001 	cmp	r0, r1
4000f1b8:	2a000001 	bcs	4000f1c4 <_tx_thread_system_resume+0x40>
4000f1bc:	e5940008 	ldr	r0, [r4, #8]
4000f1c0:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f1c4:	e594000c 	ldr	r0, [r4, #12]
4000f1c8:	e5900000 	ldr	r0, [r0]
4000f1cc:	e59f133c 	ldr	r1, [pc, #828]	; 4000f510 <_tx_thread_system_resume+0x38c>
4000f1d0:	e1500001 	cmp	r0, r1
4000f1d4:	1a000007 	bne	4000f1f8 <_tx_thread_system_resume+0x74>
4000f1d8:	e5940010 	ldr	r0, [r4, #16]
4000f1dc:	e5900001 	ldr	r0, [r0, #1]
4000f1e0:	e1500001 	cmp	r0, r1
4000f1e4:	1a000003 	bne	4000f1f8 <_tx_thread_system_resume+0x74>
4000f1e8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f1ec:	e594100c 	ldr	r1, [r4, #12]
4000f1f0:	e1500001 	cmp	r0, r1
4000f1f4:	2a000001 	bcs	4000f200 <_tx_thread_system_resume+0x7c>
4000f1f8:	e1a00004 	mov	r0, r4
4000f1fc:	ebffffa1 	bl	4000f088 <_tx_thread_stack_error_handler>
4000f200:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f204:	e5100004 	ldr	r0, [r0, #-4]
4000f208:	e59f1300 	ldr	r1, [pc, #768]	; 4000f510 <_tx_thread_system_resume+0x38c>
4000f20c:	e1500001 	cmp	r0, r1
4000f210:	0a000001 	beq	4000f21c <_tx_thread_system_resume+0x98>
4000f214:	e1a00004 	mov	r0, r4
4000f218:	ebffff65 	bl	4000efb4 <_tx_thread_stack_analyze>
4000f21c:	e10f5000 	mrs	r5, CPSR
4000f220:	e3856080 	orr	r6, r5, #128	; 0x80
4000f224:	e121f006 	msr	CPSR_c, r6
4000f228:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f514 <_tx_thread_system_resume+0x390>
4000f22c:	e5900000 	ldr	r0, [r0]
4000f230:	e2400001 	sub	r0, r0, #1
4000f234:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f514 <_tx_thread_system_resume+0x390>
4000f238:	e5810000 	str	r0, [r1]
4000f23c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f240:	e3500000 	cmp	r0, #0
4000f244:	0a000009 	beq	4000f270 <_tx_thread_system_resume+0xec>
4000f248:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f24c:	e3500001 	cmp	r0, #1
4000f250:	0a000084 	beq	4000f468 <_tx_thread_system_resume+0x2e4>
4000f254:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f258:	e3500002 	cmp	r0, #2
4000f25c:	0a000081 	beq	4000f468 <_tx_thread_system_resume+0x2e4>
4000f260:	e3a00000 	mov	r0, #0
4000f264:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f268:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f26c:	ea00007d 	b	4000f468 <_tx_thread_system_resume+0x2e4>
4000f270:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f274:	e3500000 	cmp	r0, #0
4000f278:	0a00007a 	beq	4000f468 <_tx_thread_system_resume+0x2e4>
4000f27c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f280:	e3500000 	cmp	r0, #0
4000f284:	0a000004 	beq	4000f29c <_tx_thread_system_resume+0x118>
4000f288:	e3a00000 	mov	r0, #0
4000f28c:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f290:	e3a00003 	mov	r0, #3
4000f294:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f298:	ea000072 	b	4000f468 <_tx_thread_system_resume+0x2e4>
4000f29c:	e59f1274 	ldr	r1, [pc, #628]	; 4000f518 <_tx_thread_system_resume+0x394>
4000f2a0:	e5910000 	ldr	r0, [r1]
4000f2a4:	e3500000 	cmp	r0, #0
4000f2a8:	0a000032 	beq	4000f378 <_tx_thread_system_resume+0x1f4>
4000f2ac:	e59f1268 	ldr	r1, [pc, #616]	; 4000f51c <_tx_thread_system_resume+0x398>
4000f2b0:	e5911000 	ldr	r1, [r1]
4000f2b4:	e2811001 	add	r1, r1, #1
4000f2b8:	e59f225c 	ldr	r2, [pc, #604]	; 4000f51c <_tx_thread_system_resume+0x398>
4000f2bc:	e5821000 	str	r1, [r2]
4000f2c0:	e580100c 	str	r1, [r0, #12]
4000f2c4:	e59f1254 	ldr	r1, [pc, #596]	; 4000f520 <_tx_thread_system_resume+0x39c>
4000f2c8:	e5911000 	ldr	r1, [r1]
4000f2cc:	e3510000 	cmp	r1, #0
4000f2d0:	1a000006 	bne	4000f2f0 <_tx_thread_system_resume+0x16c>
4000f2d4:	e59f1248 	ldr	r1, [pc, #584]	; 4000f524 <_tx_thread_system_resume+0x3a0>
4000f2d8:	e5911000 	ldr	r1, [r1]
4000f2dc:	e5801000 	str	r1, [r0]
4000f2e0:	e5901000 	ldr	r1, [r0]
4000f2e4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f2e8:	e5801004 	str	r1, [r0, #4]
4000f2ec:	ea00000d 	b	4000f328 <_tx_thread_system_resume+0x1a4>
4000f2f0:	e59f1228 	ldr	r1, [pc, #552]	; 4000f520 <_tx_thread_system_resume+0x39c>
4000f2f4:	e5911000 	ldr	r1, [r1]
4000f2f8:	e59f2228 	ldr	r2, [pc, #552]	; 4000f528 <_tx_thread_system_resume+0x3a4>
4000f2fc:	e1510002 	cmp	r1, r2
4000f300:	2a000004 	bcs	4000f318 <_tx_thread_system_resume+0x194>
4000f304:	e3e01000 	mvn	r1, #0
4000f308:	e5801000 	str	r1, [r0]
4000f30c:	e3a01000 	mov	r1, #0
4000f310:	e5801004 	str	r1, [r0, #4]
4000f314:	ea000003 	b	4000f328 <_tx_thread_system_resume+0x1a4>
4000f318:	e59f1208 	ldr	r1, [pc, #520]	; 4000f528 <_tx_thread_system_resume+0x3a4>
4000f31c:	e5801000 	str	r1, [r0]
4000f320:	e3a01000 	mov	r1, #0
4000f324:	e5801004 	str	r1, [r0, #4]
4000f328:	e3a01001 	mov	r1, #1
4000f32c:	e5801008 	str	r1, [r0, #8]
4000f330:	e5804010 	str	r4, [r0, #16]
4000f334:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f338:	e5801014 	str	r1, [r0, #20]
4000f33c:	e580d018 	str	sp, [r0, #24]
4000f340:	e3a01000 	mov	r1, #0
4000f344:	e580101c 	str	r1, [r0, #28]
4000f348:	e2800020 	add	r0, r0, #32
4000f34c:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f52c <_tx_thread_system_resume+0x3a8>
4000f350:	e5911000 	ldr	r1, [r1]
4000f354:	e1500001 	cmp	r0, r1
4000f358:	3a000001 	bcc	4000f364 <_tx_thread_system_resume+0x1e0>
4000f35c:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f530 <_tx_thread_system_resume+0x3ac>
4000f360:	e5910000 	ldr	r0, [r1]
4000f364:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f518 <_tx_thread_system_resume+0x394>
4000f368:	e5810000 	str	r0, [r1]
4000f36c:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f534 <_tx_thread_system_resume+0x3b0>
4000f370:	e5911000 	ldr	r1, [r1]
4000f374:	e5810020 	str	r0, [r1, #32]
4000f378:	e3a00000 	mov	r0, #0
4000f37c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f380:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f384:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f538 <_tx_thread_system_resume+0x3b4>
4000f388:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f38c:	e3580000 	cmp	r8, #0
4000f390:	0a000005 	beq	4000f3ac <_tx_thread_system_resume+0x228>
4000f394:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f398:	e5894020 	str	r4, [r9, #32]
4000f39c:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f3a0:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f3a4:	e5848020 	str	r8, [r4, #32]
4000f3a8:	ea00002e 	b	4000f468 <_tx_thread_system_resume+0x2e4>
4000f3ac:	e59f0184 	ldr	r0, [pc, #388]	; 4000f538 <_tx_thread_system_resume+0x3b4>
4000f3b0:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f3b4:	e5844020 	str	r4, [r4, #32]
4000f3b8:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f3bc:	e59f0178 	ldr	r0, [pc, #376]	; 4000f53c <_tx_thread_system_resume+0x3b8>
4000f3c0:	e5900000 	ldr	r0, [r0]
4000f3c4:	e3a01001 	mov	r1, #1
4000f3c8:	e1800711 	orr	r0, r0, r1, lsl r7
4000f3cc:	e59f1168 	ldr	r1, [pc, #360]	; 4000f53c <_tx_thread_system_resume+0x3b8>
4000f3d0:	e5810000 	str	r0, [r1]
4000f3d4:	e59f0164 	ldr	r0, [pc, #356]	; 4000f540 <_tx_thread_system_resume+0x3bc>
4000f3d8:	e5900000 	ldr	r0, [r0]
4000f3dc:	e58d0000 	str	r0, [sp]
4000f3e0:	e59d0000 	ldr	r0, [sp]
4000f3e4:	e3500000 	cmp	r0, #0
4000f3e8:	1a000004 	bne	4000f400 <_tx_thread_system_resume+0x27c>
4000f3ec:	e59f014c 	ldr	r0, [pc, #332]	; 4000f540 <_tx_thread_system_resume+0x3bc>
4000f3f0:	e5804000 	str	r4, [r0]
4000f3f4:	e59f0148 	ldr	r0, [pc, #328]	; 4000f544 <_tx_thread_system_resume+0x3c0>
4000f3f8:	e5807000 	str	r7, [r0]
4000f3fc:	ea000019 	b	4000f468 <_tx_thread_system_resume+0x2e4>
4000f400:	e59f013c 	ldr	r0, [pc, #316]	; 4000f544 <_tx_thread_system_resume+0x3c0>
4000f404:	e5900000 	ldr	r0, [r0]
4000f408:	e1570000 	cmp	r7, r0
4000f40c:	2a000015 	bcs	4000f468 <_tx_thread_system_resume+0x2e4>
4000f410:	e59f012c 	ldr	r0, [pc, #300]	; 4000f544 <_tx_thread_system_resume+0x3c0>
4000f414:	e5807000 	str	r7, [r0]
4000f418:	e59d0000 	ldr	r0, [sp]
4000f41c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f420:	e1500007 	cmp	r0, r7
4000f424:	9a00000f 	bls	4000f468 <_tx_thread_system_resume+0x2e4>
4000f428:	e59d0000 	ldr	r0, [sp]
4000f42c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f430:	e59d1000 	ldr	r1, [sp]
4000f434:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f438:	e1500001 	cmp	r0, r1
4000f43c:	0a000007 	beq	4000f460 <_tx_thread_system_resume+0x2dc>
4000f440:	e59f0100 	ldr	r0, [pc, #256]	; 4000f548 <_tx_thread_system_resume+0x3c4>
4000f444:	e5900000 	ldr	r0, [r0]
4000f448:	e59d1000 	ldr	r1, [sp]
4000f44c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f450:	e3a02001 	mov	r2, #1
4000f454:	e1800112 	orr	r0, r0, r2, lsl r1
4000f458:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f548 <_tx_thread_system_resume+0x3c4>
4000f45c:	e5810000 	str	r0, [r1]
4000f460:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f540 <_tx_thread_system_resume+0x3bc>
4000f464:	e5804000 	str	r4, [r0]
4000f468:	e121f005 	msr	CPSR_c, r5
4000f46c:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f524 <_tx_thread_system_resume+0x3a0>
4000f470:	e5900000 	ldr	r0, [r0]
4000f474:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f540 <_tx_thread_system_resume+0x3bc>
4000f478:	e5911000 	ldr	r1, [r1]
4000f47c:	e1500001 	cmp	r0, r1
4000f480:	0a000021 	beq	4000f50c <_tx_thread_system_resume+0x388>
4000f484:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f540 <_tx_thread_system_resume+0x3bc>
4000f488:	e5900000 	ldr	r0, [r0]
4000f48c:	e1540000 	cmp	r4, r0
4000f490:	0a000016 	beq	4000f4f0 <_tx_thread_system_resume+0x36c>
4000f494:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f540 <_tx_thread_system_resume+0x3bc>
4000f498:	e5904000 	ldr	r4, [r0]
4000f49c:	e5940008 	ldr	r0, [r4, #8]
4000f4a0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f4a4:	e1500001 	cmp	r0, r1
4000f4a8:	2a000001 	bcs	4000f4b4 <_tx_thread_system_resume+0x330>
4000f4ac:	e5940008 	ldr	r0, [r4, #8]
4000f4b0:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f4b4:	e594000c 	ldr	r0, [r4, #12]
4000f4b8:	e5900000 	ldr	r0, [r0]
4000f4bc:	e59f104c 	ldr	r1, [pc, #76]	; 4000f510 <_tx_thread_system_resume+0x38c>
4000f4c0:	e1500001 	cmp	r0, r1
4000f4c4:	1a000007 	bne	4000f4e8 <_tx_thread_system_resume+0x364>
4000f4c8:	e5940010 	ldr	r0, [r4, #16]
4000f4cc:	e5900001 	ldr	r0, [r0, #1]
4000f4d0:	e1500001 	cmp	r0, r1
4000f4d4:	1a000003 	bne	4000f4e8 <_tx_thread_system_resume+0x364>
4000f4d8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f4dc:	e594100c 	ldr	r1, [r4, #12]
4000f4e0:	e1500001 	cmp	r0, r1
4000f4e4:	2a000001 	bcs	4000f4f0 <_tx_thread_system_resume+0x36c>
4000f4e8:	e1a00004 	mov	r0, r4
4000f4ec:	ebfffee5 	bl	4000f088 <_tx_thread_stack_error_handler>
4000f4f0:	e59f0028 	ldr	r0, [pc, #40]	; 4000f520 <_tx_thread_system_resume+0x39c>
4000f4f4:	e5900000 	ldr	r0, [r0]
4000f4f8:	e59f1014 	ldr	r1, [pc, #20]	; 4000f514 <_tx_thread_system_resume+0x390>
4000f4fc:	e5911000 	ldr	r1, [r1]
4000f500:	e1900001 	orrs	r0, r0, r1
4000f504:	1a000000 	bne	4000f50c <_tx_thread_system_resume+0x388>
4000f508:	ebffed87 	bl	4000ab2c <_tx_thread_system_return>
4000f50c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f510:	efefefef 	.word	0xefefefef
4000f514:	40030e50 	.word	0x40030e50
4000f518:	40030ea0 	.word	0x40030ea0
4000f51c:	40030ea4 	.word	0x40030ea4
4000f520:	40030e2c 	.word	0x40030e2c
4000f524:	40030e34 	.word	0x40030e34
4000f528:	f0f0f0f0 	.word	0xf0f0f0f0
4000f52c:	40030e9c 	.word	0x40030e9c
4000f530:	40030e98 	.word	0x40030e98
4000f534:	40030e8c 	.word	0x40030e8c
4000f538:	40032874 	.word	0x40032874
4000f53c:	40030e44 	.word	0x40030e44
4000f540:	40030e38 	.word	0x40030e38
4000f544:	40030e4c 	.word	0x40030e4c
4000f548:	40030e48 	.word	0x40030e48

4000f54c <_tx_thread_time_slice>:
4000f54c:	e92d4070 	push	{r4, r5, r6, lr}
4000f550:	e59f0140 	ldr	r0, [pc, #320]	; 4000f698 <_tx_thread_time_slice+0x14c>
4000f554:	e5906000 	ldr	r6, [r0]
4000f558:	e5960008 	ldr	r0, [r6, #8]
4000f55c:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f560:	e1500001 	cmp	r0, r1
4000f564:	2a000001 	bcs	4000f570 <_tx_thread_time_slice+0x24>
4000f568:	e5960008 	ldr	r0, [r6, #8]
4000f56c:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f570:	e596000c 	ldr	r0, [r6, #12]
4000f574:	e5900000 	ldr	r0, [r0]
4000f578:	e59f111c 	ldr	r1, [pc, #284]	; 4000f69c <_tx_thread_time_slice+0x150>
4000f57c:	e1500001 	cmp	r0, r1
4000f580:	1a000007 	bne	4000f5a4 <_tx_thread_time_slice+0x58>
4000f584:	e5960010 	ldr	r0, [r6, #16]
4000f588:	e5900001 	ldr	r0, [r0, #1]
4000f58c:	e1500001 	cmp	r0, r1
4000f590:	1a000003 	bne	4000f5a4 <_tx_thread_time_slice+0x58>
4000f594:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f598:	e596100c 	ldr	r1, [r6, #12]
4000f59c:	e1500001 	cmp	r0, r1
4000f5a0:	2a000001 	bcs	4000f5ac <_tx_thread_time_slice+0x60>
4000f5a4:	e1a00006 	mov	r0, r6
4000f5a8:	ebfffeb6 	bl	4000f088 <_tx_thread_stack_error_handler>
4000f5ac:	e10f4000 	mrs	r4, CPSR
4000f5b0:	e3845080 	orr	r5, r4, #128	; 0x80
4000f5b4:	e121f005 	msr	CPSR_c, r5
4000f5b8:	e3a00000 	mov	r0, #0
4000f5bc:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f6a0 <_tx_thread_time_slice+0x154>
4000f5c0:	e5810000 	str	r0, [r1]
4000f5c4:	e3560000 	cmp	r6, #0
4000f5c8:	0a000030 	beq	4000f690 <_tx_thread_time_slice+0x144>
4000f5cc:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f5d0:	e3500000 	cmp	r0, #0
4000f5d4:	1a00002d 	bne	4000f690 <_tx_thread_time_slice+0x144>
4000f5d8:	e596001c 	ldr	r0, [r6, #28]
4000f5dc:	e5860018 	str	r0, [r6, #24]
4000f5e0:	e5960020 	ldr	r0, [r6, #32]
4000f5e4:	e1500006 	cmp	r0, r6
4000f5e8:	0a000025 	beq	4000f684 <_tx_thread_time_slice+0x138>
4000f5ec:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f5f0:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f5f4:	e1500001 	cmp	r0, r1
4000f5f8:	1a000021 	bne	4000f684 <_tx_thread_time_slice+0x138>
4000f5fc:	e59f20a0 	ldr	r2, [pc, #160]	; 4000f6a4 <_tx_thread_time_slice+0x158>
4000f600:	e5960020 	ldr	r0, [r6, #32]
4000f604:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f608:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f60c:	e2820000 	add	r0, r2, #0
4000f610:	e59f1090 	ldr	r1, [pc, #144]	; 4000f6a8 <_tx_thread_time_slice+0x15c>
4000f614:	e5911000 	ldr	r1, [r1]
4000f618:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f61c:	e59f1088 	ldr	r1, [pc, #136]	; 4000f6ac <_tx_thread_time_slice+0x160>
4000f620:	e5810000 	str	r0, [r1]
4000f624:	e2810000 	add	r0, r1, #0
4000f628:	e5906000 	ldr	r6, [r0]
4000f62c:	e5960008 	ldr	r0, [r6, #8]
4000f630:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f634:	e1500001 	cmp	r0, r1
4000f638:	2a000001 	bcs	4000f644 <_tx_thread_time_slice+0xf8>
4000f63c:	e5960008 	ldr	r0, [r6, #8]
4000f640:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f644:	e596000c 	ldr	r0, [r6, #12]
4000f648:	e5900000 	ldr	r0, [r0]
4000f64c:	e59f1048 	ldr	r1, [pc, #72]	; 4000f69c <_tx_thread_time_slice+0x150>
4000f650:	e1500001 	cmp	r0, r1
4000f654:	1a000007 	bne	4000f678 <_tx_thread_time_slice+0x12c>
4000f658:	e5960010 	ldr	r0, [r6, #16]
4000f65c:	e5900001 	ldr	r0, [r0, #1]
4000f660:	e1500001 	cmp	r0, r1
4000f664:	1a000003 	bne	4000f678 <_tx_thread_time_slice+0x12c>
4000f668:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f66c:	e596100c 	ldr	r1, [r6, #12]
4000f670:	e1500001 	cmp	r0, r1
4000f674:	2a000005 	bcs	4000f690 <_tx_thread_time_slice+0x144>
4000f678:	e1a00006 	mov	r0, r6
4000f67c:	ebfffe81 	bl	4000f088 <_tx_thread_stack_error_handler>
4000f680:	ea000002 	b	4000f690 <_tx_thread_time_slice+0x144>
4000f684:	e59f1024 	ldr	r1, [pc, #36]	; 4000f6b0 <_tx_thread_time_slice+0x164>
4000f688:	e5960018 	ldr	r0, [r6, #24]
4000f68c:	e5810000 	str	r0, [r1]
4000f690:	e121f004 	msr	CPSR_c, r4
4000f694:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f698:	40030e34 	.word	0x40030e34
4000f69c:	efefefef 	.word	0xefefefef
4000f6a0:	40030e64 	.word	0x40030e64
4000f6a4:	40032874 	.word	0x40032874
4000f6a8:	40030e4c 	.word	0x40030e4c
4000f6ac:	40030e38 	.word	0x40030e38
4000f6b0:	40030e60 	.word	0x40030e60

4000f6b4 <_tx_thread_timeout>:
4000f6b4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f6b8:	e1a04000 	mov	r4, r0
4000f6bc:	e1a08004 	mov	r8, r4
4000f6c0:	e10f5000 	mrs	r5, CPSR
4000f6c4:	e3856080 	orr	r6, r5, #128	; 0x80
4000f6c8:	e121f006 	msr	CPSR_c, r6
4000f6cc:	e1a04008 	mov	r4, r8
4000f6d0:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000f6d4:	e3500004 	cmp	r0, #4
4000f6d8:	1a000008 	bne	4000f700 <_tx_thread_timeout+0x4c>
4000f6dc:	e59f0038 	ldr	r0, [pc, #56]	; 4000f71c <_tx_thread_timeout+0x68>
4000f6e0:	e5900000 	ldr	r0, [r0]
4000f6e4:	e2800001 	add	r0, r0, #1
4000f6e8:	e59f102c 	ldr	r1, [pc, #44]	; 4000f71c <_tx_thread_timeout+0x68>
4000f6ec:	e5810000 	str	r0, [r1]
4000f6f0:	e121f005 	msr	CPSR_c, r5
4000f6f4:	e1a00008 	mov	r0, r8
4000f6f8:	ebfffea1 	bl	4000f184 <_tx_thread_system_resume>
4000f6fc:	ea000005 	b	4000f718 <_tx_thread_timeout+0x64>
4000f700:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000f704:	e121f005 	msr	CPSR_c, r5
4000f708:	e3570000 	cmp	r7, #0
4000f70c:	0a000001 	beq	4000f718 <_tx_thread_timeout+0x64>
4000f710:	e1a00008 	mov	r0, r8
4000f714:	e12fff37 	blx	r7
4000f718:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f71c:	40030e50 	.word	0x40030e50

4000f720 <_tx_timer_activate>:
4000f720:	e92d4070 	push	{r4, r5, r6, lr}
4000f724:	e1a04000 	mov	r4, r0
4000f728:	e10f5000 	mrs	r5, CPSR
4000f72c:	e3856080 	orr	r6, r5, #128	; 0x80
4000f730:	e121f006 	msr	CPSR_c, r6
4000f734:	e59f1104 	ldr	r1, [pc, #260]	; 4000f840 <_tx_timer_activate+0x120>
4000f738:	e5910000 	ldr	r0, [r1]
4000f73c:	e3500000 	cmp	r0, #0
4000f740:	0a000031 	beq	4000f80c <_tx_timer_activate+0xec>
4000f744:	e59f10f8 	ldr	r1, [pc, #248]	; 4000f844 <_tx_timer_activate+0x124>
4000f748:	e5911000 	ldr	r1, [r1]
4000f74c:	e2811001 	add	r1, r1, #1
4000f750:	e59f20ec 	ldr	r2, [pc, #236]	; 4000f844 <_tx_timer_activate+0x124>
4000f754:	e5821000 	str	r1, [r2]
4000f758:	e580100c 	str	r1, [r0, #12]
4000f75c:	e59f10e4 	ldr	r1, [pc, #228]	; 4000f848 <_tx_timer_activate+0x128>
4000f760:	e5911000 	ldr	r1, [r1]
4000f764:	e3510000 	cmp	r1, #0
4000f768:	1a000006 	bne	4000f788 <_tx_timer_activate+0x68>
4000f76c:	e59f10d8 	ldr	r1, [pc, #216]	; 4000f84c <_tx_timer_activate+0x12c>
4000f770:	e5911000 	ldr	r1, [r1]
4000f774:	e5801000 	str	r1, [r0]
4000f778:	e5901000 	ldr	r1, [r0]
4000f77c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f780:	e5801004 	str	r1, [r0, #4]
4000f784:	ea00000d 	b	4000f7c0 <_tx_timer_activate+0xa0>
4000f788:	e59f10b8 	ldr	r1, [pc, #184]	; 4000f848 <_tx_timer_activate+0x128>
4000f78c:	e5911000 	ldr	r1, [r1]
4000f790:	e59f20b8 	ldr	r2, [pc, #184]	; 4000f850 <_tx_timer_activate+0x130>
4000f794:	e1510002 	cmp	r1, r2
4000f798:	2a000004 	bcs	4000f7b0 <_tx_timer_activate+0x90>
4000f79c:	e3e01000 	mvn	r1, #0
4000f7a0:	e5801000 	str	r1, [r0]
4000f7a4:	e3a01000 	mov	r1, #0
4000f7a8:	e5801004 	str	r1, [r0, #4]
4000f7ac:	ea000003 	b	4000f7c0 <_tx_timer_activate+0xa0>
4000f7b0:	e59f1098 	ldr	r1, [pc, #152]	; 4000f850 <_tx_timer_activate+0x130>
4000f7b4:	e5801000 	str	r1, [r0]
4000f7b8:	e3a01000 	mov	r1, #0
4000f7bc:	e5801004 	str	r1, [r0, #4]
4000f7c0:	e3a0107a 	mov	r1, #122	; 0x7a
4000f7c4:	e5801008 	str	r1, [r0, #8]
4000f7c8:	e5804010 	str	r4, [r0, #16]
4000f7cc:	e3a01000 	mov	r1, #0
4000f7d0:	e5801014 	str	r1, [r0, #20]
4000f7d4:	e5801018 	str	r1, [r0, #24]
4000f7d8:	e580101c 	str	r1, [r0, #28]
4000f7dc:	e2800020 	add	r0, r0, #32
4000f7e0:	e59f106c 	ldr	r1, [pc, #108]	; 4000f854 <_tx_timer_activate+0x134>
4000f7e4:	e5911000 	ldr	r1, [r1]
4000f7e8:	e1500001 	cmp	r0, r1
4000f7ec:	3a000001 	bcc	4000f7f8 <_tx_timer_activate+0xd8>
4000f7f0:	e59f1060 	ldr	r1, [pc, #96]	; 4000f858 <_tx_timer_activate+0x138>
4000f7f4:	e5910000 	ldr	r0, [r1]
4000f7f8:	e59f1040 	ldr	r1, [pc, #64]	; 4000f840 <_tx_timer_activate+0x120>
4000f7fc:	e5810000 	str	r0, [r1]
4000f800:	e59f1054 	ldr	r1, [pc, #84]	; 4000f85c <_tx_timer_activate+0x13c>
4000f804:	e5911000 	ldr	r1, [r1]
4000f808:	e5810020 	str	r0, [r1, #32]
4000f80c:	e121f005 	msr	CPSR_c, r5
4000f810:	e5940020 	ldr	r0, [r4, #32]
4000f814:	e3500000 	cmp	r0, #0
4000f818:	1a000002 	bne	4000f828 <_tx_timer_activate+0x108>
4000f81c:	e5940008 	ldr	r0, [r4, #8]
4000f820:	e3500000 	cmp	r0, #0
4000f824:	1a000001 	bne	4000f830 <_tx_timer_activate+0x110>
4000f828:	e3a00017 	mov	r0, #23
4000f82c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f830:	e2840008 	add	r0, r4, #8
4000f834:	ebffe6c7 	bl	40009358 <_tx_timer_system_activate>
4000f838:	e3a00000 	mov	r0, #0
4000f83c:	eafffffa 	b	4000f82c <_tx_timer_activate+0x10c>
4000f840:	40030ea0 	.word	0x40030ea0
4000f844:	40030ea4 	.word	0x40030ea4
4000f848:	40030e2c 	.word	0x40030e2c
4000f84c:	40030e34 	.word	0x40030e34
4000f850:	f0f0f0f0 	.word	0xf0f0f0f0
4000f854:	40030e9c 	.word	0x40030e9c
4000f858:	40030e98 	.word	0x40030e98
4000f85c:	40030e8c 	.word	0x40030e8c

4000f860 <_tx_timer_change>:
4000f860:	e92d4030 	push	{r4, r5, lr}
4000f864:	e1a03000 	mov	r3, r0
4000f868:	e10fc000 	mrs	ip, CPSR
4000f86c:	e38ce080 	orr	lr, ip, #128	; 0x80
4000f870:	e121f00e 	msr	CPSR_c, lr
4000f874:	e59f40f0 	ldr	r4, [pc, #240]	; 4000f96c <_tx_timer_change+0x10c>
4000f878:	e5940000 	ldr	r0, [r4]
4000f87c:	e3500000 	cmp	r0, #0
4000f880:	0a000031 	beq	4000f94c <_tx_timer_change+0xec>
4000f884:	e59f40e4 	ldr	r4, [pc, #228]	; 4000f970 <_tx_timer_change+0x110>
4000f888:	e5944000 	ldr	r4, [r4]
4000f88c:	e2844001 	add	r4, r4, #1
4000f890:	e59f50d8 	ldr	r5, [pc, #216]	; 4000f970 <_tx_timer_change+0x110>
4000f894:	e5854000 	str	r4, [r5]
4000f898:	e580400c 	str	r4, [r0, #12]
4000f89c:	e59f40d0 	ldr	r4, [pc, #208]	; 4000f974 <_tx_timer_change+0x114>
4000f8a0:	e5944000 	ldr	r4, [r4]
4000f8a4:	e3540000 	cmp	r4, #0
4000f8a8:	1a000006 	bne	4000f8c8 <_tx_timer_change+0x68>
4000f8ac:	e59f40c4 	ldr	r4, [pc, #196]	; 4000f978 <_tx_timer_change+0x118>
4000f8b0:	e5944000 	ldr	r4, [r4]
4000f8b4:	e5804000 	str	r4, [r0]
4000f8b8:	e5904000 	ldr	r4, [r0]
4000f8bc:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000f8c0:	e5804004 	str	r4, [r0, #4]
4000f8c4:	ea00000d 	b	4000f900 <_tx_timer_change+0xa0>
4000f8c8:	e59f40a4 	ldr	r4, [pc, #164]	; 4000f974 <_tx_timer_change+0x114>
4000f8cc:	e5944000 	ldr	r4, [r4]
4000f8d0:	e59f50a4 	ldr	r5, [pc, #164]	; 4000f97c <_tx_timer_change+0x11c>
4000f8d4:	e1540005 	cmp	r4, r5
4000f8d8:	2a000004 	bcs	4000f8f0 <_tx_timer_change+0x90>
4000f8dc:	e3e04000 	mvn	r4, #0
4000f8e0:	e5804000 	str	r4, [r0]
4000f8e4:	e3a04000 	mov	r4, #0
4000f8e8:	e5804004 	str	r4, [r0, #4]
4000f8ec:	ea000003 	b	4000f900 <_tx_timer_change+0xa0>
4000f8f0:	e59f4084 	ldr	r4, [pc, #132]	; 4000f97c <_tx_timer_change+0x11c>
4000f8f4:	e5804000 	str	r4, [r0]
4000f8f8:	e3a04000 	mov	r4, #0
4000f8fc:	e5804004 	str	r4, [r0, #4]
4000f900:	e3a0407b 	mov	r4, #123	; 0x7b
4000f904:	e5804008 	str	r4, [r0, #8]
4000f908:	e5803010 	str	r3, [r0, #16]
4000f90c:	e5801014 	str	r1, [r0, #20]
4000f910:	e5802018 	str	r2, [r0, #24]
4000f914:	e3a04000 	mov	r4, #0
4000f918:	e580401c 	str	r4, [r0, #28]
4000f91c:	e2800020 	add	r0, r0, #32
4000f920:	e59f4058 	ldr	r4, [pc, #88]	; 4000f980 <_tx_timer_change+0x120>
4000f924:	e5944000 	ldr	r4, [r4]
4000f928:	e1500004 	cmp	r0, r4
4000f92c:	3a000001 	bcc	4000f938 <_tx_timer_change+0xd8>
4000f930:	e59f404c 	ldr	r4, [pc, #76]	; 4000f984 <_tx_timer_change+0x124>
4000f934:	e5940000 	ldr	r0, [r4]
4000f938:	e59f402c 	ldr	r4, [pc, #44]	; 4000f96c <_tx_timer_change+0x10c>
4000f93c:	e5840000 	str	r0, [r4]
4000f940:	e59f4040 	ldr	r4, [pc, #64]	; 4000f988 <_tx_timer_change+0x128>
4000f944:	e5944000 	ldr	r4, [r4]
4000f948:	e5840020 	str	r0, [r4, #32]
4000f94c:	e5930020 	ldr	r0, [r3, #32]
4000f950:	e3500000 	cmp	r0, #0
4000f954:	1a000001 	bne	4000f960 <_tx_timer_change+0x100>
4000f958:	e5831008 	str	r1, [r3, #8]
4000f95c:	e583200c 	str	r2, [r3, #12]
4000f960:	e121f00c 	msr	CPSR_c, ip
4000f964:	e3a00000 	mov	r0, #0
4000f968:	e8bd8030 	pop	{r4, r5, pc}
4000f96c:	40030ea0 	.word	0x40030ea0
4000f970:	40030ea4 	.word	0x40030ea4
4000f974:	40030e2c 	.word	0x40030e2c
4000f978:	40030e34 	.word	0x40030e34
4000f97c:	f0f0f0f0 	.word	0xf0f0f0f0
4000f980:	40030e9c 	.word	0x40030e9c
4000f984:	40030e98 	.word	0x40030e98
4000f988:	40030e8c 	.word	0x40030e8c

4000f98c <_tx_timer_create>:
4000f98c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000f990:	e1a04000 	mov	r4, r0
4000f994:	e1a05001 	mov	r5, r1
4000f998:	e1a06002 	mov	r6, r2
4000f99c:	e1a07003 	mov	r7, r3
4000f9a0:	e28da030 	add	sl, sp, #48	; 0x30
4000f9a4:	e89a0700 	ldm	sl, {r8, r9, sl}
4000f9a8:	e3a0102c 	mov	r1, #44	; 0x2c
4000f9ac:	e1a00004 	mov	r0, r4
4000f9b0:	eb000ebb 	bl	400134a4 <__aeabi_memclr4>
4000f9b4:	e5845004 	str	r5, [r4, #4]
4000f9b8:	e5848008 	str	r8, [r4, #8]
4000f9bc:	e584900c 	str	r9, [r4, #12]
4000f9c0:	e5846010 	str	r6, [r4, #16]
4000f9c4:	e5847014 	str	r7, [r4, #20]
4000f9c8:	e10fb000 	mrs	fp, CPSR
4000f9cc:	e38b0080 	orr	r0, fp, #128	; 0x80
4000f9d0:	e58d0008 	str	r0, [sp, #8]
4000f9d4:	e59d0008 	ldr	r0, [sp, #8]
4000f9d8:	e121f000 	msr	CPSR_c, r0
4000f9dc:	e59f0178 	ldr	r0, [pc, #376]	; 4000fb5c <_tx_timer_create+0x1d0>
4000f9e0:	e5840000 	str	r0, [r4]
4000f9e4:	e59f0174 	ldr	r0, [pc, #372]	; 4000fb60 <_tx_timer_create+0x1d4>
4000f9e8:	e5900000 	ldr	r0, [r0]
4000f9ec:	e3500000 	cmp	r0, #0
4000f9f0:	0a00000e 	beq	4000fa30 <_tx_timer_create+0xa4>
4000f9f4:	e59f0164 	ldr	r0, [pc, #356]	; 4000fb60 <_tx_timer_create+0x1d4>
4000f9f8:	e5900000 	ldr	r0, [r0]
4000f9fc:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fa00:	e58d0004 	str	r0, [sp, #4]
4000fa04:	e59f0154 	ldr	r0, [pc, #340]	; 4000fb60 <_tx_timer_create+0x1d4>
4000fa08:	e5900000 	ldr	r0, [r0]
4000fa0c:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fa10:	e59d0004 	ldr	r0, [sp, #4]
4000fa14:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fa18:	e59d0004 	ldr	r0, [sp, #4]
4000fa1c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fa20:	e59f0138 	ldr	r0, [pc, #312]	; 4000fb60 <_tx_timer_create+0x1d4>
4000fa24:	e5900000 	ldr	r0, [r0]
4000fa28:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fa2c:	ea000003 	b	4000fa40 <_tx_timer_create+0xb4>
4000fa30:	e59f0128 	ldr	r0, [pc, #296]	; 4000fb60 <_tx_timer_create+0x1d4>
4000fa34:	e5804000 	str	r4, [r0]
4000fa38:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fa3c:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fa40:	e59f011c 	ldr	r0, [pc, #284]	; 4000fb64 <_tx_timer_create+0x1d8>
4000fa44:	e5900000 	ldr	r0, [r0]
4000fa48:	e2800001 	add	r0, r0, #1
4000fa4c:	e59f1110 	ldr	r1, [pc, #272]	; 4000fb64 <_tx_timer_create+0x1d8>
4000fa50:	e5810000 	str	r0, [r1]
4000fa54:	e1a03008 	mov	r3, r8
4000fa58:	e1a02005 	mov	r2, r5
4000fa5c:	e1a01004 	mov	r1, r4
4000fa60:	e3a00002 	mov	r0, #2
4000fa64:	e58d9000 	str	r9, [sp]
4000fa68:	eb00011b 	bl	4000fedc <_tx_trace_object_register>
4000fa6c:	e59f10f4 	ldr	r1, [pc, #244]	; 4000fb68 <_tx_timer_create+0x1dc>
4000fa70:	e5910000 	ldr	r0, [r1]
4000fa74:	e3500000 	cmp	r0, #0
4000fa78:	0a000030 	beq	4000fb40 <_tx_timer_create+0x1b4>
4000fa7c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fb6c <_tx_timer_create+0x1e0>
4000fa80:	e5911000 	ldr	r1, [r1]
4000fa84:	e2811001 	add	r1, r1, #1
4000fa88:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fb6c <_tx_timer_create+0x1e0>
4000fa8c:	e5821000 	str	r1, [r2]
4000fa90:	e580100c 	str	r1, [r0, #12]
4000fa94:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fb70 <_tx_timer_create+0x1e4>
4000fa98:	e5911000 	ldr	r1, [r1]
4000fa9c:	e3510000 	cmp	r1, #0
4000faa0:	1a000006 	bne	4000fac0 <_tx_timer_create+0x134>
4000faa4:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fb74 <_tx_timer_create+0x1e8>
4000faa8:	e5911000 	ldr	r1, [r1]
4000faac:	e5801000 	str	r1, [r0]
4000fab0:	e5901000 	ldr	r1, [r0]
4000fab4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fab8:	e5801004 	str	r1, [r0, #4]
4000fabc:	ea00000d 	b	4000faf8 <_tx_timer_create+0x16c>
4000fac0:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fb70 <_tx_timer_create+0x1e4>
4000fac4:	e5911000 	ldr	r1, [r1]
4000fac8:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fb78 <_tx_timer_create+0x1ec>
4000facc:	e1510002 	cmp	r1, r2
4000fad0:	2a000004 	bcs	4000fae8 <_tx_timer_create+0x15c>
4000fad4:	e3e01000 	mvn	r1, #0
4000fad8:	e5801000 	str	r1, [r0]
4000fadc:	e3a01000 	mov	r1, #0
4000fae0:	e5801004 	str	r1, [r0, #4]
4000fae4:	ea000003 	b	4000faf8 <_tx_timer_create+0x16c>
4000fae8:	e59f1088 	ldr	r1, [pc, #136]	; 4000fb78 <_tx_timer_create+0x1ec>
4000faec:	e5801000 	str	r1, [r0]
4000faf0:	e3a01000 	mov	r1, #0
4000faf4:	e5801004 	str	r1, [r0, #4]
4000faf8:	e3a0107c 	mov	r1, #124	; 0x7c
4000fafc:	e5801008 	str	r1, [r0, #8]
4000fb00:	e5804010 	str	r4, [r0, #16]
4000fb04:	e5808014 	str	r8, [r0, #20]
4000fb08:	e5809018 	str	r9, [r0, #24]
4000fb0c:	e580a01c 	str	sl, [r0, #28]
4000fb10:	e2800020 	add	r0, r0, #32
4000fb14:	e59f1060 	ldr	r1, [pc, #96]	; 4000fb7c <_tx_timer_create+0x1f0>
4000fb18:	e5911000 	ldr	r1, [r1]
4000fb1c:	e1500001 	cmp	r0, r1
4000fb20:	3a000001 	bcc	4000fb2c <_tx_timer_create+0x1a0>
4000fb24:	e59f1054 	ldr	r1, [pc, #84]	; 4000fb80 <_tx_timer_create+0x1f4>
4000fb28:	e5910000 	ldr	r0, [r1]
4000fb2c:	e59f1034 	ldr	r1, [pc, #52]	; 4000fb68 <_tx_timer_create+0x1dc>
4000fb30:	e5810000 	str	r0, [r1]
4000fb34:	e59f1048 	ldr	r1, [pc, #72]	; 4000fb84 <_tx_timer_create+0x1f8>
4000fb38:	e5911000 	ldr	r1, [r1]
4000fb3c:	e5810020 	str	r0, [r1, #32]
4000fb40:	e121f00b 	msr	CPSR_c, fp
4000fb44:	e35a0000 	cmp	sl, #0
4000fb48:	0a000001 	beq	4000fb54 <_tx_timer_create+0x1c8>
4000fb4c:	e2840008 	add	r0, r4, #8
4000fb50:	ebffe600 	bl	40009358 <_tx_timer_system_activate>
4000fb54:	e3a00000 	mov	r0, #0
4000fb58:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000fb5c:	4154494d 	.word	0x4154494d
4000fb60:	40030e78 	.word	0x40030e78
4000fb64:	40030e7c 	.word	0x40030e7c
4000fb68:	40030ea0 	.word	0x40030ea0
4000fb6c:	40030ea4 	.word	0x40030ea4
4000fb70:	40030e2c 	.word	0x40030e2c
4000fb74:	40030e34 	.word	0x40030e34
4000fb78:	f0f0f0f0 	.word	0xf0f0f0f0
4000fb7c:	40030e9c 	.word	0x40030e9c
4000fb80:	40030e98 	.word	0x40030e98
4000fb84:	40030e8c 	.word	0x40030e8c

4000fb88 <_tx_timer_deactivate>:
4000fb88:	e92d4018 	push	{r3, r4, lr}
4000fb8c:	e1a01000 	mov	r1, r0
4000fb90:	e281c008 	add	ip, r1, #8
4000fb94:	e10f2000 	mrs	r2, CPSR
4000fb98:	e3823080 	orr	r3, r2, #128	; 0x80
4000fb9c:	e121f003 	msr	CPSR_c, r3
4000fba0:	e59fe228 	ldr	lr, [pc, #552]	; 4000fdd0 <_tx_timer_deactivate+0x248>
4000fba4:	e59e0000 	ldr	r0, [lr]
4000fba8:	e3500000 	cmp	r0, #0
4000fbac:	0a000031 	beq	4000fc78 <_tx_timer_deactivate+0xf0>
4000fbb0:	e59fe21c 	ldr	lr, [pc, #540]	; 4000fdd4 <_tx_timer_deactivate+0x24c>
4000fbb4:	e59ee000 	ldr	lr, [lr]
4000fbb8:	e28ee001 	add	lr, lr, #1
4000fbbc:	e59f4210 	ldr	r4, [pc, #528]	; 4000fdd4 <_tx_timer_deactivate+0x24c>
4000fbc0:	e584e000 	str	lr, [r4]
4000fbc4:	e580e00c 	str	lr, [r0, #12]
4000fbc8:	e59fe208 	ldr	lr, [pc, #520]	; 4000fdd8 <_tx_timer_deactivate+0x250>
4000fbcc:	e59ee000 	ldr	lr, [lr]
4000fbd0:	e35e0000 	cmp	lr, #0
4000fbd4:	1a000006 	bne	4000fbf4 <_tx_timer_deactivate+0x6c>
4000fbd8:	e59fe1fc 	ldr	lr, [pc, #508]	; 4000fddc <_tx_timer_deactivate+0x254>
4000fbdc:	e59ee000 	ldr	lr, [lr]
4000fbe0:	e580e000 	str	lr, [r0]
4000fbe4:	e590e000 	ldr	lr, [r0]
4000fbe8:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000fbec:	e580e004 	str	lr, [r0, #4]
4000fbf0:	ea00000d 	b	4000fc2c <_tx_timer_deactivate+0xa4>
4000fbf4:	e59fe1dc 	ldr	lr, [pc, #476]	; 4000fdd8 <_tx_timer_deactivate+0x250>
4000fbf8:	e59ee000 	ldr	lr, [lr]
4000fbfc:	e59f41dc 	ldr	r4, [pc, #476]	; 4000fde0 <_tx_timer_deactivate+0x258>
4000fc00:	e15e0004 	cmp	lr, r4
4000fc04:	2a000004 	bcs	4000fc1c <_tx_timer_deactivate+0x94>
4000fc08:	e3e0e000 	mvn	lr, #0
4000fc0c:	e580e000 	str	lr, [r0]
4000fc10:	e3a0e000 	mov	lr, #0
4000fc14:	e580e004 	str	lr, [r0, #4]
4000fc18:	ea000003 	b	4000fc2c <_tx_timer_deactivate+0xa4>
4000fc1c:	e59fe1bc 	ldr	lr, [pc, #444]	; 4000fde0 <_tx_timer_deactivate+0x258>
4000fc20:	e580e000 	str	lr, [r0]
4000fc24:	e3a0e000 	mov	lr, #0
4000fc28:	e580e004 	str	lr, [r0, #4]
4000fc2c:	e3a0e07d 	mov	lr, #125	; 0x7d
4000fc30:	e580e008 	str	lr, [r0, #8]
4000fc34:	e5801010 	str	r1, [r0, #16]
4000fc38:	e580d014 	str	sp, [r0, #20]
4000fc3c:	e3a0e000 	mov	lr, #0
4000fc40:	e580e018 	str	lr, [r0, #24]
4000fc44:	e580e01c 	str	lr, [r0, #28]
4000fc48:	e2800020 	add	r0, r0, #32
4000fc4c:	e59fe190 	ldr	lr, [pc, #400]	; 4000fde4 <_tx_timer_deactivate+0x25c>
4000fc50:	e59ee000 	ldr	lr, [lr]
4000fc54:	e150000e 	cmp	r0, lr
4000fc58:	3a000001 	bcc	4000fc64 <_tx_timer_deactivate+0xdc>
4000fc5c:	e59fe184 	ldr	lr, [pc, #388]	; 4000fde8 <_tx_timer_deactivate+0x260>
4000fc60:	e59e0000 	ldr	r0, [lr]
4000fc64:	e59fe164 	ldr	lr, [pc, #356]	; 4000fdd0 <_tx_timer_deactivate+0x248>
4000fc68:	e58e0000 	str	r0, [lr]
4000fc6c:	e59fe178 	ldr	lr, [pc, #376]	; 4000fdec <_tx_timer_deactivate+0x264>
4000fc70:	e59ee000 	ldr	lr, [lr]
4000fc74:	e58e0020 	str	r0, [lr, #32]
4000fc78:	e59fe170 	ldr	lr, [pc, #368]	; 4000fdf0 <_tx_timer_deactivate+0x268>
4000fc7c:	e59c0018 	ldr	r0, [ip, #24]
4000fc80:	e59ee000 	ldr	lr, [lr]
4000fc84:	e150000e 	cmp	r0, lr
4000fc88:	3a00002b 	bcc	4000fd3c <_tx_timer_deactivate+0x1b4>
4000fc8c:	e59fe160 	ldr	lr, [pc, #352]	; 4000fdf4 <_tx_timer_deactivate+0x26c>
4000fc90:	e59c0018 	ldr	r0, [ip, #24]
4000fc94:	e59ee000 	ldr	lr, [lr]
4000fc98:	e150000e 	cmp	r0, lr
4000fc9c:	2a000026 	bcs	4000fd3c <_tx_timer_deactivate+0x1b4>
4000fca0:	e59fe150 	ldr	lr, [pc, #336]	; 4000fdf8 <_tx_timer_deactivate+0x270>
4000fca4:	e59c0018 	ldr	r0, [ip, #24]
4000fca8:	e59ee000 	ldr	lr, [lr]
4000fcac:	e150000e 	cmp	r0, lr
4000fcb0:	3a000007 	bcc	4000fcd4 <_tx_timer_deactivate+0x14c>
4000fcb4:	e59fe13c 	ldr	lr, [pc, #316]	; 4000fdf8 <_tx_timer_deactivate+0x270>
4000fcb8:	e59c0018 	ldr	r0, [ip, #24]
4000fcbc:	e59ee000 	ldr	lr, [lr]
4000fcc0:	e040000e 	sub	r0, r0, lr
4000fcc4:	e3a0e001 	mov	lr, #1
4000fcc8:	e08e0140 	add	r0, lr, r0, asr #2
4000fccc:	e58d0000 	str	r0, [sp]
4000fcd0:	ea00000e 	b	4000fd10 <_tx_timer_deactivate+0x188>
4000fcd4:	e59fe114 	ldr	lr, [pc, #276]	; 4000fdf0 <_tx_timer_deactivate+0x268>
4000fcd8:	e59c0018 	ldr	r0, [ip, #24]
4000fcdc:	e59ee000 	ldr	lr, [lr]
4000fce0:	e040000e 	sub	r0, r0, lr
4000fce4:	e1a00140 	asr	r0, r0, #2
4000fce8:	e58d0000 	str	r0, [sp]
4000fcec:	e59f0100 	ldr	r0, [pc, #256]	; 4000fdf4 <_tx_timer_deactivate+0x26c>
4000fcf0:	e5900000 	ldr	r0, [r0]
4000fcf4:	e59fe0fc 	ldr	lr, [pc, #252]	; 4000fdf8 <_tx_timer_deactivate+0x270>
4000fcf8:	e59ee000 	ldr	lr, [lr]
4000fcfc:	e040000e 	sub	r0, r0, lr
4000fd00:	e59de000 	ldr	lr, [sp]
4000fd04:	e08e0140 	add	r0, lr, r0, asr #2
4000fd08:	e2800001 	add	r0, r0, #1
4000fd0c:	e58d0000 	str	r0, [sp]
4000fd10:	e59c0000 	ldr	r0, [ip]
4000fd14:	e3500020 	cmp	r0, #32
4000fd18:	9a000005 	bls	4000fd34 <_tx_timer_deactivate+0x1ac>
4000fd1c:	e59c0000 	ldr	r0, [ip]
4000fd20:	e2400020 	sub	r0, r0, #32
4000fd24:	e59de000 	ldr	lr, [sp]
4000fd28:	e080000e 	add	r0, r0, lr
4000fd2c:	e58c0000 	str	r0, [ip]
4000fd30:	ea000001 	b	4000fd3c <_tx_timer_deactivate+0x1b4>
4000fd34:	e59d0000 	ldr	r0, [sp]
4000fd38:	e58c0000 	str	r0, [ip]
4000fd3c:	e59c0018 	ldr	r0, [ip, #24]
4000fd40:	e3500000 	cmp	r0, #0
4000fd44:	0a00001e 	beq	4000fdc4 <_tx_timer_deactivate+0x23c>
4000fd48:	e59c0010 	ldr	r0, [ip, #16]
4000fd4c:	e150000c 	cmp	r0, ip
4000fd50:	1a000009 	bne	4000fd7c <_tx_timer_deactivate+0x1f4>
4000fd54:	e59c0018 	ldr	r0, [ip, #24]
4000fd58:	e5900000 	ldr	r0, [r0]
4000fd5c:	e150000c 	cmp	r0, ip
4000fd60:	1a000002 	bne	4000fd70 <_tx_timer_deactivate+0x1e8>
4000fd64:	e3a00000 	mov	r0, #0
4000fd68:	e59ce018 	ldr	lr, [ip, #24]
4000fd6c:	e58e0000 	str	r0, [lr]
4000fd70:	e3a00000 	mov	r0, #0
4000fd74:	e58c0018 	str	r0, [ip, #24]
4000fd78:	ea000011 	b	4000fdc4 <_tx_timer_deactivate+0x23c>
4000fd7c:	e59c0014 	ldr	r0, [ip, #20]
4000fd80:	e59ce010 	ldr	lr, [ip, #16]
4000fd84:	e58e0014 	str	r0, [lr, #20]
4000fd88:	e59c0010 	ldr	r0, [ip, #16]
4000fd8c:	e59ce014 	ldr	lr, [ip, #20]
4000fd90:	e58e0010 	str	r0, [lr, #16]
4000fd94:	e59c0018 	ldr	r0, [ip, #24]
4000fd98:	e5900000 	ldr	r0, [r0]
4000fd9c:	e150000c 	cmp	r0, ip
4000fda0:	1a000005 	bne	4000fdbc <_tx_timer_deactivate+0x234>
4000fda4:	e59c0018 	ldr	r0, [ip, #24]
4000fda8:	e59ce010 	ldr	lr, [ip, #16]
4000fdac:	e58e0018 	str	r0, [lr, #24]
4000fdb0:	e59c0010 	ldr	r0, [ip, #16]
4000fdb4:	e59ce018 	ldr	lr, [ip, #24]
4000fdb8:	e58e0000 	str	r0, [lr]
4000fdbc:	e3a00000 	mov	r0, #0
4000fdc0:	e58c0018 	str	r0, [ip, #24]
4000fdc4:	e121f002 	msr	CPSR_c, r2
4000fdc8:	e3a00000 	mov	r0, #0
4000fdcc:	e8bd8018 	pop	{r3, r4, pc}
4000fdd0:	40030ea0 	.word	0x40030ea0
4000fdd4:	40030ea4 	.word	0x40030ea4
4000fdd8:	40030e2c 	.word	0x40030e2c
4000fddc:	40030e34 	.word	0x40030e34
4000fde0:	f0f0f0f0 	.word	0xf0f0f0f0
4000fde4:	40030e9c 	.word	0x40030e9c
4000fde8:	40030e98 	.word	0x40030e98
4000fdec:	40030e8c 	.word	0x40030e8c
4000fdf0:	40030e68 	.word	0x40030e68
4000fdf4:	40030e6c 	.word	0x40030e6c
4000fdf8:	40030e70 	.word	0x40030e70

4000fdfc <_tx_timer_expiration_process>:
4000fdfc:	e92d4070 	push	{r4, r5, r6, lr}
4000fe00:	e10f4000 	mrs	r4, CPSR
4000fe04:	e3845080 	orr	r5, r4, #128	; 0x80
4000fe08:	e121f005 	msr	CPSR_c, r5
4000fe0c:	e59f001c 	ldr	r0, [pc, #28]	; 4000fe30 <_tx_timer_expiration_process+0x34>
4000fe10:	e5900000 	ldr	r0, [r0]
4000fe14:	e2800001 	add	r0, r0, #1
4000fe18:	e59f1010 	ldr	r1, [pc, #16]	; 4000fe30 <_tx_timer_expiration_process+0x34>
4000fe1c:	e5810000 	str	r0, [r1]
4000fe20:	e121f004 	msr	CPSR_c, r4
4000fe24:	e59f0008 	ldr	r0, [pc, #8]	; 4000fe34 <_tx_timer_expiration_process+0x38>
4000fe28:	ebfffcd5 	bl	4000f184 <_tx_thread_system_resume>
4000fe2c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fe30:	40030e50 	.word	0x40030e50
4000fe34:	40032974 	.word	0x40032974

4000fe38 <_tx_timer_system_deactivate>:
4000fe38:	e1a01000 	mov	r1, r0
4000fe3c:	e10f2000 	mrs	r2, CPSR
4000fe40:	e3823080 	orr	r3, r2, #128	; 0x80
4000fe44:	e121f003 	msr	CPSR_c, r3
4000fe48:	e5910018 	ldr	r0, [r1, #24]
4000fe4c:	e3500000 	cmp	r0, #0
4000fe50:	0a00001e 	beq	4000fed0 <_tx_timer_system_deactivate+0x98>
4000fe54:	e5910010 	ldr	r0, [r1, #16]
4000fe58:	e1500001 	cmp	r0, r1
4000fe5c:	1a000009 	bne	4000fe88 <_tx_timer_system_deactivate+0x50>
4000fe60:	e5910018 	ldr	r0, [r1, #24]
4000fe64:	e5900000 	ldr	r0, [r0]
4000fe68:	e1500001 	cmp	r0, r1
4000fe6c:	1a000002 	bne	4000fe7c <_tx_timer_system_deactivate+0x44>
4000fe70:	e3a00000 	mov	r0, #0
4000fe74:	e591c018 	ldr	ip, [r1, #24]
4000fe78:	e58c0000 	str	r0, [ip]
4000fe7c:	e3a00000 	mov	r0, #0
4000fe80:	e5810018 	str	r0, [r1, #24]
4000fe84:	ea000011 	b	4000fed0 <_tx_timer_system_deactivate+0x98>
4000fe88:	e5910014 	ldr	r0, [r1, #20]
4000fe8c:	e591c010 	ldr	ip, [r1, #16]
4000fe90:	e58c0014 	str	r0, [ip, #20]
4000fe94:	e5910010 	ldr	r0, [r1, #16]
4000fe98:	e591c014 	ldr	ip, [r1, #20]
4000fe9c:	e58c0010 	str	r0, [ip, #16]
4000fea0:	e5910018 	ldr	r0, [r1, #24]
4000fea4:	e5900000 	ldr	r0, [r0]
4000fea8:	e1500001 	cmp	r0, r1
4000feac:	1a000005 	bne	4000fec8 <_tx_timer_system_deactivate+0x90>
4000feb0:	e5910018 	ldr	r0, [r1, #24]
4000feb4:	e591c010 	ldr	ip, [r1, #16]
4000feb8:	e58c0018 	str	r0, [ip, #24]
4000febc:	e5910010 	ldr	r0, [r1, #16]
4000fec0:	e591c018 	ldr	ip, [r1, #24]
4000fec4:	e58c0000 	str	r0, [ip]
4000fec8:	e3a00000 	mov	r0, #0
4000fecc:	e5810018 	str	r0, [r1, #24]
4000fed0:	e121f002 	msr	CPSR_c, r2
4000fed4:	e3a00000 	mov	r0, #0
4000fed8:	e12fff1e 	bx	lr

4000fedc <_tx_trace_object_register>:
4000fedc:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000fee0:	e1a04000 	mov	r4, r0
4000fee4:	e1a05001 	mov	r5, r1
4000fee8:	e1a06002 	mov	r6, r2
4000feec:	e1a07003 	mov	r7, r3
4000fef0:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
4000fef4:	e59f0184 	ldr	r0, [pc, #388]	; 40010080 <_tx_trace_object_register+0x1a4>
4000fef8:	e5900000 	ldr	r0, [r0]
4000fefc:	e3500000 	cmp	r0, #0
4000ff00:	1a000000 	bne	4000ff08 <_tx_trace_object_register+0x2c>
4000ff04:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000ff08:	e59f1174 	ldr	r1, [pc, #372]	; 40010084 <_tx_trace_object_register+0x1a8>
4000ff0c:	e5911000 	ldr	r1, [r1]
4000ff10:	e59f2168 	ldr	r2, [pc, #360]	; 40010080 <_tx_trace_object_register+0x1a4>
4000ff14:	e5922000 	ldr	r2, [r2]
4000ff18:	e0410002 	sub	r0, r1, r2
4000ff1c:	e3a01030 	mov	r1, #48	; 0x30
4000ff20:	eb0002bd 	bl	40010a1c <__aeabi_idivmod>
4000ff24:	e1a0a000 	mov	sl, r0
4000ff28:	e1a0b00a 	mov	fp, sl
4000ff2c:	e3a09000 	mov	r9, #0
4000ff30:	ea00001b 	b	4000ffa4 <_tx_trace_object_register+0xc8>
4000ff34:	e0890089 	add	r0, r9, r9, lsl #1
4000ff38:	e59f1140 	ldr	r1, [pc, #320]	; 40010080 <_tx_trace_object_register+0x1a4>
4000ff3c:	e5911000 	ldr	r1, [r1]
4000ff40:	e0810200 	add	r0, r1, r0, lsl #4
4000ff44:	e5900004 	ldr	r0, [r0, #4]
4000ff48:	e1500005 	cmp	r0, r5
4000ff4c:	1a000001 	bne	4000ff58 <_tx_trace_object_register+0x7c>
4000ff50:	e1a0b009 	mov	fp, r9
4000ff54:	ea000014 	b	4000ffac <_tx_trace_object_register+0xd0>
4000ff58:	e0890089 	add	r0, r9, r9, lsl #1
4000ff5c:	e59f111c 	ldr	r1, [pc, #284]	; 40010080 <_tx_trace_object_register+0x1a4>
4000ff60:	e5911000 	ldr	r1, [r1]
4000ff64:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
4000ff68:	e3500000 	cmp	r0, #0
4000ff6c:	0a00000b 	beq	4000ffa0 <_tx_trace_object_register+0xc4>
4000ff70:	e15b000a 	cmp	fp, sl
4000ff74:	1a000001 	bne	4000ff80 <_tx_trace_object_register+0xa4>
4000ff78:	e1a0b009 	mov	fp, r9
4000ff7c:	ea000007 	b	4000ffa0 <_tx_trace_object_register+0xc4>
4000ff80:	e08b008b 	add	r0, fp, fp, lsl #1
4000ff84:	e59f10f4 	ldr	r1, [pc, #244]	; 40010080 <_tx_trace_object_register+0x1a4>
4000ff88:	e5911000 	ldr	r1, [r1]
4000ff8c:	e0810200 	add	r0, r1, r0, lsl #4
4000ff90:	e5d00001 	ldrb	r0, [r0, #1]
4000ff94:	e3500000 	cmp	r0, #0
4000ff98:	0a000000 	beq	4000ffa0 <_tx_trace_object_register+0xc4>
4000ff9c:	e1a0b009 	mov	fp, r9
4000ffa0:	e2899001 	add	r9, r9, #1
4000ffa4:	e159000a 	cmp	r9, sl
4000ffa8:	3affffe1 	bcc	4000ff34 <_tx_trace_object_register+0x58>
4000ffac:	e1a00000 	nop			; (mov r0, r0)
4000ffb0:	e15b000a 	cmp	fp, sl
4000ffb4:	2a000030 	bcs	4001007c <_tx_trace_object_register+0x1a0>
4000ffb8:	e3a00000 	mov	r0, #0
4000ffbc:	e08b108b 	add	r1, fp, fp, lsl #1
4000ffc0:	e59f20b8 	ldr	r2, [pc, #184]	; 40010080 <_tx_trace_object_register+0x1a4>
4000ffc4:	e5922000 	ldr	r2, [r2]
4000ffc8:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4000ffcc:	e08b008b 	add	r0, fp, fp, lsl #1
4000ffd0:	e59f10a8 	ldr	r1, [pc, #168]	; 40010080 <_tx_trace_object_register+0x1a4>
4000ffd4:	e5911000 	ldr	r1, [r1]
4000ffd8:	e0810200 	add	r0, r1, r0, lsl #4
4000ffdc:	e5c04001 	strb	r4, [r0, #1]
4000ffe0:	e08b008b 	add	r0, fp, fp, lsl #1
4000ffe4:	e59f1094 	ldr	r1, [pc, #148]	; 40010080 <_tx_trace_object_register+0x1a4>
4000ffe8:	e5911000 	ldr	r1, [r1]
4000ffec:	e0810200 	add	r0, r1, r0, lsl #4
4000fff0:	e5805004 	str	r5, [r0, #4]
4000fff4:	e08b008b 	add	r0, fp, fp, lsl #1
4000fff8:	e59f1080 	ldr	r1, [pc, #128]	; 40010080 <_tx_trace_object_register+0x1a4>
4000fffc:	e5911000 	ldr	r1, [r1]
40010000:	e0810200 	add	r0, r1, r0, lsl #4
40010004:	e5807008 	str	r7, [r0, #8]
40010008:	e08b008b 	add	r0, fp, fp, lsl #1
4001000c:	e59f106c 	ldr	r1, [pc, #108]	; 40010080 <_tx_trace_object_register+0x1a4>
40010010:	e5911000 	ldr	r1, [r1]
40010014:	e0810200 	add	r0, r1, r0, lsl #4
40010018:	e580800c 	str	r8, [r0, #12]
4001001c:	e3a09000 	mov	r9, #0
40010020:	ea00000b 	b	40010054 <_tx_trace_object_register+0x178>
40010024:	e7d60009 	ldrb	r0, [r6, r9]
40010028:	e08b108b 	add	r1, fp, fp, lsl #1
4001002c:	e59f204c 	ldr	r2, [pc, #76]	; 40010080 <_tx_trace_object_register+0x1a4>
40010030:	e5922000 	ldr	r2, [r2]
40010034:	e0821201 	add	r1, r2, r1, lsl #4
40010038:	e2811010 	add	r1, r1, #16
4001003c:	e7c10009 	strb	r0, [r1, r9]
40010040:	e7d60009 	ldrb	r0, [r6, r9]
40010044:	e3500000 	cmp	r0, #0
40010048:	1a000000 	bne	40010050 <_tx_trace_object_register+0x174>
4001004c:	ea000002 	b	4001005c <_tx_trace_object_register+0x180>
40010050:	e2899001 	add	r9, r9, #1
40010054:	e359001f 	cmp	r9, #31
40010058:	3afffff1 	bcc	40010024 <_tx_trace_object_register+0x148>
4001005c:	e1a00000 	nop			; (mov r0, r0)
40010060:	e3a00000 	mov	r0, #0
40010064:	e08b108b 	add	r1, fp, fp, lsl #1
40010068:	e59f2010 	ldr	r2, [pc, #16]	; 40010080 <_tx_trace_object_register+0x1a4>
4001006c:	e5922000 	ldr	r2, [r2]
40010070:	e0821201 	add	r1, r2, r1, lsl #4
40010074:	e2811010 	add	r1, r1, #16
40010078:	e7c10009 	strb	r0, [r1, r9]
4001007c:	eaffffa0 	b	4000ff04 <_tx_trace_object_register+0x28>
40010080:	40030e90 	.word	0x40030e90
40010084:	40030e94 	.word	0x40030e94

40010088 <_tx_trace_object_unregister>:
40010088:	e92d4070 	push	{r4, r5, r6, lr}
4001008c:	e1a04000 	mov	r4, r0
40010090:	e59f007c 	ldr	r0, [pc, #124]	; 40010114 <_tx_trace_object_unregister+0x8c>
40010094:	e5900000 	ldr	r0, [r0]
40010098:	e3500000 	cmp	r0, #0
4001009c:	1a000000 	bne	400100a4 <_tx_trace_object_unregister+0x1c>
400100a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400100a4:	e59f106c 	ldr	r1, [pc, #108]	; 40010118 <_tx_trace_object_unregister+0x90>
400100a8:	e5911000 	ldr	r1, [r1]
400100ac:	e59f2060 	ldr	r2, [pc, #96]	; 40010114 <_tx_trace_object_unregister+0x8c>
400100b0:	e5922000 	ldr	r2, [r2]
400100b4:	e0410002 	sub	r0, r1, r2
400100b8:	e3a01030 	mov	r1, #48	; 0x30
400100bc:	eb000256 	bl	40010a1c <__aeabi_idivmod>
400100c0:	e1a05000 	mov	r5, r0
400100c4:	e3a06000 	mov	r6, #0
400100c8:	ea00000d 	b	40010104 <_tx_trace_object_unregister+0x7c>
400100cc:	e0860086 	add	r0, r6, r6, lsl #1
400100d0:	e59f103c 	ldr	r1, [pc, #60]	; 40010114 <_tx_trace_object_unregister+0x8c>
400100d4:	e5911000 	ldr	r1, [r1]
400100d8:	e0810200 	add	r0, r1, r0, lsl #4
400100dc:	e5900004 	ldr	r0, [r0, #4]
400100e0:	e1500004 	cmp	r0, r4
400100e4:	1a000005 	bne	40010100 <_tx_trace_object_unregister+0x78>
400100e8:	e3a00001 	mov	r0, #1
400100ec:	e0861086 	add	r1, r6, r6, lsl #1
400100f0:	e59f201c 	ldr	r2, [pc, #28]	; 40010114 <_tx_trace_object_unregister+0x8c>
400100f4:	e5922000 	ldr	r2, [r2]
400100f8:	e7c20201 	strb	r0, [r2, r1, lsl #4]
400100fc:	ea000002 	b	4001010c <_tx_trace_object_unregister+0x84>
40010100:	e2866001 	add	r6, r6, #1
40010104:	e1560005 	cmp	r6, r5
40010108:	3affffef 	bcc	400100cc <_tx_trace_object_unregister+0x44>
4001010c:	e1a00000 	nop			; (mov r0, r0)
40010110:	eaffffe2 	b	400100a0 <_tx_trace_object_unregister+0x18>
40010114:	40030e90 	.word	0x40030e90
40010118:	40030e94 	.word	0x40030e94

4001011c <_tx_thread_stack_build>:
4001011c:	e5902010 	ldr	r2, [r0, #16]
40010120:	e3c22007 	bic	r2, r2, #7
40010124:	e242204c 	sub	r2, r2, #76	; 0x4c
40010128:	e3a03001 	mov	r3, #1
4001012c:	e5823000 	str	r3, [r2]
40010130:	e3a03000 	mov	r3, #0
40010134:	e5823008 	str	r3, [r2, #8]
40010138:	e582300c 	str	r3, [r2, #12]
4001013c:	e5823010 	str	r3, [r2, #16]
40010140:	e5823014 	str	r3, [r2, #20]
40010144:	e5823018 	str	r3, [r2, #24]
40010148:	e582301c 	str	r3, [r2, #28]
4001014c:	e5823020 	str	r3, [r2, #32]
40010150:	e5823024 	str	r3, [r2, #36]	; 0x24
40010154:	e5823028 	str	r3, [r2, #40]	; 0x28
40010158:	e582302c 	str	r3, [r2, #44]	; 0x2c
4001015c:	e590300c 	ldr	r3, [r0, #12]
40010160:	e5823030 	str	r3, [r2, #48]	; 0x30
40010164:	e3a03000 	mov	r3, #0
40010168:	e5823034 	str	r3, [r2, #52]	; 0x34
4001016c:	e5823038 	str	r3, [r2, #56]	; 0x38
40010170:	e582303c 	str	r3, [r2, #60]	; 0x3c
40010174:	e5821040 	str	r1, [r2, #64]	; 0x40
40010178:	e5823044 	str	r3, [r2, #68]	; 0x44
4001017c:	e10f1000 	mrs	r1, CPSR
40010180:	e3c1109f 	bic	r1, r1, #159	; 0x9f
40010184:	e3813013 	orr	r3, r1, #19
40010188:	e5823004 	str	r3, [r2, #4]
4001018c:	e5802008 	str	r2, [r0, #8]
40010190:	e12fff1e 	bx	lr

40010194 <_tx_event_flags_cleanup>:
40010194:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010198:	e1a04000 	mov	r4, r0
4001019c:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400101a0:	e10f5000 	mrs	r5, CPSR
400101a4:	e3856080 	orr	r6, r5, #128	; 0x80
400101a8:	e121f006 	msr	CPSR_c, r6
400101ac:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400101b0:	e3500000 	cmp	r0, #0
400101b4:	0a000026 	beq	40010254 <_tx_event_flags_cleanup+0xc0>
400101b8:	e3570000 	cmp	r7, #0
400101bc:	0a000024 	beq	40010254 <_tx_event_flags_cleanup+0xc0>
400101c0:	e5970000 	ldr	r0, [r7]
400101c4:	e59f1090 	ldr	r1, [pc, #144]	; 4001025c <_tx_event_flags_cleanup+0xc8>
400101c8:	e1500001 	cmp	r0, r1
400101cc:	1a000020 	bne	40010254 <_tx_event_flags_cleanup+0xc0>
400101d0:	e3a00000 	mov	r0, #0
400101d4:	e5840068 	str	r0, [r4, #104]	; 0x68
400101d8:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400101dc:	e1500004 	cmp	r0, r4
400101e0:	1a000002 	bne	400101f0 <_tx_event_flags_cleanup+0x5c>
400101e4:	e3a00000 	mov	r0, #0
400101e8:	e5870010 	str	r0, [r7, #16]
400101ec:	ea000007 	b	40010210 <_tx_event_flags_cleanup+0x7c>
400101f0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400101f4:	e5870010 	str	r0, [r7, #16]
400101f8:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400101fc:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010200:	e5810074 	str	r0, [r1, #116]	; 0x74
40010204:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010208:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4001020c:	e5810070 	str	r0, [r1, #112]	; 0x70
40010210:	e5970014 	ldr	r0, [r7, #20]
40010214:	e2400001 	sub	r0, r0, #1
40010218:	e5870014 	str	r0, [r7, #20]
4001021c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010220:	e3500007 	cmp	r0, #7
40010224:	1a00000a 	bne	40010254 <_tx_event_flags_cleanup+0xc0>
40010228:	e3a00007 	mov	r0, #7
4001022c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010230:	e59f0028 	ldr	r0, [pc, #40]	; 40010260 <_tx_event_flags_cleanup+0xcc>
40010234:	e5900000 	ldr	r0, [r0]
40010238:	e2800001 	add	r0, r0, #1
4001023c:	e59f101c 	ldr	r1, [pc, #28]	; 40010260 <_tx_event_flags_cleanup+0xcc>
40010240:	e5810000 	str	r0, [r1]
40010244:	e121f005 	msr	CPSR_c, r5
40010248:	e1a00004 	mov	r0, r4
4001024c:	ebfffbcc 	bl	4000f184 <_tx_thread_system_resume>
40010250:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010254:	e121f005 	msr	CPSR_c, r5
40010258:	eafffffc 	b	40010250 <_tx_event_flags_cleanup+0xbc>
4001025c:	4456444e 	.word	0x4456444e
40010260:	40030e50 	.word	0x40030e50

40010264 <_tx_mutex_cleanup>:
40010264:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010268:	e1a04000 	mov	r4, r0
4001026c:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010270:	e10f5000 	mrs	r5, CPSR
40010274:	e3856080 	orr	r6, r5, #128	; 0x80
40010278:	e121f006 	msr	CPSR_c, r6
4001027c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010280:	e3500000 	cmp	r0, #0
40010284:	0a000026 	beq	40010324 <_tx_mutex_cleanup+0xc0>
40010288:	e3570000 	cmp	r7, #0
4001028c:	0a000024 	beq	40010324 <_tx_mutex_cleanup+0xc0>
40010290:	e5970000 	ldr	r0, [r7]
40010294:	e59f1090 	ldr	r1, [pc, #144]	; 4001032c <_tx_mutex_cleanup+0xc8>
40010298:	e1500001 	cmp	r0, r1
4001029c:	1a000020 	bne	40010324 <_tx_mutex_cleanup+0xc0>
400102a0:	e3a00000 	mov	r0, #0
400102a4:	e5840068 	str	r0, [r4, #104]	; 0x68
400102a8:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400102ac:	e1500004 	cmp	r0, r4
400102b0:	1a000002 	bne	400102c0 <_tx_mutex_cleanup+0x5c>
400102b4:	e3a00000 	mov	r0, #0
400102b8:	e587001c 	str	r0, [r7, #28]
400102bc:	ea000007 	b	400102e0 <_tx_mutex_cleanup+0x7c>
400102c0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400102c4:	e587001c 	str	r0, [r7, #28]
400102c8:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400102cc:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400102d0:	e5810074 	str	r0, [r1, #116]	; 0x74
400102d4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400102d8:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400102dc:	e5810070 	str	r0, [r1, #112]	; 0x70
400102e0:	e5970020 	ldr	r0, [r7, #32]
400102e4:	e2400001 	sub	r0, r0, #1
400102e8:	e5870020 	str	r0, [r7, #32]
400102ec:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400102f0:	e350000d 	cmp	r0, #13
400102f4:	1a00000a 	bne	40010324 <_tx_mutex_cleanup+0xc0>
400102f8:	e3a0001d 	mov	r0, #29
400102fc:	e5840084 	str	r0, [r4, #132]	; 0x84
40010300:	e59f0028 	ldr	r0, [pc, #40]	; 40010330 <_tx_mutex_cleanup+0xcc>
40010304:	e5900000 	ldr	r0, [r0]
40010308:	e2800001 	add	r0, r0, #1
4001030c:	e59f101c 	ldr	r1, [pc, #28]	; 40010330 <_tx_mutex_cleanup+0xcc>
40010310:	e5810000 	str	r0, [r1]
40010314:	e121f005 	msr	CPSR_c, r5
40010318:	e1a00004 	mov	r0, r4
4001031c:	ebfffb98 	bl	4000f184 <_tx_thread_system_resume>
40010320:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010324:	e121f005 	msr	CPSR_c, r5
40010328:	eafffffc 	b	40010320 <_tx_mutex_cleanup+0xbc>
4001032c:	4d555445 	.word	0x4d555445
40010330:	40030e50 	.word	0x40030e50

40010334 <_tx_mutex_prioritize>:
40010334:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40010338:	e1a04000 	mov	r4, r0
4001033c:	e10f5000 	mrs	r5, CPSR
40010340:	e3856080 	orr	r6, r5, #128	; 0x80
40010344:	e121f006 	msr	CPSR_c, r6
40010348:	e59f1234 	ldr	r1, [pc, #564]	; 40010584 <_tx_mutex_prioritize+0x250>
4001034c:	e5910000 	ldr	r0, [r1]
40010350:	e3500000 	cmp	r0, #0
40010354:	0a000032 	beq	40010424 <_tx_mutex_prioritize+0xf0>
40010358:	e59f1228 	ldr	r1, [pc, #552]	; 40010588 <_tx_mutex_prioritize+0x254>
4001035c:	e5911000 	ldr	r1, [r1]
40010360:	e2811001 	add	r1, r1, #1
40010364:	e59f221c 	ldr	r2, [pc, #540]	; 40010588 <_tx_mutex_prioritize+0x254>
40010368:	e5821000 	str	r1, [r2]
4001036c:	e580100c 	str	r1, [r0, #12]
40010370:	e59f1214 	ldr	r1, [pc, #532]	; 4001058c <_tx_mutex_prioritize+0x258>
40010374:	e5911000 	ldr	r1, [r1]
40010378:	e3510000 	cmp	r1, #0
4001037c:	1a000006 	bne	4001039c <_tx_mutex_prioritize+0x68>
40010380:	e59f1208 	ldr	r1, [pc, #520]	; 40010590 <_tx_mutex_prioritize+0x25c>
40010384:	e5911000 	ldr	r1, [r1]
40010388:	e5801000 	str	r1, [r0]
4001038c:	e5901000 	ldr	r1, [r0]
40010390:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40010394:	e5801004 	str	r1, [r0, #4]
40010398:	ea00000d 	b	400103d4 <_tx_mutex_prioritize+0xa0>
4001039c:	e59f11e8 	ldr	r1, [pc, #488]	; 4001058c <_tx_mutex_prioritize+0x258>
400103a0:	e5911000 	ldr	r1, [r1]
400103a4:	e59f21e8 	ldr	r2, [pc, #488]	; 40010594 <_tx_mutex_prioritize+0x260>
400103a8:	e1510002 	cmp	r1, r2
400103ac:	2a000004 	bcs	400103c4 <_tx_mutex_prioritize+0x90>
400103b0:	e3e01000 	mvn	r1, #0
400103b4:	e5801000 	str	r1, [r0]
400103b8:	e3a01000 	mov	r1, #0
400103bc:	e5801004 	str	r1, [r0, #4]
400103c0:	ea000003 	b	400103d4 <_tx_mutex_prioritize+0xa0>
400103c4:	e59f11c8 	ldr	r1, [pc, #456]	; 40010594 <_tx_mutex_prioritize+0x260>
400103c8:	e5801000 	str	r1, [r0]
400103cc:	e3a01000 	mov	r1, #0
400103d0:	e5801004 	str	r1, [r0, #4]
400103d4:	e3a01038 	mov	r1, #56	; 0x38
400103d8:	e5801008 	str	r1, [r0, #8]
400103dc:	e5804010 	str	r4, [r0, #16]
400103e0:	e5941020 	ldr	r1, [r4, #32]
400103e4:	e5801014 	str	r1, [r0, #20]
400103e8:	e580d018 	str	sp, [r0, #24]
400103ec:	e3a01000 	mov	r1, #0
400103f0:	e580101c 	str	r1, [r0, #28]
400103f4:	e2800020 	add	r0, r0, #32
400103f8:	e59f1198 	ldr	r1, [pc, #408]	; 40010598 <_tx_mutex_prioritize+0x264>
400103fc:	e5911000 	ldr	r1, [r1]
40010400:	e1500001 	cmp	r0, r1
40010404:	3a000001 	bcc	40010410 <_tx_mutex_prioritize+0xdc>
40010408:	e59f118c 	ldr	r1, [pc, #396]	; 4001059c <_tx_mutex_prioritize+0x268>
4001040c:	e5910000 	ldr	r0, [r1]
40010410:	e59f116c 	ldr	r1, [pc, #364]	; 40010584 <_tx_mutex_prioritize+0x250>
40010414:	e5810000 	str	r0, [r1]
40010418:	e59f1180 	ldr	r1, [pc, #384]	; 400105a0 <_tx_mutex_prioritize+0x26c>
4001041c:	e5911000 	ldr	r1, [r1]
40010420:	e5810020 	str	r0, [r1, #32]
40010424:	e5940020 	ldr	r0, [r4, #32]
40010428:	e3500002 	cmp	r0, #2
4001042c:	2a000002 	bcs	4001043c <_tx_mutex_prioritize+0x108>
40010430:	e121f005 	msr	CPSR_c, r5
40010434:	e3a00000 	mov	r0, #0
40010438:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4001043c:	e5940020 	ldr	r0, [r4, #32]
40010440:	e3500002 	cmp	r0, #2
40010444:	1a00000c 	bne	4001047c <_tx_mutex_prioritize+0x148>
40010448:	e594001c 	ldr	r0, [r4, #28]
4001044c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
40010450:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40010454:	e594101c 	ldr	r1, [r4, #28]
40010458:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4001045c:	e1500001 	cmp	r0, r1
40010460:	2a000002 	bcs	40010470 <_tx_mutex_prioritize+0x13c>
40010464:	e594001c 	ldr	r0, [r4, #28]
40010468:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001046c:	e584001c 	str	r0, [r4, #28]
40010470:	e121f005 	msr	CPSR_c, r5
40010474:	e3a00000 	mov	r0, #0
40010478:	eaffffee 	b	40010438 <_tx_mutex_prioritize+0x104>
4001047c:	e594901c 	ldr	r9, [r4, #28]
40010480:	e5940020 	ldr	r0, [r4, #32]
40010484:	e58d0000 	str	r0, [sp]
40010488:	e594801c 	ldr	r8, [r4, #28]
4001048c:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010490:	e59f010c 	ldr	r0, [pc, #268]	; 400105a4 <_tx_mutex_prioritize+0x270>
40010494:	e5900000 	ldr	r0, [r0]
40010498:	e2800001 	add	r0, r0, #1
4001049c:	e59f1100 	ldr	r1, [pc, #256]	; 400105a4 <_tx_mutex_prioritize+0x270>
400104a0:	e5810000 	str	r0, [r1]
400104a4:	e1a00000 	nop			; (mov r0, r0)
400104a8:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
400104ac:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
400104b0:	e1500001 	cmp	r0, r1
400104b4:	2a000000 	bcs	400104bc <_tx_mutex_prioritize+0x188>
400104b8:	e1a08007 	mov	r8, r7
400104bc:	e121f005 	msr	CPSR_c, r5
400104c0:	e10f5000 	mrs	r5, CPSR
400104c4:	e3856080 	orr	r6, r5, #128	; 0x80
400104c8:	e121f006 	msr	CPSR_c, r6
400104cc:	e594001c 	ldr	r0, [r4, #28]
400104d0:	e1500009 	cmp	r0, r9
400104d4:	1a000005 	bne	400104f0 <_tx_mutex_prioritize+0x1bc>
400104d8:	e5940020 	ldr	r0, [r4, #32]
400104dc:	e59d1000 	ldr	r1, [sp]
400104e0:	e1500001 	cmp	r0, r1
400104e4:	1a000001 	bne	400104f0 <_tx_mutex_prioritize+0x1bc>
400104e8:	e5977070 	ldr	r7, [r7, #112]	; 0x70
400104ec:	ea000004 	b	40010504 <_tx_mutex_prioritize+0x1d0>
400104f0:	e594901c 	ldr	r9, [r4, #28]
400104f4:	e5940020 	ldr	r0, [r4, #32]
400104f8:	e58d0000 	str	r0, [sp]
400104fc:	e594801c 	ldr	r8, [r4, #28]
40010500:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010504:	e594001c 	ldr	r0, [r4, #28]
40010508:	e1500007 	cmp	r0, r7
4001050c:	1affffe5 	bne	400104a8 <_tx_mutex_prioritize+0x174>
40010510:	e59f008c 	ldr	r0, [pc, #140]	; 400105a4 <_tx_mutex_prioritize+0x270>
40010514:	e5900000 	ldr	r0, [r0]
40010518:	e2400001 	sub	r0, r0, #1
4001051c:	e59f1080 	ldr	r1, [pc, #128]	; 400105a4 <_tx_mutex_prioritize+0x270>
40010520:	e5810000 	str	r0, [r1]
40010524:	e594001c 	ldr	r0, [r4, #28]
40010528:	e1500008 	cmp	r0, r8
4001052c:	0a000010 	beq	40010574 <_tx_mutex_prioritize+0x240>
40010530:	e5980074 	ldr	r0, [r8, #116]	; 0x74
40010534:	e5981070 	ldr	r1, [r8, #112]	; 0x70
40010538:	e5810074 	str	r0, [r1, #116]	; 0x74
4001053c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
40010540:	e5981074 	ldr	r1, [r8, #116]	; 0x74
40010544:	e5810070 	str	r0, [r1, #112]	; 0x70
40010548:	e594001c 	ldr	r0, [r4, #28]
4001054c:	e5880070 	str	r0, [r8, #112]	; 0x70
40010550:	e594001c 	ldr	r0, [r4, #28]
40010554:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010558:	e5880074 	str	r0, [r8, #116]	; 0x74
4001055c:	e594001c 	ldr	r0, [r4, #28]
40010560:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010564:	e5808070 	str	r8, [r0, #112]	; 0x70
40010568:	e594001c 	ldr	r0, [r4, #28]
4001056c:	e5808074 	str	r8, [r0, #116]	; 0x74
40010570:	e584801c 	str	r8, [r4, #28]
40010574:	e121f005 	msr	CPSR_c, r5
40010578:	ebfffad5 	bl	4000f0d4 <_tx_thread_system_preempt_check>
4001057c:	e3a00000 	mov	r0, #0
40010580:	eaffffac 	b	40010438 <_tx_mutex_prioritize+0x104>
40010584:	40030ea0 	.word	0x40030ea0
40010588:	40030ea4 	.word	0x40030ea4
4001058c:	40030e2c 	.word	0x40030e2c
40010590:	40030e34 	.word	0x40030e34
40010594:	f0f0f0f0 	.word	0xf0f0f0f0
40010598:	40030e9c 	.word	0x40030e9c
4001059c:	40030e98 	.word	0x40030e98
400105a0:	40030e8c 	.word	0x40030e8c
400105a4:	40030e50 	.word	0x40030e50

400105a8 <_tx_queue_cleanup>:
400105a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400105ac:	e1a04000 	mov	r4, r0
400105b0:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400105b4:	e10f5000 	mrs	r5, CPSR
400105b8:	e3856080 	orr	r6, r5, #128	; 0x80
400105bc:	e121f006 	msr	CPSR_c, r6
400105c0:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400105c4:	e3500000 	cmp	r0, #0
400105c8:	0a00002c 	beq	40010680 <_tx_queue_cleanup+0xd8>
400105cc:	e3570000 	cmp	r7, #0
400105d0:	0a00002a 	beq	40010680 <_tx_queue_cleanup+0xd8>
400105d4:	e5970000 	ldr	r0, [r7]
400105d8:	e59f10a8 	ldr	r1, [pc, #168]	; 40010688 <_tx_queue_cleanup+0xe0>
400105dc:	e1500001 	cmp	r0, r1
400105e0:	1a000026 	bne	40010680 <_tx_queue_cleanup+0xd8>
400105e4:	e3a00000 	mov	r0, #0
400105e8:	e5840068 	str	r0, [r4, #104]	; 0x68
400105ec:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400105f0:	e1500004 	cmp	r0, r4
400105f4:	1a000002 	bne	40010604 <_tx_queue_cleanup+0x5c>
400105f8:	e3a00000 	mov	r0, #0
400105fc:	e5870028 	str	r0, [r7, #40]	; 0x28
40010600:	ea000007 	b	40010624 <_tx_queue_cleanup+0x7c>
40010604:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010608:	e5870028 	str	r0, [r7, #40]	; 0x28
4001060c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010610:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010614:	e5810074 	str	r0, [r1, #116]	; 0x74
40010618:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001061c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010620:	e5810070 	str	r0, [r1, #112]	; 0x70
40010624:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010628:	e2400001 	sub	r0, r0, #1
4001062c:	e587002c 	str	r0, [r7, #44]	; 0x2c
40010630:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010634:	e3500005 	cmp	r0, #5
40010638:	1a000010 	bne	40010680 <_tx_queue_cleanup+0xd8>
4001063c:	e5970010 	ldr	r0, [r7, #16]
40010640:	e3500000 	cmp	r0, #0
40010644:	0a000002 	beq	40010654 <_tx_queue_cleanup+0xac>
40010648:	e3a0000b 	mov	r0, #11
4001064c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010650:	ea000001 	b	4001065c <_tx_queue_cleanup+0xb4>
40010654:	e3a0000a 	mov	r0, #10
40010658:	e5840084 	str	r0, [r4, #132]	; 0x84
4001065c:	e59f0028 	ldr	r0, [pc, #40]	; 4001068c <_tx_queue_cleanup+0xe4>
40010660:	e5900000 	ldr	r0, [r0]
40010664:	e2800001 	add	r0, r0, #1
40010668:	e59f101c 	ldr	r1, [pc, #28]	; 4001068c <_tx_queue_cleanup+0xe4>
4001066c:	e5810000 	str	r0, [r1]
40010670:	e121f005 	msr	CPSR_c, r5
40010674:	e1a00004 	mov	r0, r4
40010678:	ebfffac1 	bl	4000f184 <_tx_thread_system_resume>
4001067c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010680:	e121f005 	msr	CPSR_c, r5
40010684:	eafffffc 	b	4001067c <_tx_queue_cleanup+0xd4>
40010688:	51554555 	.word	0x51554555
4001068c:	40030e50 	.word	0x40030e50

40010690 <strcpy>:
40010690:	e0202001 	eor	r2, r0, r1
40010694:	e1a0c000 	mov	ip, r0
40010698:	e3120003 	tst	r2, #3
4001069c:	1a000032 	bne	4001076c <strcpy+0xdc>
400106a0:	e3110003 	tst	r1, #3
400106a4:	1a000021 	bne	40010730 <strcpy+0xa0>
400106a8:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
400106ac:	e3a05001 	mov	r5, #1
400106b0:	e1855405 	orr	r5, r5, r5, lsl #8
400106b4:	e1855805 	orr	r5, r5, r5, lsl #16
400106b8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
400106bc:	e3110004 	tst	r1, #4
400106c0:	e4913004 	ldr	r3, [r1], #4
400106c4:	0a000005 	beq	400106e0 <strcpy+0x50>
400106c8:	e0432005 	sub	r2, r3, r5
400106cc:	e1d22003 	bics	r2, r2, r3
400106d0:	e1120385 	tst	r2, r5, lsl #7
400106d4:	048c3004 	streq	r3, [ip], #4
400106d8:	04913004 	ldreq	r3, [r1], #4
400106dc:	1a00000c 	bne	40010714 <strcpy+0x84>
400106e0:	e4914004 	ldr	r4, [r1], #4
400106e4:	e0432005 	sub	r2, r3, r5
400106e8:	e1d22003 	bics	r2, r2, r3
400106ec:	e1120385 	tst	r2, r5, lsl #7
400106f0:	e0442005 	sub	r2, r4, r5
400106f4:	1a000006 	bne	40010714 <strcpy+0x84>
400106f8:	e48c3004 	str	r3, [ip], #4
400106fc:	e1d22004 	bics	r2, r2, r4
40010700:	e1120385 	tst	r2, r5, lsl #7
40010704:	04913004 	ldreq	r3, [r1], #4
40010708:	048c4004 	streq	r4, [ip], #4
4001070c:	0afffff3 	beq	400106e0 <strcpy+0x50>
40010710:	e1a03004 	mov	r3, r4
40010714:	e4cc3001 	strb	r3, [ip], #1
40010718:	e31300ff 	tst	r3, #255	; 0xff
4001071c:	e1a03463 	ror	r3, r3, #8
40010720:	1afffffb 	bne	40010714 <strcpy+0x84>
40010724:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
40010728:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
4001072c:	e12fff1e 	bx	lr
40010730:	e3110001 	tst	r1, #1
40010734:	0a000003 	beq	40010748 <strcpy+0xb8>
40010738:	e4d12001 	ldrb	r2, [r1], #1
4001073c:	e4cc2001 	strb	r2, [ip], #1
40010740:	e3520000 	cmp	r2, #0
40010744:	012fff1e 	bxeq	lr
40010748:	e3110002 	tst	r1, #2
4001074c:	0affffd5 	beq	400106a8 <strcpy+0x18>
40010750:	e0d120b2 	ldrh	r2, [r1], #2
40010754:	e31200ff 	tst	r2, #255	; 0xff
40010758:	10cc20b2 	strhne	r2, [ip], #2
4001075c:	05cc2000 	strbeq	r2, [ip]
40010760:	13120cff 	tstne	r2, #65280	; 0xff00
40010764:	1affffcf 	bne	400106a8 <strcpy+0x18>
40010768:	e12fff1e 	bx	lr
4001076c:	e4d12001 	ldrb	r2, [r1], #1
40010770:	e4cc2001 	strb	r2, [ip], #1
40010774:	e3520000 	cmp	r2, #0
40010778:	1afffffb 	bne	4001076c <strcpy+0xdc>
4001077c:	e12fff1e 	bx	lr

40010780 <strlen>:
40010780:	e3c01003 	bic	r1, r0, #3
40010784:	e2100003 	ands	r0, r0, #3
40010788:	e2600000 	rsb	r0, r0, #0
4001078c:	e4913004 	ldr	r3, [r1], #4
40010790:	e280c004 	add	ip, r0, #4
40010794:	e1a0c18c 	lsl	ip, ip, #3
40010798:	e3e02000 	mvn	r2, #0
4001079c:	11833c32 	orrne	r3, r3, r2, lsr ip
400107a0:	e3a0c001 	mov	ip, #1
400107a4:	e18cc40c 	orr	ip, ip, ip, lsl #8
400107a8:	e18cc80c 	orr	ip, ip, ip, lsl #16
400107ac:	e043200c 	sub	r2, r3, ip
400107b0:	e1c22003 	bic	r2, r2, r3
400107b4:	e012238c 	ands	r2, r2, ip, lsl #7
400107b8:	04913004 	ldreq	r3, [r1], #4
400107bc:	02800004 	addeq	r0, r0, #4
400107c0:	0afffff9 	beq	400107ac <strlen+0x2c>
400107c4:	e31300ff 	tst	r3, #255	; 0xff
400107c8:	12800001 	addne	r0, r0, #1
400107cc:	13130cff 	tstne	r3, #65280	; 0xff00
400107d0:	12800001 	addne	r0, r0, #1
400107d4:	131308ff 	tstne	r3, #16711680	; 0xff0000
400107d8:	12800001 	addne	r0, r0, #1
400107dc:	e12fff1e 	bx	lr

400107e0 <__aeabi_uidiv>:
400107e0:	e2512001 	subs	r2, r1, #1
400107e4:	012fff1e 	bxeq	lr
400107e8:	3a000036 	bcc	400108c8 <__aeabi_uidiv+0xe8>
400107ec:	e1500001 	cmp	r0, r1
400107f0:	9a000022 	bls	40010880 <__aeabi_uidiv+0xa0>
400107f4:	e1110002 	tst	r1, r2
400107f8:	0a000023 	beq	4001088c <__aeabi_uidiv+0xac>
400107fc:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010800:	01a01181 	lsleq	r1, r1, #3
40010804:	03a03008 	moveq	r3, #8
40010808:	13a03001 	movne	r3, #1
4001080c:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010810:	31510000 	cmpcc	r1, r0
40010814:	31a01201 	lslcc	r1, r1, #4
40010818:	31a03203 	lslcc	r3, r3, #4
4001081c:	3afffffa 	bcc	4001080c <__aeabi_uidiv+0x2c>
40010820:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010824:	31510000 	cmpcc	r1, r0
40010828:	31a01081 	lslcc	r1, r1, #1
4001082c:	31a03083 	lslcc	r3, r3, #1
40010830:	3afffffa 	bcc	40010820 <__aeabi_uidiv+0x40>
40010834:	e3a02000 	mov	r2, #0
40010838:	e1500001 	cmp	r0, r1
4001083c:	20400001 	subcs	r0, r0, r1
40010840:	21822003 	orrcs	r2, r2, r3
40010844:	e15000a1 	cmp	r0, r1, lsr #1
40010848:	204000a1 	subcs	r0, r0, r1, lsr #1
4001084c:	218220a3 	orrcs	r2, r2, r3, lsr #1
40010850:	e1500121 	cmp	r0, r1, lsr #2
40010854:	20400121 	subcs	r0, r0, r1, lsr #2
40010858:	21822123 	orrcs	r2, r2, r3, lsr #2
4001085c:	e15001a1 	cmp	r0, r1, lsr #3
40010860:	204001a1 	subcs	r0, r0, r1, lsr #3
40010864:	218221a3 	orrcs	r2, r2, r3, lsr #3
40010868:	e3500000 	cmp	r0, #0
4001086c:	11b03223 	lsrsne	r3, r3, #4
40010870:	11a01221 	lsrne	r1, r1, #4
40010874:	1affffef 	bne	40010838 <__aeabi_uidiv+0x58>
40010878:	e1a00002 	mov	r0, r2
4001087c:	e12fff1e 	bx	lr
40010880:	03a00001 	moveq	r0, #1
40010884:	13a00000 	movne	r0, #0
40010888:	e12fff1e 	bx	lr
4001088c:	e3510801 	cmp	r1, #65536	; 0x10000
40010890:	21a01821 	lsrcs	r1, r1, #16
40010894:	23a02010 	movcs	r2, #16
40010898:	33a02000 	movcc	r2, #0
4001089c:	e3510c01 	cmp	r1, #256	; 0x100
400108a0:	21a01421 	lsrcs	r1, r1, #8
400108a4:	22822008 	addcs	r2, r2, #8
400108a8:	e3510010 	cmp	r1, #16
400108ac:	21a01221 	lsrcs	r1, r1, #4
400108b0:	22822004 	addcs	r2, r2, #4
400108b4:	e3510004 	cmp	r1, #4
400108b8:	82822003 	addhi	r2, r2, #3
400108bc:	908220a1 	addls	r2, r2, r1, lsr #1
400108c0:	e1a00230 	lsr	r0, r0, r2
400108c4:	e12fff1e 	bx	lr
400108c8:	e3500000 	cmp	r0, #0
400108cc:	13e00000 	mvnne	r0, #0
400108d0:	ea000059 	b	40010a3c <__aeabi_idiv0>

400108d4 <__aeabi_uidivmod>:
400108d4:	e3510000 	cmp	r1, #0
400108d8:	0afffffa 	beq	400108c8 <__aeabi_uidiv+0xe8>
400108dc:	e92d4003 	push	{r0, r1, lr}
400108e0:	ebffffbe 	bl	400107e0 <__aeabi_uidiv>
400108e4:	e8bd4006 	pop	{r1, r2, lr}
400108e8:	e0030092 	mul	r3, r2, r0
400108ec:	e0411003 	sub	r1, r1, r3
400108f0:	e12fff1e 	bx	lr

400108f4 <__aeabi_idiv>:
400108f4:	e3510000 	cmp	r1, #0
400108f8:	0a000043 	beq	40010a0c <.divsi3_skip_div0_test+0x110>

400108fc <.divsi3_skip_div0_test>:
400108fc:	e020c001 	eor	ip, r0, r1
40010900:	42611000 	rsbmi	r1, r1, #0
40010904:	e2512001 	subs	r2, r1, #1
40010908:	0a000027 	beq	400109ac <.divsi3_skip_div0_test+0xb0>
4001090c:	e1b03000 	movs	r3, r0
40010910:	42603000 	rsbmi	r3, r0, #0
40010914:	e1530001 	cmp	r3, r1
40010918:	9a000026 	bls	400109b8 <.divsi3_skip_div0_test+0xbc>
4001091c:	e1110002 	tst	r1, r2
40010920:	0a000028 	beq	400109c8 <.divsi3_skip_div0_test+0xcc>
40010924:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010928:	01a01181 	lsleq	r1, r1, #3
4001092c:	03a02008 	moveq	r2, #8
40010930:	13a02001 	movne	r2, #1
40010934:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010938:	31510003 	cmpcc	r1, r3
4001093c:	31a01201 	lslcc	r1, r1, #4
40010940:	31a02202 	lslcc	r2, r2, #4
40010944:	3afffffa 	bcc	40010934 <.divsi3_skip_div0_test+0x38>
40010948:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
4001094c:	31510003 	cmpcc	r1, r3
40010950:	31a01081 	lslcc	r1, r1, #1
40010954:	31a02082 	lslcc	r2, r2, #1
40010958:	3afffffa 	bcc	40010948 <.divsi3_skip_div0_test+0x4c>
4001095c:	e3a00000 	mov	r0, #0
40010960:	e1530001 	cmp	r3, r1
40010964:	20433001 	subcs	r3, r3, r1
40010968:	21800002 	orrcs	r0, r0, r2
4001096c:	e15300a1 	cmp	r3, r1, lsr #1
40010970:	204330a1 	subcs	r3, r3, r1, lsr #1
40010974:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010978:	e1530121 	cmp	r3, r1, lsr #2
4001097c:	20433121 	subcs	r3, r3, r1, lsr #2
40010980:	21800122 	orrcs	r0, r0, r2, lsr #2
40010984:	e15301a1 	cmp	r3, r1, lsr #3
40010988:	204331a1 	subcs	r3, r3, r1, lsr #3
4001098c:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010990:	e3530000 	cmp	r3, #0
40010994:	11b02222 	lsrsne	r2, r2, #4
40010998:	11a01221 	lsrne	r1, r1, #4
4001099c:	1affffef 	bne	40010960 <.divsi3_skip_div0_test+0x64>
400109a0:	e35c0000 	cmp	ip, #0
400109a4:	42600000 	rsbmi	r0, r0, #0
400109a8:	e12fff1e 	bx	lr
400109ac:	e13c0000 	teq	ip, r0
400109b0:	42600000 	rsbmi	r0, r0, #0
400109b4:	e12fff1e 	bx	lr
400109b8:	33a00000 	movcc	r0, #0
400109bc:	01a00fcc 	asreq	r0, ip, #31
400109c0:	03800001 	orreq	r0, r0, #1
400109c4:	e12fff1e 	bx	lr
400109c8:	e3510801 	cmp	r1, #65536	; 0x10000
400109cc:	21a01821 	lsrcs	r1, r1, #16
400109d0:	23a02010 	movcs	r2, #16
400109d4:	33a02000 	movcc	r2, #0
400109d8:	e3510c01 	cmp	r1, #256	; 0x100
400109dc:	21a01421 	lsrcs	r1, r1, #8
400109e0:	22822008 	addcs	r2, r2, #8
400109e4:	e3510010 	cmp	r1, #16
400109e8:	21a01221 	lsrcs	r1, r1, #4
400109ec:	22822004 	addcs	r2, r2, #4
400109f0:	e3510004 	cmp	r1, #4
400109f4:	82822003 	addhi	r2, r2, #3
400109f8:	908220a1 	addls	r2, r2, r1, lsr #1
400109fc:	e35c0000 	cmp	ip, #0
40010a00:	e1a00233 	lsr	r0, r3, r2
40010a04:	42600000 	rsbmi	r0, r0, #0
40010a08:	e12fff1e 	bx	lr
40010a0c:	e3500000 	cmp	r0, #0
40010a10:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010a14:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010a18:	ea000007 	b	40010a3c <__aeabi_idiv0>

40010a1c <__aeabi_idivmod>:
40010a1c:	e3510000 	cmp	r1, #0
40010a20:	0afffff9 	beq	40010a0c <.divsi3_skip_div0_test+0x110>
40010a24:	e92d4003 	push	{r0, r1, lr}
40010a28:	ebffffb3 	bl	400108fc <.divsi3_skip_div0_test>
40010a2c:	e8bd4006 	pop	{r1, r2, lr}
40010a30:	e0030092 	mul	r3, r2, r0
40010a34:	e0411003 	sub	r1, r1, r3
40010a38:	e12fff1e 	bx	lr

40010a3c <__aeabi_idiv0>:
40010a3c:	e12fff1e 	bx	lr

40010a40 <DelayArray>:
40010a40:	010402bc 01040104 010402bc 01040104     ................
40010a50:	01040104 01040104 01040104 01040104     ................
40010a60:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010a70:	02bc0104 010402bc 010402bc 010401f4     ................
40010a80:	01040104 00000104 00000000 00000000     ................
	...
40010ac0:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010ad0:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010ae0:	75657551 73252065 61747320 25206574     Queue %s state %
40010af0:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010b00:	68632065 206b6365 75657571 20444965     e check queueID 
40010b10:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010b20:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010b30:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010b40:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010b50:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010b60:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010b70:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010b80:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010b90:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010ba0:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010bb0:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010bc0:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010bd0:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010be0:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010bf0:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010c00:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010c10:	00000a0d                                ....

40010c14 <CyFxUSBDeviceDscr>:
40010c14:	02000112 400102ef 30611bbd 02010000     .......@..a0....
40010c24:	00000100                                ....

40010c28 <CyFxUSBDeviceDscrSS>:
40010c28:	03000112 090102ef 30611bbd 02010000     ..........a0....
40010c38:	00000100                                ....

40010c3c <CyFxUSBDeviceQualDscr>:
40010c3c:	0200060a 400102ef 00000001              .......@....

40010c48 <CyFxUSBFSConfigDscr>:
40010c48:	00090209 80000100 00000032              ........2...

40010c54 <CyFxUSBHSConfigDscr>:
40010c54:	00dd0209 80000102 000b08fa 00030e02     ................
40010c64:	00040900 010e0100 240d0000 50010001     ...........$...P
40010c74:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010c84:	0a03e800 059e0300 05240c00 02580102     ..........$...X.
40010c94:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010ca4:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40010cb4:	03240900 00010104 05070003 04000382     ..$.............
40010cc4:	03250501 04090040 0e010001 0e000002     ..%.@...........
40010cd4:	57010124 04008300 01010102 04241b00     $..W..........$.
40010ce4:	55590101 00003259 00800010 3800aa00     ..YUY2.........8
40010cf4:	0110719b 00000608 0105241e 1c03c002     .q.......$......
40010d04:	d4e00002 d4e0000e 0fd2000e 05161500     ................
40010d14:	16150100 240a0005 c0010003 00021c03     .......$........
40010d24:	000d2406 05070000 02000283 00000001     .$..............

40010d34 <CyFxUSBBOSDscr>:
40010d34:	00160f05 02100702 00000000 0003100a     ................
40010d44:	0003000e 00000000                       ........

40010d4c <CyFxUSBSSConfigDscr>:
40010d4c:	00e90209 80000102 000b0864 00030e02     ........d.......
40010d5c:	00040900 010e0100 240d0000 50010001     ...........$...P
40010d6c:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010d7c:	0a038e00 059e0300 05240c00 02580102     ..........$...X.
40010d8c:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010d9c:	8e8d9649 76961f36 02010b50 07d7ff03     I...6..vP.......
40010dac:	03240900 00010104 05070003 04000382     ..$.............
40010dbc:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40010dcc:	00020e01 01240e00 83005701 01020400     ......$..W......
40010ddc:	1b000101 01010424 32595559 00100000     ....$...YUY2....
40010dec:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
40010dfc:	80020105 0001e002 00317040 003b5380     ........@p1..S;.
40010e0c:	15001fa4 01000516 00051615 0003240a     .............$..
40010e1c:	38078001 24060004 0000000d 02830507     ...8...$........
40010e2c:	06010400 00000f30 00000000              ....0.......

40010e38 <CyFxUSBStringLangIDDscr>:
40010e38:	04090304                                ....

40010e3c <CyFxUSBManufactureDscr>:
40010e3c:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
40010e4c:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
40010e5c:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40010e6c:	006f0069 0073006e                       i.o.n.s.

40010e74 <CyFxUSBProductDscr>:
40010e74:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40010e84:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40010e94:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40010ea4:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40010eb4:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40010ec4:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40010ed4:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
40010ee4:	64612065 73657264 73692073 746f6e20     e address is not
40010ef4:	6c617620 0a216469 00000000 4f525245      valid!.....ERRO
40010f04:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
40010f14:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
40010f24:	74655320 6c615620 45206575 726f7272      Set Value Error
40010f34:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40010f44:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
40010f54:	0a0d6575 00000000 20656854 6b636974     ue......The tick
40010f64:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
40010f74:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40010f84:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40010f94:	20656854 20746547 746e6f63 206c6f72     The Get control 
40010fa4:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40010fb4:	20656854 20746553 746e6f63 206c6f72     The Set control 
40010fc4:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
40010fd4:	00000a0d                                ....

40010fd8 <ExTime>:
40010fd8:	004e009c 00140027 0005000a 00010002     ..N.'...........

40010fe8 <CyFxGpifConfig>:
40010fe8:	0000000f 4003066c 4003078c 00000005     ....l..@...@....
40010ff8:	40030660 0000004c 4003079c              `..@L......@

40011004 <CyFxGpifConfig_usb2>:
40011004:	00000093 400308dc 40030a8c 00000008     .......@...@....
40011014:	400308cc 0000004c 40030b20 20433249     ...@L... ..@I2C 
40011024:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
40011034:	20656854 6d6d6f63 20646e61 75657571     The command queu
40011044:	73692065 61657220 25207964 64252064     e is ready %d %d
40011054:	00000a0d 6f727245 6e692072 6c756d20     ....Error in mul
40011064:	68636974 656e6e61 6d6f636c 6274696d     tichannelcommitb
40011074:	65666675 43203a72 2065646f 6425203d     uffer: Code = %d
40011084:	6973202c 3d20657a 2c782520 616d6420     , size = %x, dma
40011094:	656e6f44 0d782520 0000000a 45534552     Done %x.....RESE
400110a4:	6e652054 6e756f63 65726574 2e2e2e64     T encountered...
400110b4:	78257830 25783020 000a0d78 50535553     0x%x 0x%x...SUSP
400110c4:	20444e45 6f636e65 65746e75 2e646572     END encountered.
400110d4:	78302e2e 30207825 0d782578 0000000a     ..0x%x 0x%x.....
400110e4:	20425355 63736964 656e6e6f 64657463     USB disconnected
400110f4:	302e2e2e 20782578 78257830 00000a0d     ...0x%x 0x%x....
40011104:	20746553 465f5943 56555f58 49565f43     Set CY_FX_UVC_VI
40011114:	5f4f4544 544e4f43 5f4c4f52 55514552     DEO_CONTROL_REQU
40011124:	5f545345 4e455645 61462054 64656c69     EST_EVENT Failed
40011134:	0a782520 00000000 20746553 465f5943      %x.....Set CY_F
40011144:	56555f58 49565f43 5f4f4544 45525453     X_UVC_VIDEO_STRE
40011154:	525f4d41 45555145 455f5453 544e4556     AM_REQUEST_EVENT
40011164:	69614620 2064656c 000a7825 65746c41      Failed %x..Alte
40011174:	74616e72 65732065 6e697474 2e302067     rnate setting 0.
40011184:	000a0d2e 61656c43 65662072 72757461     ....Clear featur
40011194:	65722065 73657571 65642074 74636574     e request detect
400111a4:	2e2e6465 00000a0d 63200a0d 696d6d6f     ed........ commi
400111b4:	666f6574 61747320 3d206574 00642520     teof state = %d.
400111c4:	6e616843 206c656e 20746553 70617257     Channel Set Wrap
400111d4:	66207055 656c6961 45202c64 726f7272     Up failed, Error
400111e4:	646f6320 203d2065 0a0d6425 00000000      code = %d......
400111f4:	6f727245 61682072 656c646e 2e2e2e72     Error handler...
40011204:	00000a0d 6d6d6f43 45207469 6620464f     ....Commit EOF f
40011214:	656c6961 000a2164 20656854 20433249     ailed!..The I2C 
40011224:	6d6d6f63 20646e61 30207369 20782578     command is 0x%x 
40011234:	78257830 25783020 78302078 30207825     0x%x 0x%x 0x%x 0
40011244:	20782578 78257830 25783020 78302078     x%x 0x%x 0x%x 0x
40011254:	30207825 20782578 78257830 25783020     %x 0x%x 0x%x 0x%
40011264:	000a0d78 6b636162 67696c20 63207468     x...back light c
40011274:	65706d6f 7461736e 206e6f69 74746573     ompensation sett
40011284:	20676e69 6e207369 6320746f 6572726f     ing is not corre
40011294:	202e7463 25206425 000a0d64 20656854     ct. %d %d...The 
400112a4:	20433249 72727563 20746e65 61746164     I2C current data
400112b4:	20736920 20746f6e 69617661 6c62616c      is not availabl
400112c4:	74202e65 61207972 6e696167 6425202e     e. try again. %d
400112d4:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
400112e4:	6e657320 6f742074 736f6820 25202e74      sent to host. %
400112f4:	64252064 6425203b 0d642520 0000000a     d %d; %d %d.....
40011304:	4d707845 43474126 746f6720 206e6574     ExpM&AGC gotten 
40011314:	6d6f7266 736f6820 25202e74 64252064     from host. %d %d
40011324:	6425203b 0d642520 0000000a 20656854     ; %d %d.....The 
40011334:	20746567 61746164 6f726620 6f68206d     get data from ho
40011344:	66207473 206c6961 6f727265 6f632072     st fail error co
40011354:	25206564 0a0d2e64 00000000 20656854     de %d.......The 
40011364:	75716552 20747365 78257830 72617020     Request 0x%x par
40011374:	74656d61 67207265 66207465 206d6f72     ameter get from 
40011384:	74736f68 25783020 78302078 2f207825     host 0x%x 0x%x /
40011394:	6e657320 6f742064 736f6820 78302074      send to host 0x
400113a4:	30207825 0d782578 0000000a 6d6f6f5a     %x 0x%x.....Zoom
400113b4:	20704f20 65636572 73657669 54432820      Op receives (CT
400113c4:	78302029 30207825 20782578 78257830     ) 0x%x 0x%x 0x%x
400113d4:	00000a0d 61666564 20746c75 656c6573     ....default sele
400113e4:	726f7463 54432820 78302029 30207825     ctor (CT) 0x%x 0
400113f4:	0d782578 0000000a 61666564 20746c75     x%x.....default 
40011404:	75716572 20747365 29544328 25783020     request (CT) 0x%
40011414:	78302078 0a0d7825 00000000 20656854     x 0x%x......The 
40011424:	75716552 20747365 78257830 72617020     Request 0x%x par
40011434:	74656d61 67207265 66207465 206d6f72     ameter get from 
40011444:	74736f68 54432820 78302029 30207825     host (CT) 0x%x 0
40011454:	20782578 78257830 73202f20 20646e65     x%x 0x%x / send 
40011464:	68206f74 2074736f 78257830 25783020     to host 0x%x 0x%
40011474:	78302078 202c7825 0a0d6425 00000000     x 0x%x, %d......
40011484:	20425355 65657073 203d2064 65206425     USB speed = %d e
40011494:	666e6576 2067616c 7830203d 62207825     venflag = 0x%x b
400114a4:	7165526d 65707954 30203d20 0d782578     mReqType = 0x%x.
400114b4:	6552620a 73657571 203d2074 78257830     .bRequest = 0x%x
400114c4:	61567720 2065756c 7830203d 77207825      wValue = 0x%x w
400114d4:	65646e49 203d2078 78257830 654c7720     Index = 0x%x wLe
400114e4:	6874676e 30203d20 20782578 6c667369     ngth = 0x%x isfl
400114f4:	30206761 0d782578 0000000a 20656854     ag 0x%x.....The 
40011504:	61666564 20746c75 75746573 65722070     default setup re
40011514:	73657571 61762074 2065756c 78257830     quest value 0x%x
40011524:	25783020 000a0d78 20656854 74736f68      0x%x...The host
40011534:	6d6f6320 646e616d 20736920 20746f6e      command is not 
40011544:	72726f63 20746365 20726f66 30383031     correct for 1080
40011554:	61632070 6172656d 25783020 78302078     p camera 0x%x 0x
40011564:	0a0d7825 00000000 20746553 465f5943     %x......Set CY_F
40011574:	56555f58 54535f43 4d414552 4556455f     X_UVC_STREAM_EVE
40011584:	6620544e 656c6961 78252064 0000000a     NT failed %x....
40011594:	20746547 20435655 6c697473 7274206c     Get UVC still tr
400115a4:	65676769 6f632072 6f72746e 6425206c     igger control %d
400115b4:	0d642520 0000000a 20435655 6c697473      %d.....UVC stil
400115c4:	7274206c 65676769 6f632072 6f72746e     l trigger contro
400115d4:	6166206c 25206c69 64252064 00000a0d     l fail %d %d....
400115e4:	6c696146 74206465 6573206f 6920646e     Failed to send i
400115f4:	7265746e 74707572 61747320 2c737574     nterrupt status,
40011604:	72724520 6320726f 2065646f 6425203d      Error code = %d
40011614:	00000a0d 20656854 20746573 20666564     ....The set def 
40011624:	61746164 25783020 30202c78 2e782578     data 0x%x, 0x%x.
40011634:	00000a0d 20656854 20746573 20666564     ....The set def 
40011644:	61746164 25783020 30202c78 2c782578     data 0x%x, 0x%x,
40011654:	25783020 30202c78 2c782578 25783020      0x%x, 0x%x, 0x%
40011664:	30202c78 2e782578 00000a0d 54524155     x, 0x%x.....UART
40011674:	696e6920 6c616974 74617a69 206e6f69      initialization 
40011684:	6c696166 0a216465 00000000 20433249     failed!.....I2C 
40011694:	74696e69 696c6169 6974617a 66206e6f     initialization f
400116a4:	656c6961 000a2164 20433249 666e6f63     ailed!..I2C conf
400116b4:	72756769 6f697461 6166206e 64656c69     iguration failed
400116c4:	00000a21 20435655 61657243 45206574     !...UVC Create E
400116d4:	746e6576 69616620 2c64656c 72724520     vent failed, Err
400116e4:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
400116f4:	4f495047 696e4920 61662074 64656c69     GPIO Init failed
40011704:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011714:	00000a64 4f495047 65764f20 64697272     d...GPIO Overrid
40011724:	61662065 64656c69 7245202c 20726f72     e failed, Error 
40011734:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011744:	29303228 65764f20 64697272 61662065     (20) Override fa
40011754:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011764:	25203d20 00000a64 4f495047 29343228      = %d...GPIO(24)
40011774:	65764f20 64697272 61662065 64656c69      Override failed
40011784:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011794:	00000a64 4f495047 74655320 65722820     d...GPIO Set (re
400117a4:	20746573 20293232 666e6f43 45206769     set 22) Config E
400117b4:	726f7272 7245202c 20726f72 65646f43     rror, Error Code
400117c4:	25203d20 00000a64 4f495047 74655320      = %d...GPIO Set
400117d4:	6f702820 20726577 20293032 666e6f43      (power 20) Conf
400117e4:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
400117f4:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011804:	74655320 6e732820 73207061 20746f68      Set (snap shot 
40011814:	20293432 666e6f43 45206769 726f7272     24) Config Error
40011824:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011834:	00000a64 20424950 636e7546 6e6f6974     d...PIB Function
40011844:	69614620 2064656c 53206f74 74726174      Failed to Start
40011854:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011864:	00000a64 20425355 636e7546 6e6f6974     d...USB Function
40011874:	69614620 2064656c 53206f74 74726174      Failed to Start
40011884:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011894:	00000a64 20425355 20746553 70646e45     d...USB Set Endp
400118a4:	746e696f 6e6f6320 20676966 6c696166     oint config fail
400118b4:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
400118c4:	0a642520 00000000 20414d44 65746e49      %d.....DMA Inte
400118d4:	70757272 74532074 73757461 61684320     rrupt Status Cha
400118e4:	6c656e6e 65724320 6f697461 6146206e     nnel Creation Fa
400118f4:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011904:	25203d20 00000a64 6c696146 74206465      = %d...Failed t
40011914:	6c61206f 61636f6c 6d206574 726f6d65     o allocate memor
40011924:	6f662079 6e692072 72726574 20747075     y for interrupt 
40011934:	74617473 62207375 65666675 000a0d72     status buffer...
40011944:	20414d44 6e616843 206c656e 61657243     DMA Channel Crea
40011954:	6e6f6974 69614620 2c64656c 72724520     tion Failed, Err
40011964:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
40011974:	20425355 6e6e6f43 20746365 6c696166     USB Connect fail
40011984:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011994:	0a642520 00000000 31280a0d 62662029      %d.......(1) fb
400119a4:	20642520 25206270 62702064 64252063      %d pb %d pbc %d
400119b4:	00000a0d 20414d44 6e616843 206c656e     ....DMA Channel 
400119c4:	65736552 61462074 64656c69 7245202c     Reset Failed, Er
400119d4:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400119e4:	20414d44 6e616843 206c656e 20746553     DMA Channel Set 
400119f4:	6e617254 72656673 69614620 2c64656c     Transfer Failed,
40011a04:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011a14:	0000000a 20414d44 6e616843 206c656e     ....DMA Channel 
40011a24:	20746553 6e617254 72656673 69614620     Set Transfer Fai
40011a34:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011a44:	6425203d 00000a0d 73200a0d 72657075     = %d...... super
40011a54:	69706720 00000066 68200a0d 20686769      gpif..... high 
40011a64:	66697067 00000000 64616f4c 20676e69     gpif....Loading 
40011a74:	46495047 6e6f4320 75676966 69746172     GPIF Configurati
40011a84:	66206e6f 656c6961 45202c64 726f7272     on failed, Error
40011a94:	646f4320 203d2065 0a0d6425 00000000      Code = %d......
40011aa4:	72617453 676e6974 49504720 74732046     Starting GPIF st
40011ab4:	20657461 6863616d 20656e69 6c696166     ate machine fail
40011ac4:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011ad4:	0d642520 0000000a 553a3033 41204356      %d.....30:UVC A
40011ae4:	54207070 61657268 00000064 553a3133     pp Thread...31:U
40011af4:	41204356 45207070 54203050 61657268     VC App EP0 Threa
40011b04:	00000064 493a3233 41204332 43207070     d...32:I2C App C
40011b14:	204c5254 65726854 00006461              TRL Thread..

40011b20 <glFx3PartProperties>:
40011b20:	00000000 0000009f 00000010 0000009b     ................
40011b30:	00000020 0000008f 00000030 0000008b      .......0.......
40011b40:	00000004 000000ef 00000104 000000ef     ................
40011b50:	00000184 000000af 00000154 000000e9     ........T.......
40011b60:	000001d4 000000a9 10000004 000000ee     ................
40011b70:	10000104 000000ee 10000184 000000ae     ................
40011b80:	10000154 000000e8 100001d4 000000a8     T...............
40011b90:	00000002 00000077 00000102 00000077     ....w.......w...
40011ba0:	000001c2 00000035 000001d2 00000031     ....5.......1...
40011bb0:	10000002 00000076 10000102 00000076     ....v.......v...
40011bc0:	100001c2 00000034 00000258 00000199     ....4...X.......
40011bd0:	00000248 0000019d 00000458 00000299     H.......X.......
40011be0:	00000448 0000029d 00000848 0000049d     H.......H.......
40011bf0:	10000448 0000029c                       H.......

40011bf8 <glPmmcCsdValue>:
40011bf8:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40011c08 <glPmmcExtCsdValue>:
40011c08:	40040000 03020200 00000404 32321414     ...@..........22
40011c18:	00406464 00000000                       dd@.....

40011c20 <glConstGpifDefaults>:
40011c20:	00000220 00000000 00000000 00000000      ...............
40011c30:	000f0000 00000000 00000000 00000082     ................
40011c40:	00000782 00000000 00000000 00000000     ................
	...
40011c94:	00000006 00000000 0000ffff 0000010a     ................
40011ca4:	00000000 0000ffff 00000000 0000ffff     ................
40011cb4:	0000010a 00000000 0000ffff 00000000     ................
	...
40011d1c:	00010400 00010400 00010400 00010400     ................
40011d2c:	10000000 00000000 00000000 00000000     ................
	...
40011d4c:	00000001                                ....

40011d50 <glGpifConstMaxState>:
40011d50:	1f3f7fff                                ..?.

40011d54 <CyU3PSSEpTypeMap>:
40011d54:	01020003                                ....

40011d58 <glUsbMaxPacketSize>:
40011d58:	000003ff 00000040 00000040 00000400     ....@...@.......
40011d68:	00000200 00000400 00000400 00000400     ................
40011d78:	00000400                                ....

40011d7c <glUsb3CompliancePatterns>:
40011d7c:	00000600 0000044a 00000478 000005bc     ....J...x.......
40011d8c:	00000c00 000005fc 000001fc 00001400     ................
40011d9c:	00001000                                ....

40011da0 <CyU3PFirmwareEntry>:
40011da0:	e59f1038 	ldr	r1, [pc, #56]	; 40011de0 <CyU3PFirmwareEntry+0x40>
40011da4:	e3e00000 	mvn	r0, #0
40011da8:	e5810000 	str	r0, [r1]
40011dac:	e59f1030 	ldr	r1, [pc, #48]	; 40011de4 <CyU3PFirmwareEntry+0x44>
40011db0:	e2411008 	sub	r1, r1, #8
40011db4:	e3a02a01 	mov	r2, #4096	; 0x1000
40011db8:	e3a000d3 	mov	r0, #211	; 0xd3
40011dbc:	e121f000 	msr	CPSR_c, r0
40011dc0:	e0811002 	add	r1, r1, r2
40011dc4:	e3c11007 	bic	r1, r1, #7
40011dc8:	e1a0d001 	mov	sp, r1
40011dcc:	eb000271 	bl	40012798 <CyU3PSysSetupMMU>
40011dd0:	eb000620 	bl	40013658 <CyU3PSysCheckBootState>
40011dd4:	eb000003 	bl	40011de8 <CyU3PSetupStackPtrs>
40011dd8:	eb0000d1 	bl	40012124 <__CyU3PEntryKeep>
40011ddc:	eaffc603 	b	400035f0 <CyU3PToolChainInit>
40011de0:	fffff014 	.word	0xfffff014
40011de4:	40002000 	.word	0x40002000

40011de8 <CyU3PSetupStackPtrs>:
40011de8:	e3a01201 	mov	r1, #268435456	; 0x10000000
40011dec:	e2411008 	sub	r1, r1, #8
40011df0:	e3a02b02 	mov	r2, #2048	; 0x800
40011df4:	e3a030df 	mov	r3, #223	; 0xdf
40011df8:	e12ff003 	msr	CPSR_fsxc, r3
40011dfc:	e0811002 	add	r1, r1, r2
40011e00:	e3c11007 	bic	r1, r1, #7
40011e04:	e1a0d001 	mov	sp, r1
40011e08:	e3a0a000 	mov	sl, #0
40011e0c:	e3a0b000 	mov	fp, #0
40011e10:	e3a02c01 	mov	r2, #256	; 0x100
40011e14:	e3a030d7 	mov	r3, #215	; 0xd7
40011e18:	e12ff003 	msr	CPSR_fsxc, r3
40011e1c:	e0811002 	add	r1, r1, r2
40011e20:	e3c11007 	bic	r1, r1, #7
40011e24:	e1a0d001 	mov	sp, r1
40011e28:	e3a0a000 	mov	sl, #0
40011e2c:	e3a0b000 	mov	fp, #0
40011e30:	e3a02c01 	mov	r2, #256	; 0x100
40011e34:	e3a030db 	mov	r3, #219	; 0xdb
40011e38:	e12ff003 	msr	CPSR_fsxc, r3
40011e3c:	e0811002 	add	r1, r1, r2
40011e40:	e3c11007 	bic	r1, r1, #7
40011e44:	e1a0d001 	mov	sp, r1
40011e48:	e3a0a000 	mov	sl, #0
40011e4c:	e3a0b000 	mov	fp, #0
40011e50:	e3a02c02 	mov	r2, #512	; 0x200
40011e54:	e3a000d1 	mov	r0, #209	; 0xd1
40011e58:	e121f000 	msr	CPSR_c, r0
40011e5c:	e0811002 	add	r1, r1, r2
40011e60:	e3c11007 	bic	r1, r1, #7
40011e64:	e1a0d001 	mov	sp, r1
40011e68:	e3a0a000 	mov	sl, #0
40011e6c:	e3a0b000 	mov	fp, #0
40011e70:	e3a02b01 	mov	r2, #1024	; 0x400
40011e74:	e3a000d2 	mov	r0, #210	; 0xd2
40011e78:	e121f000 	msr	CPSR_c, r0
40011e7c:	e0811002 	add	r1, r1, r2
40011e80:	e3c11007 	bic	r1, r1, #7
40011e84:	e1a0d001 	mov	sp, r1
40011e88:	e3a02a01 	mov	r2, #4096	; 0x1000
40011e8c:	e3a000d3 	mov	r0, #211	; 0xd3
40011e90:	e121f000 	msr	CPSR_c, r0
40011e94:	e0811002 	add	r1, r1, r2
40011e98:	e3c11007 	bic	r1, r1, #7
40011e9c:	e1a0d001 	mov	sp, r1
40011ea0:	e12fff1e 	bx	lr

40011ea4 <CyU3PSysCleanDCache>:
40011ea4:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40011ea8:	1afffffd 	bne	40011ea4 <CyU3PSysCleanDCache>
40011eac:	e12fff1e 	bx	lr

40011eb0 <CyU3PSysClearDCache>:
40011eb0:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40011eb4:	1afffffd 	bne	40011eb0 <CyU3PSysClearDCache>
40011eb8:	e12fff1e 	bx	lr

40011ebc <CyU3PSysFlushIRegion>:
40011ebc:	e3510000 	cmp	r1, #0
40011ec0:	0a00000a 	beq	40011ef0 <CyU3PSysFlushIRegion+0x34>
40011ec4:	e0801001 	add	r1, r0, r1
40011ec8:	e3c0001f 	bic	r0, r0, #31
40011ecc:	e3a0201f 	mov	r2, #31
40011ed0:	e1110002 	tst	r1, r2
40011ed4:	e0411000 	sub	r1, r1, r0
40011ed8:	e1a012a1 	lsr	r1, r1, #5
40011edc:	12811001 	addne	r1, r1, #1
40011ee0:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40011ee4:	e2800020 	add	r0, r0, #32
40011ee8:	e2511001 	subs	r1, r1, #1
40011eec:	1afffffb 	bne	40011ee0 <CyU3PSysFlushIRegion+0x24>
40011ef0:	e12fff1e 	bx	lr

40011ef4 <CyU3PSysClearDRegion>:
40011ef4:	e3510000 	cmp	r1, #0
40011ef8:	0a00000a 	beq	40011f28 <CyU3PSysClearDRegion+0x34>
40011efc:	e0801001 	add	r1, r0, r1
40011f00:	e3c0001f 	bic	r0, r0, #31
40011f04:	e3a0201f 	mov	r2, #31
40011f08:	e1110002 	tst	r1, r2
40011f0c:	e0411000 	sub	r1, r1, r0
40011f10:	e1a012a1 	lsr	r1, r1, #5
40011f14:	12811001 	addne	r1, r1, #1
40011f18:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
40011f1c:	e2800020 	add	r0, r0, #32
40011f20:	e2511001 	subs	r1, r1, #1
40011f24:	1afffffb 	bne	40011f18 <CyU3PSysClearDRegion+0x24>
40011f28:	e12fff1e 	bx	lr

40011f2c <CyU3PSysCleanDRegion>:
40011f2c:	e3510000 	cmp	r1, #0
40011f30:	0a00000a 	beq	40011f60 <CyU3PSysCleanDRegion+0x34>
40011f34:	e0801001 	add	r1, r0, r1
40011f38:	e3c0001f 	bic	r0, r0, #31
40011f3c:	e3a0201f 	mov	r2, #31
40011f40:	e1110002 	tst	r1, r2
40011f44:	e0411000 	sub	r1, r1, r0
40011f48:	e1a012a1 	lsr	r1, r1, #5
40011f4c:	12811001 	addne	r1, r1, #1
40011f50:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
40011f54:	e2800020 	add	r0, r0, #32
40011f58:	e2511001 	subs	r1, r1, #1
40011f5c:	1afffffb 	bne	40011f50 <CyU3PSysCleanDRegion+0x24>
40011f60:	e12fff1e 	bx	lr

40011f64 <CyU3PSysFlushDRegion>:
40011f64:	e3510000 	cmp	r1, #0
40011f68:	0a00000a 	beq	40011f98 <CyU3PSysFlushDRegion+0x34>
40011f6c:	e0801001 	add	r1, r0, r1
40011f70:	e3c0001f 	bic	r0, r0, #31
40011f74:	e3a0201f 	mov	r2, #31
40011f78:	e1110002 	tst	r1, r2
40011f7c:	e0411000 	sub	r1, r1, r0
40011f80:	e1a012a1 	lsr	r1, r1, #5
40011f84:	12811001 	addne	r1, r1, #1
40011f88:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
40011f8c:	e2800020 	add	r0, r0, #32
40011f90:	e2511001 	subs	r1, r1, #1
40011f94:	1afffffb 	bne	40011f88 <CyU3PSysFlushDRegion+0x24>
40011f98:	e12fff1e 	bx	lr

40011f9c <CyU3PSysCacheIRegion>:
40011f9c:	e3a03000 	mov	r3, #0
40011fa0:	e3510000 	cmp	r1, #0
40011fa4:	0a000023 	beq	40012038 <CyU3PSysCacheIRegion+0x9c>
40011fa8:	e0801001 	add	r1, r0, r1
40011fac:	e3c0001f 	bic	r0, r0, #31
40011fb0:	e3a0201f 	mov	r2, #31
40011fb4:	e1110002 	tst	r1, r2
40011fb8:	e0411000 	sub	r1, r1, r0
40011fbc:	e1a012a1 	lsr	r1, r1, #5
40011fc0:	12811001 	addne	r1, r1, #1
40011fc4:	e351003f 	cmp	r1, #63	; 0x3f
40011fc8:	8a00001a 	bhi	40012038 <CyU3PSysCacheIRegion+0x9c>
40011fcc:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
40011fd0:	e20c200f 	and	r2, ip, #15
40011fd4:	e3a03001 	mov	r3, #1
40011fd8:	e11c0003 	tst	ip, r3
40011fdc:	11a03083 	lslne	r3, r3, #1
40011fe0:	111c0003 	tstne	ip, r3
40011fe4:	11a03083 	lslne	r3, r3, #1
40011fe8:	111c0003 	tstne	ip, r3
40011fec:	11a03083 	lslne	r3, r3, #1
40011ff0:	1a000010 	bne	40012038 <CyU3PSysCacheIRegion+0x9c>
40011ff4:	e3510000 	cmp	r1, #0
40011ff8:	0a00000e 	beq	40012038 <CyU3PSysCacheIRegion+0x9c>
40011ffc:	e1e03003 	mvn	r3, r3
40012000:	e203300f 	and	r3, r3, #15
40012004:	e3ccc00f 	bic	ip, ip, #15
40012008:	e08cc003 	add	ip, ip, r3
4001200c:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
40012010:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
40012014:	e2800020 	add	r0, r0, #32
40012018:	e2511001 	subs	r1, r1, #1
4001201c:	1afffffb 	bne	40012010 <CyU3PSysCacheIRegion+0x74>
40012020:	e1e0300c 	mvn	r3, ip
40012024:	e203300f 	and	r3, r3, #15
40012028:	e1822003 	orr	r2, r2, r3
4001202c:	e3ccc00f 	bic	ip, ip, #15
40012030:	e00cc002 	and	ip, ip, r2
40012034:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
40012038:	e1a00003 	mov	r0, r3
4001203c:	e12fff1e 	bx	lr

40012040 <CyU3PSysCacheDRegion>:
40012040:	e3a03000 	mov	r3, #0
40012044:	e3510000 	cmp	r1, #0
40012048:	0a000022 	beq	400120d8 <CyU3PSysCacheDRegion+0x98>
4001204c:	e0801001 	add	r1, r0, r1
40012050:	e3c0001f 	bic	r0, r0, #31
40012054:	e3a0201f 	mov	r2, #31
40012058:	e1110002 	tst	r1, r2
4001205c:	e0411000 	sub	r1, r1, r0
40012060:	e1a012a1 	lsr	r1, r1, #5
40012064:	12811001 	addne	r1, r1, #1
40012068:	e351003f 	cmp	r1, #63	; 0x3f
4001206c:	8a000019 	bhi	400120d8 <CyU3PSysCacheDRegion+0x98>
40012070:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
40012074:	e20c200f 	and	r2, ip, #15
40012078:	e3a03001 	mov	r3, #1
4001207c:	e11c0003 	tst	ip, r3
40012080:	11a03083 	lslne	r3, r3, #1
40012084:	111c0003 	tstne	ip, r3
40012088:	11a03083 	lslne	r3, r3, #1
4001208c:	111c0003 	tstne	ip, r3
40012090:	11a03083 	lslne	r3, r3, #1
40012094:	1a00000f 	bne	400120d8 <CyU3PSysCacheDRegion+0x98>
40012098:	e3510000 	cmp	r1, #0
4001209c:	0a00000d 	beq	400120d8 <CyU3PSysCacheDRegion+0x98>
400120a0:	e1e03003 	mvn	r3, r3
400120a4:	e203300f 	and	r3, r3, #15
400120a8:	e3ccc00f 	bic	ip, ip, #15
400120ac:	e08cc003 	add	ip, ip, r3
400120b0:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
400120b4:	e4903020 	ldr	r3, [r0], #32
400120b8:	e2511001 	subs	r1, r1, #1
400120bc:	1afffffc 	bne	400120b4 <CyU3PSysCacheDRegion+0x74>
400120c0:	e1e0300c 	mvn	r3, ip
400120c4:	e203300f 	and	r3, r3, #15
400120c8:	e1822003 	orr	r2, r2, r3
400120cc:	e3ccc00f 	bic	ip, ip, #15
400120d0:	e00cc002 	and	ip, ip, r2
400120d4:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
400120d8:	e1a00003 	mov	r0, r3
400120dc:	e12fff1e 	bx	lr

400120e0 <CyU3PSysUnlockICache>:
400120e0:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
400120e4:	e3c0000f 	bic	r0, r0, #15
400120e8:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

400120ec <CyU3PSysUnlockDCache>:
400120ec:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
400120f0:	e3c0000f 	bic	r0, r0, #15
400120f4:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

400120f8 <__cyu3p_exception_vectors>:
400120f8:	e59ff028 	ldr	pc, [pc, #40]	; 40012128 <__CyU3PEntryKeep+0x4>
400120fc:	e59ff028 	ldr	pc, [pc, #40]	; 4001212c <__CyU3PEntryKeep+0x8>
40012100:	e59ff028 	ldr	pc, [pc, #40]	; 40012130 <__CyU3PEntryKeep+0xc>
40012104:	e59ff028 	ldr	pc, [pc, #40]	; 40012134 <__CyU3PEntryKeep+0x10>
40012108:	e59ff028 	ldr	pc, [pc, #40]	; 40012138 <__CyU3PEntryKeep+0x14>
4001210c:	e59ff028 	ldr	pc, [pc, #40]	; 4001213c <__CyU3PEntryKeep+0x18>
40012110:	e51ff120 	ldr	pc, [pc, #-288]	; 40011ff8 <CyU3PSysCacheIRegion+0x5c>
40012114:	e59ff024 	ldr	pc, [pc, #36]	; 40012140 <__CyU3PEntryKeep+0x1c>

40012118 <__CyU3PSWIHandler>:
40012118:	eafffffe 	b	40012118 <__CyU3PSWIHandler>

4001211c <__CyU3PReservedHandler>:
4001211c:	eafffffe 	b	4001211c <__CyU3PReservedHandler>

40012120 <__CyU3PFiqHandler>:
40012120:	eafffffe 	b	40012120 <__CyU3PFiqHandler>

40012124 <__CyU3PEntryKeep>:
40012124:	e12fff1e 	bx	lr
40012128:	40011da0 	.word	0x40011da0
4001212c:	40003618 	.word	0x40003618
40012130:	40012118 	.word	0x40012118
40012134:	4000361c 	.word	0x4000361c
40012138:	40003620 	.word	0x40003620
4001213c:	4001211c 	.word	0x4001211c
40012140:	40012120 	.word	0x40012120

Disassembly of section i.CyU3PDevCheckDevStateStruct:

40012144 <CyU3PDevCheckDevStateStruct>:
40012144:	e92d4038 	push	{r3, r4, r5, lr}
40012148:	e59f4118 	ldr	r4, [pc, #280]	; 40012268 <_etext+0x124>
4001214c:	e3a00000 	mov	r0, #0
40012150:	e58d0000 	str	r0, [sp]
40012154:	e5940000 	ldr	r0, [r4]
40012158:	e59f110c 	ldr	r1, [pc, #268]	; 4001226c <_etext+0x128>
4001215c:	e1500001 	cmp	r0, r1
40012160:	0a000000 	beq	40012168 <CyU3PDevCheckDevStateStruct+0x24>
40012164:	ea00003b 	b	40012258 <CyU3PDevCheckDevStateStruct+0x114>
40012168:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001216c:	e59f10fc 	ldr	r1, [pc, #252]	; 40012270 <_etext+0x12c>
40012170:	e1500001 	cmp	r0, r1
40012174:	1a000005 	bne	40012190 <CyU3PDevCheckDevStateStruct+0x4c>
40012178:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
4001217c:	e59f10f0 	ldr	r1, [pc, #240]	; 40012274 <_etext+0x130>
40012180:	e1500001 	cmp	r0, r1
40012184:	3a000001 	bcc	40012190 <CyU3PDevCheckDevStateStruct+0x4c>
40012188:	e594500c 	ldr	r5, [r4, #12]
4001218c:	ea000001 	b	40012198 <CyU3PDevCheckDevStateStruct+0x54>
40012190:	e594000c 	ldr	r0, [r4, #12]
40012194:	e20050ff 	and	r5, r0, #255	; 0xff
40012198:	e594000c 	ldr	r0, [r4, #12]
4001219c:	e3500000 	cmp	r0, #0
400121a0:	0a000003 	beq	400121b4 <CyU3PDevCheckDevStateStruct+0x70>
400121a4:	e594000c 	ldr	r0, [r4, #12]
400121a8:	e59f10c8 	ldr	r1, [pc, #200]	; 40012278 <_etext+0x134>
400121ac:	e1500001 	cmp	r0, r1
400121b0:	9a000000 	bls	400121b8 <CyU3PDevCheckDevStateStruct+0x74>
400121b4:	ea000027 	b	40012258 <CyU3PDevCheckDevStateStruct+0x114>
400121b8:	e1a0200d 	mov	r2, sp
400121bc:	e1a01005 	mov	r1, r5
400121c0:	e59f00a0 	ldr	r0, [pc, #160]	; 40012268 <_etext+0x124>
400121c4:	eb00049f 	bl	40013448 <CyU3PComputeChecksum>
400121c8:	e594000c 	ldr	r0, [r4, #12]
400121cc:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
400121d0:	e2800a02 	add	r0, r0, #8192	; 0x2000
400121d4:	e5900000 	ldr	r0, [r0]
400121d8:	e59d1000 	ldr	r1, [sp]
400121dc:	e1500001 	cmp	r0, r1
400121e0:	0a000000 	beq	400121e8 <CyU3PDevCheckDevStateStruct+0xa4>
400121e4:	ea00001b 	b	40012258 <CyU3PDevCheckDevStateStruct+0x114>
400121e8:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400121ec:	e59f107c 	ldr	r1, [pc, #124]	; 40012270 <_etext+0x12c>
400121f0:	e1500001 	cmp	r0, r1
400121f4:	0a000001 	beq	40012200 <CyU3PDevCheckDevStateStruct+0xbc>
400121f8:	e59f007c 	ldr	r0, [pc, #124]	; 4001227c <_etext+0x138>
400121fc:	e58400dc 	str	r0, [r4, #220]	; 0xdc
40012200:	e3a00001 	mov	r0, #1
40012204:	e59f1074 	ldr	r1, [pc, #116]	; 40012280 <_etext+0x13c>
40012208:	e5810000 	str	r0, [r1]
4001220c:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012210:	e59f106c 	ldr	r1, [pc, #108]	; 40012284 <_etext+0x140>
40012214:	e1500001 	cmp	r0, r1
40012218:	3a00000d 	bcc	40012254 <CyU3PDevCheckDevStateStruct+0x110>
4001221c:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
40012220:	e3500000 	cmp	r0, #0
40012224:	0a00000a 	beq	40012254 <CyU3PDevCheckDevStateStruct+0x110>
40012228:	e59f0058 	ldr	r0, [pc, #88]	; 40012288 <_etext+0x144>
4001222c:	e5900018 	ldr	r0, [r0, #24]
40012230:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012234:	0a000006 	beq	40012254 <CyU3PDevCheckDevStateStruct+0x110>
40012238:	e59f004c 	ldr	r0, [pc, #76]	; 4001228c <_etext+0x148>
4001223c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40012240:	e3100001 	tst	r0, #1
40012244:	0a000002 	beq	40012254 <CyU3PDevCheckDevStateStruct+0x110>
40012248:	e3a00001 	mov	r0, #1
4001224c:	e59f103c 	ldr	r1, [pc, #60]	; 40012290 <_etext+0x14c>
40012250:	e5810000 	str	r0, [r1]
40012254:	e8bd8038 	pop	{r3, r4, r5, pc}
40012258:	e1a00000 	nop			; (mov r0, r0)
4001225c:	e3e00000 	mvn	r0, #0
40012260:	e5840000 	str	r0, [r4]
40012264:	eafffffa 	b	40012254 <CyU3PDevCheckDevStateStruct+0x110>
40012268:	40002000 	.word	0x40002000
4001226c:	42575943 	.word	0x42575943
40012270:	42335846 	.word	0x42335846
40012274:	00010300 	.word	0x00010300
40012278:	00000ff8 	.word	0x00000ff8
4001227c:	00010101 	.word	0x00010101
40012280:	40030c68 	.word	0x40030c68
40012284:	00010201 	.word	0x00010201
40012288:	e0052000 	.word	0xe0052000
4001228c:	e0001000 	.word	0xe0001000
40012290:	40030c6c 	.word	0x40030c6c

Disassembly of section i.CyU3PDeviceCacheControl:

40012294 <CyU3PDeviceCacheControl>:
40012294:	e92d4070 	push	{r4, r5, r6, lr}
40012298:	e1a04000 	mov	r4, r0
4001229c:	e1a06001 	mov	r6, r1
400122a0:	e1a05002 	mov	r5, r2
400122a4:	e3550000 	cmp	r5, #0
400122a8:	0a000003 	beq	400122bc <CyU3PDeviceCacheControl+0x28>
400122ac:	e3560000 	cmp	r6, #0
400122b0:	1a000001 	bne	400122bc <CyU3PDeviceCacheControl+0x28>
400122b4:	e3a00040 	mov	r0, #64	; 0x40
400122b8:	e8bd8070 	pop	{r4, r5, r6, pc}
400122bc:	eb000181 	bl	400128c8 <CyU3PSysBarrierSync>
400122c0:	ebfffefa 	bl	40011eb0 <CyU3PSysClearDCache>
400122c4:	eb0001a1 	bl	40012950 <CyU3PSysFlushICache>
400122c8:	eb00018f 	bl	4001290c <CyU3PSysDisableICache>
400122cc:	eb00018a 	bl	400128fc <CyU3PSysDisableDCache>
400122d0:	e3540000 	cmp	r4, #0
400122d4:	0a000003 	beq	400122e8 <CyU3PDeviceCacheControl+0x54>
400122d8:	eb000193 	bl	4001292c <CyU3PSysEnableICache>
400122dc:	eb000179 	bl	400128c8 <CyU3PSysBarrierSync>
400122e0:	e59f0038 	ldr	r0, [pc, #56]	; 40012320 <CyU3PDeviceCacheControl+0x8c>
400122e4:	e5804000 	str	r4, [r0]
400122e8:	e3a00000 	mov	r0, #0
400122ec:	e59f1030 	ldr	r1, [pc, #48]	; 40012324 <CyU3PDeviceCacheControl+0x90>
400122f0:	e5810000 	str	r0, [r1]
400122f4:	e3560000 	cmp	r6, #0
400122f8:	0a000005 	beq	40012314 <CyU3PDeviceCacheControl+0x80>
400122fc:	eb000186 	bl	4001291c <CyU3PSysEnableDCache>
40012300:	eb000170 	bl	400128c8 <CyU3PSysBarrierSync>
40012304:	e59f0018 	ldr	r0, [pc, #24]	; 40012324 <CyU3PDeviceCacheControl+0x90>
40012308:	e5805000 	str	r5, [r0]
4001230c:	e59f0014 	ldr	r0, [pc, #20]	; 40012328 <CyU3PDeviceCacheControl+0x94>
40012310:	e5806000 	str	r6, [r0]
40012314:	eb00016b 	bl	400128c8 <CyU3PSysBarrierSync>
40012318:	e3a00000 	mov	r0, #0
4001231c:	eaffffe5 	b	400122b8 <CyU3PDeviceCacheControl+0x24>
40012320:	40030c5c 	.word	0x40030c5c
40012324:	40030c64 	.word	0x40030c64
40012328:	40030c60 	.word	0x40030c60

Disassembly of section i.CyU3PDeviceInit:

4001232c <CyU3PDeviceInit>:
4001232c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40012330:	e1a04000 	mov	r4, r0
40012334:	e3a06000 	mov	r6, #0
40012338:	e3a07000 	mov	r7, #0
4001233c:	e3a09000 	mov	r9, #0
40012340:	e3a0a000 	mov	sl, #0
40012344:	e3540000 	cmp	r4, #0
40012348:	0a000033 	beq	4001241c <CyU3PDeviceInit+0xf0>
4001234c:	e5d40004 	ldrb	r0, [r4, #4]
40012350:	e3500002 	cmp	r0, #2
40012354:	ba000002 	blt	40012364 <CyU3PDeviceInit+0x38>
40012358:	e5d40004 	ldrb	r0, [r4, #4]
4001235c:	e3500010 	cmp	r0, #16
40012360:	da000001 	ble	4001236c <CyU3PDeviceInit+0x40>
40012364:	e3a00040 	mov	r0, #64	; 0x40
40012368:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001236c:	e5d40005 	ldrb	r0, [r4, #5]
40012370:	e3500002 	cmp	r0, #2
40012374:	ba000002 	blt	40012384 <CyU3PDeviceInit+0x58>
40012378:	e5d40005 	ldrb	r0, [r4, #5]
4001237c:	e3500010 	cmp	r0, #16
40012380:	da000001 	ble	4001238c <CyU3PDeviceInit+0x60>
40012384:	e3a00040 	mov	r0, #64	; 0x40
40012388:	eafffff6 	b	40012368 <CyU3PDeviceInit+0x3c>
4001238c:	e5d40006 	ldrb	r0, [r4, #6]
40012390:	e3500002 	cmp	r0, #2
40012394:	ba000002 	blt	400123a4 <CyU3PDeviceInit+0x78>
40012398:	e5d40006 	ldrb	r0, [r4, #6]
4001239c:	e3500010 	cmp	r0, #16
400123a0:	da000001 	ble	400123ac <CyU3PDeviceInit+0x80>
400123a4:	e3a00040 	mov	r0, #64	; 0x40
400123a8:	eaffffee 	b	40012368 <CyU3PDeviceInit+0x3c>
400123ac:	e5d40006 	ldrb	r0, [r4, #6]
400123b0:	e5d41005 	ldrb	r1, [r4, #5]
400123b4:	e1500001 	cmp	r0, r1
400123b8:	ba000004 	blt	400123d0 <CyU3PDeviceInit+0xa4>
400123bc:	e5d41005 	ldrb	r1, [r4, #5]
400123c0:	e5d40006 	ldrb	r0, [r4, #6]
400123c4:	ebfff994 	bl	40010a1c <__aeabi_idivmod>
400123c8:	e3510000 	cmp	r1, #0
400123cc:	0a000001 	beq	400123d8 <CyU3PDeviceInit+0xac>
400123d0:	e3a00040 	mov	r0, #64	; 0x40
400123d4:	eaffffe3 	b	40012368 <CyU3PDeviceInit+0x3c>
400123d8:	e5d4000c 	ldrb	r0, [r4, #12]
400123dc:	e3500004 	cmp	r0, #4
400123e0:	ba000001 	blt	400123ec <CyU3PDeviceInit+0xc0>
400123e4:	e3a00040 	mov	r0, #64	; 0x40
400123e8:	eaffffde 	b	40012368 <CyU3PDeviceInit+0x3c>
400123ec:	e5d40004 	ldrb	r0, [r4, #4]
400123f0:	e2400001 	sub	r0, r0, #1
400123f4:	e5d41005 	ldrb	r1, [r4, #5]
400123f8:	e2411001 	sub	r1, r1, #1
400123fc:	e1800401 	orr	r0, r0, r1, lsl #8
40012400:	e5d41006 	ldrb	r1, [r4, #6]
40012404:	e2411001 	sub	r1, r1, #1
40012408:	e1800601 	orr	r0, r0, r1, lsl #12
4001240c:	e5d4100c 	ldrb	r1, [r4, #12]
40012410:	e1805201 	orr	r5, r0, r1, lsl #4
40012414:	e594a000 	ldr	sl, [r4]
40012418:	ea000000 	b	40012420 <CyU3PDeviceInit+0xf4>
4001241c:	e59f5334 	ldr	r5, [pc, #820]	; 40012758 <CyU3PDeviceInit+0x42c>
40012420:	e59f0334 	ldr	r0, [pc, #820]	; 4001275c <CyU3PDeviceInit+0x430>
40012424:	e5805004 	str	r5, [r0, #4]
40012428:	e5905004 	ldr	r5, [r0, #4]
4001242c:	e3a0000a 	mov	r0, #10
40012430:	eb0003f6 	bl	40013410 <CyU3PBusyWait>
40012434:	e59f0320 	ldr	r0, [pc, #800]	; 4001275c <CyU3PDeviceInit+0x430>
40012438:	e5900000 	ldr	r0, [r0]
4001243c:	e2000807 	and	r0, r0, #458752	; 0x70000
40012440:	e1a05820 	lsr	r5, r0, #16
40012444:	e2150003 	ands	r0, r5, #3
40012448:	0a000004 	beq	40012460 <CyU3PDeviceInit+0x134>
4001244c:	e3500001 	cmp	r0, #1
40012450:	0a00000e 	beq	40012490 <CyU3PDeviceInit+0x164>
40012454:	e3500002 	cmp	r0, #2
40012458:	1a000024 	bne	400124f0 <CyU3PDeviceInit+0x1c4>
4001245c:	ea000014 	b	400124b4 <CyU3PDeviceInit+0x188>
40012460:	e1a00000 	nop			; (mov r0, r0)
40012464:	e59f92f4 	ldr	r9, [pc, #756]	; 40012760 <CyU3PDeviceInit+0x434>
40012468:	e35a0000 	cmp	sl, #0
4001246c:	0a000003 	beq	40012480 <CyU3PDeviceInit+0x154>
40012470:	e59f02ec 	ldr	r0, [pc, #748]	; 40012764 <CyU3PDeviceInit+0x438>
40012474:	e59f12ec 	ldr	r1, [pc, #748]	; 40012768 <CyU3PDeviceInit+0x43c>
40012478:	e5810000 	str	r0, [r1]
4001247c:	ea000002 	b	4001248c <CyU3PDeviceInit+0x160>
40012480:	e59f02e4 	ldr	r0, [pc, #740]	; 4001276c <CyU3PDeviceInit+0x440>
40012484:	e59f12dc 	ldr	r1, [pc, #732]	; 40012768 <CyU3PDeviceInit+0x43c>
40012488:	e5810000 	str	r0, [r1]
4001248c:	ea000020 	b	40012514 <CyU3PDeviceInit+0x1e8>
40012490:	e1a00000 	nop			; (mov r0, r0)
40012494:	e59f92d4 	ldr	r9, [pc, #724]	; 40012770 <CyU3PDeviceInit+0x444>
40012498:	e1a00209 	lsl	r0, r9, #4
4001249c:	e59f12c4 	ldr	r1, [pc, #708]	; 40012768 <CyU3PDeviceInit+0x43c>
400124a0:	e5810000 	str	r0, [r1]
400124a4:	e59f02c8 	ldr	r0, [pc, #712]	; 40012774 <CyU3PDeviceInit+0x448>
400124a8:	e59f12c8 	ldr	r1, [pc, #712]	; 40012778 <CyU3PDeviceInit+0x44c>
400124ac:	e5810000 	str	r0, [r1]
400124b0:	ea000017 	b	40012514 <CyU3PDeviceInit+0x1e8>
400124b4:	e1a00000 	nop			; (mov r0, r0)
400124b8:	e59f92bc 	ldr	r9, [pc, #700]	; 4001277c <CyU3PDeviceInit+0x450>
400124bc:	e59f02bc 	ldr	r0, [pc, #700]	; 40012780 <CyU3PDeviceInit+0x454>
400124c0:	e59f12b0 	ldr	r1, [pc, #688]	; 40012778 <CyU3PDeviceInit+0x44c>
400124c4:	e5810000 	str	r0, [r1]
400124c8:	e35a0000 	cmp	sl, #0
400124cc:	0a000003 	beq	400124e0 <CyU3PDeviceInit+0x1b4>
400124d0:	e59f028c 	ldr	r0, [pc, #652]	; 40012764 <CyU3PDeviceInit+0x438>
400124d4:	e59f128c 	ldr	r1, [pc, #652]	; 40012768 <CyU3PDeviceInit+0x43c>
400124d8:	e5810000 	str	r0, [r1]
400124dc:	ea000002 	b	400124ec <CyU3PDeviceInit+0x1c0>
400124e0:	e59f0284 	ldr	r0, [pc, #644]	; 4001276c <CyU3PDeviceInit+0x440>
400124e4:	e59f127c 	ldr	r1, [pc, #636]	; 40012768 <CyU3PDeviceInit+0x43c>
400124e8:	e5810000 	str	r0, [r1]
400124ec:	ea000008 	b	40012514 <CyU3PDeviceInit+0x1e8>
400124f0:	e1a00000 	nop			; (mov r0, r0)
400124f4:	e59f9288 	ldr	r9, [pc, #648]	; 40012784 <CyU3PDeviceInit+0x458>
400124f8:	e1a00189 	lsl	r0, r9, #3
400124fc:	e59f1264 	ldr	r1, [pc, #612]	; 40012768 <CyU3PDeviceInit+0x43c>
40012500:	e5810000 	str	r0, [r1]
40012504:	e59f027c 	ldr	r0, [pc, #636]	; 40012788 <CyU3PDeviceInit+0x45c>
40012508:	e59f1268 	ldr	r1, [pc, #616]	; 40012778 <CyU3PDeviceInit+0x44c>
4001250c:	e5810000 	str	r0, [r1]
40012510:	e1a00000 	nop			; (mov r0, r0)
40012514:	e1a00000 	nop			; (mov r0, r0)
40012518:	e59f023c 	ldr	r0, [pc, #572]	; 4001275c <CyU3PDeviceInit+0x430>
4001251c:	e5900000 	ldr	r0, [r0]
40012520:	e200003f 	and	r0, r0, #63	; 0x3f
40012524:	e3500015 	cmp	r0, #21
40012528:	1a000002 	bne	40012538 <CyU3PDeviceInit+0x20c>
4001252c:	e59f0230 	ldr	r0, [pc, #560]	; 40012764 <CyU3PDeviceInit+0x438>
40012530:	e59f1230 	ldr	r1, [pc, #560]	; 40012768 <CyU3PDeviceInit+0x43c>
40012534:	e5810000 	str	r0, [r1]
40012538:	e59f0228 	ldr	r0, [pc, #552]	; 40012768 <CyU3PDeviceInit+0x43c>
4001253c:	e5900000 	ldr	r0, [r0]
40012540:	e59f121c 	ldr	r1, [pc, #540]	; 40012764 <CyU3PDeviceInit+0x438>
40012544:	e1500001 	cmp	r0, r1
40012548:	1a000013 	bne	4001259c <CyU3PDeviceInit+0x270>
4001254c:	e59f0208 	ldr	r0, [pc, #520]	; 4001275c <CyU3PDeviceInit+0x430>
40012550:	e5900000 	ldr	r0, [r0]
40012554:	e200003f 	and	r0, r0, #63	; 0x3f
40012558:	e3500015 	cmp	r0, #21
4001255c:	0a00000e 	beq	4001259c <CyU3PDeviceInit+0x270>
40012560:	e59f01f4 	ldr	r0, [pc, #500]	; 4001275c <CyU3PDeviceInit+0x430>
40012564:	e5900000 	ldr	r0, [r0]
40012568:	e3c0003f 	bic	r0, r0, #63	; 0x3f
4001256c:	e3800015 	orr	r0, r0, #21
40012570:	e59f11e4 	ldr	r1, [pc, #484]	; 4001275c <CyU3PDeviceInit+0x430>
40012574:	e5810000 	str	r0, [r1]
40012578:	e3a00064 	mov	r0, #100	; 0x64
4001257c:	eb0003a3 	bl	40013410 <CyU3PBusyWait>
40012580:	e1a00000 	nop			; (mov r0, r0)
40012584:	e59f01d0 	ldr	r0, [pc, #464]	; 4001275c <CyU3PDeviceInit+0x430>
40012588:	e5900000 	ldr	r0, [r0]
4001258c:	e3100702 	tst	r0, #524288	; 0x80000
40012590:	0afffffb 	beq	40012584 <CyU3PDeviceInit+0x258>
40012594:	e3a00064 	mov	r0, #100	; 0x64
40012598:	eb00039c 	bl	40013410 <CyU3PBusyWait>
4001259c:	e59f01e8 	ldr	r0, [pc, #488]	; 4001278c <CyU3PDeviceInit+0x460>
400125a0:	e5908014 	ldr	r8, [r0, #20]
400125a4:	e3a0000a 	mov	r0, #10
400125a8:	eb000398 	bl	40013410 <CyU3PBusyWait>
400125ac:	e2080003 	and	r0, r8, #3
400125b0:	e3500002 	cmp	r0, #2
400125b4:	1a000005 	bne	400125d0 <CyU3PDeviceInit+0x2a4>
400125b8:	e3a07001 	mov	r7, #1
400125bc:	e3880003 	orr	r0, r8, #3
400125c0:	e59f11c4 	ldr	r1, [pc, #452]	; 4001278c <CyU3PDeviceInit+0x460>
400125c4:	e5810014 	str	r0, [r1, #20]
400125c8:	e3a0000a 	mov	r0, #10
400125cc:	eb00038f 	bl	40013410 <CyU3PBusyWait>
400125d0:	e3180102 	tst	r8, #-2147483648	; 0x80000000
400125d4:	1a000004 	bne	400125ec <CyU3PDeviceInit+0x2c0>
400125d8:	e3540000 	cmp	r4, #0
400125dc:	0a000003 	beq	400125f0 <CyU3PDeviceInit+0x2c4>
400125e0:	e5940008 	ldr	r0, [r4, #8]
400125e4:	e3500000 	cmp	r0, #0
400125e8:	1a000000 	bne	400125f0 <CyU3PDeviceInit+0x2c4>
400125ec:	e3a06001 	mov	r6, #1
400125f0:	e3560000 	cmp	r6, #0
400125f4:	1a000014 	bne	4001264c <CyU3PDeviceInit+0x320>
400125f8:	e3c80003 	bic	r0, r8, #3
400125fc:	e3800001 	orr	r0, r0, #1
40012600:	e59f1184 	ldr	r1, [pc, #388]	; 4001278c <CyU3PDeviceInit+0x460>
40012604:	e5810014 	str	r0, [r1, #20]
40012608:	e3a00064 	mov	r0, #100	; 0x64
4001260c:	eb00037f 	bl	40013410 <CyU3PBusyWait>
40012610:	e59f0174 	ldr	r0, [pc, #372]	; 4001278c <CyU3PDeviceInit+0x460>
40012614:	e5905018 	ldr	r5, [r0, #24]
40012618:	e3a000c8 	mov	r0, #200	; 0xc8
4001261c:	eb00037b 	bl	40013410 <CyU3PBusyWait>
40012620:	e59f0164 	ldr	r0, [pc, #356]	; 4001278c <CyU3PDeviceInit+0x460>
40012624:	e5900018 	ldr	r0, [r0, #24]
40012628:	e1500005 	cmp	r0, r5
4001262c:	1a000000 	bne	40012634 <CyU3PDeviceInit+0x308>
40012630:	e3a06001 	mov	r6, #1
40012634:	e3a00064 	mov	r0, #100	; 0x64
40012638:	eb000374 	bl	40013410 <CyU3PBusyWait>
4001263c:	e59f0148 	ldr	r0, [pc, #328]	; 4001278c <CyU3PDeviceInit+0x460>
40012640:	e5808014 	str	r8, [r0, #20]
40012644:	e3a00064 	mov	r0, #100	; 0x64
40012648:	eb000370 	bl	40013410 <CyU3PBusyWait>
4001264c:	e3560000 	cmp	r6, #0
40012650:	0a000026 	beq	400126f0 <CyU3PDeviceInit+0x3c4>
40012654:	e59f0130 	ldr	r0, [pc, #304]	; 4001278c <CyU3PDeviceInit+0x460>
40012658:	e5900014 	ldr	r0, [r0, #20]
4001265c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012660:	1a000022 	bne	400126f0 <CyU3PDeviceInit+0x3c4>
40012664:	e1a09109 	lsl	r9, r9, #2
40012668:	e3a01c7d 	mov	r1, #32000	; 0x7d00
4001266c:	e1a00009 	mov	r0, r9
40012670:	ebfff897 	bl	400108d4 <__aeabi_uidivmod>
40012674:	e1a09000 	mov	r9, r0
40012678:	e2095003 	and	r5, r9, #3
4001267c:	e1a09129 	lsr	r9, r9, #2
40012680:	e3550010 	cmp	r5, #16
40012684:	2a000000 	bcs	4001268c <CyU3PDeviceInit+0x360>
40012688:	e2499001 	sub	r9, r9, #1
4001268c:	e1a09809 	lsl	r9, r9, #16
40012690:	e59f00f8 	ldr	r0, [pc, #248]	; 40012790 <CyU3PDeviceInit+0x464>
40012694:	e1590000 	cmp	r9, r0
40012698:	9a000000 	bls	400126a0 <CyU3PDeviceInit+0x374>
4001269c:	e1a09000 	mov	r9, r0
400126a0:	e3a00064 	mov	r0, #100	; 0x64
400126a4:	eb000359 	bl	40013410 <CyU3PBusyWait>
400126a8:	e59f00dc 	ldr	r0, [pc, #220]	; 4001278c <CyU3PDeviceInit+0x460>
400126ac:	e5905014 	ldr	r5, [r0, #20]
400126b0:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
400126b4:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
400126b8:	e1805009 	orr	r5, r0, r9
400126bc:	e3a00064 	mov	r0, #100	; 0x64
400126c0:	eb000352 	bl	40013410 <CyU3PBusyWait>
400126c4:	e59f00c0 	ldr	r0, [pc, #192]	; 4001278c <CyU3PDeviceInit+0x460>
400126c8:	e5805014 	str	r5, [r0, #20]
400126cc:	e3a00064 	mov	r0, #100	; 0x64
400126d0:	eb00034e 	bl	40013410 <CyU3PBusyWait>
400126d4:	e59f00b0 	ldr	r0, [pc, #176]	; 4001278c <CyU3PDeviceInit+0x460>
400126d8:	e5900014 	ldr	r0, [r0, #20]
400126dc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400126e0:	e59f10a4 	ldr	r1, [pc, #164]	; 4001278c <CyU3PDeviceInit+0x460>
400126e4:	e5810014 	str	r0, [r1, #20]
400126e8:	e3a00064 	mov	r0, #100	; 0x64
400126ec:	eb000347 	bl	40013410 <CyU3PBusyWait>
400126f0:	e59f0094 	ldr	r0, [pc, #148]	; 4001278c <CyU3PDeviceInit+0x460>
400126f4:	e5900000 	ldr	r0, [r0]
400126f8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400126fc:	e59f1088 	ldr	r1, [pc, #136]	; 4001278c <CyU3PDeviceInit+0x460>
40012700:	e5810000 	str	r0, [r1]
40012704:	e3a00064 	mov	r0, #100	; 0x64
40012708:	eb000340 	bl	40013410 <CyU3PBusyWait>
4001270c:	eb003dcb 	bl	40021e40 <CyU3PVicInit>
40012710:	e10f0000 	mrs	r0, CPSR
40012714:	e3c00080 	bic	r0, r0, #128	; 0x80
40012718:	e121f000 	msr	CPSR_c, r0
4001271c:	e3570000 	cmp	r7, #0
40012720:	0a000002 	beq	40012730 <CyU3PDeviceInit+0x404>
40012724:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40012728:	e3a00001 	mov	r0, #1
4001272c:	eb000024 	bl	400127c4 <CyU3PSysWatchDogConfigure>
40012730:	e59f005c 	ldr	r0, [pc, #92]	; 40012794 <CyU3PDeviceInit+0x468>
40012734:	e5900000 	ldr	r0, [r0]
40012738:	e3500000 	cmp	r0, #0
4001273c:	0a000002 	beq	4001274c <CyU3PDeviceInit+0x420>
40012740:	e59f004c 	ldr	r0, [pc, #76]	; 40012794 <CyU3PDeviceInit+0x468>
40012744:	e5900000 	ldr	r0, [r0]
40012748:	eb000594 	bl	40013da0 <CyU3PLppRestoreState>
4001274c:	ebfffe7c 	bl	40012144 <_etext>
40012750:	e3a00000 	mov	r0, #0
40012754:	eaffff03 	b	40012368 <CyU3PDeviceInit+0x3c>
40012758:	00001131 	.word	0x00001131
4001275c:	e0052000 	.word	0xe0052000
40012760:	0124f800 	.word	0x0124f800
40012764:	18085800 	.word	0x18085800
40012768:	40030c50 	.word	0x40030c50
4001276c:	16e36000 	.word	0x16e36000
40012770:	018cba80 	.word	0x018cba80
40012774:	00910700 	.word	0x00910700
40012778:	40030c58 	.word	0x40030c58
4001277c:	0249f000 	.word	0x0249f000
40012780:	00910608 	.word	0x00910608
40012784:	03197500 	.word	0x03197500
40012788:	00910580 	.word	0x00910580
4001278c:	e0050000 	.word	0xe0050000
40012790:	7fff0000 	.word	0x7fff0000
40012794:	40030c8c 	.word	0x40030c8c

Disassembly of section i.CyU3PSysSetupMMU:

40012798 <CyU3PSysSetupMMU>:
40012798:	e92d4010 	push	{r4, lr}
4001279c:	eb000049 	bl	400128c8 <CyU3PSysBarrierSync>
400127a0:	ebfffdc2 	bl	40011eb0 <CyU3PSysClearDCache>
400127a4:	eb000069 	bl	40012950 <CyU3PSysFlushICache>
400127a8:	eb000049 	bl	400128d4 <CyU3PSysDisableCacheMMU>
400127ac:	eb00006a 	bl	4001295c <CyU3PSysInitTCMs>
400127b0:	eb000041 	bl	400128bc <CyU3PInitPageTable>
400127b4:	eb000061 	bl	40012940 <CyU3PSysEnableMMU>
400127b8:	eb00006c 	bl	40012970 <CyU3PSysLoadTLB>
400127bc:	eb000041 	bl	400128c8 <CyU3PSysBarrierSync>
400127c0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

400127c4 <CyU3PSysWatchDogConfigure>:
400127c4:	e92d4070 	push	{r4, r5, r6, lr}
400127c8:	e1a04000 	mov	r4, r0
400127cc:	e1a05001 	mov	r5, r1
400127d0:	e59f00d8 	ldr	r0, [pc, #216]	; 400128b0 <CyU3PSysWatchDogConfigure+0xec>
400127d4:	e5906014 	ldr	r6, [r0, #20]
400127d8:	e3a00064 	mov	r0, #100	; 0x64
400127dc:	eb00030b 	bl	40013410 <CyU3PBusyWait>
400127e0:	e3540000 	cmp	r4, #0
400127e4:	0a000023 	beq	40012878 <CyU3PSysWatchDogConfigure+0xb4>
400127e8:	e2060003 	and	r0, r6, #3
400127ec:	e3500003 	cmp	r0, #3
400127f0:	0a000004 	beq	40012808 <CyU3PSysWatchDogConfigure+0x44>
400127f4:	e3860003 	orr	r0, r6, #3
400127f8:	e59f10b0 	ldr	r1, [pc, #176]	; 400128b0 <CyU3PSysWatchDogConfigure+0xec>
400127fc:	e5810014 	str	r0, [r1, #20]
40012800:	e3a00064 	mov	r0, #100	; 0x64
40012804:	eb000301 	bl	40013410 <CyU3PBusyWait>
40012808:	e0850285 	add	r0, r5, r5, lsl #5
4001280c:	e59f10a0 	ldr	r1, [pc, #160]	; 400128b4 <CyU3PSysWatchDogConfigure+0xf0>
40012810:	e5810000 	str	r0, [r1]
40012814:	e2810000 	add	r0, r1, #0
40012818:	e5900000 	ldr	r0, [r0]
4001281c:	e1500005 	cmp	r0, r5
40012820:	2a000001 	bcs	4001282c <CyU3PSysWatchDogConfigure+0x68>
40012824:	e3e00000 	mvn	r0, #0
40012828:	e5810000 	str	r0, [r1]
4001282c:	e59f0080 	ldr	r0, [pc, #128]	; 400128b4 <CyU3PSysWatchDogConfigure+0xf0>
40012830:	e5900000 	ldr	r0, [r0]
40012834:	e59f1074 	ldr	r1, [pc, #116]	; 400128b0 <CyU3PSysWatchDogConfigure+0xec>
40012838:	e5810018 	str	r0, [r1, #24]
4001283c:	e3a00064 	mov	r0, #100	; 0x64
40012840:	eb0002f2 	bl	40013410 <CyU3PBusyWait>
40012844:	e3c660fb 	bic	r6, r6, #251	; 0xfb
40012848:	e38660fa 	orr	r6, r6, #250	; 0xfa
4001284c:	e59f005c 	ldr	r0, [pc, #92]	; 400128b0 <CyU3PSysWatchDogConfigure+0xec>
40012850:	e5806014 	str	r6, [r0, #20]
40012854:	e3a00064 	mov	r0, #100	; 0x64
40012858:	eb0002ec 	bl	40013410 <CyU3PBusyWait>
4001285c:	e2060c03 	and	r0, r6, #768	; 0x300
40012860:	e3500c03 	cmp	r0, #768	; 0x300
40012864:	1a000010 	bne	400128ac <CyU3PSysWatchDogConfigure+0xe8>
40012868:	e59f0048 	ldr	r0, [pc, #72]	; 400128b8 <CyU3PSysWatchDogConfigure+0xf4>
4001286c:	e1d000b0 	ldrh	r0, [r0]
40012870:	eb003d18 	bl	40021cd8 <CyU3POsTimerInit>
40012874:	ea00000c 	b	400128ac <CyU3PSysWatchDogConfigure+0xe8>
40012878:	e2060003 	and	r0, r6, #3
4001287c:	e3500003 	cmp	r0, #3
40012880:	0a000006 	beq	400128a0 <CyU3PSysWatchDogConfigure+0xdc>
40012884:	e59f0024 	ldr	r0, [pc, #36]	; 400128b0 <CyU3PSysWatchDogConfigure+0xec>
40012888:	e5900014 	ldr	r0, [r0, #20]
4001288c:	e3800003 	orr	r0, r0, #3
40012890:	e59f1018 	ldr	r1, [pc, #24]	; 400128b0 <CyU3PSysWatchDogConfigure+0xec>
40012894:	e5810014 	str	r0, [r1, #20]
40012898:	e3a00064 	mov	r0, #100	; 0x64
4001289c:	eb0002db 	bl	40013410 <CyU3PBusyWait>
400128a0:	e3a00000 	mov	r0, #0
400128a4:	e59f1008 	ldr	r1, [pc, #8]	; 400128b4 <CyU3PSysWatchDogConfigure+0xf0>
400128a8:	e5810000 	str	r0, [r1]
400128ac:	e8bd8070 	pop	{r4, r5, r6, pc}
400128b0:	e0050000 	.word	0xe0050000
400128b4:	40030c54 	.word	0x40030c54
400128b8:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PInitPageTable:

400128bc <CyU3PInitPageTable>:
400128bc:	e92d4010 	push	{r4, lr}
400128c0:	eb0007ad 	bl	4001477c <CyFx3DevInitPageTables>
400128c4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

400128c8 <CyU3PSysBarrierSync>:
400128c8:	e3a00000 	mov	r0, #0
400128cc:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
400128d0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

400128d4 <CyU3PSysDisableCacheMMU>:
400128d4:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
400128d8:	e59f2018 	ldr	r2, [pc, #24]	; 400128f8 <CyU3PSysDisableCacheMMU+0x24>
400128dc:	e1c00002 	bic	r0, r0, r2
400128e0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
400128e4:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
400128e8:	e3e01801 	mvn	r1, #65536	; 0x10000
400128ec:	e0000001 	and	r0, r0, r1
400128f0:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
400128f4:	e12fff1e 	bx	lr
400128f8:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

400128fc <CyU3PSysDisableDCache>:
400128fc:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012900:	e3c00004 	bic	r0, r0, #4
40012904:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012908:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

4001290c <CyU3PSysDisableICache>:
4001290c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012910:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012914:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012918:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

4001291c <CyU3PSysEnableDCache>:
4001291c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012920:	e3800004 	orr	r0, r0, #4
40012924:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012928:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

4001292c <CyU3PSysEnableICache>:
4001292c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012930:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012934:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012938:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
4001293c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012940 <CyU3PSysEnableMMU>:
40012940:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012944:	e3800001 	orr	r0, r0, #1
40012948:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
4001294c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012950 <CyU3PSysFlushICache>:
40012950:	e3a00000 	mov	r0, #0
40012954:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012958:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

4001295c <CyU3PSysInitTCMs>:
4001295c:	e3a00015 	mov	r0, #21
40012960:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012964:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012968:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
4001296c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012970 <CyU3PSysLoadTLB>:
40012970:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012974:	e3a00000 	mov	r0, #0
40012978:	eb00000b 	bl	400129ac <CyU3PSysLockTLBEntry>
4001297c:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012980:	eb000009 	bl	400129ac <CyU3PSysLockTLBEntry>
40012984:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012988:	eb000007 	bl	400129ac <CyU3PSysLockTLBEntry>
4001298c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012990:	eb000005 	bl	400129ac <CyU3PSysLockTLBEntry>
40012994:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012998:	eb000003 	bl	400129ac <CyU3PSysLockTLBEntry>
4001299c:	e59f0004 	ldr	r0, [pc, #4]	; 400129a8 <CyU3PSysLoadTLB+0x38>
400129a0:	eb000001 	bl	400129ac <CyU3PSysLockTLBEntry>
400129a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400129a8:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

400129ac <CyU3PSysLockTLBEntry>:
400129ac:	e3a01000 	mov	r1, #0
400129b0:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
400129b4:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
400129b8:	e3811001 	orr	r1, r1, #1
400129bc:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
400129c0:	e5900000 	ldr	r0, [r0]
400129c4:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
400129c8:	e3c11001 	bic	r1, r1, #1
400129cc:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
400129d0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

400129d4 <CyU3PDeviceConfigureIOMatrix>:
400129d4:	e92d4010 	push	{r4, lr}
400129d8:	e1a04000 	mov	r4, r0
400129dc:	e3540000 	cmp	r4, #0
400129e0:	1a000001 	bne	400129ec <CyU3PDeviceConfigureIOMatrix+0x18>
400129e4:	e3a00041 	mov	r0, #65	; 0x41
400129e8:	e8bd8010 	pop	{r4, pc}
400129ec:	e1a00004 	mov	r0, r4
400129f0:	eb0005fd 	bl	400141ec <CyFx3DevIOConfigure>
400129f4:	e3500000 	cmp	r0, #0
400129f8:	1a000001 	bne	40012a04 <CyU3PDeviceConfigureIOMatrix+0x30>
400129fc:	e3a00040 	mov	r0, #64	; 0x40
40012a00:	eafffff8 	b	400129e8 <CyU3PDeviceConfigureIOMatrix+0x14>
40012a04:	e3a00000 	mov	r0, #0
40012a08:	eafffff6 	b	400129e8 <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012a0c <CyU3PDeviceGpioOverride>:
40012a0c:	e92d4070 	push	{r4, r5, r6, lr}
40012a10:	e1a04000 	mov	r4, r0
40012a14:	e1a05001 	mov	r5, r1
40012a18:	e354003d 	cmp	r4, #61	; 0x3d
40012a1c:	ba000001 	blt	40012a28 <CyU3PDeviceGpioOverride+0x1c>
40012a20:	e3a00040 	mov	r0, #64	; 0x40
40012a24:	e8bd8070 	pop	{r4, r5, r6, pc}
40012a28:	e1a02005 	mov	r2, r5
40012a2c:	e3a01001 	mov	r1, #1
40012a30:	e1a00004 	mov	r0, r4
40012a34:	eb00066c 	bl	400143ec <CyFx3DevIOSelectGpio>
40012a38:	e3a00000 	mov	r0, #0
40012a3c:	eafffff8 	b	40012a24 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012a40 <CyU3PIsGpioComplexIOConfigured>:
40012a40:	e92d4010 	push	{r4, lr}
40012a44:	e1a04000 	mov	r4, r0
40012a48:	e3a01000 	mov	r1, #0
40012a4c:	e1a00004 	mov	r0, r4
40012a50:	eb000645 	bl	4001436c <CyFx3DevIOIsGpio>
40012a54:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012a58 <CyU3PIsGpioSimpleIOConfigured>:
40012a58:	e92d4010 	push	{r4, lr}
40012a5c:	e1a04000 	mov	r4, r0
40012a60:	e3a01001 	mov	r1, #1
40012a64:	e1a00004 	mov	r0, r4
40012a68:	eb00063f 	bl	4001436c <CyFx3DevIOIsGpio>
40012a6c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012a70 <CyU3PIsGpioValid>:
40012a70:	e1a01000 	mov	r1, r0
40012a74:	e351003d 	cmp	r1, #61	; 0x3d
40012a78:	aa000001 	bge	40012a84 <CyU3PIsGpioValid+0x14>
40012a7c:	e3a00001 	mov	r0, #1
40012a80:	e12fff1e 	bx	lr
40012a84:	e3a00000 	mov	r0, #0
40012a88:	eafffffc 	b	40012a80 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012a8c <CyU3PIsLppIOConfigured>:
40012a8c:	e92d4070 	push	{r4, r5, r6, lr}
40012a90:	e1a04000 	mov	r4, r0
40012a94:	e3a05000 	mov	r5, #0
40012a98:	e3540000 	cmp	r4, #0
40012a9c:	0a00000a 	beq	40012acc <CyU3PIsLppIOConfigured+0x40>
40012aa0:	e3540001 	cmp	r4, #1
40012aa4:	0a000004 	beq	40012abc <CyU3PIsLppIOConfigured+0x30>
40012aa8:	e3540002 	cmp	r4, #2
40012aac:	0a00000e 	beq	40012aec <CyU3PIsLppIOConfigured+0x60>
40012ab0:	e3540003 	cmp	r4, #3
40012ab4:	1a000010 	bne	40012afc <CyU3PIsLppIOConfigured+0x70>
40012ab8:	ea000007 	b	40012adc <CyU3PIsLppIOConfigured+0x50>
40012abc:	e1a00000 	nop			; (mov r0, r0)
40012ac0:	eb00063d 	bl	400143bc <CyFx3DevIOIsI2sConfigured>
40012ac4:	e1a05000 	mov	r5, r0
40012ac8:	ea00000d 	b	40012b04 <CyU3PIsLppIOConfigured+0x78>
40012acc:	e1a00000 	nop			; (mov r0, r0)
40012ad0:	eb000635 	bl	400143ac <CyFx3DevIOIsI2cConfigured>
40012ad4:	e1a05000 	mov	r5, r0
40012ad8:	ea000009 	b	40012b04 <CyU3PIsLppIOConfigured+0x78>
40012adc:	e1a00000 	nop			; (mov r0, r0)
40012ae0:	eb00063d 	bl	400143dc <CyFx3DevIOIsUartConfigured>
40012ae4:	e1a05000 	mov	r5, r0
40012ae8:	ea000005 	b	40012b04 <CyU3PIsLppIOConfigured+0x78>
40012aec:	e1a00000 	nop			; (mov r0, r0)
40012af0:	eb000635 	bl	400143cc <CyFx3DevIOIsSpiConfigured>
40012af4:	e1a05000 	mov	r5, r0
40012af8:	ea000001 	b	40012b04 <CyU3PIsLppIOConfigured+0x78>
40012afc:	e1a00000 	nop			; (mov r0, r0)
40012b00:	e1a00000 	nop			; (mov r0, r0)
40012b04:	e1a00000 	nop			; (mov r0, r0)
40012b08:	e1a00005 	mov	r0, r5
40012b0c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012b10 <CyU3PDebugApplicationDefine>:
40012b10:	e92d4010 	push	{r4, lr}
40012b14:	e24dd020 	sub	sp, sp, #32
40012b18:	e3a00000 	mov	r0, #0
40012b1c:	e59f109c 	ldr	r1, [pc, #156]	; 40012bc0 <CyU3PDebugApplicationDefine+0xb0>
40012b20:	e5810000 	str	r0, [r1]
40012b24:	e3a00001 	mov	r0, #1
40012b28:	e2811008 	add	r1, r1, #8
40012b2c:	e5810000 	str	r0, [r1]
40012b30:	e3a00c02 	mov	r0, #512	; 0x200
40012b34:	ebffc2ce 	bl	40003674 <CyU3PMemAlloc>
40012b38:	e1a04000 	mov	r4, r0
40012b3c:	e3a030a8 	mov	r3, #168	; 0xa8
40012b40:	e3a02001 	mov	r2, #1
40012b44:	e3a01000 	mov	r1, #0
40012b48:	e3a00006 	mov	r0, #6
40012b4c:	e28dc00c 	add	ip, sp, #12
40012b50:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012b54:	e3a02c02 	mov	r2, #512	; 0x200
40012b58:	e1a03001 	mov	r3, r1
40012b5c:	e58d2004 	str	r2, [sp, #4]
40012b60:	e59f205c 	ldr	r2, [pc, #92]	; 40012bc4 <CyU3PDebugApplicationDefine+0xb4>
40012b64:	e28f105c 	add	r1, pc, #92	; 0x5c
40012b68:	e58d0008 	str	r0, [sp, #8]
40012b6c:	e59f0064 	ldr	r0, [pc, #100]	; 40012bd8 <CyU3PDebugApplicationDefine+0xc8>
40012b70:	e58d4000 	str	r4, [sp]
40012b74:	ebffde3d 	bl	4000a470 <_txe_thread_create>
40012b78:	e3a00084 	mov	r0, #132	; 0x84
40012b7c:	ebffc2bc 	bl	40003674 <CyU3PMemAlloc>
40012b80:	e1a04000 	mov	r4, r0
40012b84:	e3a0303c 	mov	r3, #60	; 0x3c
40012b88:	e3a02084 	mov	r2, #132	; 0x84
40012b8c:	e1cd20f0 	strd	r2, [sp]
40012b90:	e1a03004 	mov	r3, r4
40012b94:	e3a02003 	mov	r2, #3
40012b98:	e3a01000 	mov	r1, #0
40012b9c:	e59f0038 	ldr	r0, [pc, #56]	; 40012bdc <CyU3PDebugApplicationDefine+0xcc>
40012ba0:	ebffdd4c 	bl	4000a0d8 <_txe_queue_create>
40012ba4:	e3a03038 	mov	r3, #56	; 0x38
40012ba8:	e3a02000 	mov	r2, #0
40012bac:	e1a01002 	mov	r1, r2
40012bb0:	e59f0028 	ldr	r0, [pc, #40]	; 40012be0 <CyU3PDebugApplicationDefine+0xd0>
40012bb4:	ebffdc6c 	bl	40009d6c <_txe_mutex_create>
40012bb8:	e28dd020 	add	sp, sp, #32
40012bbc:	e8bd8010 	pop	{r4, pc}
40012bc0:	40030c70 	.word	0x40030c70
40012bc4:	40013080 	.word	0x40013080
40012bc8:	75626544 	.word	0x75626544
40012bcc:	68542067 	.word	0x68542067
40012bd0:	64616572 	.word	0x64616572
40012bd4:	00000000 	.word	0x00000000
40012bd8:	40031234 	.word	0x40031234
40012bdc:	400312dc 	.word	0x400312dc
40012be0:	40031318 	.word	0x40031318

Disassembly of section i.CyU3PDebugChannelReset:

40012be4 <CyU3PDebugChannelReset>:
40012be4:	e92d4010 	push	{r4, lr}
40012be8:	e59f0034 	ldr	r0, [pc, #52]	; 40012c24 <CyU3PDebugChannelReset+0x40>
40012bec:	eb000d41 	bl	400160f8 <CyU3PDmaChannelReset>
40012bf0:	e3a01000 	mov	r1, #0
40012bf4:	e59f0028 	ldr	r0, [pc, #40]	; 40012c24 <CyU3PDebugChannelReset+0x40>
40012bf8:	eb000ddf 	bl	4001637c <CyU3PDmaChannelSetXfer>
40012bfc:	e1a04000 	mov	r4, r0
40012c00:	e3540000 	cmp	r4, #0
40012c04:	1a000004 	bne	40012c1c <CyU3PDebugChannelReset+0x38>
40012c08:	e3e02000 	mvn	r2, #0
40012c0c:	e59f1014 	ldr	r1, [pc, #20]	; 40012c28 <CyU3PDebugChannelReset+0x44>
40012c10:	e281000c 	add	r0, r1, #12
40012c14:	eb000c6a 	bl	40015dc4 <CyU3PDmaChannelGetBuffer>
40012c18:	e1a04000 	mov	r4, r0
40012c1c:	e1a00004 	mov	r0, r4
40012c20:	e8bd8010 	pop	{r4, pc}
40012c24:	4003135c 	.word	0x4003135c
40012c28:	40031350 	.word	0x40031350

Disassembly of section i.CyU3PDebugInit:

40012c2c <CyU3PDebugInit>:
40012c2c:	e92d4070 	push	{r4, r5, r6, lr}
40012c30:	e24dd020 	sub	sp, sp, #32
40012c34:	e1a04000 	mov	r4, r0
40012c38:	e1a06001 	mov	r6, r1
40012c3c:	e59f0150 	ldr	r0, [pc, #336]	; 40012d94 <CyU3PDebugInit+0x168>
40012c40:	e5900000 	ldr	r0, [r0]
40012c44:	e3500000 	cmp	r0, #0
40012c48:	1a000003 	bne	40012c5c <CyU3PDebugInit+0x30>
40012c4c:	e59f0144 	ldr	r0, [pc, #324]	; 40012d98 <CyU3PDebugInit+0x16c>
40012c50:	e5900000 	ldr	r0, [r0]
40012c54:	e3500000 	cmp	r0, #0
40012c58:	0a000002 	beq	40012c68 <CyU3PDebugInit+0x3c>
40012c5c:	e3a00043 	mov	r0, #67	; 0x43
40012c60:	e28dd020 	add	sp, sp, #32
40012c64:	e8bd8070 	pop	{r4, r5, r6, pc}
40012c68:	e1a00004 	mov	r0, r4
40012c6c:	eb0007b3 	bl	40014b40 <CyU3PDmaSocketIsValidConsumer>
40012c70:	e1a05000 	mov	r5, r0
40012c74:	e3550000 	cmp	r5, #0
40012c78:	1a000001 	bne	40012c84 <CyU3PDebugInit+0x58>
40012c7c:	e3a00040 	mov	r0, #64	; 0x40
40012c80:	eafffff6 	b	40012c60 <CyU3PDebugInit+0x34>
40012c84:	e3e01000 	mvn	r1, #0
40012c88:	e59f010c 	ldr	r0, [pc, #268]	; 40012d9c <CyU3PDebugInit+0x170>
40012c8c:	ebffdcb4 	bl	40009f64 <_txe_mutex_get>
40012c90:	e3a00c01 	mov	r0, #256	; 0x100
40012c94:	e1cd00b4 	strh	r0, [sp, #4]
40012c98:	e3a00008 	mov	r0, #8
40012c9c:	e1cd00b6 	strh	r0, [sp, #6]
40012ca0:	e3a00000 	mov	r0, #0
40012ca4:	e1cd00bc 	strh	r0, [sp, #12]
40012ca8:	e59f00f0 	ldr	r0, [pc, #240]	; 40012da0 <CyU3PDebugInit+0x174>
40012cac:	e1cd00b8 	strh	r0, [sp, #8]
40012cb0:	e1cd40ba 	strh	r4, [sp, #10]
40012cb4:	e3a00000 	mov	r0, #0
40012cb8:	e5cd0014 	strb	r0, [sp, #20]
40012cbc:	e1cd00be 	strh	r0, [sp, #14]
40012cc0:	e1cd01b0 	strh	r0, [sp, #16]
40012cc4:	e1cd01b2 	strh	r0, [sp, #18]
40012cc8:	e58d001c 	str	r0, [sp, #28]
40012ccc:	e28d2004 	add	r2, sp, #4
40012cd0:	e3a01004 	mov	r1, #4
40012cd4:	e59f00c8 	ldr	r0, [pc, #200]	; 40012da4 <CyU3PDebugInit+0x178>
40012cd8:	eb000a71 	bl	400156a4 <CyU3PDmaChannelCreate>
40012cdc:	e1a05000 	mov	r5, r0
40012ce0:	e3550000 	cmp	r5, #0
40012ce4:	1a000007 	bne	40012d08 <CyU3PDebugInit+0xdc>
40012ce8:	e59f00b8 	ldr	r0, [pc, #184]	; 40012da8 <CyU3PDebugInit+0x17c>
40012cec:	e5900000 	ldr	r0, [r0]
40012cf0:	e3500000 	cmp	r0, #0
40012cf4:	0a000003 	beq	40012d08 <CyU3PDebugInit+0xdc>
40012cf8:	e3a01001 	mov	r1, #1
40012cfc:	e59f00a0 	ldr	r0, [pc, #160]	; 40012da4 <CyU3PDebugInit+0x178>
40012d00:	eb0008d7 	bl	40015064 <CyU3PDmaChannelCacheControl>
40012d04:	e1a05000 	mov	r5, r0
40012d08:	e3550000 	cmp	r5, #0
40012d0c:	1a000003 	bne	40012d20 <CyU3PDebugInit+0xf4>
40012d10:	e3a01000 	mov	r1, #0
40012d14:	e59f0088 	ldr	r0, [pc, #136]	; 40012da4 <CyU3PDebugInit+0x178>
40012d18:	eb000d97 	bl	4001637c <CyU3PDmaChannelSetXfer>
40012d1c:	e1a05000 	mov	r5, r0
40012d20:	e3550000 	cmp	r5, #0
40012d24:	1a000004 	bne	40012d3c <CyU3PDebugInit+0x110>
40012d28:	e3e02000 	mvn	r2, #0
40012d2c:	e59f1078 	ldr	r1, [pc, #120]	; 40012dac <CyU3PDebugInit+0x180>
40012d30:	e281000c 	add	r0, r1, #12
40012d34:	eb000c22 	bl	40015dc4 <CyU3PDmaChannelGetBuffer>
40012d38:	e1a05000 	mov	r5, r0
40012d3c:	e3550000 	cmp	r5, #0
40012d40:	0a000005 	beq	40012d5c <CyU3PDebugInit+0x130>
40012d44:	e59f0058 	ldr	r0, [pc, #88]	; 40012da4 <CyU3PDebugInit+0x178>
40012d48:	eb000b4f 	bl	40015a8c <CyU3PDmaChannelDestroy>
40012d4c:	e59f0048 	ldr	r0, [pc, #72]	; 40012d9c <CyU3PDebugInit+0x170>
40012d50:	ebffdcb8 	bl	4000a038 <_txe_mutex_put>
40012d54:	e1a00005 	mov	r0, r5
40012d58:	eaffffc0 	b	40012c60 <CyU3PDebugInit+0x34>
40012d5c:	e3a00000 	mov	r0, #0
40012d60:	e59f1048 	ldr	r1, [pc, #72]	; 40012db0 <CyU3PDebugInit+0x184>
40012d64:	e1c100b0 	strh	r0, [r1]
40012d68:	e59f1044 	ldr	r1, [pc, #68]	; 40012db4 <CyU3PDebugInit+0x188>
40012d6c:	e1c100b0 	strh	r0, [r1]
40012d70:	e59f0040 	ldr	r0, [pc, #64]	; 40012db8 <CyU3PDebugInit+0x18c>
40012d74:	e5c06000 	strb	r6, [r0]
40012d78:	e3a00001 	mov	r0, #1
40012d7c:	e2411010 	sub	r1, r1, #16
40012d80:	e5810000 	str	r0, [r1]
40012d84:	e59f0010 	ldr	r0, [pc, #16]	; 40012d9c <CyU3PDebugInit+0x170>
40012d88:	ebffdcaa 	bl	4000a038 <_txe_mutex_put>
40012d8c:	e1a00005 	mov	r0, r5
40012d90:	eaffffb2 	b	40012c60 <CyU3PDebugInit+0x34>
40012d94:	40030c70 	.word	0x40030c70
40012d98:	40030c74 	.word	0x40030c74
40012d9c:	40031318 	.word	0x40031318
40012da0:	00003f01 	.word	0x00003f01
40012da4:	4003135c 	.word	0x4003135c
40012da8:	40030c60 	.word	0x40030c60
40012dac:	40031350 	.word	0x40031350
40012db0:	40030c7e 	.word	0x40030c7e
40012db4:	40030c80 	.word	0x40030c80
40012db8:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDebugIntToStr:

40012dbc <CyU3PDebugIntToStr>:
40012dbc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012dc0:	e1a04000 	mov	r4, r0
40012dc4:	e1a05001 	mov	r5, r1
40012dc8:	e1a08002 	mov	r8, r2
40012dcc:	e3a0600a 	mov	r6, #10
40012dd0:	e1a07004 	mov	r7, r4
40012dd4:	e3a00000 	mov	r0, #0
40012dd8:	e1a04007 	mov	r4, r7
40012ddc:	e7c70006 	strb	r0, [r7, r6]
40012de0:	e1a00000 	nop			; (mov r0, r0)
40012de4:	e1a01008 	mov	r1, r8
40012de8:	e1a00005 	mov	r0, r5
40012dec:	ebfff6b8 	bl	400108d4 <__aeabi_uidivmod>
40012df0:	e28f0030 	add	r0, pc, #48	; 0x30
40012df4:	e7d00001 	ldrb	r0, [r0, r1]
40012df8:	e2461001 	sub	r1, r6, #1
40012dfc:	e20110ff 	and	r1, r1, #255	; 0xff
40012e00:	e1a06001 	mov	r6, r1
40012e04:	e7c70001 	strb	r0, [r7, r1]
40012e08:	e1a01008 	mov	r1, r8
40012e0c:	e1a00005 	mov	r0, r5
40012e10:	ebfff6af 	bl	400108d4 <__aeabi_uidivmod>
40012e14:	e1a05000 	mov	r5, r0
40012e18:	e3550000 	cmp	r5, #0
40012e1c:	1afffff0 	bne	40012de4 <CyU3PDebugIntToStr+0x28>
40012e20:	e0870006 	add	r0, r7, r6
40012e24:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40012e28:	33323130 	.word	0x33323130
40012e2c:	37363534 	.word	0x37363534
40012e30:	42413938 	.word	0x42413938
40012e34:	46454443 	.word	0x46454443
40012e38:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

40012e3c <CyU3PDebugPreamble>:
40012e3c:	e59f1004 	ldr	r1, [pc, #4]	; 40012e48 <CyU3PDebugPreamble+0xc>
40012e40:	e5810000 	str	r0, [r1]
40012e44:	e12fff1e 	bx	lr
40012e48:	40030c78 	.word	0x40030c78

Disassembly of section i.CyU3PDebugPrint:

40012e4c <CyU3PDebugPrint>:
40012e4c:	e92d000f 	push	{r0, r1, r2, r3}
40012e50:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012e54:	e24dd028 	sub	sp, sp, #40	; 0x28
40012e58:	e1a04000 	mov	r4, r0
40012e5c:	e59f0200 	ldr	r0, [pc, #512]	; 40013064 <CyU3PDebugPrint+0x218>
40012e60:	e5900000 	ldr	r0, [r0]
40012e64:	e3500000 	cmp	r0, #0
40012e68:	1a000003 	bne	40012e7c <CyU3PDebugPrint+0x30>
40012e6c:	e3a00042 	mov	r0, #66	; 0x42
40012e70:	e28dd028 	add	sp, sp, #40	; 0x28
40012e74:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
40012e78:	e49df014 	ldr	pc, [sp], #20
40012e7c:	e59f01e4 	ldr	r0, [pc, #484]	; 40013068 <CyU3PDebugPrint+0x21c>
40012e80:	e5d00000 	ldrb	r0, [r0]
40012e84:	e1540000 	cmp	r4, r0
40012e88:	da000001 	ble	40012e94 <CyU3PDebugPrint+0x48>
40012e8c:	e3a00000 	mov	r0, #0
40012e90:	eafffff6 	b	40012e70 <CyU3PDebugPrint+0x24>
40012e94:	ebffd61d 	bl	40008710 <_tx_thread_identify>
40012e98:	e1a05000 	mov	r5, r0
40012e9c:	e3550000 	cmp	r5, #0
40012ea0:	1a000001 	bne	40012eac <CyU3PDebugPrint+0x60>
40012ea4:	e3a00013 	mov	r0, #19
40012ea8:	eafffff0 	b	40012e70 <CyU3PDebugPrint+0x24>
40012eac:	e3a03000 	mov	r3, #0
40012eb0:	e58d3004 	str	r3, [sp, #4]
40012eb4:	e58d3008 	str	r3, [sp, #8]
40012eb8:	e58d300c 	str	r3, [sp, #12]
40012ebc:	e58d3010 	str	r3, [sp, #16]
40012ec0:	e58d3000 	str	r3, [sp]
40012ec4:	e1a02003 	mov	r2, r3
40012ec8:	e28d1018 	add	r1, sp, #24
40012ecc:	e1a00005 	mov	r0, r5
40012ed0:	ebffddff 	bl	4000a6d4 <_txe_thread_info_get>
40012ed4:	e59d0018 	ldr	r0, [sp, #24]
40012ed8:	e5d00001 	ldrb	r0, [r0, #1]
40012edc:	e2400030 	sub	r0, r0, #48	; 0x30
40012ee0:	e59d1018 	ldr	r1, [sp, #24]
40012ee4:	e5d11000 	ldrb	r1, [r1]
40012ee8:	e2411030 	sub	r1, r1, #48	; 0x30
40012eec:	e3a0200a 	mov	r2, #10
40012ef0:	e1000182 	smlabb	r0, r2, r1, r0
40012ef4:	e20080ff 	and	r8, r0, #255	; 0xff
40012ef8:	e3e01000 	mvn	r1, #0
40012efc:	e59f0168 	ldr	r0, [pc, #360]	; 4001306c <CyU3PDebugPrint+0x220>
40012f00:	ebffdc17 	bl	40009f64 <_txe_mutex_get>
40012f04:	e59f0164 	ldr	r0, [pc, #356]	; 40013070 <CyU3PDebugPrint+0x224>
40012f08:	e1d000b0 	ldrh	r0, [r0]
40012f0c:	e3500000 	cmp	r0, #0
40012f10:	0a000011 	beq	40012f5c <CyU3PDebugPrint+0x110>
40012f14:	e3a02000 	mov	r2, #0
40012f18:	e3a01c01 	mov	r1, #256	; 0x100
40012f1c:	e59f0150 	ldr	r0, [pc, #336]	; 40013074 <CyU3PDebugPrint+0x228>
40012f20:	eb000864 	bl	400150b8 <CyU3PDmaChannelCommitBuffer>
40012f24:	e1a06000 	mov	r6, r0
40012f28:	e3560000 	cmp	r6, #0
40012f2c:	1a000004 	bne	40012f44 <CyU3PDebugPrint+0xf8>
40012f30:	e3e02000 	mvn	r2, #0
40012f34:	e59f113c 	ldr	r1, [pc, #316]	; 40013078 <CyU3PDebugPrint+0x22c>
40012f38:	e281000c 	add	r0, r1, #12
40012f3c:	eb000ba0 	bl	40015dc4 <CyU3PDmaChannelGetBuffer>
40012f40:	e1a06000 	mov	r6, r0
40012f44:	e3560000 	cmp	r6, #0
40012f48:	0a000000 	beq	40012f50 <CyU3PDebugPrint+0x104>
40012f4c:	ebffff24 	bl	40012be4 <CyU3PDebugChannelReset>
40012f50:	e3a00000 	mov	r0, #0
40012f54:	e59f1114 	ldr	r1, [pc, #276]	; 40013070 <CyU3PDebugPrint+0x224>
40012f58:	e1c100b0 	strh	r0, [r1]
40012f5c:	e59f0114 	ldr	r0, [pc, #276]	; 40013078 <CyU3PDebugPrint+0x22c>
40012f60:	e5907000 	ldr	r7, [r0]
40012f64:	e3a00c01 	mov	r0, #256	; 0x100
40012f68:	e58d0014 	str	r0, [sp, #20]
40012f6c:	e59f0108 	ldr	r0, [pc, #264]	; 4001307c <CyU3PDebugPrint+0x230>
40012f70:	e5900000 	ldr	r0, [r0]
40012f74:	e3500000 	cmp	r0, #0
40012f78:	0a000005 	beq	40012f94 <CyU3PDebugPrint+0x148>
40012f7c:	e2877008 	add	r7, r7, #8
40012f80:	e1dd01b4 	ldrh	r0, [sp, #20]
40012f84:	e2400008 	sub	r0, r0, #8
40012f88:	e1a00800 	lsl	r0, r0, #16
40012f8c:	e1a00820 	lsr	r0, r0, #16
40012f90:	e58d0014 	str	r0, [sp, #20]
40012f94:	e28d0048 	add	r0, sp, #72	; 0x48
40012f98:	e58d001c 	str	r0, [sp, #28]
40012f9c:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
40012fa0:	e59d301c 	ldr	r3, [sp, #28]
40012fa4:	e28d1014 	add	r1, sp, #20
40012fa8:	e1a00007 	mov	r0, r7
40012fac:	eb000071 	bl	40013178 <MyDebugSNPrint>
40012fb0:	e1a06000 	mov	r6, r0
40012fb4:	e59f00c0 	ldr	r0, [pc, #192]	; 4001307c <CyU3PDebugPrint+0x230>
40012fb8:	e5900000 	ldr	r0, [r0]
40012fbc:	e3500000 	cmp	r0, #0
40012fc0:	0a00000f 	beq	40013004 <CyU3PDebugPrint+0x1b8>
40012fc4:	e59f00ac 	ldr	r0, [pc, #172]	; 40013078 <CyU3PDebugPrint+0x22c>
40012fc8:	e5907000 	ldr	r7, [r0]
40012fcc:	e5cd4020 	strb	r4, [sp, #32]
40012fd0:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
40012fd4:	e3e00000 	mvn	r0, #0
40012fd8:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
40012fdc:	e1dd01b4 	ldrh	r0, [sp, #20]
40012fe0:	e58d0024 	str	r0, [sp, #36]	; 0x24
40012fe4:	e3a02008 	mov	r2, #8
40012fe8:	e28d1020 	add	r1, sp, #32
40012fec:	e1a00007 	mov	r0, r7
40012ff0:	ebffc237 	bl	400038d4 <CyU3PMemCopy>
40012ff4:	e1dd01b4 	ldrh	r0, [sp, #20]
40012ff8:	e2800008 	add	r0, r0, #8
40012ffc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40013000:	e58d0014 	str	r0, [sp, #20]
40013004:	e3a02000 	mov	r2, #0
40013008:	e1dd11b4 	ldrh	r1, [sp, #20]
4001300c:	e59f0060 	ldr	r0, [pc, #96]	; 40013074 <CyU3PDebugPrint+0x228>
40013010:	eb000828 	bl	400150b8 <CyU3PDmaChannelCommitBuffer>
40013014:	e1a06000 	mov	r6, r0
40013018:	e3560000 	cmp	r6, #0
4001301c:	1a000004 	bne	40013034 <CyU3PDebugPrint+0x1e8>
40013020:	e3e02000 	mvn	r2, #0
40013024:	e59f104c 	ldr	r1, [pc, #76]	; 40013078 <CyU3PDebugPrint+0x22c>
40013028:	e281000c 	add	r0, r1, #12
4001302c:	eb000b64 	bl	40015dc4 <CyU3PDmaChannelGetBuffer>
40013030:	e1a06000 	mov	r6, r0
40013034:	e3560000 	cmp	r6, #0
40013038:	0a000002 	beq	40013048 <CyU3PDebugPrint+0x1fc>
4001303c:	ebfffee8 	bl	40012be4 <CyU3PDebugChannelReset>
40013040:	e1a00006 	mov	r0, r6
40013044:	eaffff89 	b	40012e70 <CyU3PDebugPrint+0x24>
40013048:	e3a00000 	mov	r0, #0
4001304c:	e59f101c 	ldr	r1, [pc, #28]	; 40013070 <CyU3PDebugPrint+0x224>
40013050:	e1c100b0 	strh	r0, [r1]
40013054:	e59f0010 	ldr	r0, [pc, #16]	; 4001306c <CyU3PDebugPrint+0x220>
40013058:	ebffdbf6 	bl	4000a038 <_txe_mutex_put>
4001305c:	e3a00000 	mov	r0, #0
40013060:	eaffff82 	b	40012e70 <CyU3PDebugPrint+0x24>
40013064:	40030c70 	.word	0x40030c70
40013068:	40030c7c 	.word	0x40030c7c
4001306c:	40031318 	.word	0x40031318
40013070:	40030c80 	.word	0x40030c80
40013074:	4003135c 	.word	0x4003135c
40013078:	40031350 	.word	0x40031350
4001307c:	40030c78 	.word	0x40030c78

Disassembly of section i.CyU3PDebugThreadEntry:

40013080 <CyU3PDebugThreadEntry>:
40013080:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
40013084:	e1a06000 	mov	r6, r0
40013088:	e3a05000 	mov	r5, #0
4001308c:	e1a00000 	nop			; (mov r0, r0)
40013090:	e3e02000 	mvn	r2, #0
40013094:	e1a0100d 	mov	r1, sp
40013098:	e59f00c4 	ldr	r0, [pc, #196]	; 40013164 <CyU3PDebugThreadEntry+0xe4>
4001309c:	ebffdca3 	bl	4000a330 <_txe_queue_receive>
400130a0:	e1a04000 	mov	r4, r0
400130a4:	e3540000 	cmp	r4, #0
400130a8:	1afffff8 	bne	40013090 <CyU3PDebugThreadEntry+0x10>
400130ac:	e3e01000 	mvn	r1, #0
400130b0:	e59f00b0 	ldr	r0, [pc, #176]	; 40013168 <CyU3PDebugThreadEntry+0xe8>
400130b4:	ebffdbaa 	bl	40009f64 <_txe_mutex_get>
400130b8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001316c <CyU3PDebugThreadEntry+0xec>
400130bc:	e1d000b0 	ldrh	r0, [r0]
400130c0:	e3500c01 	cmp	r0, #256	; 0x100
400130c4:	0a000007 	beq	400130e8 <CyU3PDebugThreadEntry+0x68>
400130c8:	e59f10a0 	ldr	r1, [pc, #160]	; 40013170 <CyU3PDebugThreadEntry+0xf0>
400130cc:	e5911000 	ldr	r1, [r1]
400130d0:	e59f2094 	ldr	r2, [pc, #148]	; 4001316c <CyU3PDebugThreadEntry+0xec>
400130d4:	e1d220b0 	ldrh	r2, [r2]
400130d8:	e0810002 	add	r0, r1, r2
400130dc:	e3a02008 	mov	r2, #8
400130e0:	e1a0100d 	mov	r1, sp
400130e4:	ebffc1fa 	bl	400038d4 <CyU3PMemCopy>
400130e8:	e59f007c 	ldr	r0, [pc, #124]	; 4001316c <CyU3PDebugThreadEntry+0xec>
400130ec:	e1d000b0 	ldrh	r0, [r0]
400130f0:	e35000f8 	cmp	r0, #248	; 0xf8
400130f4:	1a000015 	bne	40013150 <CyU3PDebugThreadEntry+0xd0>
400130f8:	e3a02000 	mov	r2, #0
400130fc:	e3a01c01 	mov	r1, #256	; 0x100
40013100:	e59f006c 	ldr	r0, [pc, #108]	; 40013174 <CyU3PDebugThreadEntry+0xf4>
40013104:	eb0007eb 	bl	400150b8 <CyU3PDmaChannelCommitBuffer>
40013108:	e1a05000 	mov	r5, r0
4001310c:	e3550000 	cmp	r5, #0
40013110:	1a000004 	bne	40013128 <CyU3PDebugThreadEntry+0xa8>
40013114:	e3e02000 	mvn	r2, #0
40013118:	e59f1050 	ldr	r1, [pc, #80]	; 40013170 <CyU3PDebugThreadEntry+0xf0>
4001311c:	e281000c 	add	r0, r1, #12
40013120:	eb000b27 	bl	40015dc4 <CyU3PDmaChannelGetBuffer>
40013124:	e1a05000 	mov	r5, r0
40013128:	e3550000 	cmp	r5, #0
4001312c:	0a000004 	beq	40013144 <CyU3PDebugThreadEntry+0xc4>
40013130:	ebfffeab 	bl	40012be4 <CyU3PDebugChannelReset>
40013134:	e1a05000 	mov	r5, r0
40013138:	e3550000 	cmp	r5, #0
4001313c:	0a000000 	beq	40013144 <CyU3PDebugThreadEntry+0xc4>
40013140:	ea000005 	b	4001315c <CyU3PDebugThreadEntry+0xdc>
40013144:	e3a00000 	mov	r0, #0
40013148:	e59f101c 	ldr	r1, [pc, #28]	; 4001316c <CyU3PDebugThreadEntry+0xec>
4001314c:	e1c100b0 	strh	r0, [r1]
40013150:	e59f0010 	ldr	r0, [pc, #16]	; 40013168 <CyU3PDebugThreadEntry+0xe8>
40013154:	ebffdbb7 	bl	4000a038 <_txe_mutex_put>
40013158:	eaffffcc 	b	40013090 <CyU3PDebugThreadEntry+0x10>
4001315c:	e1a00000 	nop			; (mov r0, r0)
40013160:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
40013164:	400312dc 	.word	0x400312dc
40013168:	40031318 	.word	0x40031318
4001316c:	40030c80 	.word	0x40030c80
40013170:	40031350 	.word	0x40031350
40013174:	4003135c 	.word	0x4003135c

Disassembly of section i.MyDebugSNPrint:

40013178 <MyDebugSNPrint>:
40013178:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001317c:	e24dd01c 	sub	sp, sp, #28
40013180:	e1a04000 	mov	r4, r0
40013184:	e1a05001 	mov	r5, r1
40013188:	e1a06002 	mov	r6, r2
4001318c:	e3a08000 	mov	r8, #0
40013190:	e3a00000 	mov	r0, #0
40013194:	e58d0018 	str	r0, [sp, #24]
40013198:	e3a09000 	mov	r9, #0
4001319c:	e1d5b0b0 	ldrh	fp, [r5]
400131a0:	e3540000 	cmp	r4, #0
400131a4:	1a000002 	bne	400131b4 <MyDebugSNPrint+0x3c>
400131a8:	e3a00040 	mov	r0, #64	; 0x40
400131ac:	e28dd02c 	add	sp, sp, #44	; 0x2c
400131b0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400131b4:	e1a07006 	mov	r7, r6
400131b8:	ea00008d 	b	400133f4 <MyDebugSNPrint+0x27c>
400131bc:	e24b0002 	sub	r0, fp, #2
400131c0:	e1500009 	cmp	r0, r9
400131c4:	ca000001 	bgt	400131d0 <MyDebugSNPrint+0x58>
400131c8:	e3a00040 	mov	r0, #64	; 0x40
400131cc:	eafffff6 	b	400131ac <MyDebugSNPrint+0x34>
400131d0:	e5d70000 	ldrb	r0, [r7]
400131d4:	e3500025 	cmp	r0, #37	; 0x25
400131d8:	0a000005 	beq	400131f4 <MyDebugSNPrint+0x7c>
400131dc:	e5d71000 	ldrb	r1, [r7]
400131e0:	e1a00009 	mov	r0, r9
400131e4:	e2892001 	add	r2, r9, #1
400131e8:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400131ec:	e7c41000 	strb	r1, [r4, r0]
400131f0:	ea00007e 	b	400133f0 <MyDebugSNPrint+0x278>
400131f4:	e2877001 	add	r7, r7, #1
400131f8:	e5d70000 	ldrb	r0, [r7]
400131fc:	e3500064 	cmp	r0, #100	; 0x64
40013200:	0a000021 	beq	4001328c <MyDebugSNPrint+0x114>
40013204:	ca000006 	bgt	40013224 <MyDebugSNPrint+0xac>
40013208:	e3500025 	cmp	r0, #37	; 0x25
4001320c:	0a00000b 	beq	40013240 <MyDebugSNPrint+0xc8>
40013210:	e3500058 	cmp	r0, #88	; 0x58
40013214:	0a00004c 	beq	4001334c <MyDebugSNPrint+0x1d4>
40013218:	e3500063 	cmp	r0, #99	; 0x63
4001321c:	1a00005a 	bne	4001338c <MyDebugSNPrint+0x214>
40013220:	ea00000d 	b	4001325c <MyDebugSNPrint+0xe4>
40013224:	e3500073 	cmp	r0, #115	; 0x73
40013228:	0a000031 	beq	400132f4 <MyDebugSNPrint+0x17c>
4001322c:	e3500075 	cmp	r0, #117	; 0x75
40013230:	0a000036 	beq	40013310 <MyDebugSNPrint+0x198>
40013234:	e3500078 	cmp	r0, #120	; 0x78
40013238:	1a000053 	bne	4001338c <MyDebugSNPrint+0x214>
4001323c:	ea000044 	b	40013354 <MyDebugSNPrint+0x1dc>
40013240:	e1a00000 	nop			; (mov r0, r0)
40013244:	e3a01025 	mov	r1, #37	; 0x25
40013248:	e1a00009 	mov	r0, r9
4001324c:	e2892001 	add	r2, r9, #1
40013250:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013254:	e7c41000 	strb	r1, [r4, r0]
40013258:	ea00004e 	b	40013398 <MyDebugSNPrint+0x220>
4001325c:	e1a00000 	nop			; (mov r0, r0)
40013260:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013264:	e5900000 	ldr	r0, [r0]
40013268:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
4001326c:	e2811004 	add	r1, r1, #4
40013270:	e58d1028 	str	r1, [sp, #40]	; 0x28
40013274:	e20010ff 	and	r1, r0, #255	; 0xff
40013278:	e1a00009 	mov	r0, r9
4001327c:	e2892001 	add	r2, r9, #1
40013280:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013284:	e7c41000 	strb	r1, [r4, r0]
40013288:	ea000042 	b	40013398 <MyDebugSNPrint+0x220>
4001328c:	e1a00000 	nop			; (mov r0, r0)
40013290:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013294:	e5900000 	ldr	r0, [r0]
40013298:	e58d0014 	str	r0, [sp, #20]
4001329c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400132a0:	e2800004 	add	r0, r0, #4
400132a4:	e58d0028 	str	r0, [sp, #40]	; 0x28
400132a8:	e59d0014 	ldr	r0, [sp, #20]
400132ac:	e3500000 	cmp	r0, #0
400132b0:	aa000007 	bge	400132d4 <MyDebugSNPrint+0x15c>
400132b4:	e3a0102d 	mov	r1, #45	; 0x2d
400132b8:	e1a00009 	mov	r0, r9
400132bc:	e2892001 	add	r2, r9, #1
400132c0:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400132c4:	e7c41000 	strb	r1, [r4, r0]
400132c8:	e59d0014 	ldr	r0, [sp, #20]
400132cc:	e2600000 	rsb	r0, r0, #0
400132d0:	e58d0014 	str	r0, [sp, #20]
400132d4:	e3a0200a 	mov	r2, #10
400132d8:	e59d1014 	ldr	r1, [sp, #20]
400132dc:	e28d0004 	add	r0, sp, #4
400132e0:	ebfffeb5 	bl	40012dbc <CyU3PDebugIntToStr>
400132e4:	e1a08000 	mov	r8, r0
400132e8:	e3a00001 	mov	r0, #1
400132ec:	e58d0018 	str	r0, [sp, #24]
400132f0:	ea000028 	b	40013398 <MyDebugSNPrint+0x220>
400132f4:	e1a00000 	nop			; (mov r0, r0)
400132f8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400132fc:	e4908004 	ldr	r8, [r0], #4
40013300:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013304:	e3a00001 	mov	r0, #1
40013308:	e58d0018 	str	r0, [sp, #24]
4001330c:	ea000021 	b	40013398 <MyDebugSNPrint+0x220>
40013310:	e1a00000 	nop			; (mov r0, r0)
40013314:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013318:	e5900000 	ldr	r0, [r0]
4001331c:	e58d0010 	str	r0, [sp, #16]
40013320:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013324:	e2800004 	add	r0, r0, #4
40013328:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001332c:	e3a0200a 	mov	r2, #10
40013330:	e59d1010 	ldr	r1, [sp, #16]
40013334:	e28d0004 	add	r0, sp, #4
40013338:	ebfffe9f 	bl	40012dbc <CyU3PDebugIntToStr>
4001333c:	e1a08000 	mov	r8, r0
40013340:	e3a00001 	mov	r0, #1
40013344:	e58d0018 	str	r0, [sp, #24]
40013348:	ea000012 	b	40013398 <MyDebugSNPrint+0x220>
4001334c:	e1a00000 	nop			; (mov r0, r0)
40013350:	e1a00000 	nop			; (mov r0, r0)
40013354:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013358:	e5900000 	ldr	r0, [r0]
4001335c:	e58d0010 	str	r0, [sp, #16]
40013360:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013364:	e2800004 	add	r0, r0, #4
40013368:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001336c:	e3a02010 	mov	r2, #16
40013370:	e59d1010 	ldr	r1, [sp, #16]
40013374:	e28d0004 	add	r0, sp, #4
40013378:	ebfffe8f 	bl	40012dbc <CyU3PDebugIntToStr>
4001337c:	e1a08000 	mov	r8, r0
40013380:	e3a00001 	mov	r0, #1
40013384:	e58d0018 	str	r0, [sp, #24]
40013388:	ea000002 	b	40013398 <MyDebugSNPrint+0x220>
4001338c:	e1a00000 	nop			; (mov r0, r0)
40013390:	e3a00040 	mov	r0, #64	; 0x40
40013394:	eaffff84 	b	400131ac <MyDebugSNPrint+0x34>
40013398:	e1a00000 	nop			; (mov r0, r0)
4001339c:	e59d0018 	ldr	r0, [sp, #24]
400133a0:	e3500000 	cmp	r0, #0
400133a4:	0a000010 	beq	400133ec <MyDebugSNPrint+0x274>
400133a8:	e1a00008 	mov	r0, r8
400133ac:	ebfff4f3 	bl	40010780 <strlen>
400133b0:	e1a0a800 	lsl	sl, r0, #16
400133b4:	e1a0a82a 	lsr	sl, sl, #16
400133b8:	e04b000a 	sub	r0, fp, sl
400133bc:	e2400001 	sub	r0, r0, #1
400133c0:	e1500009 	cmp	r0, r9
400133c4:	ca000001 	bgt	400133d0 <MyDebugSNPrint+0x258>
400133c8:	e3a00040 	mov	r0, #64	; 0x40
400133cc:	eaffff76 	b	400131ac <MyDebugSNPrint+0x34>
400133d0:	e0840009 	add	r0, r4, r9
400133d4:	e1a01008 	mov	r1, r8
400133d8:	ebfff4ac 	bl	40010690 <strcpy>
400133dc:	e089000a 	add	r0, r9, sl
400133e0:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400133e4:	e3a00000 	mov	r0, #0
400133e8:	e58d0018 	str	r0, [sp, #24]
400133ec:	e1a00000 	nop			; (mov r0, r0)
400133f0:	e2877001 	add	r7, r7, #1
400133f4:	e5d70000 	ldrb	r0, [r7]
400133f8:	e3500000 	cmp	r0, #0
400133fc:	1affff6e 	bne	400131bc <MyDebugSNPrint+0x44>
40013400:	e3a00000 	mov	r0, #0
40013404:	e7c40009 	strb	r0, [r4, r9]
40013408:	e1c590b0 	strh	r9, [r5]
4001340c:	eaffff66 	b	400131ac <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

40013410 <CyU3PBusyWait>:
40013410:	ea000006 	b	40013430 <CyU3PBusyWait+0x20>
40013414:	e3a01000 	mov	r1, #0
40013418:	ea000002 	b	40013428 <CyU3PBusyWait+0x18>
4001341c:	e281100a 	add	r1, r1, #10
40013420:	e241100a 	sub	r1, r1, #10
40013424:	e2811001 	add	r1, r1, #1
40013428:	e351001f 	cmp	r1, #31
4001342c:	3afffffa 	bcc	4001341c <CyU3PBusyWait+0xc>
40013430:	e1b02000 	movs	r2, r0
40013434:	e2403001 	sub	r3, r0, #1
40013438:	e1a00803 	lsl	r0, r3, #16
4001343c:	e1a00820 	lsr	r0, r0, #16
40013440:	1afffff3 	bne	40013414 <CyU3PBusyWait+0x4>
40013444:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

40013448 <CyU3PComputeChecksum>:
40013448:	e92d4010 	push	{r4, lr}
4001344c:	e1a03000 	mov	r3, r0
40013450:	e3a00000 	mov	r0, #0
40013454:	e3530000 	cmp	r3, #0
40013458:	0a000003 	beq	4001346c <CyU3PComputeChecksum+0x24>
4001345c:	e3510000 	cmp	r1, #0
40013460:	0a000001 	beq	4001346c <CyU3PComputeChecksum+0x24>
40013464:	e3520000 	cmp	r2, #0
40013468:	1a000001 	bne	40013474 <CyU3PComputeChecksum+0x2c>
4001346c:	e3a00040 	mov	r0, #64	; 0x40
40013470:	ea00000a 	b	400134a0 <CyU3PComputeChecksum+0x58>
40013474:	e3a0e000 	mov	lr, #0
40013478:	e582e000 	str	lr, [r2]
4001347c:	e3a0c000 	mov	ip, #0
40013480:	ea000004 	b	40013498 <CyU3PComputeChecksum+0x50>
40013484:	e592e000 	ldr	lr, [r2]
40013488:	e793410c 	ldr	r4, [r3, ip, lsl #2]
4001348c:	e08ee004 	add	lr, lr, r4
40013490:	e582e000 	str	lr, [r2]
40013494:	e28cc001 	add	ip, ip, #1
40013498:	e15c0121 	cmp	ip, r1, lsr #2
4001349c:	3afffff8 	bcc	40013484 <CyU3PComputeChecksum+0x3c>
400134a0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

400134a4 <__aeabi_memclr4>:
400134a4:	e92d4030 	push	{r4, r5, lr}
400134a8:	e1a04000 	mov	r4, r0
400134ac:	e1a05001 	mov	r5, r1
400134b0:	e3a02000 	mov	r2, #0
400134b4:	e1a01005 	mov	r1, r5
400134b8:	e1a00004 	mov	r0, r4
400134bc:	eb000020 	bl	40013544 <__aeabi_memset>
400134c0:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

400134c4 <__aeabi_memcpy>:
400134c4:	e92d4010 	push	{r4, lr}
400134c8:	e1a03000 	mov	r3, r0
400134cc:	e1a0c001 	mov	ip, r1
400134d0:	e1500001 	cmp	r0, r1
400134d4:	2a000006 	bcs	400134f4 <__aeabi_memcpy+0x30>
400134d8:	ea000001 	b	400134e4 <__aeabi_memcpy+0x20>
400134dc:	e4dce001 	ldrb	lr, [ip], #1
400134e0:	e4c3e001 	strb	lr, [r3], #1
400134e4:	e1b0e002 	movs	lr, r2
400134e8:	e2422001 	sub	r2, r2, #1
400134ec:	1afffffa 	bne	400134dc <__aeabi_memcpy+0x18>
400134f0:	ea000009 	b	4001351c <__aeabi_memcpy+0x58>
400134f4:	e080e002 	add	lr, r0, r2
400134f8:	e24e3001 	sub	r3, lr, #1
400134fc:	e081e002 	add	lr, r1, r2
40013500:	e24ec001 	sub	ip, lr, #1
40013504:	ea000001 	b	40013510 <__aeabi_memcpy+0x4c>
40013508:	e45ce001 	ldrb	lr, [ip], #-1
4001350c:	e443e001 	strb	lr, [r3], #-1
40013510:	e1b0e002 	movs	lr, r2
40013514:	e2422001 	sub	r2, r2, #1
40013518:	1afffffa 	bne	40013508 <__aeabi_memcpy+0x44>
4001351c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

40013520 <__aeabi_memcpy4>:
40013520:	e92d4070 	push	{r4, r5, r6, lr}
40013524:	e1a04000 	mov	r4, r0
40013528:	e1a05001 	mov	r5, r1
4001352c:	e1a06002 	mov	r6, r2
40013530:	e1a02006 	mov	r2, r6
40013534:	e1a01005 	mov	r1, r5
40013538:	e1a00004 	mov	r0, r4
4001353c:	ebffffe0 	bl	400134c4 <__aeabi_memcpy>
40013540:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

40013544 <__aeabi_memset>:
40013544:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40013548:	e1a03000 	mov	r3, r0
4001354c:	ea000000 	b	40013554 <__aeabi_memset+0x10>
40013550:	e4c32001 	strb	r2, [r3], #1
40013554:	e1b0c001 	movs	ip, r1
40013558:	e2411001 	sub	r1, r1, #1
4001355c:	1afffffb 	bne	40013550 <__aeabi_memset+0xc>
40013560:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

40013564 <CyU3PApplicationDefine>:
40013564:	e92d4010 	push	{r4, lr}
40013568:	e24dd020 	sub	sp, sp, #32
4001356c:	e3e00000 	mvn	r0, #0
40013570:	e59f10b4 	ldr	r1, [pc, #180]	; 4001362c <CyU3PApplicationDefine+0xc8>
40013574:	e5810000 	str	r0, [r1]
40013578:	e3a00000 	mov	r0, #0
4001357c:	e59f10ac 	ldr	r1, [pc, #172]	; 40013630 <CyU3PApplicationDefine+0xcc>
40013580:	e5810000 	str	r0, [r1]
40013584:	ebffc027 	bl	40003628 <CyU3PMemInit>
40013588:	eb001694 	bl	40018fe0 <CyU3PDmaApplicationDefine>
4001358c:	e3a02028 	mov	r2, #40	; 0x28
40013590:	e3a01000 	mov	r1, #0
40013594:	e59f0098 	ldr	r0, [pc, #152]	; 40013634 <CyU3PApplicationDefine+0xd0>
40013598:	ebffd939 	bl	40009a84 <_txe_event_flags_create>
4001359c:	e3a00080 	mov	r0, #128	; 0x80
400135a0:	ebffc033 	bl	40003674 <CyU3PMemAlloc>
400135a4:	e1a04000 	mov	r4, r0
400135a8:	e3a0303c 	mov	r3, #60	; 0x3c
400135ac:	e3a02080 	mov	r2, #128	; 0x80
400135b0:	e1cd20f0 	strd	r2, [sp]
400135b4:	e1a03004 	mov	r3, r4
400135b8:	e3a02006 	mov	r2, #6
400135bc:	e3a01000 	mov	r1, #0
400135c0:	e59f0070 	ldr	r0, [pc, #112]	; 40013638 <CyU3PApplicationDefine+0xd4>
400135c4:	ebffdac3 	bl	4000a0d8 <_txe_queue_create>
400135c8:	e3a00b01 	mov	r0, #1024	; 0x400
400135cc:	ebffc028 	bl	40003674 <CyU3PMemAlloc>
400135d0:	e1a04000 	mov	r4, r0
400135d4:	e3a030a8 	mov	r3, #168	; 0xa8
400135d8:	e3a02001 	mov	r2, #1
400135dc:	e3a01000 	mov	r1, #0
400135e0:	e3a00004 	mov	r0, #4
400135e4:	e28dc00c 	add	ip, sp, #12
400135e8:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400135ec:	e3a02b01 	mov	r2, #1024	; 0x400
400135f0:	e1a03001 	mov	r3, r1
400135f4:	e58d2004 	str	r2, [sp, #4]
400135f8:	e59f203c 	ldr	r2, [pc, #60]	; 4001363c <CyU3PApplicationDefine+0xd8>
400135fc:	e28f103c 	add	r1, pc, #60	; 0x3c
40013600:	e58d0008 	str	r0, [sp, #8]
40013604:	e59f0048 	ldr	r0, [pc, #72]	; 40013654 <CyU3PApplicationDefine+0xf0>
40013608:	e58d4000 	str	r4, [sp]
4001360c:	ebffdb97 	bl	4000a470 <_txe_thread_create>
40013610:	eb000082 	bl	40013820 <CyU3PSibApplicationDefine>
40013614:	ebfffd3d 	bl	40012b10 <CyU3PDebugApplicationDefine>
40013618:	eb001d16 	bl	4001aa78 <CyU3PPibApplicationDefine>
4001361c:	eb00013c 	bl	40013b14 <CyU3PLppApplicationDefine>
40013620:	eb002b6f 	bl	4001e3e4 <CyU3PUibApplicationDefine>
40013624:	e28dd020 	add	sp, sp, #32
40013628:	e8bd8010 	pop	{r4, pc}
4001362c:	40030c84 	.word	0x40030c84
40013630:	40030c88 	.word	0x40030c88
40013634:	400314a4 	.word	0x400314a4
40013638:	400314cc 	.word	0x400314cc
4001363c:	4001370c 	.word	0x4001370c
40013640:	535f3230 	.word	0x535f3230
40013644:	45545359 	.word	0x45545359
40013648:	48545f4d 	.word	0x48545f4d
4001364c:	44414552 	.word	0x44414552
40013650:	00000000 	.word	0x00000000
40013654:	400313fc 	.word	0x400313fc

Disassembly of section i.CyU3PSysCheckBootState:

40013658 <CyU3PSysCheckBootState>:
40013658:	e92d4070 	push	{r4, r5, r6, lr}
4001365c:	e3a00000 	mov	r0, #0
40013660:	e59f106c 	ldr	r1, [pc, #108]	; 400136d4 <CyU3PSysCheckBootState+0x7c>
40013664:	e5810000 	str	r0, [r1]
40013668:	e59f0068 	ldr	r0, [pc, #104]	; 400136d8 <CyU3PSysCheckBootState+0x80>
4001366c:	e5900000 	ldr	r0, [r0]
40013670:	e3100401 	tst	r0, #16777216	; 0x1000000
40013674:	0a000015 	beq	400136d0 <CyU3PSysCheckBootState+0x78>
40013678:	e59f005c 	ldr	r0, [pc, #92]	; 400136dc <CyU3PSysCheckBootState+0x84>
4001367c:	e5900000 	ldr	r0, [r0]
40013680:	e3500001 	cmp	r0, #1
40013684:	1a000011 	bne	400136d0 <CyU3PSysCheckBootState+0x78>
40013688:	e3a00000 	mov	r0, #0
4001368c:	e59f1048 	ldr	r1, [pc, #72]	; 400136dc <CyU3PSysCheckBootState+0x84>
40013690:	e5810000 	str	r0, [r1]
40013694:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013698:	e5904004 	ldr	r4, [r0, #4]
4001369c:	e1a05004 	mov	r5, r4
400136a0:	e3a02901 	mov	r2, #16384	; 0x4000
400136a4:	e1a01005 	mov	r1, r5
400136a8:	e3a00000 	mov	r0, #0
400136ac:	ebffc088 	bl	400038d4 <CyU3PMemCopy>
400136b0:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400136b4:	e5900008 	ldr	r0, [r0, #8]
400136b8:	e59f1020 	ldr	r1, [pc, #32]	; 400136e0 <CyU3PSysCheckBootState+0x88>
400136bc:	e1500001 	cmp	r0, r1
400136c0:	1a000002 	bne	400136d0 <CyU3PSysCheckBootState+0x78>
400136c4:	e2840901 	add	r0, r4, #16384	; 0x4000
400136c8:	e59f1004 	ldr	r1, [pc, #4]	; 400136d4 <CyU3PSysCheckBootState+0x7c>
400136cc:	e5810000 	str	r0, [r1]
400136d0:	e8bd8070 	pop	{r4, r5, r6, pc}
400136d4:	40030c8c 	.word	0x40030c8c
400136d8:	e0050000 	.word	0xe0050000
400136dc:	40030c88 	.word	0x40030c88
400136e0:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

400136e4 <CyU3PSysFwMsgHandler>:
400136e4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

400136e8 <CyU3PSysModuleInitCompleteEvt>:
400136e8:	e92d4010 	push	{r4, lr}
400136ec:	e1a04000 	mov	r4, r0
400136f0:	e3a00010 	mov	r0, #16
400136f4:	e1a01410 	lsl	r1, r0, r4
400136f8:	e3a02000 	mov	r2, #0
400136fc:	e59f0004 	ldr	r0, [pc, #4]	; 40013708 <CyU3PSysModuleInitCompleteEvt+0x20>
40013700:	ebffd97f 	bl	40009d04 <_txe_event_flags_set>
40013704:	e8bd8010 	pop	{r4, pc}
40013708:	400314a4 	.word	0x400314a4

Disassembly of section i.CyU3PSysThreadEntry:

4001370c <CyU3PSysThreadEntry>:
4001370c:	e92d4010 	push	{r4, lr}
40013710:	e24dd028 	sub	sp, sp, #40	; 0x28
40013714:	e3a04c02 	mov	r4, #512	; 0x200
40013718:	e3844080 	orr	r4, r4, #128	; 0x80
4001371c:	e3e03000 	mvn	r3, #0
40013720:	e58d3000 	str	r3, [sp]
40013724:	e28d3024 	add	r3, sp, #36	; 0x24
40013728:	e3a02003 	mov	r2, #3
4001372c:	e1a01004 	mov	r1, r4
40013730:	e59f00d8 	ldr	r0, [pc, #216]	; 40013810 <CyU3PSysThreadEntry+0x104>
40013734:	ebffd942 	bl	40009c44 <_txe_event_flags_get>
40013738:	e28d2020 	add	r2, sp, #32
4001373c:	e3a01000 	mov	r1, #0
40013740:	e59f00cc 	ldr	r0, [pc, #204]	; 40013814 <CyU3PSysThreadEntry+0x108>
40013744:	ebffdbff 	bl	4000a748 <_txe_thread_priority_change>
40013748:	ebffd344 	bl	40008460 <CyFxApplicationDefine>
4001374c:	e28d2020 	add	r2, sp, #32
40013750:	e3a01004 	mov	r1, #4
40013754:	e59f00b8 	ldr	r0, [pc, #184]	; 40013814 <CyU3PSysThreadEntry+0x108>
40013758:	ebffdbfa 	bl	4000a748 <_txe_thread_priority_change>
4001375c:	ea00002a 	b	4001380c <CyU3PSysThreadEntry+0x100>
40013760:	e59f00b0 	ldr	r0, [pc, #176]	; 40013818 <CyU3PSysThreadEntry+0x10c>
40013764:	e5903000 	ldr	r3, [r0]
40013768:	e58d3000 	str	r3, [sp]
4001376c:	e28d3024 	add	r3, sp, #36	; 0x24
40013770:	e3a02001 	mov	r2, #1
40013774:	e3e01000 	mvn	r1, #0
40013778:	e59f0090 	ldr	r0, [pc, #144]	; 40013810 <CyU3PSysThreadEntry+0x104>
4001377c:	ebffd930 	bl	40009c44 <_txe_event_flags_get>
40013780:	e58d0020 	str	r0, [sp, #32]
40013784:	e59d0020 	ldr	r0, [sp, #32]
40013788:	e3500000 	cmp	r0, #0
4001378c:	0a000000 	beq	40013794 <CyU3PSysThreadEntry+0x88>
40013790:	ea00001d 	b	4001380c <CyU3PSysThreadEntry+0x100>
40013794:	e3a04001 	mov	r4, #1
40013798:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001379c:	e0000004 	and	r0, r0, r4
400137a0:	e58d0024 	str	r0, [sp, #36]	; 0x24
400137a4:	ea000014 	b	400137fc <CyU3PSysThreadEntry+0xf0>
400137a8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400137ac:	e3100001 	tst	r0, #1
400137b0:	0a000011 	beq	400137fc <CyU3PSysThreadEntry+0xf0>
400137b4:	e3a02000 	mov	r2, #0
400137b8:	e28d1008 	add	r1, sp, #8
400137bc:	e59f0058 	ldr	r0, [pc, #88]	; 4001381c <CyU3PSysThreadEntry+0x110>
400137c0:	ebffdada 	bl	4000a330 <_txe_queue_receive>
400137c4:	e58d0020 	str	r0, [sp, #32]
400137c8:	e59d0020 	ldr	r0, [sp, #32]
400137cc:	e3500000 	cmp	r0, #0
400137d0:	1a000006 	bne	400137f0 <CyU3PSysThreadEntry+0xe4>
400137d4:	e1dd00b8 	ldrh	r0, [sp, #8]
400137d8:	e2000902 	and	r0, r0, #32768	; 0x8000
400137dc:	e1b007a0 	lsrs	r0, r0, #15
400137e0:	1a000005 	bne	400137fc <CyU3PSysThreadEntry+0xf0>
400137e4:	e28d0008 	add	r0, sp, #8
400137e8:	ebffffbd 	bl	400136e4 <CyU3PSysFwMsgHandler>
400137ec:	ea000002 	b	400137fc <CyU3PSysThreadEntry+0xf0>
400137f0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400137f4:	e3c00001 	bic	r0, r0, #1
400137f8:	e58d0024 	str	r0, [sp, #36]	; 0x24
400137fc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013800:	e3500000 	cmp	r0, #0
40013804:	1affffe7 	bne	400137a8 <CyU3PSysThreadEntry+0x9c>
40013808:	e1a00000 	nop			; (mov r0, r0)
4001380c:	eaffffd3 	b	40013760 <CyU3PSysThreadEntry+0x54>
40013810:	400314a4 	.word	0x400314a4
40013814:	400313fc 	.word	0x400313fc
40013818:	40030c84 	.word	0x40030c84
4001381c:	400314cc 	.word	0x400314cc

Disassembly of section i.CyU3PSibApplicationDefine:

40013820 <CyU3PSibApplicationDefine>:
40013820:	e92d4010 	push	{r4, lr}
40013824:	e24dd020 	sub	sp, sp, #32
40013828:	e3a04000 	mov	r4, #0
4001382c:	e3a02028 	mov	r2, #40	; 0x28
40013830:	e3a01000 	mov	r1, #0
40013834:	e59f0064 	ldr	r0, [pc, #100]	; 400138a0 <CyU3PSibApplicationDefine+0x80>
40013838:	ebffd891 	bl	40009a84 <_txe_event_flags_create>
4001383c:	e3a00000 	mov	r0, #0
40013840:	e59f105c 	ldr	r1, [pc, #92]	; 400138a4 <CyU3PSibApplicationDefine+0x84>
40013844:	e5810000 	str	r0, [r1]
40013848:	e3a00b02 	mov	r0, #2048	; 0x800
4001384c:	ebffbf88 	bl	40003674 <CyU3PMemAlloc>
40013850:	e1a04000 	mov	r4, r0
40013854:	e3540000 	cmp	r4, #0
40013858:	0a00000e 	beq	40013898 <CyU3PSibApplicationDefine+0x78>
4001385c:	e3a030a8 	mov	r3, #168	; 0xa8
40013860:	e3a02001 	mov	r2, #1
40013864:	e3a01000 	mov	r1, #0
40013868:	e3a00004 	mov	r0, #4
4001386c:	e28dc00c 	add	ip, sp, #12
40013870:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013874:	e3a02b02 	mov	r2, #2048	; 0x800
40013878:	e1a03001 	mov	r3, r1
4001387c:	e58d2004 	str	r2, [sp, #4]
40013880:	e59f2020 	ldr	r2, [pc, #32]	; 400138a8 <CyU3PSibApplicationDefine+0x88>
40013884:	e28f1020 	add	r1, pc, #32
40013888:	e58d0008 	str	r0, [sp, #8]
4001388c:	e59f0028 	ldr	r0, [pc, #40]	; 400138bc <CyU3PSibApplicationDefine+0x9c>
40013890:	e58d4000 	str	r4, [sp]
40013894:	ebffdaf5 	bl	4000a470 <_txe_thread_create>
40013898:	e28dd020 	add	sp, sp, #32
4001389c:	e8bd8010 	pop	{r4, pc}
400138a0:	400315b0 	.word	0x400315b0
400138a4:	40030c90 	.word	0x40030c90
400138a8:	40013918 	.word	0x40013918
400138ac:	535f3630 	.word	0x535f3630
400138b0:	545f4249 	.word	0x545f4249
400138b4:	41455248 	.word	0x41455248
400138b8:	00000044 	.word	0x00000044
400138bc:	40031508 	.word	0x40031508

Disassembly of section i.CyU3PSibInitIntfParams:

400138c0 <CyU3PSibInitIntfParams>:
400138c0:	e0802100 	add	r2, r0, r0, lsl #2
400138c4:	e59f3048 	ldr	r3, [pc, #72]	; 40013914 <CyU3PSibInitIntfParams+0x54>
400138c8:	e0831102 	add	r1, r3, r2, lsl #2
400138cc:	e3a020ff 	mov	r2, #255	; 0xff
400138d0:	e5c12000 	strb	r2, [r1]
400138d4:	e3a02002 	mov	r2, #2
400138d8:	e5c12008 	strb	r2, [r1, #8]
400138dc:	e3a02001 	mov	r2, #1
400138e0:	e5c12009 	strb	r2, [r1, #9]
400138e4:	e3a02000 	mov	r2, #0
400138e8:	e5c12010 	strb	r2, [r1, #16]
400138ec:	e5c1200a 	strb	r2, [r1, #10]
400138f0:	e3a020ff 	mov	r2, #255	; 0xff
400138f4:	e5c1200b 	strb	r2, [r1, #11]
400138f8:	e3a02000 	mov	r2, #0
400138fc:	e581200c 	str	r2, [r1, #12]
40013900:	e3a02004 	mov	r2, #4
40013904:	e5c12011 	strb	r2, [r1, #17]
40013908:	e3a02000 	mov	r2, #0
4001390c:	e5c12012 	strb	r2, [r1, #18]
40013910:	e12fff1e 	bx	lr
40013914:	400315d8 	.word	0x400315d8

Disassembly of section i.CyU3PSibThreadEntry:

40013918 <CyU3PSibThreadEntry>:
40013918:	e92d4010 	push	{r4, lr}
4001391c:	e3a00000 	mov	r0, #0
40013920:	ebffffe6 	bl	400138c0 <CyU3PSibInitIntfParams>
40013924:	e3a00001 	mov	r0, #1
40013928:	ebffffe4 	bl	400138c0 <CyU3PSibInitIntfParams>
4001392c:	e3a00003 	mov	r0, #3
40013930:	ebffff6c 	bl	400136e8 <CyU3PSysModuleInitCompleteEvt>
40013934:	ea000009 	b	40013960 <CyU3PSibThreadEntry+0x48>
40013938:	e59f0024 	ldr	r0, [pc, #36]	; 40013964 <CyU3PSibThreadEntry+0x4c>
4001393c:	e5900000 	ldr	r0, [r0]
40013940:	e3500000 	cmp	r0, #0
40013944:	0a000003 	beq	40013958 <CyU3PSibThreadEntry+0x40>
40013948:	e59f0014 	ldr	r0, [pc, #20]	; 40013964 <CyU3PSibThreadEntry+0x4c>
4001394c:	e5900000 	ldr	r0, [r0]
40013950:	e12fff30 	blx	r0
40013954:	ea000001 	b	40013960 <CyU3PSibThreadEntry+0x48>
40013958:	e3a0000a 	mov	r0, #10
4001395c:	ebffd3f0 	bl	40008924 <_tx_thread_sleep>
40013960:	eafffff4 	b	40013938 <CyU3PSibThreadEntry+0x20>
40013964:	40030c90 	.word	0x40030c90

Disassembly of section i.CyU3PGpioSetClock:

40013968 <CyU3PGpioSetClock>:
40013968:	e92d4070 	push	{r4, r5, r6, lr}
4001396c:	e1a04000 	mov	r4, r0
40013970:	e3a05000 	mov	r5, #0
40013974:	e5d40000 	ldrb	r0, [r4]
40013978:	e3500002 	cmp	r0, #2
4001397c:	ba000002 	blt	4001398c <CyU3PGpioSetClock+0x24>
40013980:	e5d40000 	ldrb	r0, [r4]
40013984:	e3500010 	cmp	r0, #16
40013988:	da000001 	ble	40013994 <CyU3PGpioSetClock+0x2c>
4001398c:	e3a00040 	mov	r0, #64	; 0x40
40013990:	e8bd8070 	pop	{r4, r5, r6, pc}
40013994:	e5d40001 	ldrb	r0, [r4, #1]
40013998:	e3500000 	cmp	r0, #0
4001399c:	1a000004 	bne	400139b4 <CyU3PGpioSetClock+0x4c>
400139a0:	e5940004 	ldr	r0, [r4, #4]
400139a4:	e3500000 	cmp	r0, #0
400139a8:	0a000009 	beq	400139d4 <CyU3PGpioSetClock+0x6c>
400139ac:	e3a00040 	mov	r0, #64	; 0x40
400139b0:	eafffff6 	b	40013990 <CyU3PGpioSetClock+0x28>
400139b4:	e5d40001 	ldrb	r0, [r4, #1]
400139b8:	e3500002 	cmp	r0, #2
400139bc:	ba000002 	blt	400139cc <CyU3PGpioSetClock+0x64>
400139c0:	e5d40001 	ldrb	r0, [r4, #1]
400139c4:	e3500040 	cmp	r0, #64	; 0x40
400139c8:	da000001 	ble	400139d4 <CyU3PGpioSetClock+0x6c>
400139cc:	e3a00040 	mov	r0, #64	; 0x40
400139d0:	eaffffee 	b	40013990 <CyU3PGpioSetClock+0x28>
400139d4:	e5d40009 	ldrb	r0, [r4, #9]
400139d8:	e3500004 	cmp	r0, #4
400139dc:	ba000001 	blt	400139e8 <CyU3PGpioSetClock+0x80>
400139e0:	e3a00040 	mov	r0, #64	; 0x40
400139e4:	eaffffe9 	b	40013990 <CyU3PGpioSetClock+0x28>
400139e8:	e5d40008 	ldrb	r0, [r4, #8]
400139ec:	e3500004 	cmp	r0, #4
400139f0:	ba000001 	blt	400139fc <CyU3PGpioSetClock+0x94>
400139f4:	e3a00040 	mov	r0, #64	; 0x40
400139f8:	eaffffe4 	b	40013990 <CyU3PGpioSetClock+0x28>
400139fc:	e5d40000 	ldrb	r0, [r4]
40013a00:	e2400001 	sub	r0, r0, #1
40013a04:	e5d41009 	ldrb	r1, [r4, #9]
40013a08:	e1800281 	orr	r0, r0, r1, lsl #5
40013a0c:	e5d41008 	ldrb	r1, [r4, #8]
40013a10:	e1800381 	orr	r0, r0, r1, lsl #7
40013a14:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013a18:	e5940004 	ldr	r0, [r4, #4]
40013a1c:	e3500000 	cmp	r0, #0
40013a20:	0a000000 	beq	40013a28 <CyU3PGpioSetClock+0xc0>
40013a24:	e3855010 	orr	r5, r5, #16
40013a28:	e59f0030 	ldr	r0, [pc, #48]	; 40013a60 <CyU3PGpioSetClock+0xf8>
40013a2c:	e5805018 	str	r5, [r0, #24]
40013a30:	e5d40001 	ldrb	r0, [r4, #1]
40013a34:	e3500000 	cmp	r0, #0
40013a38:	0a000006 	beq	40013a58 <CyU3PGpioSetClock+0xf0>
40013a3c:	e3a00001 	mov	r0, #1
40013a40:	ebfffe72 	bl	40013410 <CyU3PBusyWait>
40013a44:	e5d40001 	ldrb	r0, [r4, #1]
40013a48:	e2400001 	sub	r0, r0, #1
40013a4c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013a50:	e59f1008 	ldr	r1, [pc, #8]	; 40013a60 <CyU3PGpioSetClock+0xf8>
40013a54:	e581001c 	str	r0, [r1, #28]
40013a58:	e3a00000 	mov	r0, #0
40013a5c:	eaffffcb 	b	40013990 <CyU3PGpioSetClock+0x28>
40013a60:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013a64 <CyU3PI2cSetClock>:
40013a64:	e92d4070 	push	{r4, r5, r6, lr}
40013a68:	e1a05000 	mov	r5, r0
40013a6c:	e3a06000 	mov	r6, #0
40013a70:	e3550000 	cmp	r5, #0
40013a74:	1a000001 	bne	40013a80 <CyU3PI2cSetClock+0x1c>
40013a78:	e3a00040 	mov	r0, #64	; 0x40
40013a7c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013a80:	e0852105 	add	r2, r5, r5, lsl #2
40013a84:	e1a01082 	lsl	r1, r2, #1
40013a88:	e59f207c 	ldr	r2, [pc, #124]	; 40013b0c <CyU3PI2cSetClock+0xa8>
40013a8c:	e5922000 	ldr	r2, [r2]
40013a90:	e1a00122 	lsr	r0, r2, #2
40013a94:	ebfff38e 	bl	400108d4 <__aeabi_uidivmod>
40013a98:	e1a04000 	mov	r4, r0
40013a9c:	e3140003 	tst	r4, #3
40013aa0:	1a000001 	bne	40013aac <CyU3PI2cSetClock+0x48>
40013aa4:	e1a04144 	asr	r4, r4, #2
40013aa8:	ea00000a 	b	40013ad8 <CyU3PI2cSetClock+0x74>
40013aac:	e2040003 	and	r0, r4, #3
40013ab0:	e3500001 	cmp	r0, #1
40013ab4:	0a000002 	beq	40013ac4 <CyU3PI2cSetClock+0x60>
40013ab8:	e2040003 	and	r0, r4, #3
40013abc:	e3500002 	cmp	r0, #2
40013ac0:	1a000002 	bne	40013ad0 <CyU3PI2cSetClock+0x6c>
40013ac4:	e1a04144 	asr	r4, r4, #2
40013ac8:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013acc:	ea000001 	b	40013ad8 <CyU3PI2cSetClock+0x74>
40013ad0:	e3a00001 	mov	r0, #1
40013ad4:	e0804144 	add	r4, r0, r4, asr #2
40013ad8:	e2444001 	sub	r4, r4, #1
40013adc:	e3540001 	cmp	r4, #1
40013ae0:	ba000001 	blt	40013aec <CyU3PI2cSetClock+0x88>
40013ae4:	e3540a01 	cmp	r4, #4096	; 0x1000
40013ae8:	ba000001 	blt	40013af4 <CyU3PI2cSetClock+0x90>
40013aec:	e3a00040 	mov	r0, #64	; 0x40
40013af0:	eaffffe1 	b	40013a7c <CyU3PI2cSetClock+0x18>
40013af4:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013af8:	e1866000 	orr	r6, r6, r0
40013afc:	e59f000c 	ldr	r0, [pc, #12]	; 40013b10 <CyU3PI2cSetClock+0xac>
40013b00:	e5806020 	str	r6, [r0, #32]
40013b04:	e3a00000 	mov	r0, #0
40013b08:	eaffffdb 	b	40013a7c <CyU3PI2cSetClock+0x18>
40013b0c:	40030c50 	.word	0x40030c50
40013b10:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013b14 <CyU3PLppApplicationDefine>:
40013b14:	e92d4010 	push	{r4, lr}
40013b18:	e24dd020 	sub	sp, sp, #32
40013b1c:	e3a00b01 	mov	r0, #1024	; 0x400
40013b20:	ebffbed3 	bl	40003674 <CyU3PMemAlloc>
40013b24:	e1a04000 	mov	r4, r0
40013b28:	e3a030a8 	mov	r3, #168	; 0xa8
40013b2c:	e3a02001 	mov	r2, #1
40013b30:	e3a01000 	mov	r1, #0
40013b34:	e3a00004 	mov	r0, #4
40013b38:	e28dc00c 	add	ip, sp, #12
40013b3c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013b40:	e3a02b01 	mov	r2, #1024	; 0x400
40013b44:	e1a03001 	mov	r3, r1
40013b48:	e58d2004 	str	r2, [sp, #4]
40013b4c:	e59f2054 	ldr	r2, [pc, #84]	; 40013ba8 <CyU3PLppApplicationDefine+0x94>
40013b50:	e28f1054 	add	r1, pc, #84	; 0x54
40013b54:	e58d0008 	str	r0, [sp, #8]
40013b58:	e59f005c 	ldr	r0, [pc, #92]	; 40013bbc <CyU3PLppApplicationDefine+0xa8>
40013b5c:	e58d4000 	str	r4, [sp]
40013b60:	ebffda42 	bl	4000a470 <_txe_thread_create>
40013b64:	e3a02028 	mov	r2, #40	; 0x28
40013b68:	e3a01000 	mov	r1, #0
40013b6c:	e59f004c 	ldr	r0, [pc, #76]	; 40013bc0 <CyU3PLppApplicationDefine+0xac>
40013b70:	ebffd7c3 	bl	40009a84 <_txe_event_flags_create>
40013b74:	e3a00040 	mov	r0, #64	; 0x40
40013b78:	ebffbebd 	bl	40003674 <CyU3PMemAlloc>
40013b7c:	e1a04000 	mov	r4, r0
40013b80:	e3a0303c 	mov	r3, #60	; 0x3c
40013b84:	e3a02040 	mov	r2, #64	; 0x40
40013b88:	e1cd20f0 	strd	r2, [sp]
40013b8c:	e1a03004 	mov	r3, r4
40013b90:	e3a02005 	mov	r2, #5
40013b94:	e3a01000 	mov	r1, #0
40013b98:	e59f0024 	ldr	r0, [pc, #36]	; 40013bc4 <CyU3PLppApplicationDefine+0xb0>
40013b9c:	ebffd94d 	bl	4000a0d8 <_txe_queue_create>
40013ba0:	e28dd020 	add	sp, sp, #32
40013ba4:	e8bd8010 	pop	{r4, pc}
40013ba8:	40013f08 	.word	0x40013f08
40013bac:	4c5f3530 	.word	0x4c5f3530
40013bb0:	545f5050 	.word	0x545f5050
40013bb4:	41455248 	.word	0x41455248
40013bb8:	00000044 	.word	0x00000044
40013bbc:	4003163c 	.word	0x4003163c
40013bc0:	40031614 	.word	0x40031614
40013bc4:	400316e4 	.word	0x400316e4

Disassembly of section i.CyU3PLppEventSend:

40013bc8 <CyU3PLppEventSend>:
40013bc8:	e92d4070 	push	{r4, r5, r6, lr}
40013bcc:	e1a04000 	mov	r4, r0
40013bd0:	e3a02000 	mov	r2, #0
40013bd4:	e1a01004 	mov	r1, r4
40013bd8:	e59f000c 	ldr	r0, [pc, #12]	; 40013bec <CyU3PLppEventSend+0x24>
40013bdc:	ebffd848 	bl	40009d04 <_txe_event_flags_set>
40013be0:	e1a05000 	mov	r5, r0
40013be4:	e1a00005 	mov	r0, r5
40013be8:	e8bd8070 	pop	{r4, r5, r6, pc}
40013bec:	40031614 	.word	0x40031614

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40013bf0 <CyU3PLppGpioBlockIsOn>:
40013bf0:	e59f0004 	ldr	r0, [pc, #4]	; 40013bfc <CyU3PLppGpioBlockIsOn+0xc>
40013bf4:	e5900000 	ldr	r0, [r0]
40013bf8:	e12fff1e 	bx	lr
40013bfc:	40030c6c 	.word	0x40030c6c

Disassembly of section i.CyU3PLppInit:

40013c00 <CyU3PLppInit>:
40013c00:	e92d4070 	push	{r4, r5, r6, lr}
40013c04:	e1a04000 	mov	r4, r0
40013c08:	e1a05001 	mov	r5, r1
40013c0c:	e3a06000 	mov	r6, #0
40013c10:	e3a00001 	mov	r0, #1
40013c14:	e59f1174 	ldr	r1, [pc, #372]	; 40013d90 <CyU3PLppInit+0x190>
40013c18:	e5d11000 	ldrb	r1, [r1]
40013c1c:	e1110410 	tst	r1, r0, lsl r4
40013c20:	0a000001 	beq	40013c2c <CyU3PLppInit+0x2c>
40013c24:	e3a00043 	mov	r0, #67	; 0x43
40013c28:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c2c:	e3540001 	cmp	r4, #1
40013c30:	1a000004 	bne	40013c48 <CyU3PLppInit+0x48>
40013c34:	eb000310 	bl	4001487c <CyFx3DevIsI2sSupported>
40013c38:	e3500000 	cmp	r0, #0
40013c3c:	1a000001 	bne	40013c48 <CyU3PLppInit+0x48>
40013c40:	e3a00046 	mov	r0, #70	; 0x46
40013c44:	eafffff7 	b	40013c28 <CyU3PLppInit+0x28>
40013c48:	e3540005 	cmp	r4, #5
40013c4c:	308ff104 	addcc	pc, pc, r4, lsl #2
40013c50:	ea000027 	b	40013cf4 <CyU3PLppInit+0xf4>
40013c54:	ea000003 	b	40013c68 <CyU3PLppInit+0x68>
40013c58:	ea000009 	b	40013c84 <CyU3PLppInit+0x84>
40013c5c:	ea00000f 	b	40013ca0 <CyU3PLppInit+0xa0>
40013c60:	ea000015 	b	40013cbc <CyU3PLppInit+0xbc>
40013c64:	ea00001b 	b	40013cd8 <CyU3PLppInit+0xd8>
40013c68:	e1a00000 	nop			; (mov r0, r0)
40013c6c:	e59f0120 	ldr	r0, [pc, #288]	; 40013d94 <CyU3PLppInit+0x194>
40013c70:	e5900020 	ldr	r0, [r0, #32]
40013c74:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013c78:	0a000000 	beq	40013c80 <CyU3PLppInit+0x80>
40013c7c:	e3a06001 	mov	r6, #1
40013c80:	ea00001b 	b	40013cf4 <CyU3PLppInit+0xf4>
40013c84:	e1a00000 	nop			; (mov r0, r0)
40013c88:	e59f0104 	ldr	r0, [pc, #260]	; 40013d94 <CyU3PLppInit+0x194>
40013c8c:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40013c90:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013c94:	0a000000 	beq	40013c9c <CyU3PLppInit+0x9c>
40013c98:	e3a06001 	mov	r6, #1
40013c9c:	ea000014 	b	40013cf4 <CyU3PLppInit+0xf4>
40013ca0:	e1a00000 	nop			; (mov r0, r0)
40013ca4:	e59f00e8 	ldr	r0, [pc, #232]	; 40013d94 <CyU3PLppInit+0x194>
40013ca8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40013cac:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013cb0:	0a000000 	beq	40013cb8 <CyU3PLppInit+0xb8>
40013cb4:	e3a06001 	mov	r6, #1
40013cb8:	ea00000d 	b	40013cf4 <CyU3PLppInit+0xf4>
40013cbc:	e1a00000 	nop			; (mov r0, r0)
40013cc0:	e59f00cc 	ldr	r0, [pc, #204]	; 40013d94 <CyU3PLppInit+0x194>
40013cc4:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40013cc8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013ccc:	0a000000 	beq	40013cd4 <CyU3PLppInit+0xd4>
40013cd0:	e3a06001 	mov	r6, #1
40013cd4:	ea000006 	b	40013cf4 <CyU3PLppInit+0xf4>
40013cd8:	e1a00000 	nop			; (mov r0, r0)
40013cdc:	e59f00b0 	ldr	r0, [pc, #176]	; 40013d94 <CyU3PLppInit+0x194>
40013ce0:	e5900018 	ldr	r0, [r0, #24]
40013ce4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013ce8:	0a000000 	beq	40013cf0 <CyU3PLppInit+0xf0>
40013cec:	e3a06001 	mov	r6, #1
40013cf0:	e1a00000 	nop			; (mov r0, r0)
40013cf4:	e1a00000 	nop			; (mov r0, r0)
40013cf8:	e3560000 	cmp	r6, #0
40013cfc:	1a000001 	bne	40013d08 <CyU3PLppInit+0x108>
40013d00:	e3a00047 	mov	r0, #71	; 0x47
40013d04:	eaffffc7 	b	40013c28 <CyU3PLppInit+0x28>
40013d08:	e59f0080 	ldr	r0, [pc, #128]	; 40013d90 <CyU3PLppInit+0x190>
40013d0c:	e5d00000 	ldrb	r0, [r0]
40013d10:	e3500000 	cmp	r0, #0
40013d14:	1a000017 	bne	40013d78 <CyU3PLppInit+0x178>
40013d18:	e59f0078 	ldr	r0, [pc, #120]	; 40013d98 <CyU3PLppInit+0x198>
40013d1c:	e5900000 	ldr	r0, [r0]
40013d20:	e3500000 	cmp	r0, #0
40013d24:	1a000010 	bne	40013d6c <CyU3PLppInit+0x16c>
40013d28:	e59f006c 	ldr	r0, [pc, #108]	; 40013d9c <CyU3PLppInit+0x19c>
40013d2c:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d30:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40013d34:	e59f1060 	ldr	r1, [pc, #96]	; 40013d9c <CyU3PLppInit+0x19c>
40013d38:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013d3c:	e3a0000a 	mov	r0, #10
40013d40:	ebfffdb2 	bl	40013410 <CyU3PBusyWait>
40013d44:	e59f0050 	ldr	r0, [pc, #80]	; 40013d9c <CyU3PLppInit+0x19c>
40013d48:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d4c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013d50:	e59f1044 	ldr	r1, [pc, #68]	; 40013d9c <CyU3PLppInit+0x19c>
40013d54:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013d58:	e1a00000 	nop			; (mov r0, r0)
40013d5c:	e59f0038 	ldr	r0, [pc, #56]	; 40013d9c <CyU3PLppInit+0x19c>
40013d60:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d64:	e3100001 	tst	r0, #1
40013d68:	0afffffb 	beq	40013d5c <CyU3PLppInit+0x15c>
40013d6c:	eb000051 	bl	40013eb8 <CyU3PLppSocketInit>
40013d70:	e3a00014 	mov	r0, #20
40013d74:	eb003828 	bl	40021e1c <CyU3PVicEnableInt>
40013d78:	e1a02005 	mov	r2, r5
40013d7c:	e3a01001 	mov	r1, #1
40013d80:	e1a00004 	mov	r0, r4
40013d84:	eb0000f1 	bl	40014150 <CyU3UpdateLppActiveInfo>
40013d88:	e3a00000 	mov	r0, #0
40013d8c:	eaffffa5 	b	40013c28 <CyU3PLppInit+0x28>
40013d90:	40030c94 	.word	0x40030c94
40013d94:	e0052000 	.word	0xe0052000
40013d98:	40030c6c 	.word	0x40030c6c
40013d9c:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40013da0 <CyU3PLppRestoreState>:
40013da0:	e92d4070 	push	{r4, r5, r6, lr}
40013da4:	e1a04000 	mov	r4, r0
40013da8:	e3a00000 	mov	r0, #0
40013dac:	e59f10ec 	ldr	r1, [pc, #236]	; 40013ea0 <CyU3PLppRestoreState+0x100>
40013db0:	e5c10000 	strb	r0, [r1]
40013db4:	e5940000 	ldr	r0, [r4]
40013db8:	e59f10e4 	ldr	r1, [pc, #228]	; 40013ea4 <CyU3PLppRestoreState+0x104>
40013dbc:	e5810018 	str	r0, [r1, #24]
40013dc0:	e3a00001 	mov	r0, #1
40013dc4:	ebfffd91 	bl	40013410 <CyU3PBusyWait>
40013dc8:	e5940004 	ldr	r0, [r4, #4]
40013dcc:	e59f10d0 	ldr	r1, [pc, #208]	; 40013ea4 <CyU3PLppRestoreState+0x104>
40013dd0:	e581001c 	str	r0, [r1, #28]
40013dd4:	e3a00001 	mov	r0, #1
40013dd8:	ebfffd8c 	bl	40013410 <CyU3PBusyWait>
40013ddc:	e5940008 	ldr	r0, [r4, #8]
40013de0:	e59f10c0 	ldr	r1, [pc, #192]	; 40013ea8 <CyU3PLppRestoreState+0x108>
40013de4:	e581000c 	str	r0, [r1, #12]
40013de8:	e3a00001 	mov	r0, #1
40013dec:	ebfffd87 	bl	40013410 <CyU3PBusyWait>
40013df0:	e594000c 	ldr	r0, [r4, #12]
40013df4:	e59f10ac 	ldr	r1, [pc, #172]	; 40013ea8 <CyU3PLppRestoreState+0x108>
40013df8:	e5810010 	str	r0, [r1, #16]
40013dfc:	e3a00001 	mov	r0, #1
40013e00:	ebfffd82 	bl	40013410 <CyU3PBusyWait>
40013e04:	e5940010 	ldr	r0, [r4, #16]
40013e08:	e59f1098 	ldr	r1, [pc, #152]	; 40013ea8 <CyU3PLppRestoreState+0x108>
40013e0c:	e5810008 	str	r0, [r1, #8]
40013e10:	e3a00001 	mov	r0, #1
40013e14:	ebfffd7d 	bl	40013410 <CyU3PBusyWait>
40013e18:	e3a00004 	mov	r0, #4
40013e1c:	e5941014 	ldr	r1, [r4, #20]
40013e20:	ebffff76 	bl	40013c00 <CyU3PLppInit>
40013e24:	e3a00001 	mov	r0, #1
40013e28:	ebfffd78 	bl	40013410 <CyU3PBusyWait>
40013e2c:	e59f0078 	ldr	r0, [pc, #120]	; 40013eac <CyU3PLppRestoreState+0x10c>
40013e30:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013e34:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013e38:	e59f106c 	ldr	r1, [pc, #108]	; 40013eac <CyU3PLppRestoreState+0x10c>
40013e3c:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40013e40:	e3a0000a 	mov	r0, #10
40013e44:	ebfffd71 	bl	40013410 <CyU3PBusyWait>
40013e48:	e1a00000 	nop			; (mov r0, r0)
40013e4c:	e59f0058 	ldr	r0, [pc, #88]	; 40013eac <CyU3PLppRestoreState+0x10c>
40013e50:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013e54:	e3100001 	tst	r0, #1
40013e58:	0afffffb 	beq	40013e4c <CyU3PLppRestoreState+0xac>
40013e5c:	e3a05000 	mov	r5, #0
40013e60:	ea000006 	b	40013e80 <CyU3PLppRestoreState+0xe0>
40013e64:	e2850006 	add	r0, r5, #6
40013e68:	e7940100 	ldr	r0, [r4, r0, lsl #2]
40013e6c:	e59f103c 	ldr	r1, [pc, #60]	; 40013eb0 <CyU3PLppRestoreState+0x110>
40013e70:	e7810105 	str	r0, [r1, r5, lsl #2]
40013e74:	e3a00001 	mov	r0, #1
40013e78:	ebfffd64 	bl	40013410 <CyU3PBusyWait>
40013e7c:	e2855001 	add	r5, r5, #1
40013e80:	e355003d 	cmp	r5, #61	; 0x3d
40013e84:	3afffff6 	bcc	40013e64 <CyU3PLppRestoreState+0xc4>
40013e88:	e59f0024 	ldr	r0, [pc, #36]	; 40013eb4 <CyU3PLppRestoreState+0x114>
40013e8c:	e5900000 	ldr	r0, [r0]
40013e90:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40013e94:	e59f1018 	ldr	r1, [pc, #24]	; 40013eb4 <CyU3PLppRestoreState+0x114>
40013e98:	e5810000 	str	r0, [r1]
40013e9c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ea0:	40030c94 	.word	0x40030c94
40013ea4:	e0052000 	.word	0xe0052000
40013ea8:	e0051000 	.word	0xe0051000
40013eac:	e0001000 	.word	0xe0001000
40013eb0:	e0001100 	.word	0xe0001100
40013eb4:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40013eb8 <CyU3PLppSocketInit>:
40013eb8:	e3a00000 	mov	r0, #0
40013ebc:	ea00000d 	b	40013ef8 <CyU3PLppSocketInit+0x40>
40013ec0:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40013ec4:	e59f2038 	ldr	r2, [pc, #56]	; 40013f04 <CyU3PLppSocketInit+0x4c>
40013ec8:	e0822380 	add	r2, r2, r0, lsl #7
40013ecc:	e582100c 	str	r1, [r2, #12]
40013ed0:	e3e01000 	mvn	r1, #0
40013ed4:	e59f2028 	ldr	r2, [pc, #40]	; 40013f04 <CyU3PLppSocketInit+0x4c>
40013ed8:	e0822380 	add	r2, r2, r0, lsl #7
40013edc:	e5821010 	str	r1, [r2, #16]
40013ee0:	e3a01000 	mov	r1, #0
40013ee4:	e59f2018 	ldr	r2, [pc, #24]	; 40013f04 <CyU3PLppSocketInit+0x4c>
40013ee8:	e0822380 	add	r2, r2, r0, lsl #7
40013eec:	e5821014 	str	r1, [r2, #20]
40013ef0:	e2801001 	add	r1, r0, #1
40013ef4:	e20100ff 	and	r0, r1, #255	; 0xff
40013ef8:	e3500008 	cmp	r0, #8
40013efc:	baffffef 	blt	40013ec0 <CyU3PLppSocketInit+0x8>
40013f00:	e12fff1e 	bx	lr
40013f04:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

40013f08 <CyU3PLppThreadEntry>:
40013f08:	e92d4010 	push	{r4, lr}
40013f0c:	e24dd020 	sub	sp, sp, #32
40013f10:	e3a00006 	mov	r0, #6
40013f14:	ebfffdf3 	bl	400136e8 <CyU3PSysModuleInitCompleteEvt>
40013f18:	e3a000f1 	mov	r0, #241	; 0xf1
40013f1c:	e59f1144 	ldr	r1, [pc, #324]	; 40014068 <CyU3PLppThreadEntry+0x160>
40013f20:	e5810000 	str	r0, [r1]
40013f24:	e1a00000 	nop			; (mov r0, r0)
40013f28:	e3e03000 	mvn	r3, #0
40013f2c:	e58d3000 	str	r3, [sp]
40013f30:	e28d301c 	add	r3, sp, #28
40013f34:	e3a02001 	mov	r2, #1
40013f38:	e59f0128 	ldr	r0, [pc, #296]	; 40014068 <CyU3PLppThreadEntry+0x160>
40013f3c:	e5901000 	ldr	r1, [r0]
40013f40:	e59f0124 	ldr	r0, [pc, #292]	; 4001406c <CyU3PLppThreadEntry+0x164>
40013f44:	ebffd73e 	bl	40009c44 <_txe_event_flags_get>
40013f48:	e1a04000 	mov	r4, r0
40013f4c:	e59f1114 	ldr	r1, [pc, #276]	; 40014068 <CyU3PLppThreadEntry+0x160>
40013f50:	e59d001c 	ldr	r0, [sp, #28]
40013f54:	e5911000 	ldr	r1, [r1]
40013f58:	e0000001 	and	r0, r0, r1
40013f5c:	e58d001c 	str	r0, [sp, #28]
40013f60:	e3540000 	cmp	r4, #0
40013f64:	0a000000 	beq	40013f6c <CyU3PLppThreadEntry+0x64>
40013f68:	eaffffee 	b	40013f28 <CyU3PLppThreadEntry+0x20>
40013f6c:	ea000009 	b	40013f98 <CyU3PLppThreadEntry+0x90>
40013f70:	e3a02000 	mov	r2, #0
40013f74:	e28d1008 	add	r1, sp, #8
40013f78:	e59f00f0 	ldr	r0, [pc, #240]	; 40014070 <CyU3PLppThreadEntry+0x168>
40013f7c:	ebffd8eb 	bl	4000a330 <_txe_queue_receive>
40013f80:	e1a04000 	mov	r4, r0
40013f84:	e3540000 	cmp	r4, #0
40013f88:	0a000002 	beq	40013f98 <CyU3PLppThreadEntry+0x90>
40013f8c:	e59d001c 	ldr	r0, [sp, #28]
40013f90:	e3c00001 	bic	r0, r0, #1
40013f94:	e58d001c 	str	r0, [sp, #28]
40013f98:	e59d001c 	ldr	r0, [sp, #28]
40013f9c:	e3100001 	tst	r0, #1
40013fa0:	1afffff2 	bne	40013f70 <CyU3PLppThreadEntry+0x68>
40013fa4:	e59d001c 	ldr	r0, [sp, #28]
40013fa8:	e3100020 	tst	r0, #32
40013fac:	0a000008 	beq	40013fd4 <CyU3PLppThreadEntry+0xcc>
40013fb0:	e59f00bc 	ldr	r0, [pc, #188]	; 40014074 <CyU3PLppThreadEntry+0x16c>
40013fb4:	e5900000 	ldr	r0, [r0]
40013fb8:	e3500000 	cmp	r0, #0
40013fbc:	0a000002 	beq	40013fcc <CyU3PLppThreadEntry+0xc4>
40013fc0:	e59f10ac 	ldr	r1, [pc, #172]	; 40014074 <CyU3PLppThreadEntry+0x16c>
40013fc4:	e5910000 	ldr	r0, [r1]
40013fc8:	e12fff30 	blx	r0
40013fcc:	e3a0000f 	mov	r0, #15
40013fd0:	eb003791 	bl	40021e1c <CyU3PVicEnableInt>
40013fd4:	e59d001c 	ldr	r0, [sp, #28]
40013fd8:	e3100010 	tst	r0, #16
40013fdc:	0a000008 	beq	40014004 <CyU3PLppThreadEntry+0xfc>
40013fe0:	e59f008c 	ldr	r0, [pc, #140]	; 40014074 <CyU3PLppThreadEntry+0x16c>
40013fe4:	e5900004 	ldr	r0, [r0, #4]
40013fe8:	e3500000 	cmp	r0, #0
40013fec:	0a000002 	beq	40013ffc <CyU3PLppThreadEntry+0xf4>
40013ff0:	e59f107c 	ldr	r1, [pc, #124]	; 40014074 <CyU3PLppThreadEntry+0x16c>
40013ff4:	e5910004 	ldr	r0, [r1, #4]
40013ff8:	e12fff30 	blx	r0
40013ffc:	e3a00010 	mov	r0, #16
40014000:	eb003785 	bl	40021e1c <CyU3PVicEnableInt>
40014004:	e59d001c 	ldr	r0, [sp, #28]
40014008:	e3100080 	tst	r0, #128	; 0x80
4001400c:	0a000008 	beq	40014034 <CyU3PLppThreadEntry+0x12c>
40014010:	e59f005c 	ldr	r0, [pc, #92]	; 40014074 <CyU3PLppThreadEntry+0x16c>
40014014:	e5900008 	ldr	r0, [r0, #8]
40014018:	e3500000 	cmp	r0, #0
4001401c:	0a000002 	beq	4001402c <CyU3PLppThreadEntry+0x124>
40014020:	e59f104c 	ldr	r1, [pc, #76]	; 40014074 <CyU3PLppThreadEntry+0x16c>
40014024:	e5910008 	ldr	r0, [r1, #8]
40014028:	e12fff30 	blx	r0
4001402c:	e3a00011 	mov	r0, #17
40014030:	eb003779 	bl	40021e1c <CyU3PVicEnableInt>
40014034:	e59d001c 	ldr	r0, [sp, #28]
40014038:	e3100040 	tst	r0, #64	; 0x40
4001403c:	0a000008 	beq	40014064 <CyU3PLppThreadEntry+0x15c>
40014040:	e59f002c 	ldr	r0, [pc, #44]	; 40014074 <CyU3PLppThreadEntry+0x16c>
40014044:	e590000c 	ldr	r0, [r0, #12]
40014048:	e3500000 	cmp	r0, #0
4001404c:	0a000002 	beq	4001405c <CyU3PLppThreadEntry+0x154>
40014050:	e59f101c 	ldr	r1, [pc, #28]	; 40014074 <CyU3PLppThreadEntry+0x16c>
40014054:	e591000c 	ldr	r0, [r1, #12]
40014058:	e12fff30 	blx	r0
4001405c:	e3a00012 	mov	r0, #18
40014060:	eb00376d 	bl	40021e1c <CyU3PVicEnableInt>
40014064:	eaffffaf 	b	40013f28 <CyU3PLppThreadEntry+0x20>
40014068:	40030c98 	.word	0x40030c98
4001406c:	40031614 	.word	0x40031614
40014070:	400316e4 	.word	0x400316e4
40014074:	40031600 	.word	0x40031600

Disassembly of section i.CyU3PUartSetClock:

40014078 <CyU3PUartSetClock>:
40014078:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001407c:	e1a04000 	mov	r4, r0
40014080:	e3a06000 	mov	r6, #0
40014084:	e59f00bc 	ldr	r0, [pc, #188]	; 40014148 <CyU3PUartSetClock+0xd0>
40014088:	e5907000 	ldr	r7, [r0]
4001408c:	e3540000 	cmp	r4, #0
40014090:	1a000001 	bne	4001409c <CyU3PUartSetClock+0x24>
40014094:	e3a00040 	mov	r0, #64	; 0x40
40014098:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001409c:	e3540f96 	cmp	r4, #600	; 0x258
400140a0:	2a000002 	bcs	400140b0 <CyU3PUartSetClock+0x38>
400140a4:	e59f009c 	ldr	r0, [pc, #156]	; 40014148 <CyU3PUartSetClock+0xd0>
400140a8:	e5900000 	ldr	r0, [r0]
400140ac:	e1a07220 	lsr	r7, r0, #4
400140b0:	e1a01204 	lsl	r1, r4, #4
400140b4:	e1a00107 	lsl	r0, r7, #2
400140b8:	ebfff205 	bl	400108d4 <__aeabi_uidivmod>
400140bc:	e1a05000 	mov	r5, r0
400140c0:	e3150003 	tst	r5, #3
400140c4:	1a000001 	bne	400140d0 <CyU3PUartSetClock+0x58>
400140c8:	e1a05145 	asr	r5, r5, #2
400140cc:	ea00000a 	b	400140fc <CyU3PUartSetClock+0x84>
400140d0:	e2050003 	and	r0, r5, #3
400140d4:	e3500001 	cmp	r0, #1
400140d8:	0a000002 	beq	400140e8 <CyU3PUartSetClock+0x70>
400140dc:	e2050003 	and	r0, r5, #3
400140e0:	e3500002 	cmp	r0, #2
400140e4:	1a000002 	bne	400140f4 <CyU3PUartSetClock+0x7c>
400140e8:	e1a05145 	asr	r5, r5, #2
400140ec:	e3866801 	orr	r6, r6, #65536	; 0x10000
400140f0:	ea000001 	b	400140fc <CyU3PUartSetClock+0x84>
400140f4:	e3a00001 	mov	r0, #1
400140f8:	e0805145 	add	r5, r0, r5, asr #2
400140fc:	e2455001 	sub	r5, r5, #1
40014100:	e3550001 	cmp	r5, #1
40014104:	ba000001 	blt	40014110 <CyU3PUartSetClock+0x98>
40014108:	e3550801 	cmp	r5, #65536	; 0x10000
4001410c:	ba000001 	blt	40014118 <CyU3PUartSetClock+0xa0>
40014110:	e3a00040 	mov	r0, #64	; 0x40
40014114:	eaffffdf 	b	40014098 <CyU3PUartSetClock+0x20>
40014118:	e3540f96 	cmp	r4, #600	; 0x258
4001411c:	2a000002 	bcs	4001412c <CyU3PUartSetClock+0xb4>
40014120:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014124:	e1866000 	orr	r6, r6, r0
40014128:	ea000002 	b	40014138 <CyU3PUartSetClock+0xc0>
4001412c:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014130:	e3800806 	orr	r0, r0, #393216	; 0x60000
40014134:	e1866000 	orr	r6, r6, r0
40014138:	e59f000c 	ldr	r0, [pc, #12]	; 4001414c <CyU3PUartSetClock+0xd4>
4001413c:	e5806024 	str	r6, [r0, #36]	; 0x24
40014140:	e3a00000 	mov	r0, #0
40014144:	eaffffd3 	b	40014098 <CyU3PUartSetClock+0x20>
40014148:	40030c50 	.word	0x40030c50
4001414c:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

40014150 <CyU3UpdateLppActiveInfo>:
40014150:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014154:	e1a04000 	mov	r4, r0
40014158:	e1a05001 	mov	r5, r1
4001415c:	e1a06002 	mov	r6, r2
40014160:	e3a00001 	mov	r0, #1
40014164:	e1a00410 	lsl	r0, r0, r4
40014168:	e20070ff 	and	r7, r0, #255	; 0xff
4001416c:	e284000f 	add	r0, r4, #15
40014170:	e20080ff 	and	r8, r0, #255	; 0xff
40014174:	e59f0050 	ldr	r0, [pc, #80]	; 400141cc <CyU3UpdateLppActiveInfo+0x7c>
40014178:	e7806104 	str	r6, [r0, r4, lsl #2]
4001417c:	e3550000 	cmp	r5, #0
40014180:	0a000009 	beq	400141ac <CyU3UpdateLppActiveInfo+0x5c>
40014184:	e3560000 	cmp	r6, #0
40014188:	0a000001 	beq	40014194 <CyU3UpdateLppActiveInfo+0x44>
4001418c:	e1a00008 	mov	r0, r8
40014190:	eb003721 	bl	40021e1c <CyU3PVicEnableInt>
40014194:	e59f0034 	ldr	r0, [pc, #52]	; 400141d0 <CyU3UpdateLppActiveInfo+0x80>
40014198:	e5d00000 	ldrb	r0, [r0]
4001419c:	e1800007 	orr	r0, r0, r7
400141a0:	e59f1028 	ldr	r1, [pc, #40]	; 400141d0 <CyU3UpdateLppActiveInfo+0x80>
400141a4:	e5c10000 	strb	r0, [r1]
400141a8:	ea000006 	b	400141c8 <CyU3UpdateLppActiveInfo+0x78>
400141ac:	e59f001c 	ldr	r0, [pc, #28]	; 400141d0 <CyU3UpdateLppActiveInfo+0x80>
400141b0:	e5d00000 	ldrb	r0, [r0]
400141b4:	e1c00007 	bic	r0, r0, r7
400141b8:	e59f1010 	ldr	r1, [pc, #16]	; 400141d0 <CyU3UpdateLppActiveInfo+0x80>
400141bc:	e5c10000 	strb	r0, [r1]
400141c0:	e1a00008 	mov	r0, r8
400141c4:	eb00370f 	bl	40021e08 <CyU3PVicDisableInt>
400141c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400141cc:	40031600 	.word	0x40031600
400141d0:	40030c94 	.word	0x40030c94

Disassembly of section i.CyFx3DevClearSwInterrupt:

400141d4 <CyFx3DevClearSwInterrupt>:
400141d4:	e59f000c 	ldr	r0, [pc, #12]	; 400141e8 <CyFx3DevClearSwInterrupt+0x14>
400141d8:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
400141dc:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
400141e0:	e580104c 	str	r1, [r0, #76]	; 0x4c
400141e4:	e12fff1e 	bx	lr
400141e8:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

400141ec <CyFx3DevIOConfigure>:
400141ec:	e92d4030 	push	{r4, r5, lr}
400141f0:	e1b04000 	movs	r4, r0
400141f4:	e24dd024 	sub	sp, sp, #36	; 0x24
400141f8:	0a000045 	beq	40014314 <CyFx3DevIOConfigure+0x128>
400141fc:	eb00017b 	bl	400147f0 <CyFx3DevIsGpif32Supported>
40014200:	e3500000 	cmp	r0, #0
40014204:	e3a05000 	mov	r5, #0
40014208:	05845000 	streq	r5, [r4]
4001420c:	eb0001ae 	bl	400148cc <CyFx3DevIsSib0Supported>
40014210:	e3500000 	cmp	r0, #0
40014214:	05c45014 	strbeq	r5, [r4, #20]
40014218:	eb0001b5 	bl	400148f4 <CyFx3DevIsSib1Supported>
4001421c:	e3500000 	cmp	r0, #0
40014220:	05c45015 	strbeq	r5, [r4, #21]
40014224:	eb000194 	bl	4001487c <CyFx3DevIsI2sSupported>
40014228:	e3500000 	cmp	r0, #0
4001422c:	1a000002 	bne	4001423c <CyFx3DevIOConfigure+0x50>
40014230:	e594000c 	ldr	r0, [r4, #12]
40014234:	e3500000 	cmp	r0, #0
40014238:	1a000035 	bne	40014314 <CyFx3DevIOConfigure+0x128>
4001423c:	e5940000 	ldr	r0, [r4]
40014240:	e3500000 	cmp	r0, #0
40014244:	0a000009 	beq	40014270 <CyFx3DevIOConfigure+0x84>
40014248:	e5d40016 	ldrb	r0, [r4, #22]
4001424c:	e3500000 	cmp	r0, #0
40014250:	05d40014 	ldrbeq	r0, [r4, #20]
40014254:	03500000 	cmpeq	r0, #0
40014258:	05d40015 	ldrbeq	r0, [r4, #21]
4001425c:	03500000 	cmpeq	r0, #0
40014260:	1a00002b 	bne	40014314 <CyFx3DevIOConfigure+0x128>
40014264:	e3a00002 	mov	r0, #2
40014268:	e5cd0000 	strb	r0, [sp]
4001426c:	ea000022 	b	400142fc <CyFx3DevIOConfigure+0x110>
40014270:	e5d40014 	ldrb	r0, [r4, #20]
40014274:	e3a02003 	mov	r2, #3
40014278:	e3a03001 	mov	r3, #1
4001427c:	e3500000 	cmp	r0, #0
40014280:	05cd2000 	strbeq	r2, [sp]
40014284:	0a000004 	beq	4001429c <CyFx3DevIOConfigure+0xb0>
40014288:	e3500001 	cmp	r0, #1
4001428c:	05cd3000 	strbeq	r3, [sp]
40014290:	0a000001 	beq	4001429c <CyFx3DevIOConfigure+0xb0>
40014294:	e3500002 	cmp	r0, #2
40014298:	05cd5000 	strbeq	r5, [sp]
4001429c:	e5d41015 	ldrb	r1, [r4, #21]
400142a0:	e5d40016 	ldrb	r0, [r4, #22]
400142a4:	e3510002 	cmp	r1, #2
400142a8:	1a000009 	bne	400142d4 <CyFx3DevIOConfigure+0xe8>
400142ac:	e3500004 	cmp	r0, #4
400142b0:	05940004 	ldreq	r0, [r4, #4]
400142b4:	03500000 	cmpeq	r0, #0
400142b8:	05940010 	ldreq	r0, [r4, #16]
400142bc:	03500000 	cmpeq	r0, #0
400142c0:	0594000c 	ldreq	r0, [r4, #12]
400142c4:	03500000 	cmpeq	r0, #0
400142c8:	05cd5001 	strbeq	r5, [sp, #1]
400142cc:	0a000013 	beq	40014320 <CyFx3DevIOConfigure+0x134>
400142d0:	ea00000f 	b	40014314 <CyFx3DevIOConfigure+0x128>
400142d4:	e3500000 	cmp	r0, #0
400142d8:	0a000009 	beq	40014304 <CyFx3DevIOConfigure+0x118>
400142dc:	e3500001 	cmp	r0, #1
400142e0:	13500002 	cmpne	r0, #2
400142e4:	13500003 	cmpne	r0, #3
400142e8:	1a000009 	bne	40014314 <CyFx3DevIOConfigure+0x128>
400142ec:	e3510001 	cmp	r1, #1
400142f0:	05cd3001 	strbeq	r3, [sp, #1]
400142f4:	0a000009 	beq	40014320 <CyFx3DevIOConfigure+0x134>
400142f8:	e3a00004 	mov	r0, #4
400142fc:	e5cd0001 	strb	r0, [sp, #1]
40014300:	ea000006 	b	40014320 <CyFx3DevIOConfigure+0x134>
40014304:	e5cd2001 	strb	r2, [sp, #1]
40014308:	e5d40015 	ldrb	r0, [r4, #21]
4001430c:	e3500000 	cmp	r0, #0
40014310:	0a000002 	beq	40014320 <CyFx3DevIOConfigure+0x134>
40014314:	e3a00000 	mov	r0, #0
40014318:	e28dd024 	add	sp, sp, #36	; 0x24
4001431c:	e8bd8030 	pop	{r4, r5, pc}
40014320:	e5940004 	ldr	r0, [r4, #4]
40014324:	e58d0004 	str	r0, [sp, #4]
40014328:	e594000c 	ldr	r0, [r4, #12]
4001432c:	e58d000c 	str	r0, [sp, #12]
40014330:	e5940010 	ldr	r0, [r4, #16]
40014334:	e58d0010 	str	r0, [sp, #16]
40014338:	e5940008 	ldr	r0, [r4, #8]
4001433c:	e58d0008 	str	r0, [sp, #8]
40014340:	e5940018 	ldr	r0, [r4, #24]
40014344:	e58d0014 	str	r0, [sp, #20]
40014348:	e594001c 	ldr	r0, [r4, #28]
4001434c:	e58d0018 	str	r0, [sp, #24]
40014350:	e5940020 	ldr	r0, [r4, #32]
40014354:	e58d001c 	str	r0, [sp, #28]
40014358:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4001435c:	e58d0020 	str	r0, [sp, #32]
40014360:	e1a0000d 	mov	r0, sp
40014364:	eb000054 	bl	400144bc <CyFx3DevIOSetConfig>
40014368:	eaffffea 	b	40014318 <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

4001436c <CyFx3DevIOIsGpio>:
4001436c:	e350003d 	cmp	r0, #61	; 0x3d
40014370:	e3a02000 	mov	r2, #0
40014374:	23a00000 	movcs	r0, #0
40014378:	212fff1e 	bxcs	lr
4001437c:	e3500020 	cmp	r0, #32
40014380:	83a02001 	movhi	r2, #1
40014384:	82400020 	subhi	r0, r0, #32
40014388:	e59fc018 	ldr	ip, [pc, #24]	; 400143a8 <CyFx3DevIOIsGpio+0x3c>
4001438c:	e3510000 	cmp	r1, #0
40014390:	e08c1102 	add	r1, ip, r2, lsl #2
40014394:	0591101c 	ldreq	r1, [r1, #28]
40014398:	15911014 	ldrne	r1, [r1, #20]
4001439c:	e3a03001 	mov	r3, #1
400143a0:	e0010013 	and	r0, r1, r3, lsl r0
400143a4:	e12fff1e 	bx	lr
400143a8:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

400143ac <CyFx3DevIOIsI2cConfigured>:
400143ac:	e59f0004 	ldr	r0, [pc, #4]	; 400143b8 <CyFx3DevIOIsI2cConfigured+0xc>
400143b0:	e5900008 	ldr	r0, [r0, #8]
400143b4:	e12fff1e 	bx	lr
400143b8:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

400143bc <CyFx3DevIOIsI2sConfigured>:
400143bc:	e59f0004 	ldr	r0, [pc, #4]	; 400143c8 <CyFx3DevIOIsI2sConfigured+0xc>
400143c0:	e590000c 	ldr	r0, [r0, #12]
400143c4:	e12fff1e 	bx	lr
400143c8:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

400143cc <CyFx3DevIOIsSpiConfigured>:
400143cc:	e59f0004 	ldr	r0, [pc, #4]	; 400143d8 <CyFx3DevIOIsSpiConfigured+0xc>
400143d0:	e5900010 	ldr	r0, [r0, #16]
400143d4:	e12fff1e 	bx	lr
400143d8:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsUartConfigured:

400143dc <CyFx3DevIOIsUartConfigured>:
400143dc:	e59f0004 	ldr	r0, [pc, #4]	; 400143e8 <CyFx3DevIOIsUartConfigured+0xc>
400143e0:	e5900004 	ldr	r0, [r0, #4]
400143e4:	e12fff1e 	bx	lr
400143e8:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOSelectGpio:

400143ec <CyFx3DevIOSelectGpio>:
400143ec:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400143f0:	e350003d 	cmp	r0, #61	; 0x3d
400143f4:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
400143f8:	e3a08001 	mov	r8, #1
400143fc:	e59f30b0 	ldr	r3, [pc, #176]	; 400144b4 <CyFx3DevIOSelectGpio+0xc8>
40014400:	e1a0c018 	lsl	ip, r8, r0
40014404:	e2837014 	add	r7, r3, #20
40014408:	e89700d0 	ldm	r7, {r4, r6, r7}
4001440c:	e5935020 	ldr	r5, [r3, #32]
40014410:	e3510000 	cmp	r1, #0
40014414:	e240e020 	sub	lr, r0, #32
40014418:	0a00000f 	beq	4001445c <CyFx3DevIOSelectGpio+0x70>
4001441c:	e3500020 	cmp	r0, #32
40014420:	2a000005 	bcs	4001443c <CyFx3DevIOSelectGpio+0x50>
40014424:	e3520000 	cmp	r2, #0
40014428:	0187000c 	orreq	r0, r7, ip
4001442c:	0a00000f 	beq	40014470 <CyFx3DevIOSelectGpio+0x84>
40014430:	e184000c 	orr	r0, r4, ip
40014434:	e5830014 	str	r0, [r3, #20]
40014438:	ea000013 	b	4001448c <CyFx3DevIOSelectGpio+0xa0>
4001443c:	e3520000 	cmp	r2, #0
40014440:	e20e00ff 	and	r0, lr, #255	; 0xff
40014444:	e1a00018 	lsl	r0, r8, r0
40014448:	01800005 	orreq	r0, r0, r5
4001444c:	0a00000d 	beq	40014488 <CyFx3DevIOSelectGpio+0x9c>
40014450:	e1800006 	orr	r0, r0, r6
40014454:	e5830018 	str	r0, [r3, #24]
40014458:	ea00000b 	b	4001448c <CyFx3DevIOSelectGpio+0xa0>
4001445c:	e3500020 	cmp	r0, #32
40014460:	2a000004 	bcs	40014478 <CyFx3DevIOSelectGpio+0x8c>
40014464:	e1c4000c 	bic	r0, r4, ip
40014468:	e5830014 	str	r0, [r3, #20]
4001446c:	e1c7000c 	bic	r0, r7, ip
40014470:	e583001c 	str	r0, [r3, #28]
40014474:	ea000004 	b	4001448c <CyFx3DevIOSelectGpio+0xa0>
40014478:	e1a00e18 	lsl	r0, r8, lr
4001447c:	e1c61000 	bic	r1, r6, r0
40014480:	e1c50000 	bic	r0, r5, r0
40014484:	e5831018 	str	r1, [r3, #24]
40014488:	e5830020 	str	r0, [r3, #32]
4001448c:	e5931014 	ldr	r1, [r3, #20]
40014490:	e59f0020 	ldr	r0, [pc, #32]	; 400144b8 <CyFx3DevIOSelectGpio+0xcc>
40014494:	e580100c 	str	r1, [r0, #12]
40014498:	e5931018 	ldr	r1, [r3, #24]
4001449c:	e5801010 	str	r1, [r0, #16]
400144a0:	e593101c 	ldr	r1, [r3, #28]
400144a4:	e5801014 	str	r1, [r0, #20]
400144a8:	e5931020 	ldr	r1, [r3, #32]
400144ac:	e5801018 	str	r1, [r0, #24]
400144b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400144b4:	40030cb0 	.word	0x40030cb0
400144b8:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

400144bc <CyFx3DevIOSetConfig>:
400144bc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400144c0:	e59f8208 	ldr	r8, [pc, #520]	; 400146d0 <CyFx3DevIOSetConfig+0x214>
400144c4:	e1a05000 	mov	r5, r0
400144c8:	e5980008 	ldr	r0, [r8, #8]
400144cc:	e59f7200 	ldr	r7, [pc, #512]	; 400146d4 <CyFx3DevIOSetConfig+0x218>
400144d0:	e2006002 	and	r6, r0, #2
400144d4:	e5d50000 	ldrb	r0, [r5]
400144d8:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
400144dc:	e3500000 	cmp	r0, #0
400144e0:	01c44944 	biceq	r4, r4, r4, asr #18
400144e4:	0a000008 	beq	4001450c <CyFx3DevIOSetConfig+0x50>
400144e8:	e3500001 	cmp	r0, #1
400144ec:	059f41e4 	ldreq	r4, [pc, #484]	; 400146d8 <CyFx3DevIOSetConfig+0x21c>
400144f0:	0a000005 	beq	4001450c <CyFx3DevIOSetConfig+0x50>
400144f4:	e3500002 	cmp	r0, #2
400144f8:	059f41dc 	ldreq	r4, [pc, #476]	; 400146dc <CyFx3DevIOSetConfig+0x220>
400144fc:	0a000001 	beq	40014508 <CyFx3DevIOSetConfig+0x4c>
40014500:	e3500003 	cmp	r0, #3
40014504:	1a000058 	bne	4001466c <CyFx3DevIOSetConfig+0x1b0>
40014508:	e3866010 	orr	r6, r6, #16
4001450c:	e5d50001 	ldrb	r0, [r5, #1]
40014510:	e3500005 	cmp	r0, #5
40014514:	308ff100 	addcc	pc, pc, r0, lsl #2
40014518:	ea000053 	b	4001466c <CyFx3DevIOSetConfig+0x1b0>
4001451c:	ea000003 	b	40014530 <CyFx3DevIOSetConfig+0x74>
40014520:	ea000005 	b	4001453c <CyFx3DevIOSetConfig+0x80>
40014524:	ea000021 	b	400145b0 <CyFx3DevIOSetConfig+0xf4>
40014528:	ea00002c 	b	400145e0 <CyFx3DevIOSetConfig+0x124>
4001452c:	ea000002 	b	4001453c <CyFx3DevIOSetConfig+0x80>
40014530:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
40014534:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
40014538:	ea000032 	b	40014608 <CyFx3DevIOSetConfig+0x14c>
4001453c:	e3500001 	cmp	r0, #1
40014540:	e5950004 	ldr	r0, [r5, #4]
40014544:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
40014548:	e3500000 	cmp	r0, #0
4001454c:	1a000006 	bne	4001456c <CyFx3DevIOSetConfig+0xb0>
40014550:	e5950010 	ldr	r0, [r5, #16]
40014554:	e3500000 	cmp	r0, #0
40014558:	1a00000b 	bne	4001458c <CyFx3DevIOSetConfig+0xd0>
4001455c:	e595000c 	ldr	r0, [r5, #12]
40014560:	e3500000 	cmp	r0, #0
40014564:	1a00000e 	bne	400145a4 <CyFx3DevIOSetConfig+0xe8>
40014568:	ea000005 	b	40014584 <CyFx3DevIOSetConfig+0xc8>
4001456c:	e595000c 	ldr	r0, [r5, #12]
40014570:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014574:	e3500000 	cmp	r0, #0
40014578:	05950010 	ldreq	r0, [r5, #16]
4001457c:	03500000 	cmpeq	r0, #0
40014580:	1a000039 	bne	4001466c <CyFx3DevIOSetConfig+0x1b0>
40014584:	e3866c01 	orr	r6, r6, #256	; 0x100
40014588:	ea00001e 	b	40014608 <CyFx3DevIOSetConfig+0x14c>
4001458c:	e595000c 	ldr	r0, [r5, #12]
40014590:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014594:	e3500000 	cmp	r0, #0
40014598:	1a000033 	bne	4001466c <CyFx3DevIOSetConfig+0x1b0>
4001459c:	e3866c02 	orr	r6, r6, #512	; 0x200
400145a0:	ea000018 	b	40014608 <CyFx3DevIOSetConfig+0x14c>
400145a4:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
400145a8:	e3866c03 	orr	r6, r6, #768	; 0x300
400145ac:	ea000015 	b	40014608 <CyFx3DevIOSetConfig+0x14c>
400145b0:	e5950010 	ldr	r0, [r5, #16]
400145b4:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
400145b8:	e3500000 	cmp	r0, #0
400145bc:	1a00002a 	bne	4001466c <CyFx3DevIOSetConfig+0x1b0>
400145c0:	e5950004 	ldr	r0, [r5, #4]
400145c4:	e3866c05 	orr	r6, r6, #1280	; 0x500
400145c8:	e3500000 	cmp	r0, #0
400145cc:	e595000c 	ldr	r0, [r5, #12]
400145d0:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
400145d4:	e3500000 	cmp	r0, #0
400145d8:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
400145dc:	ea000009 	b	40014608 <CyFx3DevIOSetConfig+0x14c>
400145e0:	e5950004 	ldr	r0, [r5, #4]
400145e4:	e3866b01 	orr	r6, r6, #1024	; 0x400
400145e8:	e3500000 	cmp	r0, #0
400145ec:	e5950010 	ldr	r0, [r5, #16]
400145f0:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
400145f4:	e3500000 	cmp	r0, #0
400145f8:	e595000c 	ldr	r0, [r5, #12]
400145fc:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014600:	e3500000 	cmp	r0, #0
40014604:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014608:	e5950008 	ldr	r0, [r5, #8]
4001460c:	e5959014 	ldr	r9, [r5, #20]
40014610:	e3500000 	cmp	r0, #0
40014614:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
40014618:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
4001461c:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014620:	05950018 	ldreq	r0, [r5, #24]
40014624:	01d00004 	bicseq	r0, r0, r4
40014628:	0595e01c 	ldreq	lr, [r5, #28]
4001462c:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014630:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014634:	0595c020 	ldreq	ip, [r5, #32]
40014638:	01dc0004 	bicseq	r0, ip, r4
4001463c:	1a00000a 	bne	4001466c <CyFx3DevIOSetConfig+0x1b0>
40014640:	e59f0098 	ldr	r0, [pc, #152]	; 400146e0 <CyFx3DevIOSetConfig+0x224>
40014644:	e3a01000 	mov	r1, #0
40014648:	e01e2000 	ands	r2, lr, r0
4001464c:	000c2000 	andeq	r2, ip, r0
40014650:	0a000001 	beq	4001465c <CyFx3DevIOSetConfig+0x1a0>
40014654:	e11c0000 	tst	ip, r0
40014658:	1a000003 	bne	4001466c <CyFx3DevIOSetConfig+0x1b0>
4001465c:	e2523001 	subs	r3, r2, #1
40014660:	13a03001 	movne	r3, #1
40014664:	e1120003 	tst	r2, r3
40014668:	0a000001 	beq	40014674 <CyFx3DevIOSetConfig+0x1b8>
4001466c:	e3a00000 	mov	r0, #0
40014670:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014674:	e2811001 	add	r1, r1, #1
40014678:	e3510008 	cmp	r1, #8
4001467c:	e1a00080 	lsl	r0, r0, #1
40014680:	3afffff0 	bcc	40014648 <CyFx3DevIOSetConfig+0x18c>
40014684:	e588900c 	str	r9, [r8, #12]
40014688:	e5950018 	ldr	r0, [r5, #24]
4001468c:	e5880010 	str	r0, [r8, #16]
40014690:	e595001c 	ldr	r0, [r5, #28]
40014694:	e5880014 	str	r0, [r8, #20]
40014698:	e5950020 	ldr	r0, [r5, #32]
4001469c:	e5880018 	str	r0, [r8, #24]
400146a0:	e3a00001 	mov	r0, #1
400146a4:	eb0000a6 	bl	40014944 <CyFx3BusyWait>
400146a8:	e5886008 	str	r6, [r8, #8]
400146ac:	e59f0030 	ldr	r0, [pc, #48]	; 400146e4 <CyFx3DevIOSetConfig+0x228>
400146b0:	e3a02024 	mov	r2, #36	; 0x24
400146b4:	e1a01005 	mov	r1, r5
400146b8:	ebfffb98 	bl	40013520 <__aeabi_memcpy4>
400146bc:	e59f0024 	ldr	r0, [pc, #36]	; 400146e8 <CyFx3DevIOSetConfig+0x22c>
400146c0:	e5804004 	str	r4, [r0, #4]
400146c4:	e5807000 	str	r7, [r0]
400146c8:	e3a00001 	mov	r0, #1
400146cc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400146d0:	e0051000 	.word	0xe0051000
400146d4:	3fe00000 	.word	0x3fe00000
400146d8:	1ffff9e0 	.word	0x1ffff9e0
400146dc:	1fffe000 	.word	0x1fffe000
400146e0:	01010101 	.word	0x01010101
400146e4:	40030cb0 	.word	0x40030cb0
400146e8:	40030ca8 	.word	0x40030ca8

Disassembly of section i.CyFx3DevIdentifyPart:

400146ec <CyFx3DevIdentifyPart>:
400146ec:	e59f0078 	ldr	r0, [pc, #120]	; 4001476c <CyFx3DevIdentifyPart+0x80>
400146f0:	e5901008 	ldr	r1, [r0, #8]
400146f4:	e59f2074 	ldr	r2, [pc, #116]	; 40014770 <CyFx3DevIdentifyPart+0x84>
400146f8:	e1a01221 	lsr	r1, r1, #4
400146fc:	e5923004 	ldr	r3, [r2, #4]
40014700:	e3530000 	cmp	r3, #0
40014704:	15d20000 	ldrbne	r0, [r2]
40014708:	112fff1e 	bxne	lr
4001470c:	e5900004 	ldr	r0, [r0, #4]
40014710:	e3100040 	tst	r0, #64	; 0x40
40014714:	e59f2058 	ldr	r2, [pc, #88]	; 40014774 <CyFx3DevIdentifyPart+0x88>
40014718:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
4001471c:	e3a00000 	mov	r0, #0
40014720:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014724:	e1530001 	cmp	r3, r1
40014728:	12800001 	addne	r0, r0, #1
4001472c:	120000ff 	andne	r0, r0, #255	; 0xff
40014730:	1350001b 	cmpne	r0, #27
40014734:	3afffff9 	bcc	40014720 <CyFx3DevIdentifyPart+0x34>
40014738:	e350001b 	cmp	r0, #27
4001473c:	03a00003 	moveq	r0, #3
40014740:	0a000000 	beq	40014748 <CyFx3DevIdentifyPart+0x5c>
40014744:	2a000003 	bcs	40014758 <CyFx3DevIdentifyPart+0x6c>
40014748:	e0821180 	add	r1, r2, r0, lsl #3
4001474c:	e5911004 	ldr	r1, [r1, #4]
40014750:	e3110004 	tst	r1, #4
40014754:	112fff1e 	bxne	lr
40014758:	e59f1018 	ldr	r1, [pc, #24]	; 40014778 <CyFx3DevIdentifyPart+0x8c>
4001475c:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014760:	e3822004 	orr	r2, r2, #4
40014764:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
40014768:	e12fff1e 	bx	lr
4001476c:	e0055000 	.word	0xe0055000
40014770:	40030c9c 	.word	0x40030c9c
40014774:	40011b20 	.word	0x40011b20
40014778:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

4001477c <CyFx3DevInitPageTables>:
4001477c:	e92d4030 	push	{r4, r5, lr}
40014780:	e59f0058 	ldr	r0, [pc, #88]	; 400147e0 <CyFx3DevInitPageTables+0x64>
40014784:	e3a04000 	mov	r4, #0
40014788:	e59f504c 	ldr	r5, [pc, #76]	; 400147dc <CyFx3DevInitPageTables+0x60>
4001478c:	e5804004 	str	r4, [r0, #4]
40014790:	ebffffd5 	bl	400146ec <CyFx3DevIdentifyPart>
40014794:	e59f1048 	ldr	r1, [pc, #72]	; 400147e4 <CyFx3DevInitPageTables+0x68>
40014798:	e2450a05 	sub	r0, r5, #20480	; 0x5000
4001479c:	e5801000 	str	r1, [r0]
400147a0:	e2811201 	add	r1, r1, #268435456	; 0x10000000
400147a4:	e5801008 	str	r1, [r0, #8]
400147a8:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
400147ac:	e5801010 	str	r1, [r0, #16]
400147b0:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
400147b4:	e5801018 	str	r1, [r0, #24]
400147b8:	e59f1028 	ldr	r1, [pc, #40]	; 400147e8 <CyFx3DevInitPageTables+0x6c>
400147bc:	e5801020 	str	r1, [r0, #32]
400147c0:	e59f1024 	ldr	r1, [pc, #36]	; 400147ec <CyFx3DevInitPageTables+0x70>
400147c4:	e580101c 	str	r1, [r0, #28]
400147c8:	e5804024 	str	r4, [r0, #36]	; 0x24
400147cc:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
400147d0:	e3a00003 	mov	r0, #3
400147d4:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
400147d8:	e8bd8030 	pop	{r4, r5, pc}
400147dc:	e0058000 	.word	0xe0058000
400147e0:	40030c9c 	.word	0x40030c9c
400147e4:	00000c12 	.word	0x00000c12
400147e8:	fff00c12 	.word	0xfff00c12
400147ec:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

400147f0 <CyFx3DevIsGpif32Supported>:
400147f0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400147f4:	ebffffbc 	bl	400146ec <CyFx3DevIdentifyPart>
400147f8:	e350001b 	cmp	r0, #27
400147fc:	359f1010 	ldrcc	r1, [pc, #16]	; 40014814 <CyFx3DevIsGpif32Supported+0x24>
40014800:	30810180 	addcc	r0, r1, r0, lsl #3
40014804:	35900004 	ldrcc	r0, [r0, #4]
40014808:	32000010 	andcc	r0, r0, #16
4001480c:	23a00000 	movcs	r0, #0
40014810:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014814:	40011b20 	.word	0x40011b20

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014818 <CyFx3DevIsGpifConfigurable>:
40014818:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001481c:	ebffffb2 	bl	400146ec <CyFx3DevIdentifyPart>
40014820:	e350001b 	cmp	r0, #27
40014824:	2a000006 	bcs	40014844 <CyFx3DevIsGpifConfigurable+0x2c>
40014828:	e59f101c 	ldr	r1, [pc, #28]	; 4001484c <CyFx3DevIsGpifConfigurable+0x34>
4001482c:	e0810180 	add	r0, r1, r0, lsl #3
40014830:	e5900004 	ldr	r0, [r0, #4]
40014834:	e3100c0f 	tst	r0, #3840	; 0xf00
40014838:	159f0010 	ldrne	r0, [pc, #16]	; 40014850 <CyFx3DevIsGpifConfigurable+0x38>
4001483c:	15900008 	ldrne	r0, [r0, #8]
40014840:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014844:	e3a00001 	mov	r0, #1
40014848:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001484c:	40011b20 	.word	0x40011b20
40014850:	40030c9c 	.word	0x40030c9c

Disassembly of section i.CyFx3DevIsGpifSupported:

40014854 <CyFx3DevIsGpifSupported>:
40014854:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014858:	ebffffa3 	bl	400146ec <CyFx3DevIdentifyPart>
4001485c:	e350001b 	cmp	r0, #27
40014860:	359f1010 	ldrcc	r1, [pc, #16]	; 40014878 <CyFx3DevIsGpifSupported+0x24>
40014864:	30810180 	addcc	r0, r1, r0, lsl #3
40014868:	35900004 	ldrcc	r0, [r0, #4]
4001486c:	32000008 	andcc	r0, r0, #8
40014870:	23a00000 	movcs	r0, #0
40014874:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014878:	40011b20 	.word	0x40011b20

Disassembly of section i.CyFx3DevIsI2sSupported:

4001487c <CyFx3DevIsI2sSupported>:
4001487c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014880:	ebffff99 	bl	400146ec <CyFx3DevIdentifyPart>
40014884:	e350001b 	cmp	r0, #27
40014888:	359f1010 	ldrcc	r1, [pc, #16]	; 400148a0 <CyFx3DevIsI2sSupported+0x24>
4001488c:	30810180 	addcc	r0, r1, r0, lsl #3
40014890:	35900004 	ldrcc	r0, [r0, #4]
40014894:	32000080 	andcc	r0, r0, #128	; 0x80
40014898:	23a00000 	movcs	r0, #0
4001489c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148a0:	40011b20 	.word	0x40011b20

Disassembly of section i.CyFx3DevIsOtgSupported:

400148a4 <CyFx3DevIsOtgSupported>:
400148a4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148a8:	ebffff8f 	bl	400146ec <CyFx3DevIdentifyPart>
400148ac:	e350001b 	cmp	r0, #27
400148b0:	359f1010 	ldrcc	r1, [pc, #16]	; 400148c8 <CyFx3DevIsOtgSupported+0x24>
400148b4:	30810180 	addcc	r0, r1, r0, lsl #3
400148b8:	35900004 	ldrcc	r0, [r0, #4]
400148bc:	32000002 	andcc	r0, r0, #2
400148c0:	23a00000 	movcs	r0, #0
400148c4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148c8:	40011b20 	.word	0x40011b20

Disassembly of section i.CyFx3DevIsSib0Supported:

400148cc <CyFx3DevIsSib0Supported>:
400148cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148d0:	ebffff85 	bl	400146ec <CyFx3DevIdentifyPart>
400148d4:	e350001b 	cmp	r0, #27
400148d8:	359f1010 	ldrcc	r1, [pc, #16]	; 400148f0 <CyFx3DevIsSib0Supported+0x24>
400148dc:	30810180 	addcc	r0, r1, r0, lsl #3
400148e0:	35900004 	ldrcc	r0, [r0, #4]
400148e4:	32000020 	andcc	r0, r0, #32
400148e8:	23a00000 	movcs	r0, #0
400148ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148f0:	40011b20 	.word	0x40011b20

Disassembly of section i.CyFx3DevIsSib1Supported:

400148f4 <CyFx3DevIsSib1Supported>:
400148f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148f8:	ebffff7b 	bl	400146ec <CyFx3DevIdentifyPart>
400148fc:	e350001b 	cmp	r0, #27
40014900:	359f1010 	ldrcc	r1, [pc, #16]	; 40014918 <CyFx3DevIsSib1Supported+0x24>
40014904:	30810180 	addcc	r0, r1, r0, lsl #3
40014908:	35900004 	ldrcc	r0, [r0, #4]
4001490c:	32000040 	andcc	r0, r0, #64	; 0x40
40014910:	23a00000 	movcs	r0, #0
40014914:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014918:	40011b20 	.word	0x40011b20

Disassembly of section i.CyFx3DevIsUsb3Supported:

4001491c <CyFx3DevIsUsb3Supported>:
4001491c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014920:	ebffff71 	bl	400146ec <CyFx3DevIdentifyPart>
40014924:	e350001b 	cmp	r0, #27
40014928:	359f1010 	ldrcc	r1, [pc, #16]	; 40014940 <CyFx3DevIsUsb3Supported+0x24>
4001492c:	30810180 	addcc	r0, r1, r0, lsl #3
40014930:	35900004 	ldrcc	r0, [r0, #4]
40014934:	32000001 	andcc	r0, r0, #1
40014938:	23a00000 	movcs	r0, #0
4001493c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014940:	40011b20 	.word	0x40011b20

Disassembly of section i.CyFx3BusyWait:

40014944 <CyFx3BusyWait>:
40014944:	ea000003 	b	40014958 <CyFx3BusyWait+0x14>
40014948:	e3a01000 	mov	r1, #0
4001494c:	e2811001 	add	r1, r1, #1
40014950:	e351002f 	cmp	r1, #47	; 0x2f
40014954:	3afffffc 	bcc	4001494c <CyFx3BusyWait+0x8>
40014958:	e1b01000 	movs	r1, r0
4001495c:	e2400001 	sub	r0, r0, #1
40014960:	e1a00800 	lsl	r0, r0, #16
40014964:	e1a00820 	lsr	r0, r0, #16
40014968:	1afffff6 	bne	40014948 <CyFx3BusyWait+0x4>
4001496c:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014970 <CyFx3PibDllEnable>:
40014970:	e59f205c 	ldr	r2, [pc, #92]	; 400149d4 <CyFx3PibDllEnable+0x64>
40014974:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014978:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4001497c:	e3c00001 	bic	r0, r0, #1
40014980:	e5820028 	str	r0, [r2, #40]	; 0x28
40014984:	e3a00001 	mov	r0, #1
40014988:	ebffffed 	bl	40014944 <CyFx3BusyWait>
4001498c:	e3a00003 	mov	r0, #3
40014990:	e5820028 	str	r0, [r2, #40]	; 0x28
40014994:	e3a00001 	mov	r0, #1
40014998:	ebffffe9 	bl	40014944 <CyFx3BusyWait>
4001499c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149a0:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
400149a4:	e5820028 	str	r0, [r2, #40]	; 0x28
400149a8:	e3a00001 	mov	r0, #1
400149ac:	ebffffe4 	bl	40014944 <CyFx3BusyWait>
400149b0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149b4:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
400149b8:	e5820028 	str	r0, [r2, #40]	; 0x28
400149bc:	e3a00001 	mov	r0, #1
400149c0:	ebffffdf 	bl	40014944 <CyFx3BusyWait>
400149c4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149c8:	e3100004 	tst	r0, #4
400149cc:	0afffffc 	beq	400149c4 <CyFx3PibDllEnable+0x54>
400149d0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400149d4:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

400149d8 <CyFx3PibGetDllStatus>:
400149d8:	e59f0008 	ldr	r0, [pc, #8]	; 400149e8 <CyFx3PibGetDllStatus+0x10>
400149dc:	e5900028 	ldr	r0, [r0, #40]	; 0x28
400149e0:	e2000004 	and	r0, r0, #4
400149e4:	e12fff1e 	bx	lr
400149e8:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

400149ec <CyFx3PibPowerOn>:
400149ec:	e92d4010 	push	{r4, lr}
400149f0:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
400149f4:	ebffff96 	bl	40014854 <CyFx3DevIsGpifSupported>
400149f8:	e3500000 	cmp	r0, #0
400149fc:	1a000002 	bne	40014a0c <CyFx3PibPowerOn+0x20>
40014a00:	e4940004 	ldr	r0, [r4], #4
40014a04:	e3500000 	cmp	r0, #0
40014a08:	1afffffc 	bne	40014a00 <CyFx3PibPowerOn+0x14>
40014a0c:	e59f2028 	ldr	r2, [pc, #40]	; 40014a3c <CyFx3PibPowerOn+0x50>
40014a10:	e3a00000 	mov	r0, #0
40014a14:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014a18:	e3a0000a 	mov	r0, #10
40014a1c:	ebffffc8 	bl	40014944 <CyFx3BusyWait>
40014a20:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014a24:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014a28:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014a2c:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014a30:	e3100001 	tst	r0, #1
40014a34:	0afffffc 	beq	40014a2c <CyFx3PibPowerOn+0x40>
40014a38:	e8bd8010 	pop	{r4, pc}
40014a3c:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014a40 <CyU3PDmaSocketDisable>:
40014a40:	e3a0c03f 	mov	ip, #63	; 0x3f
40014a44:	e00c1440 	and	r1, ip, r0, asr #8
40014a48:	e20030ff 	and	r3, r0, #255	; 0xff
40014a4c:	e59fc048 	ldr	ip, [pc, #72]	; 40014a9c <CyU3PDmaSocketDisable+0x5c>
40014a50:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014a54:	e08cc383 	add	ip, ip, r3, lsl #7
40014a58:	e59c200c 	ldr	r2, [ip, #12]
40014a5c:	e3120601 	tst	r2, #1048576	; 0x100000
40014a60:	1a000000 	bne	40014a68 <CyU3PDmaSocketDisable+0x28>
40014a64:	e12fff1e 	bx	lr
40014a68:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014a6c:	e59fc028 	ldr	ip, [pc, #40]	; 40014a9c <CyU3PDmaSocketDisable+0x5c>
40014a70:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014a74:	e08cc383 	add	ip, ip, r3, lsl #7
40014a78:	e58c200c 	str	r2, [ip, #12]
40014a7c:	e1a00000 	nop			; (mov r0, r0)
40014a80:	e59fc014 	ldr	ip, [pc, #20]	; 40014a9c <CyU3PDmaSocketDisable+0x5c>
40014a84:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014a88:	e08cc383 	add	ip, ip, r3, lsl #7
40014a8c:	e59cc00c 	ldr	ip, [ip, #12]
40014a90:	e31c0601 	tst	ip, #1048576	; 0x100000
40014a94:	1afffff9 	bne	40014a80 <CyU3PDmaSocketDisable+0x40>
40014a98:	eafffff1 	b	40014a64 <CyU3PDmaSocketDisable+0x24>
40014a9c:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014aa0 <CyU3PDmaSocketGetConfig>:
40014aa0:	e1a02000 	mov	r2, r0
40014aa4:	e3a0003f 	mov	r0, #63	; 0x3f
40014aa8:	e0003442 	and	r3, r0, r2, asr #8
40014aac:	e202c0ff 	and	ip, r2, #255	; 0xff
40014ab0:	e3510000 	cmp	r1, #0
40014ab4:	1a000001 	bne	40014ac0 <CyU3PDmaSocketGetConfig+0x20>
40014ab8:	e3a00040 	mov	r0, #64	; 0x40
40014abc:	e12fff1e 	bx	lr
40014ac0:	e59f0074 	ldr	r0, [pc, #116]	; 40014b3c <CyU3PDmaSocketGetConfig+0x9c>
40014ac4:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014ac8:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014acc:	e5810000 	str	r0, [r1]
40014ad0:	e59f0064 	ldr	r0, [pc, #100]	; 40014b3c <CyU3PDmaSocketGetConfig+0x9c>
40014ad4:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014ad8:	e080038c 	add	r0, r0, ip, lsl #7
40014adc:	e5900004 	ldr	r0, [r0, #4]
40014ae0:	e5810004 	str	r0, [r1, #4]
40014ae4:	e59f0050 	ldr	r0, [pc, #80]	; 40014b3c <CyU3PDmaSocketGetConfig+0x9c>
40014ae8:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014aec:	e080038c 	add	r0, r0, ip, lsl #7
40014af0:	e5900008 	ldr	r0, [r0, #8]
40014af4:	e5810008 	str	r0, [r1, #8]
40014af8:	e59f003c 	ldr	r0, [pc, #60]	; 40014b3c <CyU3PDmaSocketGetConfig+0x9c>
40014afc:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b00:	e080038c 	add	r0, r0, ip, lsl #7
40014b04:	e590000c 	ldr	r0, [r0, #12]
40014b08:	e581000c 	str	r0, [r1, #12]
40014b0c:	e59f0028 	ldr	r0, [pc, #40]	; 40014b3c <CyU3PDmaSocketGetConfig+0x9c>
40014b10:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b14:	e080038c 	add	r0, r0, ip, lsl #7
40014b18:	e5900010 	ldr	r0, [r0, #16]
40014b1c:	e5810010 	str	r0, [r1, #16]
40014b20:	e59f0014 	ldr	r0, [pc, #20]	; 40014b3c <CyU3PDmaSocketGetConfig+0x9c>
40014b24:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b28:	e080038c 	add	r0, r0, ip, lsl #7
40014b2c:	e5900014 	ldr	r0, [r0, #20]
40014b30:	e5810014 	str	r0, [r1, #20]
40014b34:	e3a00000 	mov	r0, #0
40014b38:	eaffffdf 	b	40014abc <CyU3PDmaSocketGetConfig+0x1c>
40014b3c:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014b40 <CyU3PDmaSocketIsValidConsumer>:
40014b40:	e92d4010 	push	{r4, lr}
40014b44:	e1a01000 	mov	r1, r0
40014b48:	e3a0003f 	mov	r0, #63	; 0x3f
40014b4c:	e0002441 	and	r2, r0, r1, asr #8
40014b50:	e20130ff 	and	r3, r1, #255	; 0xff
40014b54:	e3a04000 	mov	r4, #0
40014b58:	e3520000 	cmp	r2, #0
40014b5c:	0a000006 	beq	40014b7c <CyU3PDmaSocketIsValidConsumer+0x3c>
40014b60:	e3520001 	cmp	r2, #1
40014b64:	0a000009 	beq	40014b90 <CyU3PDmaSocketIsValidConsumer+0x50>
40014b68:	e3520002 	cmp	r2, #2
40014b6c:	0a00000c 	beq	40014ba4 <CyU3PDmaSocketIsValidConsumer+0x64>
40014b70:	e3520003 	cmp	r2, #3
40014b74:	1a000014 	bne	40014bcc <CyU3PDmaSocketIsValidConsumer+0x8c>
40014b78:	ea00000e 	b	40014bb8 <CyU3PDmaSocketIsValidConsumer+0x78>
40014b7c:	e1a00000 	nop			; (mov r0, r0)
40014b80:	e3a0c000 	mov	ip, #0
40014b84:	e3a0e004 	mov	lr, #4
40014b88:	e59f4080 	ldr	r4, [pc, #128]	; 40014c10 <CyU3PDmaSocketIsValidConsumer+0xd0>
40014b8c:	ea000011 	b	40014bd8 <CyU3PDmaSocketIsValidConsumer+0x98>
40014b90:	e1a00000 	nop			; (mov r0, r0)
40014b94:	e3a0c000 	mov	ip, #0
40014b98:	e3a0e00f 	mov	lr, #15
40014b9c:	e59f4070 	ldr	r4, [pc, #112]	; 40014c14 <CyU3PDmaSocketIsValidConsumer+0xd4>
40014ba0:	ea00000c 	b	40014bd8 <CyU3PDmaSocketIsValidConsumer+0x98>
40014ba4:	e1a00000 	nop			; (mov r0, r0)
40014ba8:	e3a0c000 	mov	ip, #0
40014bac:	e3a0e007 	mov	lr, #7
40014bb0:	e59f4060 	ldr	r4, [pc, #96]	; 40014c18 <CyU3PDmaSocketIsValidConsumer+0xd8>
40014bb4:	ea000007 	b	40014bd8 <CyU3PDmaSocketIsValidConsumer+0x98>
40014bb8:	e1a00000 	nop			; (mov r0, r0)
40014bbc:	e3a0c000 	mov	ip, #0
40014bc0:	e3a0e00f 	mov	lr, #15
40014bc4:	e59f4050 	ldr	r4, [pc, #80]	; 40014c1c <CyU3PDmaSocketIsValidConsumer+0xdc>
40014bc8:	ea000002 	b	40014bd8 <CyU3PDmaSocketIsValidConsumer+0x98>
40014bcc:	e1a00000 	nop			; (mov r0, r0)
40014bd0:	e3a00000 	mov	r0, #0
40014bd4:	e8bd8010 	pop	{r4, pc}
40014bd8:	e1a00000 	nop			; (mov r0, r0)
40014bdc:	e5940000 	ldr	r0, [r4]
40014be0:	e3100001 	tst	r0, #1
40014be4:	1a000001 	bne	40014bf0 <CyU3PDmaSocketIsValidConsumer+0xb0>
40014be8:	e3a00000 	mov	r0, #0
40014bec:	eafffff8 	b	40014bd4 <CyU3PDmaSocketIsValidConsumer+0x94>
40014bf0:	e153000c 	cmp	r3, ip
40014bf4:	ba000003 	blt	40014c08 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014bf8:	e153000e 	cmp	r3, lr
40014bfc:	ca000001 	bgt	40014c08 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014c00:	e3a00001 	mov	r0, #1
40014c04:	eafffff2 	b	40014bd4 <CyU3PDmaSocketIsValidConsumer+0x94>
40014c08:	e3a00000 	mov	r0, #0
40014c0c:	eafffff0 	b	40014bd4 <CyU3PDmaSocketIsValidConsumer+0x94>
40014c10:	e0007f04 	.word	0xe0007f04
40014c14:	e0017f04 	.word	0xe0017f04
40014c18:	e0027f04 	.word	0xe0027f04
40014c1c:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

40014c20 <CyU3PDmaSocketIsValidProducer>:
40014c20:	e92d4010 	push	{r4, lr}
40014c24:	e1a01000 	mov	r1, r0
40014c28:	e3a0003f 	mov	r0, #63	; 0x3f
40014c2c:	e0002441 	and	r2, r0, r1, asr #8
40014c30:	e20130ff 	and	r3, r1, #255	; 0xff
40014c34:	e3a04000 	mov	r4, #0
40014c38:	e3520000 	cmp	r2, #0
40014c3c:	0a000006 	beq	40014c5c <CyU3PDmaSocketIsValidProducer+0x3c>
40014c40:	e3520001 	cmp	r2, #1
40014c44:	0a000009 	beq	40014c70 <CyU3PDmaSocketIsValidProducer+0x50>
40014c48:	e3520002 	cmp	r2, #2
40014c4c:	0a00000c 	beq	40014c84 <CyU3PDmaSocketIsValidProducer+0x64>
40014c50:	e3520004 	cmp	r2, #4
40014c54:	1a000014 	bne	40014cac <CyU3PDmaSocketIsValidProducer+0x8c>
40014c58:	ea00000e 	b	40014c98 <CyU3PDmaSocketIsValidProducer+0x78>
40014c5c:	e1a00000 	nop			; (mov r0, r0)
40014c60:	e3a0c005 	mov	ip, #5
40014c64:	e3a0e007 	mov	lr, #7
40014c68:	e59f4080 	ldr	r4, [pc, #128]	; 40014cf0 <CyU3PDmaSocketIsValidProducer+0xd0>
40014c6c:	ea000011 	b	40014cb8 <CyU3PDmaSocketIsValidProducer+0x98>
40014c70:	e1a00000 	nop			; (mov r0, r0)
40014c74:	e3a0c000 	mov	ip, #0
40014c78:	e3a0e01f 	mov	lr, #31
40014c7c:	e59f4070 	ldr	r4, [pc, #112]	; 40014cf4 <CyU3PDmaSocketIsValidProducer+0xd4>
40014c80:	ea00000c 	b	40014cb8 <CyU3PDmaSocketIsValidProducer+0x98>
40014c84:	e1a00000 	nop			; (mov r0, r0)
40014c88:	e3a0c000 	mov	ip, #0
40014c8c:	e3a0e007 	mov	lr, #7
40014c90:	e59f4060 	ldr	r4, [pc, #96]	; 40014cf8 <CyU3PDmaSocketIsValidProducer+0xd8>
40014c94:	ea000007 	b	40014cb8 <CyU3PDmaSocketIsValidProducer+0x98>
40014c98:	e1a00000 	nop			; (mov r0, r0)
40014c9c:	e3a0c000 	mov	ip, #0
40014ca0:	e3a0e00f 	mov	lr, #15
40014ca4:	e59f4050 	ldr	r4, [pc, #80]	; 40014cfc <CyU3PDmaSocketIsValidProducer+0xdc>
40014ca8:	ea000002 	b	40014cb8 <CyU3PDmaSocketIsValidProducer+0x98>
40014cac:	e1a00000 	nop			; (mov r0, r0)
40014cb0:	e3a00000 	mov	r0, #0
40014cb4:	e8bd8010 	pop	{r4, pc}
40014cb8:	e1a00000 	nop			; (mov r0, r0)
40014cbc:	e5940000 	ldr	r0, [r4]
40014cc0:	e3100001 	tst	r0, #1
40014cc4:	1a000001 	bne	40014cd0 <CyU3PDmaSocketIsValidProducer+0xb0>
40014cc8:	e3a00000 	mov	r0, #0
40014ccc:	eafffff8 	b	40014cb4 <CyU3PDmaSocketIsValidProducer+0x94>
40014cd0:	e153000c 	cmp	r3, ip
40014cd4:	ba000003 	blt	40014ce8 <CyU3PDmaSocketIsValidProducer+0xc8>
40014cd8:	e153000e 	cmp	r3, lr
40014cdc:	ca000001 	bgt	40014ce8 <CyU3PDmaSocketIsValidProducer+0xc8>
40014ce0:	e3a00001 	mov	r0, #1
40014ce4:	eafffff2 	b	40014cb4 <CyU3PDmaSocketIsValidProducer+0x94>
40014ce8:	e3a00000 	mov	r0, #0
40014cec:	eafffff0 	b	40014cb4 <CyU3PDmaSocketIsValidProducer+0x94>
40014cf0:	e0007f04 	.word	0xe0007f04
40014cf4:	e0017f04 	.word	0xe0017f04
40014cf8:	e0027f04 	.word	0xe0027f04
40014cfc:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

40014d00 <CyU3PDmaSocketSendEvent>:
40014d00:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014d04:	e1a04000 	mov	r4, r0
40014d08:	e1a05001 	mov	r5, r1
40014d0c:	e1a06002 	mov	r6, r2
40014d10:	e3a0003f 	mov	r0, #63	; 0x3f
40014d14:	e0007444 	and	r7, r0, r4, asr #8
40014d18:	e20480ff 	and	r8, r4, #255	; 0xff
40014d1c:	e1a09005 	mov	r9, r5
40014d20:	e3560001 	cmp	r6, #1
40014d24:	1a000000 	bne	40014d2c <CyU3PDmaSocketSendEvent+0x2c>
40014d28:	e3899801 	orr	r9, r9, #65536	; 0x10000
40014d2c:	e59f0010 	ldr	r0, [pc, #16]	; 40014d44 <CyU3PDmaSocketSendEvent+0x44>
40014d30:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40014d34:	e0800388 	add	r0, r0, r8, lsl #7
40014d38:	e580907c 	str	r9, [r0, #124]	; 0x7c
40014d3c:	ebfff6e1 	bl	400128c8 <CyU3PSysBarrierSync>
40014d40:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014d44:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketSetConfig:

40014d48 <CyU3PDmaSocketSetConfig>:
40014d48:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014d4c:	e1a04000 	mov	r4, r0
40014d50:	e1a05001 	mov	r5, r1
40014d54:	e3a0003f 	mov	r0, #63	; 0x3f
40014d58:	e0006444 	and	r6, r0, r4, asr #8
40014d5c:	e20470ff 	and	r7, r4, #255	; 0xff
40014d60:	e3550000 	cmp	r5, #0
40014d64:	1a000001 	bne	40014d70 <CyU3PDmaSocketSetConfig+0x28>
40014d68:	e3a00040 	mov	r0, #64	; 0x40
40014d6c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014d70:	e59f1078 	ldr	r1, [pc, #120]	; 40014df0 <CyU3PDmaSocketSetConfig+0xa8>
40014d74:	e5950000 	ldr	r0, [r5]
40014d78:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014d7c:	e7810387 	str	r0, [r1, r7, lsl #7]
40014d80:	e59f1068 	ldr	r1, [pc, #104]	; 40014df0 <CyU3PDmaSocketSetConfig+0xa8>
40014d84:	e5950004 	ldr	r0, [r5, #4]
40014d88:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014d8c:	e0811387 	add	r1, r1, r7, lsl #7
40014d90:	e5810004 	str	r0, [r1, #4]
40014d94:	e59f1054 	ldr	r1, [pc, #84]	; 40014df0 <CyU3PDmaSocketSetConfig+0xa8>
40014d98:	e5950008 	ldr	r0, [r5, #8]
40014d9c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014da0:	e0811387 	add	r1, r1, r7, lsl #7
40014da4:	e5810008 	str	r0, [r1, #8]
40014da8:	e59f1040 	ldr	r1, [pc, #64]	; 40014df0 <CyU3PDmaSocketSetConfig+0xa8>
40014dac:	e5950010 	ldr	r0, [r5, #16]
40014db0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014db4:	e0811387 	add	r1, r1, r7, lsl #7
40014db8:	e5810010 	str	r0, [r1, #16]
40014dbc:	e59f102c 	ldr	r1, [pc, #44]	; 40014df0 <CyU3PDmaSocketSetConfig+0xa8>
40014dc0:	e5950014 	ldr	r0, [r5, #20]
40014dc4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014dc8:	e0811387 	add	r1, r1, r7, lsl #7
40014dcc:	e5810014 	str	r0, [r1, #20]
40014dd0:	e59f1018 	ldr	r1, [pc, #24]	; 40014df0 <CyU3PDmaSocketSetConfig+0xa8>
40014dd4:	e595000c 	ldr	r0, [r5, #12]
40014dd8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ddc:	e0811387 	add	r1, r1, r7, lsl #7
40014de0:	e581000c 	str	r0, [r1, #12]
40014de4:	ebfff6b7 	bl	400128c8 <CyU3PSysBarrierSync>
40014de8:	e3a00000 	mov	r0, #0
40014dec:	eaffffde 	b	40014d6c <CyU3PDmaSocketSetConfig+0x24>
40014df0:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40014df4 <CyU3PDmaSocketSetWrapUp>:
40014df4:	e3a0c03f 	mov	ip, #63	; 0x3f
40014df8:	e00c1440 	and	r1, ip, r0, asr #8
40014dfc:	e20030ff 	and	r3, r0, #255	; 0xff
40014e00:	e59fc02c 	ldr	ip, [pc, #44]	; 40014e34 <CyU3PDmaSocketSetWrapUp+0x40>
40014e04:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014e08:	e08cc383 	add	ip, ip, r3, lsl #7
40014e0c:	e59c200c 	ldr	r2, [ip, #12]
40014e10:	e3120601 	tst	r2, #1048576	; 0x100000
40014e14:	1a000000 	bne	40014e1c <CyU3PDmaSocketSetWrapUp+0x28>
40014e18:	e12fff1e 	bx	lr
40014e1c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
40014e20:	e59fc00c 	ldr	ip, [pc, #12]	; 40014e34 <CyU3PDmaSocketSetWrapUp+0x40>
40014e24:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014e28:	e08cc383 	add	ip, ip, r3, lsl #7
40014e2c:	e58c200c 	str	r2, [ip, #12]
40014e30:	eafffff8 	b	40014e18 <CyU3PDmaSocketSetWrapUp+0x24>
40014e34:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

40014e38 <CyU3PDmaSocketUpdateStatus>:
40014e38:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014e3c:	e1a04000 	mov	r4, r0
40014e40:	e1a05001 	mov	r5, r1
40014e44:	e3a0003f 	mov	r0, #63	; 0x3f
40014e48:	e0006444 	and	r6, r0, r4, asr #8
40014e4c:	e20470ff 	and	r7, r4, #255	; 0xff
40014e50:	e3550000 	cmp	r5, #0
40014e54:	1a000001 	bne	40014e60 <CyU3PDmaSocketUpdateStatus+0x28>
40014e58:	e3a00040 	mov	r0, #64	; 0x40
40014e5c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014e60:	e59f1040 	ldr	r1, [pc, #64]	; 40014ea8 <CyU3PDmaSocketUpdateStatus+0x70>
40014e64:	e5950010 	ldr	r0, [r5, #16]
40014e68:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e6c:	e0811387 	add	r1, r1, r7, lsl #7
40014e70:	e5810010 	str	r0, [r1, #16]
40014e74:	e59f102c 	ldr	r1, [pc, #44]	; 40014ea8 <CyU3PDmaSocketUpdateStatus+0x70>
40014e78:	e5950014 	ldr	r0, [r5, #20]
40014e7c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e80:	e0811387 	add	r1, r1, r7, lsl #7
40014e84:	e5810014 	str	r0, [r1, #20]
40014e88:	e59f1018 	ldr	r1, [pc, #24]	; 40014ea8 <CyU3PDmaSocketUpdateStatus+0x70>
40014e8c:	e595000c 	ldr	r0, [r5, #12]
40014e90:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e94:	e0811387 	add	r1, r1, r7, lsl #7
40014e98:	e581000c 	str	r0, [r1, #12]
40014e9c:	ebfff689 	bl	400128c8 <CyU3PSysBarrierSync>
40014ea0:	e3a00000 	mov	r0, #0
40014ea4:	eaffffec 	b	40014e5c <CyU3PDmaSocketUpdateStatus+0x24>
40014ea8:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

40014eac <CyU3PDmaUpdateSocketSuspendOption>:
40014eac:	e92d4070 	push	{r4, r5, r6, lr}
40014eb0:	e24dd018 	sub	sp, sp, #24
40014eb4:	e1a04000 	mov	r4, r0
40014eb8:	e1a06001 	mov	r6, r1
40014ebc:	e1a0100d 	mov	r1, sp
40014ec0:	e1a00004 	mov	r0, r4
40014ec4:	ebfffef5 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40014ec8:	e59d000c 	ldr	r0, [sp, #12]
40014ecc:	e2000702 	and	r0, r0, #524288	; 0x80000
40014ed0:	e1a059a0 	lsr	r5, r0, #19
40014ed4:	e3550001 	cmp	r5, #1
40014ed8:	1a000010 	bne	40014f20 <CyU3PDmaUpdateSocketSuspendOption+0x74>
40014edc:	e59d000c 	ldr	r0, [sp, #12]
40014ee0:	e3100101 	tst	r0, #1073741824	; 0x40000000
40014ee4:	1a00000a 	bne	40014f14 <CyU3PDmaUpdateSocketSuspendOption+0x68>
40014ee8:	e59d000c 	ldr	r0, [sp, #12]
40014eec:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014ef0:	e58d000c 	str	r0, [sp, #12]
40014ef4:	e3a00000 	mov	r0, #0
40014ef8:	e58d0010 	str	r0, [sp, #16]
40014efc:	e1a0100d 	mov	r1, sp
40014f00:	e1a00004 	mov	r0, r4
40014f04:	ebffffcb 	bl	40014e38 <CyU3PDmaSocketUpdateStatus>
40014f08:	e1a0100d 	mov	r1, sp
40014f0c:	e1a00004 	mov	r0, r4
40014f10:	ebfffee2 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40014f14:	e3a00000 	mov	r0, #0
40014f18:	e58d0010 	str	r0, [sp, #16]
40014f1c:	ea000004 	b	40014f34 <CyU3PDmaUpdateSocketSuspendOption+0x88>
40014f20:	e59d000c 	ldr	r0, [sp, #12]
40014f24:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014f28:	e58d000c 	str	r0, [sp, #12]
40014f2c:	e3a00e12 	mov	r0, #288	; 0x120
40014f30:	e58d0010 	str	r0, [sp, #16]
40014f34:	e59d000c 	ldr	r0, [sp, #12]
40014f38:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
40014f3c:	e58d000c 	str	r0, [sp, #12]
40014f40:	e59d0014 	ldr	r0, [sp, #20]
40014f44:	e3c00e12 	bic	r0, r0, #288	; 0x120
40014f48:	e58d0014 	str	r0, [sp, #20]
40014f4c:	e3560000 	cmp	r6, #0
40014f50:	0a000006 	beq	40014f70 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
40014f54:	e3560001 	cmp	r6, #1
40014f58:	0a000006 	beq	40014f78 <CyU3PDmaUpdateSocketSuspendOption+0xcc>
40014f5c:	e3560002 	cmp	r6, #2
40014f60:	0a00000e 	beq	40014fa0 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
40014f64:	e3560003 	cmp	r6, #3
40014f68:	1a000020 	bne	40014ff0 <CyU3PDmaUpdateSocketSuspendOption+0x144>
40014f6c:	ea000015 	b	40014fc8 <CyU3PDmaUpdateSocketSuspendOption+0x11c>
40014f70:	e1a00000 	nop			; (mov r0, r0)
40014f74:	ea00001f 	b	40014ff8 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014f78:	e1a00000 	nop			; (mov r0, r0)
40014f7c:	e59d000c 	ldr	r0, [sp, #12]
40014f80:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40014f84:	e58d000c 	str	r0, [sp, #12]
40014f88:	e3550000 	cmp	r5, #0
40014f8c:	1a000002 	bne	40014f9c <CyU3PDmaUpdateSocketSuspendOption+0xf0>
40014f90:	e59d0014 	ldr	r0, [sp, #20]
40014f94:	e3800020 	orr	r0, r0, #32
40014f98:	e58d0014 	str	r0, [sp, #20]
40014f9c:	ea000015 	b	40014ff8 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014fa0:	e1a00000 	nop			; (mov r0, r0)
40014fa4:	e3550000 	cmp	r5, #0
40014fa8:	1a000005 	bne	40014fc4 <CyU3PDmaUpdateSocketSuspendOption+0x118>
40014fac:	e59d000c 	ldr	r0, [sp, #12]
40014fb0:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014fb4:	e58d000c 	str	r0, [sp, #12]
40014fb8:	e59d0014 	ldr	r0, [sp, #20]
40014fbc:	e3800020 	orr	r0, r0, #32
40014fc0:	e58d0014 	str	r0, [sp, #20]
40014fc4:	ea00000b 	b	40014ff8 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014fc8:	e1a00000 	nop			; (mov r0, r0)
40014fcc:	e59d000c 	ldr	r0, [sp, #12]
40014fd0:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
40014fd4:	e58d000c 	str	r0, [sp, #12]
40014fd8:	e3550000 	cmp	r5, #0
40014fdc:	1a000002 	bne	40014fec <CyU3PDmaUpdateSocketSuspendOption+0x140>
40014fe0:	e59d0014 	ldr	r0, [sp, #20]
40014fe4:	e3800c01 	orr	r0, r0, #256	; 0x100
40014fe8:	e58d0014 	str	r0, [sp, #20]
40014fec:	ea000001 	b	40014ff8 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014ff0:	e1a00000 	nop			; (mov r0, r0)
40014ff4:	e1a00000 	nop			; (mov r0, r0)
40014ff8:	e1a00000 	nop			; (mov r0, r0)
40014ffc:	e1a0100d 	mov	r1, sp
40015000:	e1a00004 	mov	r0, r4
40015004:	ebffff8b 	bl	40014e38 <CyU3PDmaSocketUpdateStatus>
40015008:	e28dd018 	add	sp, sp, #24
4001500c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

40015010 <CyU3PDmaChannelAcquireLock>:
40015010:	e92d4070 	push	{r4, r5, r6, lr}
40015014:	e1a04000 	mov	r4, r0
40015018:	e1a05001 	mov	r5, r1
4001501c:	e3540000 	cmp	r4, #0
40015020:	1a000001 	bne	4001502c <CyU3PDmaChannelAcquireLock+0x1c>
40015024:	e3a00041 	mov	r0, #65	; 0x41
40015028:	e8bd8070 	pop	{r4, r5, r6, pc}
4001502c:	e5940000 	ldr	r0, [r4]
40015030:	e3500000 	cmp	r0, #0
40015034:	1a000001 	bne	40015040 <CyU3PDmaChannelAcquireLock+0x30>
40015038:	e3a00044 	mov	r0, #68	; 0x44
4001503c:	eafffff9 	b	40015028 <CyU3PDmaChannelAcquireLock+0x18>
40015040:	e1a01005 	mov	r1, r5
40015044:	e284003c 	add	r0, r4, #60	; 0x3c
40015048:	ebffd3c5 	bl	40009f64 <_txe_mutex_get>
4001504c:	e3500000 	cmp	r0, #0
40015050:	0a000001 	beq	4001505c <CyU3PDmaChannelAcquireLock+0x4c>
40015054:	e3a0001d 	mov	r0, #29
40015058:	eafffff2 	b	40015028 <CyU3PDmaChannelAcquireLock+0x18>
4001505c:	e3a00000 	mov	r0, #0
40015060:	eafffff0 	b	40015028 <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

40015064 <CyU3PDmaChannelCacheControl>:
40015064:	e92d4070 	push	{r4, r5, r6, lr}
40015068:	e1a04000 	mov	r4, r0
4001506c:	e1a05001 	mov	r5, r1
40015070:	e3e01000 	mvn	r1, #0
40015074:	e1a00004 	mov	r0, r4
40015078:	ebffffe4 	bl	40015010 <CyU3PDmaChannelAcquireLock>
4001507c:	e1a06000 	mov	r6, r0
40015080:	e3560000 	cmp	r6, #0
40015084:	0a000001 	beq	40015090 <CyU3PDmaChannelCacheControl+0x2c>
40015088:	e1a00006 	mov	r0, r6
4001508c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015090:	e5940000 	ldr	r0, [r4]
40015094:	e3500001 	cmp	r0, #1
40015098:	1a000001 	bne	400150a4 <CyU3PDmaChannelCacheControl+0x40>
4001509c:	e5845038 	str	r5, [r4, #56]	; 0x38
400150a0:	ea000000 	b	400150a8 <CyU3PDmaChannelCacheControl+0x44>
400150a4:	e3a06047 	mov	r6, #71	; 0x47
400150a8:	e284003c 	add	r0, r4, #60	; 0x3c
400150ac:	ebffd3e1 	bl	4000a038 <_txe_mutex_put>
400150b0:	e1a00006 	mov	r0, r6
400150b4:	eafffff4 	b	4001508c <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

400150b8 <CyU3PDmaChannelCommitBuffer>:
400150b8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400150bc:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400150c0:	e1a04000 	mov	r4, r0
400150c4:	e1a05001 	mov	r5, r1
400150c8:	e1a06002 	mov	r6, r2
400150cc:	e3e01000 	mvn	r1, #0
400150d0:	e1a00004 	mov	r0, r4
400150d4:	ebffffcd 	bl	40015010 <CyU3PDmaChannelAcquireLock>
400150d8:	e1a09000 	mov	r9, r0
400150dc:	e3590000 	cmp	r9, #0
400150e0:	0a000002 	beq	400150f0 <CyU3PDmaChannelCommitBuffer+0x38>
400150e4:	e1a00009 	mov	r0, r9
400150e8:	e28dd03c 	add	sp, sp, #60	; 0x3c
400150ec:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400150f0:	e1d400b6 	ldrh	r0, [r4, #6]
400150f4:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400150f8:	e0400001 	sub	r0, r0, r1
400150fc:	e1500005 	cmp	r0, r5
40015100:	aa000000 	bge	40015108 <CyU3PDmaChannelCommitBuffer+0x50>
40015104:	e3a09040 	mov	r9, #64	; 0x40
40015108:	e5940000 	ldr	r0, [r4]
4001510c:	e3500002 	cmp	r0, #2
40015110:	0a000000 	beq	40015118 <CyU3PDmaChannelCommitBuffer+0x60>
40015114:	e3a09042 	mov	r9, #66	; 0x42
40015118:	e1d400b4 	ldrh	r0, [r4, #4]
4001511c:	e3500003 	cmp	r0, #3
40015120:	1a000000 	bne	40015128 <CyU3PDmaChannelCommitBuffer+0x70>
40015124:	e3a09046 	mov	r9, #70	; 0x46
40015128:	e3590000 	cmp	r9, #0
4001512c:	0a000003 	beq	40015140 <CyU3PDmaChannelCommitBuffer+0x88>
40015130:	e284003c 	add	r0, r4, #60	; 0x3c
40015134:	ebffd3bf 	bl	4000a038 <_txe_mutex_put>
40015138:	e1a00009 	mov	r0, r9
4001513c:	eaffffe9 	b	400150e8 <CyU3PDmaChannelCommitBuffer+0x30>
40015140:	e1d400b4 	ldrh	r0, [r4, #4]
40015144:	e20070ff 	and	r7, r0, #255	; 0xff
40015148:	e3570002 	cmp	r7, #2
4001514c:	1a000037 	bne	40015230 <CyU3PDmaChannelCommitBuffer+0x178>
40015150:	e1d401b6 	ldrh	r0, [r4, #22]
40015154:	e28d1014 	add	r1, sp, #20
40015158:	eb0034ae 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001515c:	e1d401b8 	ldrh	r0, [r4, #24]
40015160:	e28d1004 	add	r1, sp, #4
40015164:	eb0034ab 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015168:	e59d0020 	ldr	r0, [sp, #32]
4001516c:	e3100008 	tst	r0, #8
40015170:	1a000000 	bne	40015178 <CyU3PDmaChannelCommitBuffer+0xc0>
40015174:	e3a09047 	mov	r9, #71	; 0x47
40015178:	e59d0010 	ldr	r0, [sp, #16]
4001517c:	e3100008 	tst	r0, #8
40015180:	0a000000 	beq	40015188 <CyU3PDmaChannelCommitBuffer+0xd0>
40015184:	e3a09047 	mov	r9, #71	; 0x47
40015188:	e3590000 	cmp	r9, #0
4001518c:	1a000080 	bne	40015394 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015190:	e59d0010 	ldr	r0, [sp, #16]
40015194:	e59f1208 	ldr	r1, [pc, #520]	; 400153a4 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015198:	e0000001 	and	r0, r0, r1
4001519c:	e58d0010 	str	r0, [sp, #16]
400151a0:	e59d0010 	ldr	r0, [sp, #16]
400151a4:	e1800805 	orr	r0, r0, r5, lsl #16
400151a8:	e58d0010 	str	r0, [sp, #16]
400151ac:	e3560000 	cmp	r6, #0
400151b0:	1a000005 	bne	400151cc <CyU3PDmaChannelCommitBuffer+0x114>
400151b4:	e59d1020 	ldr	r1, [sp, #32]
400151b8:	e201100f 	and	r1, r1, #15
400151bc:	e59d0010 	ldr	r0, [sp, #16]
400151c0:	e1800001 	orr	r0, r0, r1
400151c4:	e58d0010 	str	r0, [sp, #16]
400151c8:	ea000004 	b	400151e0 <CyU3PDmaChannelCommitBuffer+0x128>
400151cc:	e206100e 	and	r1, r6, #14
400151d0:	e3811008 	orr	r1, r1, #8
400151d4:	e59d0010 	ldr	r0, [sp, #16]
400151d8:	e1800001 	orr	r0, r0, r1
400151dc:	e58d0010 	str	r0, [sp, #16]
400151e0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400151e4:	e3500000 	cmp	r0, #0
400151e8:	0a000004 	beq	40015200 <CyU3PDmaChannelCommitBuffer+0x148>
400151ec:	e59d2010 	ldr	r2, [sp, #16]
400151f0:	e59f31ac 	ldr	r3, [pc, #428]	; 400153a4 <CyU3PDmaChannelCommitBuffer+0x2ec>
400151f4:	e0021003 	and	r1, r2, r3
400151f8:	e59d0004 	ldr	r0, [sp, #4]
400151fc:	ebfff34a 	bl	40011f2c <CyU3PSysCleanDRegion>
40015200:	e1d401b8 	ldrh	r0, [r4, #24]
40015204:	e28d1004 	add	r1, sp, #4
40015208:	eb00349d 	bl	40022484 <CyU3PDmaDscrSetConfig>
4001520c:	e1d411b8 	ldrh	r1, [r4, #24]
40015210:	e1d401b2 	ldrh	r0, [r4, #18]
40015214:	e3a02001 	mov	r2, #1
40015218:	ebfffeb8 	bl	40014d00 <CyU3PDmaSocketSendEvent>
4001521c:	e59d001c 	ldr	r0, [sp, #28]
40015220:	e1c401b6 	strh	r0, [r4, #22]
40015224:	e59d000c 	ldr	r0, [sp, #12]
40015228:	e1c401b8 	strh	r0, [r4, #24]
4001522c:	ea000058 	b	40015394 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015230:	e3570004 	cmp	r7, #4
40015234:	1a000027 	bne	400152d8 <CyU3PDmaChannelCommitBuffer+0x220>
40015238:	e1d401b8 	ldrh	r0, [r4, #24]
4001523c:	e28d1004 	add	r1, sp, #4
40015240:	eb003474 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015244:	e59d0010 	ldr	r0, [sp, #16]
40015248:	e3100008 	tst	r0, #8
4001524c:	0a000000 	beq	40015254 <CyU3PDmaChannelCommitBuffer+0x19c>
40015250:	e3a09047 	mov	r9, #71	; 0x47
40015254:	e3590000 	cmp	r9, #0
40015258:	1a00004d 	bne	40015394 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001525c:	e59d0010 	ldr	r0, [sp, #16]
40015260:	e1a00800 	lsl	r0, r0, #16
40015264:	e1a00820 	lsr	r0, r0, #16
40015268:	e58d0010 	str	r0, [sp, #16]
4001526c:	e3a01008 	mov	r1, #8
40015270:	e1811805 	orr	r1, r1, r5, lsl #16
40015274:	e59d0010 	ldr	r0, [sp, #16]
40015278:	e1800001 	orr	r0, r0, r1
4001527c:	e58d0010 	str	r0, [sp, #16]
40015280:	e206100e 	and	r1, r6, #14
40015284:	e59d0010 	ldr	r0, [sp, #16]
40015288:	e1800001 	orr	r0, r0, r1
4001528c:	e58d0010 	str	r0, [sp, #16]
40015290:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015294:	e3500000 	cmp	r0, #0
40015298:	0a000004 	beq	400152b0 <CyU3PDmaChannelCommitBuffer+0x1f8>
4001529c:	e59d2010 	ldr	r2, [sp, #16]
400152a0:	e59f30fc 	ldr	r3, [pc, #252]	; 400153a4 <CyU3PDmaChannelCommitBuffer+0x2ec>
400152a4:	e0021003 	and	r1, r2, r3
400152a8:	e59d0004 	ldr	r0, [sp, #4]
400152ac:	ebfff31e 	bl	40011f2c <CyU3PSysCleanDRegion>
400152b0:	e1d401b8 	ldrh	r0, [r4, #24]
400152b4:	e28d1004 	add	r1, sp, #4
400152b8:	eb003471 	bl	40022484 <CyU3PDmaDscrSetConfig>
400152bc:	e1d411b8 	ldrh	r1, [r4, #24]
400152c0:	e1d401b2 	ldrh	r0, [r4, #18]
400152c4:	e3a02001 	mov	r2, #1
400152c8:	ebfffe8c 	bl	40014d00 <CyU3PDmaSocketSendEvent>
400152cc:	e59d000c 	ldr	r0, [sp, #12]
400152d0:	e1c401b8 	strh	r0, [r4, #24]
400152d4:	ea00002e 	b	40015394 <CyU3PDmaChannelCommitBuffer+0x2dc>
400152d8:	e1d401b2 	ldrh	r0, [r4, #18]
400152dc:	e28d1024 	add	r1, sp, #36	; 0x24
400152e0:	ebfffdee 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
400152e4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400152e8:	e3100702 	tst	r0, #524288	; 0x80000
400152ec:	0a000027 	beq	40015390 <CyU3PDmaChannelCommitBuffer+0x2d8>
400152f0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400152f4:	e1a08800 	lsl	r8, r0, #16
400152f8:	e1a08828 	lsr	r8, r8, #16
400152fc:	e28d1004 	add	r1, sp, #4
40015300:	e1a00008 	mov	r0, r8
40015304:	eb003443 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015308:	e59d0010 	ldr	r0, [sp, #16]
4001530c:	e3100008 	tst	r0, #8
40015310:	0a00001c 	beq	40015388 <CyU3PDmaChannelCommitBuffer+0x2d0>
40015314:	e59d0010 	ldr	r0, [sp, #16]
40015318:	e1a00800 	lsl	r0, r0, #16
4001531c:	e1a00820 	lsr	r0, r0, #16
40015320:	e58d0010 	str	r0, [sp, #16]
40015324:	e59d0010 	ldr	r0, [sp, #16]
40015328:	e1800805 	orr	r0, r0, r5, lsl #16
4001532c:	e58d0010 	str	r0, [sp, #16]
40015330:	e3560000 	cmp	r6, #0
40015334:	0a000007 	beq	40015358 <CyU3PDmaChannelCommitBuffer+0x2a0>
40015338:	e59d0010 	ldr	r0, [sp, #16]
4001533c:	e3c0000f 	bic	r0, r0, #15
40015340:	e58d0010 	str	r0, [sp, #16]
40015344:	e206100e 	and	r1, r6, #14
40015348:	e3811008 	orr	r1, r1, #8
4001534c:	e59d0010 	ldr	r0, [sp, #16]
40015350:	e1800001 	orr	r0, r0, r1
40015354:	e58d0010 	str	r0, [sp, #16]
40015358:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001535c:	e3500000 	cmp	r0, #0
40015360:	0a000004 	beq	40015378 <CyU3PDmaChannelCommitBuffer+0x2c0>
40015364:	e59d2010 	ldr	r2, [sp, #16]
40015368:	e59f3034 	ldr	r3, [pc, #52]	; 400153a4 <CyU3PDmaChannelCommitBuffer+0x2ec>
4001536c:	e0021003 	and	r1, r2, r3
40015370:	e59d0004 	ldr	r0, [sp, #4]
40015374:	ebfff2ec 	bl	40011f2c <CyU3PSysCleanDRegion>
40015378:	e28d1004 	add	r1, sp, #4
4001537c:	e1a00008 	mov	r0, r8
40015380:	eb00343f 	bl	40022484 <CyU3PDmaDscrSetConfig>
40015384:	ea000002 	b	40015394 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015388:	e3a09047 	mov	r9, #71	; 0x47
4001538c:	ea000000 	b	40015394 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015390:	e3a09047 	mov	r9, #71	; 0x47
40015394:	e284003c 	add	r0, r4, #60	; 0x3c
40015398:	ebffd326 	bl	4000a038 <_txe_mutex_put>
4001539c:	e1a00009 	mov	r0, r9
400153a0:	eaffff50 	b	400150e8 <CyU3PDmaChannelCommitBuffer+0x30>
400153a4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

400153a8 <CyU3PDmaChannelConfigure_TypeAuto>:
400153a8:	e92d4070 	push	{r4, r5, r6, lr}
400153ac:	e1a05000 	mov	r5, r0
400153b0:	e1d501b2 	ldrh	r0, [r5, #18]
400153b4:	e3806901 	orr	r6, r0, #16384	; 0x4000
400153b8:	e1d501b0 	ldrh	r0, [r5, #16]
400153bc:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400153c0:	e1810800 	orr	r0, r1, r0, lsl #16
400153c4:	e1866000 	orr	r6, r6, r0
400153c8:	e1d500b4 	ldrh	r0, [r5, #4]
400153cc:	e3500001 	cmp	r0, #1
400153d0:	1a000000 	bne	400153d8 <CyU3PDmaChannelConfigure_TypeAuto+0x30>
400153d4:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
400153d8:	e1d520b6 	ldrh	r2, [r5, #6]
400153dc:	e1d510b8 	ldrh	r1, [r5, #8]
400153e0:	e1a03006 	mov	r3, r6
400153e4:	e285000c 	add	r0, r5, #12
400153e8:	eb00331b 	bl	4002205c <CyU3PDmaDscrChainCreate>
400153ec:	e1a04000 	mov	r4, r0
400153f0:	e3540000 	cmp	r4, #0
400153f4:	0a000001 	beq	40015400 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
400153f8:	e1a00004 	mov	r0, r4
400153fc:	e8bd8070 	pop	{r4, r5, r6, pc}
40015400:	e1d500bc 	ldrh	r0, [r5, #12]
40015404:	e1c501b6 	strh	r0, [r5, #22]
40015408:	e1c501ba 	strh	r0, [r5, #26]
4001540c:	e1c501be 	strh	r0, [r5, #30]
40015410:	e1d500be 	ldrh	r0, [r5, #14]
40015414:	e1c501b8 	strh	r0, [r5, #24]
40015418:	e1c501bc 	strh	r0, [r5, #28]
4001541c:	e1c502b0 	strh	r0, [r5, #32]
40015420:	e2850014 	add	r0, r5, #20
40015424:	eb003383 	bl	40022238 <CyU3PDmaDscrGet>
40015428:	e1a00005 	mov	r0, r5
4001542c:	eb0006b7 	bl	40016f10 <CyU3PDmaConfigureSockets_TypeAuto>
40015430:	e3a00000 	mov	r0, #0
40015434:	eafffff0 	b	400153fc <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

40015438 <CyU3PDmaChannelConfigure_TypeManual>:
40015438:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001543c:	e24dd024 	sub	sp, sp, #36	; 0x24
40015440:	e1a04000 	mov	r4, r0
40015444:	e284700c 	add	r7, r4, #12
40015448:	e3a06cff 	mov	r6, #65280	; 0xff00
4001544c:	e1d401b0 	ldrh	r0, [r4, #16]
40015450:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015454:	e1810800 	orr	r0, r1, r0, lsl #16
40015458:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001545c:	e1866000 	orr	r6, r6, r0
40015460:	e1d400b4 	ldrh	r0, [r4, #4]
40015464:	e3500003 	cmp	r0, #3
40015468:	1a000002 	bne	40015478 <CyU3PDmaChannelConfigure_TypeManual+0x40>
4001546c:	e3a00c3f 	mov	r0, #16128	; 0x3f00
40015470:	e1c401b2 	strh	r0, [r4, #18]
40015474:	ea000009 	b	400154a0 <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015478:	e1d400b4 	ldrh	r0, [r4, #4]
4001547c:	e3500004 	cmp	r0, #4
40015480:	1a000006 	bne	400154a0 <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015484:	e59f020c 	ldr	r0, [pc, #524]	; 40015698 <CyU3PDmaChannelConfigure_TypeManual+0x260>
40015488:	e1c401b0 	strh	r0, [r4, #16]
4001548c:	e284700e 	add	r7, r4, #14
40015490:	e1d401b2 	ldrh	r0, [r4, #18]
40015494:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015498:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
4001549c:	e3866801 	orr	r6, r6, #65536	; 0x10000
400154a0:	e1d400b8 	ldrh	r0, [r4, #8]
400154a4:	e3500000 	cmp	r0, #0
400154a8:	0a00006b 	beq	4001565c <CyU3PDmaChannelConfigure_TypeManual+0x224>
400154ac:	e1d420b6 	ldrh	r2, [r4, #6]
400154b0:	e1d410b8 	ldrh	r1, [r4, #8]
400154b4:	e1a03006 	mov	r3, r6
400154b8:	e1a00007 	mov	r0, r7
400154bc:	eb0032e6 	bl	4002205c <CyU3PDmaDscrChainCreate>
400154c0:	e1a05000 	mov	r5, r0
400154c4:	e3550000 	cmp	r5, #0
400154c8:	0a000002 	beq	400154d8 <CyU3PDmaChannelConfigure_TypeManual+0xa0>
400154cc:	e1a00005 	mov	r0, r5
400154d0:	e28dd024 	add	sp, sp, #36	; 0x24
400154d4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400154d8:	e1d400b4 	ldrh	r0, [r4, #4]
400154dc:	e3500002 	cmp	r0, #2
400154e0:	1a000012 	bne	40015530 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
400154e4:	e1d401b2 	ldrh	r0, [r4, #18]
400154e8:	e3806903 	orr	r6, r0, #49152	; 0xc000
400154ec:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400154f0:	e3866801 	orr	r6, r6, #65536	; 0x10000
400154f4:	e1d410b8 	ldrh	r1, [r4, #8]
400154f8:	e1a03006 	mov	r3, r6
400154fc:	e3a02000 	mov	r2, #0
40015500:	e284000e 	add	r0, r4, #14
40015504:	eb0032d4 	bl	4002205c <CyU3PDmaDscrChainCreate>
40015508:	e1a05000 	mov	r5, r0
4001550c:	e3550000 	cmp	r5, #0
40015510:	0a000006 	beq	40015530 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015514:	e1d410b8 	ldrh	r1, [r4, #8]
40015518:	e1d700b0 	ldrh	r0, [r7]
4001551c:	e3a03001 	mov	r3, #1
40015520:	e1a02003 	mov	r2, r3
40015524:	eb003320 	bl	400221ac <CyU3PDmaDscrChainDestroy>
40015528:	e1a00005 	mov	r0, r5
4001552c:	eaffffe7 	b	400154d0 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015530:	e1d400bc 	ldrh	r0, [r4, #12]
40015534:	e1c401b6 	strh	r0, [r4, #22]
40015538:	e1c401ba 	strh	r0, [r4, #26]
4001553c:	e1c401be 	strh	r0, [r4, #30]
40015540:	e1d400be 	ldrh	r0, [r4, #14]
40015544:	e1c401b8 	strh	r0, [r4, #24]
40015548:	e1c401bc 	strh	r0, [r4, #28]
4001554c:	e1c402b0 	strh	r0, [r4, #32]
40015550:	e3a08000 	mov	r8, #0
40015554:	e1d790b0 	ldrh	r9, [r7]
40015558:	ea00003b 	b	4001564c <CyU3PDmaChannelConfigure_TypeManual+0x214>
4001555c:	e28d1014 	add	r1, sp, #20
40015560:	e1a00009 	mov	r0, r9
40015564:	eb0033ab 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015568:	e1d400b4 	ldrh	r0, [r4, #4]
4001556c:	e3500004 	cmp	r0, #4
40015570:	1a00000b 	bne	400155a4 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
40015574:	e59d0014 	ldr	r0, [sp, #20]
40015578:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
4001557c:	e0800001 	add	r0, r0, r1
40015580:	e58d0014 	str	r0, [sp, #20]
40015584:	e1d400b6 	ldrh	r0, [r4, #6]
40015588:	e280000f 	add	r0, r0, #15
4001558c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015590:	e0400001 	sub	r0, r0, r1
40015594:	e59f1100 	ldr	r1, [pc, #256]	; 4001569c <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015598:	e0000001 	and	r0, r0, r1
4001559c:	e58d0020 	str	r0, [sp, #32]
400155a0:	ea000021 	b	4001562c <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
400155a4:	e1d400b4 	ldrh	r0, [r4, #4]
400155a8:	e3500002 	cmp	r0, #2
400155ac:	1a000012 	bne	400155fc <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
400155b0:	e1d401b8 	ldrh	r0, [r4, #24]
400155b4:	e28d1004 	add	r1, sp, #4
400155b8:	eb003396 	bl	40022418 <CyU3PDmaDscrGetConfig>
400155bc:	e59d0014 	ldr	r0, [sp, #20]
400155c0:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155c4:	e0800001 	add	r0, r0, r1
400155c8:	e58d0004 	str	r0, [sp, #4]
400155cc:	e1d400b6 	ldrh	r0, [r4, #6]
400155d0:	e280000f 	add	r0, r0, #15
400155d4:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155d8:	e0400001 	sub	r0, r0, r1
400155dc:	e59f10b8 	ldr	r1, [pc, #184]	; 4001569c <CyU3PDmaChannelConfigure_TypeManual+0x264>
400155e0:	e0000001 	and	r0, r0, r1
400155e4:	e58d0010 	str	r0, [sp, #16]
400155e8:	e1d401b8 	ldrh	r0, [r4, #24]
400155ec:	e28d1004 	add	r1, sp, #4
400155f0:	eb0033a3 	bl	40022484 <CyU3PDmaDscrSetConfig>
400155f4:	e59d000c 	ldr	r0, [sp, #12]
400155f8:	e1c401b8 	strh	r0, [r4, #24]
400155fc:	e59d0014 	ldr	r0, [sp, #20]
40015600:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015604:	e0800001 	add	r0, r0, r1
40015608:	e58d0014 	str	r0, [sp, #20]
4001560c:	e1d400b6 	ldrh	r0, [r4, #6]
40015610:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015614:	e0400001 	sub	r0, r0, r1
40015618:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
4001561c:	e0400001 	sub	r0, r0, r1
40015620:	e59f1074 	ldr	r1, [pc, #116]	; 4001569c <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015624:	e0000001 	and	r0, r0, r1
40015628:	e58d0020 	str	r0, [sp, #32]
4001562c:	e28d1014 	add	r1, sp, #20
40015630:	e1a00009 	mov	r0, r9
40015634:	eb003392 	bl	40022484 <CyU3PDmaDscrSetConfig>
40015638:	e59d001c 	ldr	r0, [sp, #28]
4001563c:	e1a09800 	lsl	r9, r0, #16
40015640:	e1a09829 	lsr	r9, r9, #16
40015644:	e2880001 	add	r0, r8, #1
40015648:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001564c:	e1d400b8 	ldrh	r0, [r4, #8]
40015650:	e1500008 	cmp	r0, r8
40015654:	caffffc0 	bgt	4001555c <CyU3PDmaChannelConfigure_TypeManual+0x124>
40015658:	ea000008 	b	40015680 <CyU3PDmaChannelConfigure_TypeManual+0x248>
4001565c:	e59f003c 	ldr	r0, [pc, #60]	; 400156a0 <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015660:	e1c400bc 	strh	r0, [r4, #12]
40015664:	e1c401b6 	strh	r0, [r4, #22]
40015668:	e1c401ba 	strh	r0, [r4, #26]
4001566c:	e1c401be 	strh	r0, [r4, #30]
40015670:	e1c400be 	strh	r0, [r4, #14]
40015674:	e1c401b8 	strh	r0, [r4, #24]
40015678:	e1c401bc 	strh	r0, [r4, #28]
4001567c:	e1c402b0 	strh	r0, [r4, #32]
40015680:	e2840014 	add	r0, r4, #20
40015684:	eb0032eb 	bl	40022238 <CyU3PDmaDscrGet>
40015688:	e1a00004 	mov	r0, r4
4001568c:	eb00065f 	bl	40017010 <CyU3PDmaConfigureSockets_TypeManual>
40015690:	e3a00000 	mov	r0, #0
40015694:	eaffff8d 	b	400154d0 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015698:	00003f01 	.word	0x00003f01
4001569c:	0000fff0 	.word	0x0000fff0
400156a0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

400156a4 <CyU3PDmaChannelCreate>:
400156a4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400156a8:	e1a04000 	mov	r4, r0
400156ac:	e1a05001 	mov	r5, r1
400156b0:	e1a06002 	mov	r6, r2
400156b4:	e3560000 	cmp	r6, #0
400156b8:	1a000001 	bne	400156c4 <CyU3PDmaChannelCreate+0x20>
400156bc:	e3a00041 	mov	r0, #65	; 0x41
400156c0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400156c4:	e3540000 	cmp	r4, #0
400156c8:	1a000001 	bne	400156d4 <CyU3PDmaChannelCreate+0x30>
400156cc:	e3a00041 	mov	r0, #65	; 0x41
400156d0:	eafffffa 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
400156d4:	eb00330f 	bl	40022318 <CyU3PDmaDscrGetFreeCount>
400156d8:	e1d610b2 	ldrh	r1, [r6, #2]
400156dc:	e2811001 	add	r1, r1, #1
400156e0:	e1500001 	cmp	r0, r1
400156e4:	da000007 	ble	40015708 <CyU3PDmaChannelCreate+0x64>
400156e8:	e3550002 	cmp	r5, #2
400156ec:	1a000007 	bne	40015710 <CyU3PDmaChannelCreate+0x6c>
400156f0:	eb003308 	bl	40022318 <CyU3PDmaDscrGetFreeCount>
400156f4:	e1d610b2 	ldrh	r1, [r6, #2]
400156f8:	e3a02001 	mov	r2, #1
400156fc:	e0821101 	add	r1, r2, r1, lsl #2
40015700:	e1500001 	cmp	r0, r1
40015704:	ca000001 	bgt	40015710 <CyU3PDmaChannelCreate+0x6c>
40015708:	e3a00010 	mov	r0, #16
4001570c:	eaffffeb 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015710:	e1d600b0 	ldrh	r0, [r6]
40015714:	e3500000 	cmp	r0, #0
40015718:	0a000003 	beq	4001572c <CyU3PDmaChannelCreate+0x88>
4001571c:	e1d600b0 	ldrh	r0, [r6]
40015720:	e59f1354 	ldr	r1, [pc, #852]	; 40015a7c <CyU3PDmaChannelCreate+0x3d8>
40015724:	e1500001 	cmp	r0, r1
40015728:	da000001 	ble	40015734 <CyU3PDmaChannelCreate+0x90>
4001572c:	e3a00040 	mov	r0, #64	; 0x40
40015730:	eaffffe2 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015734:	e3550000 	cmp	r5, #0
40015738:	0a000001 	beq	40015744 <CyU3PDmaChannelCreate+0xa0>
4001573c:	e3550001 	cmp	r5, #1
40015740:	1a000009 	bne	4001576c <CyU3PDmaChannelCreate+0xc8>
40015744:	e1d600b0 	ldrh	r0, [r6]
40015748:	e310000f 	tst	r0, #15
4001574c:	0a000001 	beq	40015758 <CyU3PDmaChannelCreate+0xb4>
40015750:	e3a00040 	mov	r0, #64	; 0x40
40015754:	eaffffd9 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015758:	e1d600b2 	ldrh	r0, [r6, #2]
4001575c:	e3500000 	cmp	r0, #0
40015760:	1a00000b 	bne	40015794 <CyU3PDmaChannelCreate+0xf0>
40015764:	e3a00040 	mov	r0, #64	; 0x40
40015768:	eaffffd4 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
4001576c:	e1d600b0 	ldrh	r0, [r6]
40015770:	e1d610ba 	ldrh	r1, [r6, #10]
40015774:	e0400001 	sub	r0, r0, r1
40015778:	e1d610bc 	ldrh	r1, [r6, #12]
4001577c:	e0400001 	sub	r0, r0, r1
40015780:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40015784:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40015788:	0a000001 	beq	40015794 <CyU3PDmaChannelCreate+0xf0>
4001578c:	e3a00040 	mov	r0, #64	; 0x40
40015790:	eaffffca 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015794:	e5d60010 	ldrb	r0, [r6, #16]
40015798:	e3500002 	cmp	r0, #2
4001579c:	ba000001 	blt	400157a8 <CyU3PDmaChannelCreate+0x104>
400157a0:	e3a00040 	mov	r0, #64	; 0x40
400157a4:	eaffffc5 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
400157a8:	e3550004 	cmp	r5, #4
400157ac:	0a000011 	beq	400157f8 <CyU3PDmaChannelCreate+0x154>
400157b0:	e1d600b4 	ldrh	r0, [r6, #4]
400157b4:	e3a0103f 	mov	r1, #63	; 0x3f
400157b8:	e0018440 	and	r8, r1, r0, asr #8
400157bc:	e1d600b4 	ldrh	r0, [r6, #4]
400157c0:	e20090ff 	and	r9, r0, #255	; 0xff
400157c4:	e1d600b4 	ldrh	r0, [r6, #4]
400157c8:	ebfffd14 	bl	40014c20 <CyU3PDmaSocketIsValidProducer>
400157cc:	e3500000 	cmp	r0, #0
400157d0:	1a000001 	bne	400157dc <CyU3PDmaChannelCreate+0x138>
400157d4:	e3a00040 	mov	r0, #64	; 0x40
400157d8:	eaffffb8 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
400157dc:	e59f029c 	ldr	r0, [pc, #668]	; 40015a80 <CyU3PDmaChannelCreate+0x3dc>
400157e0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400157e4:	e7900109 	ldr	r0, [r0, r9, lsl #2]
400157e8:	e3500000 	cmp	r0, #0
400157ec:	0a000007 	beq	40015810 <CyU3PDmaChannelCreate+0x16c>
400157f0:	e3a00040 	mov	r0, #64	; 0x40
400157f4:	eaffffb1 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
400157f8:	e1d600b4 	ldrh	r0, [r6, #4]
400157fc:	e59f1280 	ldr	r1, [pc, #640]	; 40015a84 <CyU3PDmaChannelCreate+0x3e0>
40015800:	e1500001 	cmp	r0, r1
40015804:	0a000001 	beq	40015810 <CyU3PDmaChannelCreate+0x16c>
40015808:	e3a00040 	mov	r0, #64	; 0x40
4001580c:	eaffffab 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015810:	e3550003 	cmp	r5, #3
40015814:	0a000011 	beq	40015860 <CyU3PDmaChannelCreate+0x1bc>
40015818:	e1d600b6 	ldrh	r0, [r6, #6]
4001581c:	e3a0103f 	mov	r1, #63	; 0x3f
40015820:	e0018440 	and	r8, r1, r0, asr #8
40015824:	e1d600b6 	ldrh	r0, [r6, #6]
40015828:	e20090ff 	and	r9, r0, #255	; 0xff
4001582c:	e1d600b6 	ldrh	r0, [r6, #6]
40015830:	ebfffcc2 	bl	40014b40 <CyU3PDmaSocketIsValidConsumer>
40015834:	e3500000 	cmp	r0, #0
40015838:	1a000001 	bne	40015844 <CyU3PDmaChannelCreate+0x1a0>
4001583c:	e3a00040 	mov	r0, #64	; 0x40
40015840:	eaffff9e 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015844:	e59f0234 	ldr	r0, [pc, #564]	; 40015a80 <CyU3PDmaChannelCreate+0x3dc>
40015848:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001584c:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015850:	e3500000 	cmp	r0, #0
40015854:	0a000006 	beq	40015874 <CyU3PDmaChannelCreate+0x1d0>
40015858:	e3a00040 	mov	r0, #64	; 0x40
4001585c:	eaffff97 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015860:	e1d600b6 	ldrh	r0, [r6, #6]
40015864:	e3500c3f 	cmp	r0, #16128	; 0x3f00
40015868:	0a000001 	beq	40015874 <CyU3PDmaChannelCreate+0x1d0>
4001586c:	e3a00040 	mov	r0, #64	; 0x40
40015870:	eaffff92 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015874:	e1d600b8 	ldrh	r0, [r6, #8]
40015878:	e3500000 	cmp	r0, #0
4001587c:	0a000008 	beq	400158a4 <CyU3PDmaChannelCreate+0x200>
40015880:	e1d600b8 	ldrh	r0, [r6, #8]
40015884:	e1d610b2 	ldrh	r1, [r6, #2]
40015888:	e1500001 	cmp	r0, r1
4001588c:	aa000002 	bge	4001589c <CyU3PDmaChannelCreate+0x1f8>
40015890:	e1d600b2 	ldrh	r0, [r6, #2]
40015894:	e350001f 	cmp	r0, #31
40015898:	da000001 	ble	400158a4 <CyU3PDmaChannelCreate+0x200>
4001589c:	e3a00040 	mov	r0, #64	; 0x40
400158a0:	eaffff86 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
400158a4:	e3550004 	cmp	r5, #4
400158a8:	0a000007 	beq	400158cc <CyU3PDmaChannelCreate+0x228>
400158ac:	e1d600b4 	ldrh	r0, [r6, #4]
400158b0:	e3a0103f 	mov	r1, #63	; 0x3f
400158b4:	e0018440 	and	r8, r1, r0, asr #8
400158b8:	e1d600b4 	ldrh	r0, [r6, #4]
400158bc:	e20090ff 	and	r9, r0, #255	; 0xff
400158c0:	e59f01b8 	ldr	r0, [pc, #440]	; 40015a80 <CyU3PDmaChannelCreate+0x3dc>
400158c4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400158c8:	e7804109 	str	r4, [r0, r9, lsl #2]
400158cc:	e3550003 	cmp	r5, #3
400158d0:	0a000007 	beq	400158f4 <CyU3PDmaChannelCreate+0x250>
400158d4:	e1d600b6 	ldrh	r0, [r6, #6]
400158d8:	e3a0103f 	mov	r1, #63	; 0x3f
400158dc:	e0018440 	and	r8, r1, r0, asr #8
400158e0:	e1d600b6 	ldrh	r0, [r6, #6]
400158e4:	e20090ff 	and	r9, r0, #255	; 0xff
400158e8:	e59f0190 	ldr	r0, [pc, #400]	; 40015a80 <CyU3PDmaChannelCreate+0x3dc>
400158ec:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400158f0:	e7804109 	str	r4, [r0, r9, lsl #2]
400158f4:	e1c450b4 	strh	r5, [r4, #4]
400158f8:	e1d600b0 	ldrh	r0, [r6]
400158fc:	e1c400b6 	strh	r0, [r4, #6]
40015900:	e1d600b2 	ldrh	r0, [r6, #2]
40015904:	e1c400b8 	strh	r0, [r4, #8]
40015908:	e1d600b8 	ldrh	r0, [r6, #8]
4001590c:	e1c400ba 	strh	r0, [r4, #10]
40015910:	e1d600b4 	ldrh	r0, [r6, #4]
40015914:	e1c401b0 	strh	r0, [r4, #16]
40015918:	e1d600b6 	ldrh	r0, [r6, #6]
4001591c:	e1c401b2 	strh	r0, [r4, #18]
40015920:	e1d600ba 	ldrh	r0, [r6, #10]
40015924:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015928:	e1d600bc 	ldrh	r0, [r6, #12]
4001592c:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015930:	e1d600be 	ldrh	r0, [r6, #14]
40015934:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015938:	e5d60010 	ldrb	r0, [r6, #16]
4001593c:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015940:	e5960014 	ldr	r0, [r6, #20]
40015944:	e5840030 	str	r0, [r4, #48]	; 0x30
40015948:	e3a00000 	mov	r0, #0
4001594c:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015950:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015954:	e3a03038 	mov	r3, #56	; 0x38
40015958:	e3a02000 	mov	r2, #0
4001595c:	e1a01002 	mov	r1, r2
40015960:	e284003c 	add	r0, r4, #60	; 0x3c
40015964:	ebffd100 	bl	40009d6c <_txe_mutex_create>
40015968:	e3a02028 	mov	r2, #40	; 0x28
4001596c:	e3a01000 	mov	r1, #0
40015970:	e2840074 	add	r0, r4, #116	; 0x74
40015974:	ebffd042 	bl	40009a84 <_txe_event_flags_create>
40015978:	e5960018 	ldr	r0, [r6, #24]
4001597c:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015980:	e59f0100 	ldr	r0, [pc, #256]	; 40015a88 <CyU3PDmaChannelCreate+0x3e4>
40015984:	e5900000 	ldr	r0, [r0]
40015988:	e5840038 	str	r0, [r4, #56]	; 0x38
4001598c:	e3550005 	cmp	r5, #5
40015990:	308ff105 	addcc	pc, pc, r5, lsl #2
40015994:	ea000011 	b	400159e0 <CyU3PDmaChannelCreate+0x33c>
40015998:	ea000003 	b	400159ac <CyU3PDmaChannelCreate+0x308>
4001599c:	ea000004 	b	400159b4 <CyU3PDmaChannelCreate+0x310>
400159a0:	ea00000a 	b	400159d0 <CyU3PDmaChannelCreate+0x32c>
400159a4:	ea000006 	b	400159c4 <CyU3PDmaChannelCreate+0x320>
400159a8:	ea000007 	b	400159cc <CyU3PDmaChannelCreate+0x328>
400159ac:	e1a00000 	nop			; (mov r0, r0)
400159b0:	e1a00000 	nop			; (mov r0, r0)
400159b4:	e1a00004 	mov	r0, r4
400159b8:	ebfffe7a 	bl	400153a8 <CyU3PDmaChannelConfigure_TypeAuto>
400159bc:	e1a07000 	mov	r7, r0
400159c0:	ea000009 	b	400159ec <CyU3PDmaChannelCreate+0x348>
400159c4:	e1a00000 	nop			; (mov r0, r0)
400159c8:	e1a00000 	nop			; (mov r0, r0)
400159cc:	e1a00000 	nop			; (mov r0, r0)
400159d0:	e1a00004 	mov	r0, r4
400159d4:	ebfffe97 	bl	40015438 <CyU3PDmaChannelConfigure_TypeManual>
400159d8:	e1a07000 	mov	r7, r0
400159dc:	ea000002 	b	400159ec <CyU3PDmaChannelCreate+0x348>
400159e0:	e1a00000 	nop			; (mov r0, r0)
400159e4:	e3a07040 	mov	r7, #64	; 0x40
400159e8:	e1a00000 	nop			; (mov r0, r0)
400159ec:	e1a00000 	nop			; (mov r0, r0)
400159f0:	e3570000 	cmp	r7, #0
400159f4:	1a000002 	bne	40015a04 <CyU3PDmaChannelCreate+0x360>
400159f8:	e3a00001 	mov	r0, #1
400159fc:	e5840000 	str	r0, [r4]
40015a00:	ea00001b 	b	40015a74 <CyU3PDmaChannelCreate+0x3d0>
40015a04:	e284003c 	add	r0, r4, #60	; 0x3c
40015a08:	ebffd135 	bl	40009ee4 <_txe_mutex_delete>
40015a0c:	e2840074 	add	r0, r4, #116	; 0x74
40015a10:	ebffd06b 	bl	40009bc4 <_txe_event_flags_delete>
40015a14:	e3550004 	cmp	r5, #4
40015a18:	0a000008 	beq	40015a40 <CyU3PDmaChannelCreate+0x39c>
40015a1c:	e1d600b4 	ldrh	r0, [r6, #4]
40015a20:	e3a0103f 	mov	r1, #63	; 0x3f
40015a24:	e0018440 	and	r8, r1, r0, asr #8
40015a28:	e1d600b4 	ldrh	r0, [r6, #4]
40015a2c:	e20090ff 	and	r9, r0, #255	; 0xff
40015a30:	e3a00000 	mov	r0, #0
40015a34:	e59f1044 	ldr	r1, [pc, #68]	; 40015a80 <CyU3PDmaChannelCreate+0x3dc>
40015a38:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015a3c:	e7810109 	str	r0, [r1, r9, lsl #2]
40015a40:	e3550003 	cmp	r5, #3
40015a44:	0a000008 	beq	40015a6c <CyU3PDmaChannelCreate+0x3c8>
40015a48:	e1d600b6 	ldrh	r0, [r6, #6]
40015a4c:	e3a0103f 	mov	r1, #63	; 0x3f
40015a50:	e0018440 	and	r8, r1, r0, asr #8
40015a54:	e1d600b6 	ldrh	r0, [r6, #6]
40015a58:	e20090ff 	and	r9, r0, #255	; 0xff
40015a5c:	e3a00000 	mov	r0, #0
40015a60:	e59f1018 	ldr	r1, [pc, #24]	; 40015a80 <CyU3PDmaChannelCreate+0x3dc>
40015a64:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015a68:	e7810109 	str	r0, [r1, r9, lsl #2]
40015a6c:	e3a00000 	mov	r0, #0
40015a70:	e5840000 	str	r0, [r4]
40015a74:	e1a00007 	mov	r0, r7
40015a78:	eaffff10 	b	400156c0 <CyU3PDmaChannelCreate+0x1c>
40015a7c:	0000fff0 	.word	0x0000fff0
40015a80:	40030d00 	.word	0x40030d00
40015a84:	00003f01 	.word	0x00003f01
40015a88:	40030c64 	.word	0x40030c64

Disassembly of section i.CyU3PDmaChannelDestroy:

40015a8c <CyU3PDmaChannelDestroy>:
40015a8c:	e92d4070 	push	{r4, r5, r6, lr}
40015a90:	e1a04000 	mov	r4, r0
40015a94:	e3e01000 	mvn	r1, #0
40015a98:	e1a00004 	mov	r0, r4
40015a9c:	ebfffd5b 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40015aa0:	e1a05000 	mov	r5, r0
40015aa4:	e3550000 	cmp	r5, #0
40015aa8:	0a000001 	beq	40015ab4 <CyU3PDmaChannelDestroy+0x28>
40015aac:	e1a00005 	mov	r0, r5
40015ab0:	e8bd8070 	pop	{r4, r5, r6, pc}
40015ab4:	e1d400b4 	ldrh	r0, [r4, #4]
40015ab8:	e3500005 	cmp	r0, #5
40015abc:	308ff100 	addcc	pc, pc, r0, lsl #2
40015ac0:	ea00000f 	b	40015b04 <CyU3PDmaChannelDestroy+0x78>
40015ac4:	ea000003 	b	40015ad8 <CyU3PDmaChannelDestroy+0x4c>
40015ac8:	ea000004 	b	40015ae0 <CyU3PDmaChannelDestroy+0x54>
40015acc:	ea000009 	b	40015af8 <CyU3PDmaChannelDestroy+0x6c>
40015ad0:	ea000005 	b	40015aec <CyU3PDmaChannelDestroy+0x60>
40015ad4:	ea000006 	b	40015af4 <CyU3PDmaChannelDestroy+0x68>
40015ad8:	e1a00000 	nop			; (mov r0, r0)
40015adc:	e1a00000 	nop			; (mov r0, r0)
40015ae0:	e1a00004 	mov	r0, r4
40015ae4:	eb000014 	bl	40015b3c <CyU3PDmaChannelDestroy_TypeAuto>
40015ae8:	ea00000a 	b	40015b18 <CyU3PDmaChannelDestroy+0x8c>
40015aec:	e1a00000 	nop			; (mov r0, r0)
40015af0:	e1a00000 	nop			; (mov r0, r0)
40015af4:	e1a00000 	nop			; (mov r0, r0)
40015af8:	e1a00004 	mov	r0, r4
40015afc:	eb000043 	bl	40015c10 <CyU3PDmaChannelDestroy_TypeManual>
40015b00:	ea000004 	b	40015b18 <CyU3PDmaChannelDestroy+0x8c>
40015b04:	e1a00000 	nop			; (mov r0, r0)
40015b08:	e284003c 	add	r0, r4, #60	; 0x3c
40015b0c:	ebffd149 	bl	4000a038 <_txe_mutex_put>
40015b10:	e3a00040 	mov	r0, #64	; 0x40
40015b14:	eaffffe5 	b	40015ab0 <CyU3PDmaChannelDestroy+0x24>
40015b18:	e1a00000 	nop			; (mov r0, r0)
40015b1c:	e3a00000 	mov	r0, #0
40015b20:	e5840000 	str	r0, [r4]
40015b24:	e284003c 	add	r0, r4, #60	; 0x3c
40015b28:	ebffd0ed 	bl	40009ee4 <_txe_mutex_delete>
40015b2c:	e2840074 	add	r0, r4, #116	; 0x74
40015b30:	ebffd023 	bl	40009bc4 <_txe_event_flags_delete>
40015b34:	e3a00000 	mov	r0, #0
40015b38:	eaffffdc 	b	40015ab0 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015b3c <CyU3PDmaChannelDestroy_TypeAuto>:
40015b3c:	e92d4070 	push	{r4, r5, r6, lr}
40015b40:	e24dd018 	sub	sp, sp, #24
40015b44:	e1a04000 	mov	r4, r0
40015b48:	e1d401b0 	ldrh	r0, [r4, #16]
40015b4c:	ebfffbbb 	bl	40014a40 <CyU3PDmaSocketDisable>
40015b50:	e1d401b2 	ldrh	r0, [r4, #18]
40015b54:	ebfffbb9 	bl	40014a40 <CyU3PDmaSocketDisable>
40015b58:	e1d401b0 	ldrh	r0, [r4, #16]
40015b5c:	e1a0100d 	mov	r1, sp
40015b60:	ebfffbce 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40015b64:	e59f009c 	ldr	r0, [pc, #156]	; 40015c08 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015b68:	e58d0000 	str	r0, [sp]
40015b6c:	e1d401b0 	ldrh	r0, [r4, #16]
40015b70:	e1a0100d 	mov	r1, sp
40015b74:	ebfffc73 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40015b78:	e1d401b0 	ldrh	r0, [r4, #16]
40015b7c:	e20050ff 	and	r5, r0, #255	; 0xff
40015b80:	e1d401b0 	ldrh	r0, [r4, #16]
40015b84:	e3a0103f 	mov	r1, #63	; 0x3f
40015b88:	e0016440 	and	r6, r1, r0, asr #8
40015b8c:	e3a00000 	mov	r0, #0
40015b90:	e59f1074 	ldr	r1, [pc, #116]	; 40015c0c <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015b94:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015b98:	e7810105 	str	r0, [r1, r5, lsl #2]
40015b9c:	e1d401b2 	ldrh	r0, [r4, #18]
40015ba0:	e1a0100d 	mov	r1, sp
40015ba4:	ebfffbbd 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40015ba8:	e59f0058 	ldr	r0, [pc, #88]	; 40015c08 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015bac:	e58d0000 	str	r0, [sp]
40015bb0:	e1d401b2 	ldrh	r0, [r4, #18]
40015bb4:	e1a0100d 	mov	r1, sp
40015bb8:	ebfffc62 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40015bbc:	e1d401b2 	ldrh	r0, [r4, #18]
40015bc0:	e20050ff 	and	r5, r0, #255	; 0xff
40015bc4:	e1d401b2 	ldrh	r0, [r4, #18]
40015bc8:	e3a0103f 	mov	r1, #63	; 0x3f
40015bcc:	e0016440 	and	r6, r1, r0, asr #8
40015bd0:	e3a00000 	mov	r0, #0
40015bd4:	e59f1030 	ldr	r1, [pc, #48]	; 40015c0c <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015bd8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015bdc:	e7810105 	str	r0, [r1, r5, lsl #2]
40015be0:	e1d410b8 	ldrh	r1, [r4, #8]
40015be4:	e1d400bc 	ldrh	r0, [r4, #12]
40015be8:	e3a03001 	mov	r3, #1
40015bec:	e1a02003 	mov	r2, r3
40015bf0:	eb00316d 	bl	400221ac <CyU3PDmaDscrChainDestroy>
40015bf4:	e1d401b4 	ldrh	r0, [r4, #20]
40015bf8:	eb0031df 	bl	4002237c <CyU3PDmaDscrPut>
40015bfc:	e3a00000 	mov	r0, #0
40015c00:	e28dd018 	add	sp, sp, #24
40015c04:	e8bd8070 	pop	{r4, r5, r6, pc}
40015c08:	0000ffff 	.word	0x0000ffff
40015c0c:	40030d00 	.word	0x40030d00

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

40015c10 <CyU3PDmaChannelDestroy_TypeManual>:
40015c10:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015c14:	e24dd028 	sub	sp, sp, #40	; 0x28
40015c18:	e1a04000 	mov	r4, r0
40015c1c:	e1d400b4 	ldrh	r0, [r4, #4]
40015c20:	e3500004 	cmp	r0, #4
40015c24:	0a000012 	beq	40015c74 <CyU3PDmaChannelDestroy_TypeManual+0x64>
40015c28:	e1d401b0 	ldrh	r0, [r4, #16]
40015c2c:	ebfffb83 	bl	40014a40 <CyU3PDmaSocketDisable>
40015c30:	e1d401b0 	ldrh	r0, [r4, #16]
40015c34:	e1a0100d 	mov	r1, sp
40015c38:	ebfffb98 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40015c3c:	e59f0178 	ldr	r0, [pc, #376]	; 40015dbc <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015c40:	e58d0000 	str	r0, [sp]
40015c44:	e1d401b0 	ldrh	r0, [r4, #16]
40015c48:	e1a0100d 	mov	r1, sp
40015c4c:	ebfffc3d 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40015c50:	e1d401b0 	ldrh	r0, [r4, #16]
40015c54:	e20070ff 	and	r7, r0, #255	; 0xff
40015c58:	e1d401b0 	ldrh	r0, [r4, #16]
40015c5c:	e3a0103f 	mov	r1, #63	; 0x3f
40015c60:	e0018440 	and	r8, r1, r0, asr #8
40015c64:	e3a00000 	mov	r0, #0
40015c68:	e59f1150 	ldr	r1, [pc, #336]	; 40015dc0 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015c6c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015c70:	e7810107 	str	r0, [r1, r7, lsl #2]
40015c74:	e1d400b4 	ldrh	r0, [r4, #4]
40015c78:	e3500003 	cmp	r0, #3
40015c7c:	0a000012 	beq	40015ccc <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40015c80:	e1d401b2 	ldrh	r0, [r4, #18]
40015c84:	ebfffb6d 	bl	40014a40 <CyU3PDmaSocketDisable>
40015c88:	e1d401b2 	ldrh	r0, [r4, #18]
40015c8c:	e1a0100d 	mov	r1, sp
40015c90:	ebfffb82 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40015c94:	e59f0120 	ldr	r0, [pc, #288]	; 40015dbc <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015c98:	e58d0000 	str	r0, [sp]
40015c9c:	e1d401b2 	ldrh	r0, [r4, #18]
40015ca0:	e1a0100d 	mov	r1, sp
40015ca4:	ebfffc27 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40015ca8:	e1d401b2 	ldrh	r0, [r4, #18]
40015cac:	e20070ff 	and	r7, r0, #255	; 0xff
40015cb0:	e1d401b2 	ldrh	r0, [r4, #18]
40015cb4:	e3a0103f 	mov	r1, #63	; 0x3f
40015cb8:	e0018440 	and	r8, r1, r0, asr #8
40015cbc:	e3a00000 	mov	r0, #0
40015cc0:	e59f10f8 	ldr	r1, [pc, #248]	; 40015dc0 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015cc4:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015cc8:	e7810107 	str	r0, [r1, r7, lsl #2]
40015ccc:	e1d400b8 	ldrh	r0, [r4, #8]
40015cd0:	e3500000 	cmp	r0, #0
40015cd4:	0a000033 	beq	40015da8 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015cd8:	e1d400b4 	ldrh	r0, [r4, #4]
40015cdc:	e3500004 	cmp	r0, #4
40015ce0:	1a000014 	bne	40015d38 <CyU3PDmaChannelDestroy_TypeManual+0x128>
40015ce4:	e1d450be 	ldrh	r5, [r4, #14]
40015ce8:	e3a06000 	mov	r6, #0
40015cec:	ea00000d 	b	40015d28 <CyU3PDmaChannelDestroy_TypeManual+0x118>
40015cf0:	e28d1018 	add	r1, sp, #24
40015cf4:	e1a00005 	mov	r0, r5
40015cf8:	eb0031c6 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015cfc:	e59d1018 	ldr	r1, [sp, #24]
40015d00:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40015d04:	e0410002 	sub	r0, r1, r2
40015d08:	ebffb879 	bl	40003ef4 <CyU3PDmaBufferFree>
40015d0c:	e1a00005 	mov	r0, r5
40015d10:	eb003199 	bl	4002237c <CyU3PDmaDscrPut>
40015d14:	e59d0020 	ldr	r0, [sp, #32]
40015d18:	e1a05800 	lsl	r5, r0, #16
40015d1c:	e1a05825 	lsr	r5, r5, #16
40015d20:	e2860001 	add	r0, r6, #1
40015d24:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015d28:	e1d400b8 	ldrh	r0, [r4, #8]
40015d2c:	e1500006 	cmp	r0, r6
40015d30:	caffffee 	bgt	40015cf0 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
40015d34:	ea000013 	b	40015d88 <CyU3PDmaChannelDestroy_TypeManual+0x178>
40015d38:	e1d450bc 	ldrh	r5, [r4, #12]
40015d3c:	e3a06000 	mov	r6, #0
40015d40:	ea00000d 	b	40015d7c <CyU3PDmaChannelDestroy_TypeManual+0x16c>
40015d44:	e28d1018 	add	r1, sp, #24
40015d48:	e1a00005 	mov	r0, r5
40015d4c:	eb0031b1 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015d50:	e59d1018 	ldr	r1, [sp, #24]
40015d54:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
40015d58:	e0410002 	sub	r0, r1, r2
40015d5c:	ebffb864 	bl	40003ef4 <CyU3PDmaBufferFree>
40015d60:	e1a00005 	mov	r0, r5
40015d64:	eb003184 	bl	4002237c <CyU3PDmaDscrPut>
40015d68:	e59d0020 	ldr	r0, [sp, #32]
40015d6c:	e1a05800 	lsl	r5, r0, #16
40015d70:	e1a05825 	lsr	r5, r5, #16
40015d74:	e2860001 	add	r0, r6, #1
40015d78:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015d7c:	e1d400b8 	ldrh	r0, [r4, #8]
40015d80:	e1500006 	cmp	r0, r6
40015d84:	caffffee 	bgt	40015d44 <CyU3PDmaChannelDestroy_TypeManual+0x134>
40015d88:	e1d400b4 	ldrh	r0, [r4, #4]
40015d8c:	e3500002 	cmp	r0, #2
40015d90:	1a000004 	bne	40015da8 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015d94:	e1d410b8 	ldrh	r1, [r4, #8]
40015d98:	e1d400be 	ldrh	r0, [r4, #14]
40015d9c:	e3a03000 	mov	r3, #0
40015da0:	e1a02003 	mov	r2, r3
40015da4:	eb003100 	bl	400221ac <CyU3PDmaDscrChainDestroy>
40015da8:	e1d401b4 	ldrh	r0, [r4, #20]
40015dac:	eb003172 	bl	4002237c <CyU3PDmaDscrPut>
40015db0:	e3a00000 	mov	r0, #0
40015db4:	e28dd028 	add	sp, sp, #40	; 0x28
40015db8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015dbc:	0000ffff 	.word	0x0000ffff
40015dc0:	40030d00 	.word	0x40030d00

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40015dc4 <CyU3PDmaChannelGetBuffer>:
40015dc4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015dc8:	e24dd030 	sub	sp, sp, #48	; 0x30
40015dcc:	e1a04000 	mov	r4, r0
40015dd0:	e1a05001 	mov	r5, r1
40015dd4:	e1a06002 	mov	r6, r2
40015dd8:	e3550000 	cmp	r5, #0
40015ddc:	1a000002 	bne	40015dec <CyU3PDmaChannelGetBuffer+0x28>
40015de0:	e3a00041 	mov	r0, #65	; 0x41
40015de4:	e28dd030 	add	sp, sp, #48	; 0x30
40015de8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015dec:	e1a01006 	mov	r1, r6
40015df0:	e1a00004 	mov	r0, r4
40015df4:	ebfffc85 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40015df8:	e1a08000 	mov	r8, r0
40015dfc:	e3580000 	cmp	r8, #0
40015e00:	0a000001 	beq	40015e0c <CyU3PDmaChannelGetBuffer+0x48>
40015e04:	e1a00008 	mov	r0, r8
40015e08:	eafffff5 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40015e0c:	e5940000 	ldr	r0, [r4]
40015e10:	e3500002 	cmp	r0, #2
40015e14:	0a000003 	beq	40015e28 <CyU3PDmaChannelGetBuffer+0x64>
40015e18:	e5940000 	ldr	r0, [r4]
40015e1c:	e3500006 	cmp	r0, #6
40015e20:	0a000000 	beq	40015e28 <CyU3PDmaChannelGetBuffer+0x64>
40015e24:	e3a08042 	mov	r8, #66	; 0x42
40015e28:	e5940000 	ldr	r0, [r4]
40015e2c:	e3500005 	cmp	r0, #5
40015e30:	1a000000 	bne	40015e38 <CyU3PDmaChannelGetBuffer+0x74>
40015e34:	e3a08049 	mov	r8, #73	; 0x49
40015e38:	e5940000 	ldr	r0, [r4]
40015e3c:	e3500007 	cmp	r0, #7
40015e40:	1a000000 	bne	40015e48 <CyU3PDmaChannelGetBuffer+0x84>
40015e44:	e3a08048 	mov	r8, #72	; 0x48
40015e48:	e3580000 	cmp	r8, #0
40015e4c:	0a000003 	beq	40015e60 <CyU3PDmaChannelGetBuffer+0x9c>
40015e50:	e284003c 	add	r0, r4, #60	; 0x3c
40015e54:	ebffd077 	bl	4000a038 <_txe_mutex_put>
40015e58:	e1a00008 	mov	r0, r8
40015e5c:	eaffffe0 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40015e60:	e1d400b4 	ldrh	r0, [r4, #4]
40015e64:	e20070ff 	and	r7, r0, #255	; 0xff
40015e68:	e3570002 	cmp	r7, #2
40015e6c:	0a000001 	beq	40015e78 <CyU3PDmaChannelGetBuffer+0xb4>
40015e70:	e3570003 	cmp	r7, #3
40015e74:	1a00003e 	bne	40015f74 <CyU3PDmaChannelGetBuffer+0x1b0>
40015e78:	e3a02002 	mov	r2, #2
40015e7c:	e3e01008 	mvn	r1, #8
40015e80:	e2840074 	add	r0, r4, #116	; 0x74
40015e84:	ebffcf9e 	bl	40009d04 <_txe_event_flags_set>
40015e88:	e1d401b6 	ldrh	r0, [r4, #22]
40015e8c:	e28d101c 	add	r1, sp, #28
40015e90:	eb003160 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015e94:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015e98:	e3100008 	tst	r0, #8
40015e9c:	1a000022 	bne	40015f2c <CyU3PDmaChannelGetBuffer+0x168>
40015ea0:	e284003c 	add	r0, r4, #60	; 0x3c
40015ea4:	ebffd063 	bl	4000a038 <_txe_mutex_put>
40015ea8:	e58d6000 	str	r6, [sp]
40015eac:	e28d302c 	add	r3, sp, #44	; 0x2c
40015eb0:	e3a02000 	mov	r2, #0
40015eb4:	e3a01068 	mov	r1, #104	; 0x68
40015eb8:	e2840074 	add	r0, r4, #116	; 0x74
40015ebc:	ebffcf60 	bl	40009c44 <_txe_event_flags_get>
40015ec0:	e1a08000 	mov	r8, r0
40015ec4:	e3580000 	cmp	r8, #0
40015ec8:	0a000001 	beq	40015ed4 <CyU3PDmaChannelGetBuffer+0x110>
40015ecc:	e3a00045 	mov	r0, #69	; 0x45
40015ed0:	eaffffc3 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40015ed4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015ed8:	e3100040 	tst	r0, #64	; 0x40
40015edc:	0a000001 	beq	40015ee8 <CyU3PDmaChannelGetBuffer+0x124>
40015ee0:	e3a00049 	mov	r0, #73	; 0x49
40015ee4:	eaffffbe 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40015ee8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015eec:	e3100020 	tst	r0, #32
40015ef0:	0a000001 	beq	40015efc <CyU3PDmaChannelGetBuffer+0x138>
40015ef4:	e3a00048 	mov	r0, #72	; 0x48
40015ef8:	eaffffb9 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40015efc:	e1a01006 	mov	r1, r6
40015f00:	e1a00004 	mov	r0, r4
40015f04:	ebfffc41 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40015f08:	e1a08000 	mov	r8, r0
40015f0c:	e3580000 	cmp	r8, #0
40015f10:	0a000001 	beq	40015f1c <CyU3PDmaChannelGetBuffer+0x158>
40015f14:	e1a00008 	mov	r0, r8
40015f18:	eaffffb1 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40015f1c:	e1d401b6 	ldrh	r0, [r4, #22]
40015f20:	e28d101c 	add	r1, sp, #28
40015f24:	eb00313b 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015f28:	ea000003 	b	40015f3c <CyU3PDmaChannelGetBuffer+0x178>
40015f2c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015f30:	e3500000 	cmp	r0, #0
40015f34:	0a000000 	beq	40015f3c <CyU3PDmaChannelGetBuffer+0x178>
40015f38:	ebffd22a 	bl	4000a7e8 <_txe_thread_relinquish>
40015f3c:	e59d001c 	ldr	r0, [sp, #28]
40015f40:	e5850000 	str	r0, [r5]
40015f44:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f48:	e59f11a4 	ldr	r1, [pc, #420]	; 400160f4 <CyU3PDmaChannelGetBuffer+0x330>
40015f4c:	e0010820 	and	r0, r1, r0, lsr #16
40015f50:	e1c500b4 	strh	r0, [r5, #4]
40015f54:	e241100f 	sub	r1, r1, #15
40015f58:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f5c:	e0000001 	and	r0, r0, r1
40015f60:	e1c500b6 	strh	r0, [r5, #6]
40015f64:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f68:	e200000f 	and	r0, r0, #15
40015f6c:	e1c500b8 	strh	r0, [r5, #8]
40015f70:	ea00005b 	b	400160e4 <CyU3PDmaChannelGetBuffer+0x320>
40015f74:	e3570004 	cmp	r7, #4
40015f78:	1a000036 	bne	40016058 <CyU3PDmaChannelGetBuffer+0x294>
40015f7c:	e3a02002 	mov	r2, #2
40015f80:	e3e01010 	mvn	r1, #16
40015f84:	e2840074 	add	r0, r4, #116	; 0x74
40015f88:	ebffcf5d 	bl	40009d04 <_txe_event_flags_set>
40015f8c:	e1d401b8 	ldrh	r0, [r4, #24]
40015f90:	e28d101c 	add	r1, sp, #28
40015f94:	eb00311f 	bl	40022418 <CyU3PDmaDscrGetConfig>
40015f98:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f9c:	e3100008 	tst	r0, #8
40015fa0:	0a000021 	beq	4001602c <CyU3PDmaChannelGetBuffer+0x268>
40015fa4:	e284003c 	add	r0, r4, #60	; 0x3c
40015fa8:	ebffd022 	bl	4000a038 <_txe_mutex_put>
40015fac:	e58d6000 	str	r6, [sp]
40015fb0:	e28d302c 	add	r3, sp, #44	; 0x2c
40015fb4:	e3a02000 	mov	r2, #0
40015fb8:	e3a01070 	mov	r1, #112	; 0x70
40015fbc:	e2840074 	add	r0, r4, #116	; 0x74
40015fc0:	ebffcf1f 	bl	40009c44 <_txe_event_flags_get>
40015fc4:	e1a08000 	mov	r8, r0
40015fc8:	e3580000 	cmp	r8, #0
40015fcc:	0a000001 	beq	40015fd8 <CyU3PDmaChannelGetBuffer+0x214>
40015fd0:	e3a00045 	mov	r0, #69	; 0x45
40015fd4:	eaffff82 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40015fd8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015fdc:	e3100040 	tst	r0, #64	; 0x40
40015fe0:	0a000001 	beq	40015fec <CyU3PDmaChannelGetBuffer+0x228>
40015fe4:	e3a00049 	mov	r0, #73	; 0x49
40015fe8:	eaffff7d 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40015fec:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015ff0:	e3100020 	tst	r0, #32
40015ff4:	0a000001 	beq	40016000 <CyU3PDmaChannelGetBuffer+0x23c>
40015ff8:	e3a00048 	mov	r0, #72	; 0x48
40015ffc:	eaffff78 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40016000:	e1a01006 	mov	r1, r6
40016004:	e1a00004 	mov	r0, r4
40016008:	ebfffc00 	bl	40015010 <CyU3PDmaChannelAcquireLock>
4001600c:	e1a08000 	mov	r8, r0
40016010:	e3580000 	cmp	r8, #0
40016014:	0a000001 	beq	40016020 <CyU3PDmaChannelGetBuffer+0x25c>
40016018:	e1a00008 	mov	r0, r8
4001601c:	eaffff70 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
40016020:	e1d401b8 	ldrh	r0, [r4, #24]
40016024:	e28d101c 	add	r1, sp, #28
40016028:	eb0030fa 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001602c:	e59d001c 	ldr	r0, [sp, #28]
40016030:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40016034:	e0400001 	sub	r0, r0, r1
40016038:	e5850000 	str	r0, [r5]
4001603c:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
40016040:	e1c500b4 	strh	r0, [r5, #4]
40016044:	e1d400b6 	ldrh	r0, [r4, #6]
40016048:	e1c500b6 	strh	r0, [r5, #6]
4001604c:	e3a00000 	mov	r0, #0
40016050:	e1c500b8 	strh	r0, [r5, #8]
40016054:	ea000022 	b	400160e4 <CyU3PDmaChannelGetBuffer+0x320>
40016058:	e1d401b2 	ldrh	r0, [r4, #18]
4001605c:	e28d1004 	add	r1, sp, #4
40016060:	ebfffa8e 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40016064:	e59d1004 	ldr	r1, [sp, #4]
40016068:	e1a00801 	lsl	r0, r1, #16
4001606c:	e1a00820 	lsr	r0, r0, #16
40016070:	e28d101c 	add	r1, sp, #28
40016074:	eb0030e7 	bl	40022418 <CyU3PDmaDscrGetConfig>
40016078:	e59d0010 	ldr	r0, [sp, #16]
4001607c:	e3100702 	tst	r0, #524288	; 0x80000
40016080:	0a000016 	beq	400160e0 <CyU3PDmaChannelGetBuffer+0x31c>
40016084:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016088:	e3100008 	tst	r0, #8
4001608c:	0a000013 	beq	400160e0 <CyU3PDmaChannelGetBuffer+0x31c>
40016090:	e59d001c 	ldr	r0, [sp, #28]
40016094:	e5850000 	str	r0, [r5]
40016098:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001609c:	e59f1050 	ldr	r1, [pc, #80]	; 400160f4 <CyU3PDmaChannelGetBuffer+0x330>
400160a0:	e0010820 	and	r0, r1, r0, lsr #16
400160a4:	e1c500b4 	strh	r0, [r5, #4]
400160a8:	e241100f 	sub	r1, r1, #15
400160ac:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160b0:	e0000001 	and	r0, r0, r1
400160b4:	e1c500b6 	strh	r0, [r5, #6]
400160b8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160bc:	e200000f 	and	r0, r0, #15
400160c0:	e1c500b8 	strh	r0, [r5, #8]
400160c4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400160c8:	e3500000 	cmp	r0, #0
400160cc:	0a000004 	beq	400160e4 <CyU3PDmaChannelGetBuffer+0x320>
400160d0:	e1d510b6 	ldrh	r1, [r5, #6]
400160d4:	e5950000 	ldr	r0, [r5]
400160d8:	ebffefa1 	bl	40011f64 <CyU3PSysFlushDRegion>
400160dc:	ea000000 	b	400160e4 <CyU3PDmaChannelGetBuffer+0x320>
400160e0:	e3a08047 	mov	r8, #71	; 0x47
400160e4:	e284003c 	add	r0, r4, #60	; 0x3c
400160e8:	ebffcfd2 	bl	4000a038 <_txe_mutex_put>
400160ec:	e1a00008 	mov	r0, r8
400160f0:	eaffff3b 	b	40015de4 <CyU3PDmaChannelGetBuffer+0x20>
400160f4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

400160f8 <CyU3PDmaChannelReset>:
400160f8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400160fc:	e1a04000 	mov	r4, r0
40016100:	e3e01000 	mvn	r1, #0
40016104:	e1a00004 	mov	r0, r4
40016108:	ebfffbc0 	bl	40015010 <CyU3PDmaChannelAcquireLock>
4001610c:	e1a06000 	mov	r6, r0
40016110:	e3560000 	cmp	r6, #0
40016114:	0a000001 	beq	40016120 <CyU3PDmaChannelReset+0x28>
40016118:	e1a00006 	mov	r0, r6
4001611c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40016120:	e1d400b4 	ldrh	r0, [r4, #4]
40016124:	e3500005 	cmp	r0, #5
40016128:	308ff100 	addcc	pc, pc, r0, lsl #2
4001612c:	ea00000f 	b	40016170 <CyU3PDmaChannelReset+0x78>
40016130:	ea000003 	b	40016144 <CyU3PDmaChannelReset+0x4c>
40016134:	ea000004 	b	4001614c <CyU3PDmaChannelReset+0x54>
40016138:	ea000009 	b	40016164 <CyU3PDmaChannelReset+0x6c>
4001613c:	ea000005 	b	40016158 <CyU3PDmaChannelReset+0x60>
40016140:	ea000006 	b	40016160 <CyU3PDmaChannelReset+0x68>
40016144:	e1a00000 	nop			; (mov r0, r0)
40016148:	e1a00000 	nop			; (mov r0, r0)
4001614c:	e1a00004 	mov	r0, r4
40016150:	eb000030 	bl	40016218 <CyU3PDmaChannelReset_TypeAuto>
40016154:	ea000007 	b	40016178 <CyU3PDmaChannelReset+0x80>
40016158:	e1a00000 	nop			; (mov r0, r0)
4001615c:	e1a00000 	nop			; (mov r0, r0)
40016160:	e1a00000 	nop			; (mov r0, r0)
40016164:	e1a00004 	mov	r0, r4
40016168:	eb000045 	bl	40016284 <CyU3PDmaChannelReset_TypeManual>
4001616c:	ea000001 	b	40016178 <CyU3PDmaChannelReset+0x80>
40016170:	e1a00000 	nop			; (mov r0, r0)
40016174:	e1a00000 	nop			; (mov r0, r0)
40016178:	e1a00000 	nop			; (mov r0, r0)
4001617c:	ebffc963 	bl	40008710 <_tx_thread_identify>
40016180:	e1a05000 	mov	r5, r0
40016184:	e3550000 	cmp	r5, #0
40016188:	0a000003 	beq	4001619c <CyU3PDmaChannelReset+0xa4>
4001618c:	e1a0200d 	mov	r2, sp
40016190:	e3a01002 	mov	r1, #2
40016194:	e1a00005 	mov	r0, r5
40016198:	ebffd16a 	bl	4000a748 <_txe_thread_priority_change>
4001619c:	e3a02002 	mov	r2, #2
400161a0:	e3e01007 	mvn	r1, #7
400161a4:	e2840074 	add	r0, r4, #116	; 0x74
400161a8:	ebffced5 	bl	40009d04 <_txe_event_flags_set>
400161ac:	e3a02000 	mov	r2, #0
400161b0:	e3a01020 	mov	r1, #32
400161b4:	e2840074 	add	r0, r4, #116	; 0x74
400161b8:	ebffced1 	bl	40009d04 <_txe_event_flags_set>
400161bc:	e3a00001 	mov	r0, #1
400161c0:	e5840000 	str	r0, [r4]
400161c4:	e284003c 	add	r0, r4, #60	; 0x3c
400161c8:	ebffcf9a 	bl	4000a038 <_txe_mutex_put>
400161cc:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
400161d0:	e3500000 	cmp	r0, #0
400161d4:	0a000007 	beq	400161f8 <CyU3PDmaChannelReset+0x100>
400161d8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400161dc:	e3100020 	tst	r0, #32
400161e0:	0a000004 	beq	400161f8 <CyU3PDmaChannelReset+0x100>
400161e4:	e3a02000 	mov	r2, #0
400161e8:	e3a01020 	mov	r1, #32
400161ec:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
400161f0:	e1a00004 	mov	r0, r4
400161f4:	e12fff33 	blx	r3
400161f8:	e3550000 	cmp	r5, #0
400161fc:	0a000003 	beq	40016210 <CyU3PDmaChannelReset+0x118>
40016200:	e1a0200d 	mov	r2, sp
40016204:	e1a00005 	mov	r0, r5
40016208:	e59d1000 	ldr	r1, [sp]
4001620c:	ebffd14d 	bl	4000a748 <_txe_thread_priority_change>
40016210:	e3a00000 	mov	r0, #0
40016214:	eaffffc0 	b	4001611c <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

40016218 <CyU3PDmaChannelReset_TypeAuto>:
40016218:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4001621c:	e1a04000 	mov	r4, r0
40016220:	e1d450b8 	ldrh	r5, [r4, #8]
40016224:	e1d460bc 	ldrh	r6, [r4, #12]
40016228:	e1a00004 	mov	r0, r4
4001622c:	eb000337 	bl	40016f10 <CyU3PDmaConfigureSockets_TypeAuto>
40016230:	ea00000c 	b	40016268 <CyU3PDmaChannelReset_TypeAuto+0x50>
40016234:	e1a0100d 	mov	r1, sp
40016238:	e1a00006 	mov	r0, r6
4001623c:	eb003075 	bl	40022418 <CyU3PDmaDscrGetConfig>
40016240:	e59d000c 	ldr	r0, [sp, #12]
40016244:	e59f1034 	ldr	r1, [pc, #52]	; 40016280 <CyU3PDmaChannelReset_TypeAuto+0x68>
40016248:	e0000001 	and	r0, r0, r1
4001624c:	e58d000c 	str	r0, [sp, #12]
40016250:	e1a0100d 	mov	r1, sp
40016254:	e1a00006 	mov	r0, r6
40016258:	eb003089 	bl	40022484 <CyU3PDmaDscrSetConfig>
4001625c:	e59d0008 	ldr	r0, [sp, #8]
40016260:	e1a06800 	lsl	r6, r0, #16
40016264:	e1a06826 	lsr	r6, r6, #16
40016268:	e1b00005 	movs	r0, r5
4001626c:	e2451001 	sub	r1, r5, #1
40016270:	e1a05801 	lsl	r5, r1, #16
40016274:	e1a05825 	lsr	r5, r5, #16
40016278:	1affffed 	bne	40016234 <CyU3PDmaChannelReset_TypeAuto+0x1c>
4001627c:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016280:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

40016284 <CyU3PDmaChannelReset_TypeManual>:
40016284:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40016288:	e1a04000 	mov	r4, r0
4001628c:	e1d450b8 	ldrh	r5, [r4, #8]
40016290:	e1a00004 	mov	r0, r4
40016294:	eb00035d 	bl	40017010 <CyU3PDmaConfigureSockets_TypeManual>
40016298:	e1d400b4 	ldrh	r0, [r4, #4]
4001629c:	e3500004 	cmp	r0, #4
400162a0:	0a000017 	beq	40016304 <CyU3PDmaChannelReset_TypeManual+0x80>
400162a4:	e1d460bc 	ldrh	r6, [r4, #12]
400162a8:	ea00000c 	b	400162e0 <CyU3PDmaChannelReset_TypeManual+0x5c>
400162ac:	e1a0100d 	mov	r1, sp
400162b0:	e1a00006 	mov	r0, r6
400162b4:	eb003057 	bl	40022418 <CyU3PDmaDscrGetConfig>
400162b8:	e59d000c 	ldr	r0, [sp, #12]
400162bc:	e59f10b4 	ldr	r1, [pc, #180]	; 40016378 <CyU3PDmaChannelReset_TypeManual+0xf4>
400162c0:	e0000001 	and	r0, r0, r1
400162c4:	e58d000c 	str	r0, [sp, #12]
400162c8:	e1a0100d 	mov	r1, sp
400162cc:	e1a00006 	mov	r0, r6
400162d0:	eb00306b 	bl	40022484 <CyU3PDmaDscrSetConfig>
400162d4:	e59d0008 	ldr	r0, [sp, #8]
400162d8:	e1a06800 	lsl	r6, r0, #16
400162dc:	e1a06826 	lsr	r6, r6, #16
400162e0:	e1b00005 	movs	r0, r5
400162e4:	e2451001 	sub	r1, r5, #1
400162e8:	e1a05801 	lsl	r5, r1, #16
400162ec:	e1a05825 	lsr	r5, r5, #16
400162f0:	1affffed 	bne	400162ac <CyU3PDmaChannelReset_TypeManual+0x28>
400162f4:	e1d400bc 	ldrh	r0, [r4, #12]
400162f8:	e1c401b6 	strh	r0, [r4, #22]
400162fc:	e1c401ba 	strh	r0, [r4, #26]
40016300:	e1c401be 	strh	r0, [r4, #30]
40016304:	e1d400b4 	ldrh	r0, [r4, #4]
40016308:	e3500003 	cmp	r0, #3
4001630c:	0a000018 	beq	40016374 <CyU3PDmaChannelReset_TypeManual+0xf0>
40016310:	e1d460be 	ldrh	r6, [r4, #14]
40016314:	e1d450b8 	ldrh	r5, [r4, #8]
40016318:	ea00000c 	b	40016350 <CyU3PDmaChannelReset_TypeManual+0xcc>
4001631c:	e1a0100d 	mov	r1, sp
40016320:	e1a00006 	mov	r0, r6
40016324:	eb00303b 	bl	40022418 <CyU3PDmaDscrGetConfig>
40016328:	e59d000c 	ldr	r0, [sp, #12]
4001632c:	e59f1044 	ldr	r1, [pc, #68]	; 40016378 <CyU3PDmaChannelReset_TypeManual+0xf4>
40016330:	e0000001 	and	r0, r0, r1
40016334:	e58d000c 	str	r0, [sp, #12]
40016338:	e1a0100d 	mov	r1, sp
4001633c:	e1a00006 	mov	r0, r6
40016340:	eb00304f 	bl	40022484 <CyU3PDmaDscrSetConfig>
40016344:	e59d0008 	ldr	r0, [sp, #8]
40016348:	e1a06800 	lsl	r6, r0, #16
4001634c:	e1a06826 	lsr	r6, r6, #16
40016350:	e1b00005 	movs	r0, r5
40016354:	e2451001 	sub	r1, r5, #1
40016358:	e1a05801 	lsl	r5, r1, #16
4001635c:	e1a05825 	lsr	r5, r5, #16
40016360:	1affffed 	bne	4001631c <CyU3PDmaChannelReset_TypeManual+0x98>
40016364:	e1d400be 	ldrh	r0, [r4, #14]
40016368:	e1c401b8 	strh	r0, [r4, #24]
4001636c:	e1c401bc 	strh	r0, [r4, #28]
40016370:	e1c402b0 	strh	r0, [r4, #32]
40016374:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016378:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

4001637c <CyU3PDmaChannelSetXfer>:
4001637c:	e92d4070 	push	{r4, r5, r6, lr}
40016380:	e1a04000 	mov	r4, r0
40016384:	e1a05001 	mov	r5, r1
40016388:	e3e01000 	mvn	r1, #0
4001638c:	e1a00004 	mov	r0, r4
40016390:	ebfffb1e 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40016394:	e1a06000 	mov	r6, r0
40016398:	e3560000 	cmp	r6, #0
4001639c:	0a000001 	beq	400163a8 <CyU3PDmaChannelSetXfer+0x2c>
400163a0:	e1a00006 	mov	r0, r6
400163a4:	e8bd8070 	pop	{r4, r5, r6, pc}
400163a8:	e5940000 	ldr	r0, [r4]
400163ac:	e3500001 	cmp	r0, #1
400163b0:	0a000000 	beq	400163b8 <CyU3PDmaChannelSetXfer+0x3c>
400163b4:	e3a06043 	mov	r6, #67	; 0x43
400163b8:	e1d400b8 	ldrh	r0, [r4, #8]
400163bc:	e3500000 	cmp	r0, #0
400163c0:	1a000000 	bne	400163c8 <CyU3PDmaChannelSetXfer+0x4c>
400163c4:	e3a06046 	mov	r6, #70	; 0x46
400163c8:	e3560000 	cmp	r6, #0
400163cc:	1a00001d 	bne	40016448 <CyU3PDmaChannelSetXfer+0xcc>
400163d0:	e3a02002 	mov	r2, #2
400163d4:	e3e01027 	mvn	r1, #39	; 0x27
400163d8:	e2840074 	add	r0, r4, #116	; 0x74
400163dc:	ebffce48 	bl	40009d04 <_txe_event_flags_set>
400163e0:	e5845034 	str	r5, [r4, #52]	; 0x34
400163e4:	e1d400b4 	ldrh	r0, [r4, #4]
400163e8:	e3500005 	cmp	r0, #5
400163ec:	308ff100 	addcc	pc, pc, r0, lsl #2
400163f0:	ea000011 	b	4001643c <CyU3PDmaChannelSetXfer+0xc0>
400163f4:	ea000003 	b	40016408 <CyU3PDmaChannelSetXfer+0x8c>
400163f8:	ea000004 	b	40016410 <CyU3PDmaChannelSetXfer+0x94>
400163fc:	ea00000a 	b	4001642c <CyU3PDmaChannelSetXfer+0xb0>
40016400:	ea000006 	b	40016420 <CyU3PDmaChannelSetXfer+0xa4>
40016404:	ea000007 	b	40016428 <CyU3PDmaChannelSetXfer+0xac>
40016408:	e1a00000 	nop			; (mov r0, r0)
4001640c:	e1a00000 	nop			; (mov r0, r0)
40016410:	e1a01005 	mov	r1, r5
40016414:	e1a00004 	mov	r0, r4
40016418:	eb00000e 	bl	40016458 <CyU3PDmaChannelSetXfer_TypeAuto>
4001641c:	ea000008 	b	40016444 <CyU3PDmaChannelSetXfer+0xc8>
40016420:	e1a00000 	nop			; (mov r0, r0)
40016424:	e1a00000 	nop			; (mov r0, r0)
40016428:	e1a00000 	nop			; (mov r0, r0)
4001642c:	e1a01005 	mov	r1, r5
40016430:	e1a00004 	mov	r0, r4
40016434:	eb00006f 	bl	400165f8 <CyU3PDmaChannelSetXfer_TypeManual>
40016438:	ea000001 	b	40016444 <CyU3PDmaChannelSetXfer+0xc8>
4001643c:	e1a00000 	nop			; (mov r0, r0)
40016440:	e1a00000 	nop			; (mov r0, r0)
40016444:	e1a00000 	nop			; (mov r0, r0)
40016448:	e284003c 	add	r0, r4, #60	; 0x3c
4001644c:	ebffcef9 	bl	4000a038 <_txe_mutex_put>
40016450:	e1a00006 	mov	r0, r6
40016454:	eaffffd2 	b	400163a4 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

40016458 <CyU3PDmaChannelSetXfer_TypeAuto>:
40016458:	e92d4030 	push	{r4, r5, lr}
4001645c:	e24dd01c 	sub	sp, sp, #28
40016460:	e1a04000 	mov	r4, r0
40016464:	e1a05001 	mov	r5, r1
40016468:	e1d401b0 	ldrh	r0, [r4, #16]
4001646c:	ebfff973 	bl	40014a40 <CyU3PDmaSocketDisable>
40016470:	e1d401b2 	ldrh	r0, [r4, #18]
40016474:	ebfff971 	bl	40014a40 <CyU3PDmaSocketDisable>
40016478:	e3a00002 	mov	r0, #2
4001647c:	e5840000 	str	r0, [r4]
40016480:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016484:	e1d401b0 	ldrh	r0, [r4, #16]
40016488:	ebfffa87 	bl	40014eac <CyU3PDmaUpdateSocketSuspendOption>
4001648c:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016490:	e1d401b2 	ldrh	r0, [r4, #18]
40016494:	ebfffa84 	bl	40014eac <CyU3PDmaUpdateSocketSuspendOption>
40016498:	e1d401b0 	ldrh	r0, [r4, #16]
4001649c:	e28d1004 	add	r1, sp, #4
400164a0:	ebfff97e 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
400164a4:	e58d5008 	str	r5, [sp, #8]
400164a8:	e3a00000 	mov	r0, #0
400164ac:	e58d000c 	str	r0, [sp, #12]
400164b0:	e3550000 	cmp	r5, #0
400164b4:	1a000003 	bne	400164c8 <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
400164b8:	e59d0010 	ldr	r0, [sp, #16]
400164bc:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400164c0:	e58d0010 	str	r0, [sp, #16]
400164c4:	ea000002 	b	400164d4 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
400164c8:	e59d0010 	ldr	r0, [sp, #16]
400164cc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400164d0:	e58d0010 	str	r0, [sp, #16]
400164d4:	e59d0010 	ldr	r0, [sp, #16]
400164d8:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400164dc:	e58d0010 	str	r0, [sp, #16]
400164e0:	e59d0010 	ldr	r0, [sp, #16]
400164e4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400164e8:	e58d0010 	str	r0, [sp, #16]
400164ec:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400164f0:	e3500001 	cmp	r0, #1
400164f4:	1a000003 	bne	40016508 <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
400164f8:	e59d0010 	ldr	r0, [sp, #16]
400164fc:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016500:	e58d0010 	str	r0, [sp, #16]
40016504:	ea000002 	b	40016514 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
40016508:	e59d0010 	ldr	r0, [sp, #16]
4001650c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016510:	e58d0010 	str	r0, [sp, #16]
40016514:	e1d400ba 	ldrh	r0, [r4, #10]
40016518:	e3500000 	cmp	r0, #0
4001651c:	0a000006 	beq	4001653c <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
40016520:	e1d400b8 	ldrh	r0, [r4, #8]
40016524:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016528:	e1d410ba 	ldrh	r1, [r4, #10]
4001652c:	e1800281 	orr	r0, r0, r1, lsl #5
40016530:	e59d1010 	ldr	r1, [sp, #16]
40016534:	e1800001 	orr	r0, r0, r1
40016538:	e58d0010 	str	r0, [sp, #16]
4001653c:	e3e00000 	mvn	r0, #0
40016540:	e58d0014 	str	r0, [sp, #20]
40016544:	e1d401b0 	ldrh	r0, [r4, #16]
40016548:	e28d1004 	add	r1, sp, #4
4001654c:	ebfff9fd 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40016550:	e1d401b2 	ldrh	r0, [r4, #18]
40016554:	e28d1004 	add	r1, sp, #4
40016558:	ebfff950 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
4001655c:	e58d5008 	str	r5, [sp, #8]
40016560:	e3a00000 	mov	r0, #0
40016564:	e58d000c 	str	r0, [sp, #12]
40016568:	e3550000 	cmp	r5, #0
4001656c:	1a000006 	bne	4001658c <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
40016570:	e59d0018 	ldr	r0, [sp, #24]
40016574:	e3c00080 	bic	r0, r0, #128	; 0x80
40016578:	e58d0018 	str	r0, [sp, #24]
4001657c:	e59d0010 	ldr	r0, [sp, #16]
40016580:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016584:	e58d0010 	str	r0, [sp, #16]
40016588:	ea000005 	b	400165a4 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
4001658c:	e59d0018 	ldr	r0, [sp, #24]
40016590:	e3800080 	orr	r0, r0, #128	; 0x80
40016594:	e58d0018 	str	r0, [sp, #24]
40016598:	e59d0010 	ldr	r0, [sp, #16]
4001659c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400165a0:	e58d0010 	str	r0, [sp, #16]
400165a4:	e59d0010 	ldr	r0, [sp, #16]
400165a8:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400165ac:	e58d0010 	str	r0, [sp, #16]
400165b0:	e59d0010 	ldr	r0, [sp, #16]
400165b4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400165b8:	e58d0010 	str	r0, [sp, #16]
400165bc:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400165c0:	e3500001 	cmp	r0, #1
400165c4:	1a000003 	bne	400165d8 <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
400165c8:	e59d0010 	ldr	r0, [sp, #16]
400165cc:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400165d0:	e58d0010 	str	r0, [sp, #16]
400165d4:	ea000002 	b	400165e4 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
400165d8:	e59d0010 	ldr	r0, [sp, #16]
400165dc:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400165e0:	e58d0010 	str	r0, [sp, #16]
400165e4:	e1d401b2 	ldrh	r0, [r4, #18]
400165e8:	e28d1004 	add	r1, sp, #4
400165ec:	ebfff9d5 	bl	40014d48 <CyU3PDmaSocketSetConfig>
400165f0:	e28dd01c 	add	sp, sp, #28
400165f4:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

400165f8 <CyU3PDmaChannelSetXfer_TypeManual>:
400165f8:	e92d4030 	push	{r4, r5, lr}
400165fc:	e24dd01c 	sub	sp, sp, #28
40016600:	e1a04000 	mov	r4, r0
40016604:	e1a05001 	mov	r5, r1
40016608:	e3a00002 	mov	r0, #2
4001660c:	e5840000 	str	r0, [r4]
40016610:	e1d400b4 	ldrh	r0, [r4, #4]
40016614:	e3500004 	cmp	r0, #4
40016618:	0a00003d 	beq	40016714 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
4001661c:	e1d401b0 	ldrh	r0, [r4, #16]
40016620:	ebfff906 	bl	40014a40 <CyU3PDmaSocketDisable>
40016624:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016628:	e1d401b0 	ldrh	r0, [r4, #16]
4001662c:	ebfffa1e 	bl	40014eac <CyU3PDmaUpdateSocketSuspendOption>
40016630:	e1d401b0 	ldrh	r0, [r4, #16]
40016634:	e28d1004 	add	r1, sp, #4
40016638:	ebfff918 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
4001663c:	e58d5008 	str	r5, [sp, #8]
40016640:	e3a00000 	mov	r0, #0
40016644:	e58d000c 	str	r0, [sp, #12]
40016648:	e59d0010 	ldr	r0, [sp, #16]
4001664c:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016650:	e58d0010 	str	r0, [sp, #16]
40016654:	e59d0010 	ldr	r0, [sp, #16]
40016658:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001665c:	e58d0010 	str	r0, [sp, #16]
40016660:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016664:	e3500001 	cmp	r0, #1
40016668:	1a000003 	bne	4001667c <CyU3PDmaChannelSetXfer_TypeManual+0x84>
4001666c:	e59d0010 	ldr	r0, [sp, #16]
40016670:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016674:	e58d0010 	str	r0, [sp, #16]
40016678:	ea000002 	b	40016688 <CyU3PDmaChannelSetXfer_TypeManual+0x90>
4001667c:	e59d0010 	ldr	r0, [sp, #16]
40016680:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016684:	e58d0010 	str	r0, [sp, #16]
40016688:	e1d400ba 	ldrh	r0, [r4, #10]
4001668c:	e3500000 	cmp	r0, #0
40016690:	0a000006 	beq	400166b0 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
40016694:	e1d400b8 	ldrh	r0, [r4, #8]
40016698:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001669c:	e1d410ba 	ldrh	r1, [r4, #10]
400166a0:	e1800281 	orr	r0, r0, r1, lsl #5
400166a4:	e59d1010 	ldr	r1, [sp, #16]
400166a8:	e1800001 	orr	r0, r0, r1
400166ac:	e58d0010 	str	r0, [sp, #16]
400166b0:	e3e00000 	mvn	r0, #0
400166b4:	e58d0014 	str	r0, [sp, #20]
400166b8:	e3550000 	cmp	r5, #0
400166bc:	0a000002 	beq	400166cc <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
400166c0:	e1d400b4 	ldrh	r0, [r4, #4]
400166c4:	e3500002 	cmp	r0, #2
400166c8:	1a000008 	bne	400166f0 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
400166cc:	e3a00000 	mov	r0, #0
400166d0:	e58d0008 	str	r0, [sp, #8]
400166d4:	e59d0010 	ldr	r0, [sp, #16]
400166d8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400166dc:	e58d0010 	str	r0, [sp, #16]
400166e0:	e59d0018 	ldr	r0, [sp, #24]
400166e4:	e3c00080 	bic	r0, r0, #128	; 0x80
400166e8:	e58d0018 	str	r0, [sp, #24]
400166ec:	ea000005 	b	40016708 <CyU3PDmaChannelSetXfer_TypeManual+0x110>
400166f0:	e59d0010 	ldr	r0, [sp, #16]
400166f4:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400166f8:	e58d0010 	str	r0, [sp, #16]
400166fc:	e59d0018 	ldr	r0, [sp, #24]
40016700:	e3800080 	orr	r0, r0, #128	; 0x80
40016704:	e58d0018 	str	r0, [sp, #24]
40016708:	e1d401b0 	ldrh	r0, [r4, #16]
4001670c:	e28d1004 	add	r1, sp, #4
40016710:	ebfff98c 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40016714:	e1d400b4 	ldrh	r0, [r4, #4]
40016718:	e3500003 	cmp	r0, #3
4001671c:	0a00002e 	beq	400167dc <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016720:	e1d401b2 	ldrh	r0, [r4, #18]
40016724:	ebfff8c5 	bl	40014a40 <CyU3PDmaSocketDisable>
40016728:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
4001672c:	e1d401b2 	ldrh	r0, [r4, #18]
40016730:	ebfff9dd 	bl	40014eac <CyU3PDmaUpdateSocketSuspendOption>
40016734:	e1d401b2 	ldrh	r0, [r4, #18]
40016738:	e28d1004 	add	r1, sp, #4
4001673c:	ebfff8d7 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40016740:	e58d5008 	str	r5, [sp, #8]
40016744:	e3a00000 	mov	r0, #0
40016748:	e58d000c 	str	r0, [sp, #12]
4001674c:	e59d0010 	ldr	r0, [sp, #16]
40016750:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016754:	e58d0010 	str	r0, [sp, #16]
40016758:	e59d0010 	ldr	r0, [sp, #16]
4001675c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016760:	e58d0010 	str	r0, [sp, #16]
40016764:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016768:	e3500001 	cmp	r0, #1
4001676c:	1a000003 	bne	40016780 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
40016770:	e59d0010 	ldr	r0, [sp, #16]
40016774:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016778:	e58d0010 	str	r0, [sp, #16]
4001677c:	ea000002 	b	4001678c <CyU3PDmaChannelSetXfer_TypeManual+0x194>
40016780:	e59d0010 	ldr	r0, [sp, #16]
40016784:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016788:	e58d0010 	str	r0, [sp, #16]
4001678c:	e3e00000 	mvn	r0, #0
40016790:	e58d0014 	str	r0, [sp, #20]
40016794:	e3550000 	cmp	r5, #0
40016798:	1a000006 	bne	400167b8 <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
4001679c:	e59d0010 	ldr	r0, [sp, #16]
400167a0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400167a4:	e58d0010 	str	r0, [sp, #16]
400167a8:	e59d0018 	ldr	r0, [sp, #24]
400167ac:	e3c00080 	bic	r0, r0, #128	; 0x80
400167b0:	e58d0018 	str	r0, [sp, #24]
400167b4:	ea000005 	b	400167d0 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
400167b8:	e59d0010 	ldr	r0, [sp, #16]
400167bc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400167c0:	e58d0010 	str	r0, [sp, #16]
400167c4:	e59d0018 	ldr	r0, [sp, #24]
400167c8:	e3800080 	orr	r0, r0, #128	; 0x80
400167cc:	e58d0018 	str	r0, [sp, #24]
400167d0:	e1d401b2 	ldrh	r0, [r4, #18]
400167d4:	e28d1004 	add	r1, sp, #4
400167d8:	ebfff95a 	bl	40014d48 <CyU3PDmaSocketSetConfig>
400167dc:	e28dd01c 	add	sp, sp, #28
400167e0:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

400167e4 <CyU3PDmaChannelSetupRecvBuffer>:
400167e4:	e92d4070 	push	{r4, r5, r6, lr}
400167e8:	e24dd028 	sub	sp, sp, #40	; 0x28
400167ec:	e1a04000 	mov	r4, r0
400167f0:	e1a05001 	mov	r5, r1
400167f4:	e3550000 	cmp	r5, #0
400167f8:	1a000002 	bne	40016808 <CyU3PDmaChannelSetupRecvBuffer+0x24>
400167fc:	e3a00041 	mov	r0, #65	; 0x41
40016800:	e28dd028 	add	sp, sp, #40	; 0x28
40016804:	e8bd8070 	pop	{r4, r5, r6, pc}
40016808:	e5950000 	ldr	r0, [r5]
4001680c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016810:	3a000005 	bcc	4001682c <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016814:	e5950000 	ldr	r0, [r5]
40016818:	e1d510b6 	ldrh	r1, [r5, #6]
4001681c:	e0800001 	add	r0, r0, r1
40016820:	e59f11d4 	ldr	r1, [pc, #468]	; 400169fc <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016824:	e1500001 	cmp	r0, r1
40016828:	3a000001 	bcc	40016834 <CyU3PDmaChannelSetupRecvBuffer+0x50>
4001682c:	e3a00040 	mov	r0, #64	; 0x40
40016830:	eafffff2 	b	40016800 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016834:	e1d500b6 	ldrh	r0, [r5, #6]
40016838:	e59f11c0 	ldr	r1, [pc, #448]	; 40016a00 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
4001683c:	e1500001 	cmp	r0, r1
40016840:	da000001 	ble	4001684c <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016844:	e3a00040 	mov	r0, #64	; 0x40
40016848:	eaffffec 	b	40016800 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
4001684c:	e1d500b6 	ldrh	r0, [r5, #6]
40016850:	e3500000 	cmp	r0, #0
40016854:	0a000002 	beq	40016864 <CyU3PDmaChannelSetupRecvBuffer+0x80>
40016858:	e1d500b6 	ldrh	r0, [r5, #6]
4001685c:	e310000f 	tst	r0, #15
40016860:	0a000001 	beq	4001686c <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016864:	e3a00040 	mov	r0, #64	; 0x40
40016868:	eaffffe4 	b	40016800 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
4001686c:	e3e01000 	mvn	r1, #0
40016870:	e1a00004 	mov	r0, r4
40016874:	ebfff9e5 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40016878:	e1a06000 	mov	r6, r0
4001687c:	e3560000 	cmp	r6, #0
40016880:	0a000001 	beq	4001688c <CyU3PDmaChannelSetupRecvBuffer+0xa8>
40016884:	e1a00006 	mov	r0, r6
40016888:	eaffffdc 	b	40016800 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
4001688c:	e1d400b4 	ldrh	r0, [r4, #4]
40016890:	e3500004 	cmp	r0, #4
40016894:	1a000000 	bne	4001689c <CyU3PDmaChannelSetupRecvBuffer+0xb8>
40016898:	e3a06046 	mov	r6, #70	; 0x46
4001689c:	e5940000 	ldr	r0, [r4]
400168a0:	e3500001 	cmp	r0, #1
400168a4:	0a000000 	beq	400168ac <CyU3PDmaChannelSetupRecvBuffer+0xc8>
400168a8:	e3a06043 	mov	r6, #67	; 0x43
400168ac:	e3560000 	cmp	r6, #0
400168b0:	0a000003 	beq	400168c4 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
400168b4:	e284003c 	add	r0, r4, #60	; 0x3c
400168b8:	ebffcdde 	bl	4000a038 <_txe_mutex_put>
400168bc:	e1a00006 	mov	r0, r6
400168c0:	eaffffce 	b	40016800 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400168c4:	e1d401b0 	ldrh	r0, [r4, #16]
400168c8:	ebfff85c 	bl	40014a40 <CyU3PDmaSocketDisable>
400168cc:	e1d401b0 	ldrh	r0, [r4, #16]
400168d0:	e3a01000 	mov	r1, #0
400168d4:	ebfff974 	bl	40014eac <CyU3PDmaUpdateSocketSuspendOption>
400168d8:	e3a02002 	mov	r2, #2
400168dc:	e3e01027 	mvn	r1, #39	; 0x27
400168e0:	e2840074 	add	r0, r4, #116	; 0x74
400168e4:	ebffcd06 	bl	40009d04 <_txe_event_flags_set>
400168e8:	e3a00004 	mov	r0, #4
400168ec:	e5840000 	str	r0, [r4]
400168f0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400168f4:	e3500000 	cmp	r0, #0
400168f8:	0a000002 	beq	40016908 <CyU3PDmaChannelSetupRecvBuffer+0x124>
400168fc:	e1d510b6 	ldrh	r1, [r5, #6]
40016900:	e5950000 	ldr	r0, [r5]
40016904:	ebffed96 	bl	40011f64 <CyU3PSysFlushDRegion>
40016908:	e1d401b0 	ldrh	r0, [r4, #16]
4001690c:	e1a0100d 	mov	r1, sp
40016910:	ebfff862 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40016914:	e59d0000 	ldr	r0, [sp]
40016918:	e1c401b6 	strh	r0, [r4, #22]
4001691c:	e1d401b4 	ldrh	r0, [r4, #20]
40016920:	e28d1018 	add	r1, sp, #24
40016924:	eb002ebb 	bl	40022418 <CyU3PDmaDscrGetConfig>
40016928:	e5950000 	ldr	r0, [r5]
4001692c:	e58d0018 	str	r0, [sp, #24]
40016930:	e1d401b0 	ldrh	r0, [r4, #16]
40016934:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016938:	e1810800 	orr	r0, r1, r0, lsl #16
4001693c:	e58d001c 	str	r0, [sp, #28]
40016940:	e59d001c 	ldr	r0, [sp, #28]
40016944:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016948:	e58d001c 	str	r0, [sp, #28]
4001694c:	e1d401b6 	ldrh	r0, [r4, #22]
40016950:	e1e01741 	mvn	r1, r1, asr #14
40016954:	e1810800 	orr	r0, r1, r0, lsl #16
40016958:	e58d0020 	str	r0, [sp, #32]
4001695c:	e1d500b6 	ldrh	r0, [r5, #6]
40016960:	e241100f 	sub	r1, r1, #15
40016964:	e0000001 	and	r0, r0, r1
40016968:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001696c:	e1d401b4 	ldrh	r0, [r4, #20]
40016970:	e28d1018 	add	r1, sp, #24
40016974:	eb002ec2 	bl	40022484 <CyU3PDmaDscrSetConfig>
40016978:	e59d000c 	ldr	r0, [sp, #12]
4001697c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016980:	e58d000c 	str	r0, [sp, #12]
40016984:	e59d000c 	ldr	r0, [sp, #12]
40016988:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001698c:	e58d000c 	str	r0, [sp, #12]
40016990:	e59d000c 	ldr	r0, [sp, #12]
40016994:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016998:	e58d000c 	str	r0, [sp, #12]
4001699c:	e59d000c 	ldr	r0, [sp, #12]
400169a0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400169a4:	e58d000c 	str	r0, [sp, #12]
400169a8:	e3a00001 	mov	r0, #1
400169ac:	e58d0004 	str	r0, [sp, #4]
400169b0:	e3a00000 	mov	r0, #0
400169b4:	e58d0008 	str	r0, [sp, #8]
400169b8:	e3e00000 	mvn	r0, #0
400169bc:	e58d0010 	str	r0, [sp, #16]
400169c0:	e59d0014 	ldr	r0, [sp, #20]
400169c4:	e3800001 	orr	r0, r0, #1
400169c8:	e58d0014 	str	r0, [sp, #20]
400169cc:	e59d0014 	ldr	r0, [sp, #20]
400169d0:	e3c00080 	bic	r0, r0, #128	; 0x80
400169d4:	e58d0014 	str	r0, [sp, #20]
400169d8:	e1d401b4 	ldrh	r0, [r4, #20]
400169dc:	e58d0000 	str	r0, [sp]
400169e0:	e1d401b0 	ldrh	r0, [r4, #16]
400169e4:	e1a0100d 	mov	r1, sp
400169e8:	ebfff8d6 	bl	40014d48 <CyU3PDmaSocketSetConfig>
400169ec:	e284003c 	add	r0, r4, #60	; 0x3c
400169f0:	ebffcd90 	bl	4000a038 <_txe_mutex_put>
400169f4:	e3a00000 	mov	r0, #0
400169f8:	eaffff80 	b	40016800 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400169fc:	40080000 	.word	0x40080000
40016a00:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016a04 <CyU3PDmaChannelSetupSendBuffer>:
40016a04:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016a08:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016a0c:	e1a04000 	mov	r4, r0
40016a10:	e1a05001 	mov	r5, r1
40016a14:	e3550000 	cmp	r5, #0
40016a18:	1a000002 	bne	40016a28 <CyU3PDmaChannelSetupSendBuffer+0x24>
40016a1c:	e3a00041 	mov	r0, #65	; 0x41
40016a20:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016a24:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016a28:	e5950000 	ldr	r0, [r5]
40016a2c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016a30:	3a000005 	bcc	40016a4c <CyU3PDmaChannelSetupSendBuffer+0x48>
40016a34:	e5950000 	ldr	r0, [r5]
40016a38:	e1d510b4 	ldrh	r1, [r5, #4]
40016a3c:	e0800001 	add	r0, r0, r1
40016a40:	e59f11ec 	ldr	r1, [pc, #492]	; 40016c34 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016a44:	e1500001 	cmp	r0, r1
40016a48:	3a000001 	bcc	40016a54 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016a4c:	e3a00040 	mov	r0, #64	; 0x40
40016a50:	eafffff2 	b	40016a20 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016a54:	e1d500b4 	ldrh	r0, [r5, #4]
40016a58:	e59f11d8 	ldr	r1, [pc, #472]	; 40016c38 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016a5c:	e1500001 	cmp	r0, r1
40016a60:	da000001 	ble	40016a6c <CyU3PDmaChannelSetupSendBuffer+0x68>
40016a64:	e3a00040 	mov	r0, #64	; 0x40
40016a68:	eaffffec 	b	40016a20 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016a6c:	e3e01000 	mvn	r1, #0
40016a70:	e1a00004 	mov	r0, r4
40016a74:	ebfff965 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40016a78:	e1a07000 	mov	r7, r0
40016a7c:	e3570000 	cmp	r7, #0
40016a80:	0a000001 	beq	40016a8c <CyU3PDmaChannelSetupSendBuffer+0x88>
40016a84:	e1a00007 	mov	r0, r7
40016a88:	eaffffe4 	b	40016a20 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016a8c:	e1d400b4 	ldrh	r0, [r4, #4]
40016a90:	e3500003 	cmp	r0, #3
40016a94:	1a000000 	bne	40016a9c <CyU3PDmaChannelSetupSendBuffer+0x98>
40016a98:	e3a07046 	mov	r7, #70	; 0x46
40016a9c:	e5940000 	ldr	r0, [r4]
40016aa0:	e3500001 	cmp	r0, #1
40016aa4:	0a000000 	beq	40016aac <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016aa8:	e3a07043 	mov	r7, #67	; 0x43
40016aac:	e3570000 	cmp	r7, #0
40016ab0:	0a000003 	beq	40016ac4 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016ab4:	e284003c 	add	r0, r4, #60	; 0x3c
40016ab8:	ebffcd5e 	bl	4000a038 <_txe_mutex_put>
40016abc:	e1a00007 	mov	r0, r7
40016ac0:	eaffffd6 	b	40016a20 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016ac4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016ac8:	e3500000 	cmp	r0, #0
40016acc:	0a000005 	beq	40016ae8 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016ad0:	e1d500b4 	ldrh	r0, [r5, #4]
40016ad4:	e3500000 	cmp	r0, #0
40016ad8:	0a000002 	beq	40016ae8 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016adc:	e1d510b4 	ldrh	r1, [r5, #4]
40016ae0:	e5950000 	ldr	r0, [r5]
40016ae4:	ebffed10 	bl	40011f2c <CyU3PSysCleanDRegion>
40016ae8:	e1d401b2 	ldrh	r0, [r4, #18]
40016aec:	ebfff7d3 	bl	40014a40 <CyU3PDmaSocketDisable>
40016af0:	e1d401b2 	ldrh	r0, [r4, #18]
40016af4:	e3a01000 	mov	r1, #0
40016af8:	ebfff8eb 	bl	40014eac <CyU3PDmaUpdateSocketSuspendOption>
40016afc:	e3a02002 	mov	r2, #2
40016b00:	e3e01027 	mvn	r1, #39	; 0x27
40016b04:	e2840074 	add	r0, r4, #116	; 0x74
40016b08:	ebffcc7d 	bl	40009d04 <_txe_event_flags_set>
40016b0c:	e3a00003 	mov	r0, #3
40016b10:	e5840000 	str	r0, [r4]
40016b14:	e1d401b2 	ldrh	r0, [r4, #18]
40016b18:	e28d1004 	add	r1, sp, #4
40016b1c:	ebfff7df 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40016b20:	e59d0004 	ldr	r0, [sp, #4]
40016b24:	e1c401b8 	strh	r0, [r4, #24]
40016b28:	e1d401b4 	ldrh	r0, [r4, #20]
40016b2c:	e28d101c 	add	r1, sp, #28
40016b30:	eb002e38 	bl	40022418 <CyU3PDmaDscrGetConfig>
40016b34:	e5950000 	ldr	r0, [r5]
40016b38:	e58d001c 	str	r0, [sp, #28]
40016b3c:	e1d401b2 	ldrh	r0, [r4, #18]
40016b40:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016b44:	e58d0020 	str	r0, [sp, #32]
40016b48:	e59d0020 	ldr	r0, [sp, #32]
40016b4c:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016b50:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016b54:	e58d0020 	str	r0, [sp, #32]
40016b58:	e1d401b8 	ldrh	r0, [r4, #24]
40016b5c:	e2400801 	sub	r0, r0, #65536	; 0x10000
40016b60:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016b64:	e1d500b4 	ldrh	r0, [r5, #4]
40016b68:	e280000f 	add	r0, r0, #15
40016b6c:	e59f10c4 	ldr	r1, [pc, #196]	; 40016c38 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016b70:	e0006001 	and	r6, r0, r1
40016b74:	e1d500b4 	ldrh	r0, [r5, #4]
40016b78:	e1860800 	orr	r0, r6, r0, lsl #16
40016b7c:	e3800008 	orr	r0, r0, #8
40016b80:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016b84:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016b88:	e1d510b8 	ldrh	r1, [r5, #8]
40016b8c:	e201100e 	and	r1, r1, #14
40016b90:	e1800001 	orr	r0, r0, r1
40016b94:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016b98:	e1d401b4 	ldrh	r0, [r4, #20]
40016b9c:	e28d101c 	add	r1, sp, #28
40016ba0:	eb002e37 	bl	40022484 <CyU3PDmaDscrSetConfig>
40016ba4:	e59d0010 	ldr	r0, [sp, #16]
40016ba8:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016bac:	e58d0010 	str	r0, [sp, #16]
40016bb0:	e59d0010 	ldr	r0, [sp, #16]
40016bb4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016bb8:	e58d0010 	str	r0, [sp, #16]
40016bbc:	e59d0010 	ldr	r0, [sp, #16]
40016bc0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016bc4:	e58d0010 	str	r0, [sp, #16]
40016bc8:	e59d0010 	ldr	r0, [sp, #16]
40016bcc:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40016bd0:	e58d0010 	str	r0, [sp, #16]
40016bd4:	e59d0010 	ldr	r0, [sp, #16]
40016bd8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016bdc:	e58d0010 	str	r0, [sp, #16]
40016be0:	e1d500b4 	ldrh	r0, [r5, #4]
40016be4:	e58d0008 	str	r0, [sp, #8]
40016be8:	e3a00000 	mov	r0, #0
40016bec:	e58d000c 	str	r0, [sp, #12]
40016bf0:	e3e00000 	mvn	r0, #0
40016bf4:	e58d0014 	str	r0, [sp, #20]
40016bf8:	e59d0018 	ldr	r0, [sp, #24]
40016bfc:	e3800002 	orr	r0, r0, #2
40016c00:	e58d0018 	str	r0, [sp, #24]
40016c04:	e59d0018 	ldr	r0, [sp, #24]
40016c08:	e3c00080 	bic	r0, r0, #128	; 0x80
40016c0c:	e58d0018 	str	r0, [sp, #24]
40016c10:	e1d401b4 	ldrh	r0, [r4, #20]
40016c14:	e58d0004 	str	r0, [sp, #4]
40016c18:	e1d401b2 	ldrh	r0, [r4, #18]
40016c1c:	e28d1004 	add	r1, sp, #4
40016c20:	ebfff848 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40016c24:	e284003c 	add	r0, r4, #60	; 0x3c
40016c28:	ebffcd02 	bl	4000a038 <_txe_mutex_put>
40016c2c:	e3a00000 	mov	r0, #0
40016c30:	eaffff7a 	b	40016a20 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016c34:	40080000 	.word	0x40080000
40016c38:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

40016c3c <CyU3PDmaChannelWaitForCompletion>:
40016c3c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40016c40:	e1a04000 	mov	r4, r0
40016c44:	e1a05001 	mov	r5, r1
40016c48:	e3a08000 	mov	r8, #0
40016c4c:	e1a01005 	mov	r1, r5
40016c50:	e1a00004 	mov	r0, r4
40016c54:	ebfff8ed 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40016c58:	e1a07000 	mov	r7, r0
40016c5c:	e3570000 	cmp	r7, #0
40016c60:	0a000001 	beq	40016c6c <CyU3PDmaChannelWaitForCompletion+0x30>
40016c64:	e1a00007 	mov	r0, r7
40016c68:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40016c6c:	e5946000 	ldr	r6, [r4]
40016c70:	e3560001 	cmp	r6, #1
40016c74:	1a00000b 	bne	40016ca8 <CyU3PDmaChannelWaitForCompletion+0x6c>
40016c78:	e3a03000 	mov	r3, #0
40016c7c:	e58d3000 	str	r3, [sp]
40016c80:	e28d3004 	add	r3, sp, #4
40016c84:	e3a02000 	mov	r2, #0
40016c88:	e3a01007 	mov	r1, #7
40016c8c:	e2840074 	add	r0, r4, #116	; 0x74
40016c90:	ebffcbeb 	bl	40009c44 <_txe_event_flags_get>
40016c94:	e1a07000 	mov	r7, r0
40016c98:	e3570000 	cmp	r7, #0
40016c9c:	0a000016 	beq	40016cfc <CyU3PDmaChannelWaitForCompletion+0xc0>
40016ca0:	e3a07042 	mov	r7, #66	; 0x42
40016ca4:	ea000014 	b	40016cfc <CyU3PDmaChannelWaitForCompletion+0xc0>
40016ca8:	e3560002 	cmp	r6, #2
40016cac:	1a000005 	bne	40016cc8 <CyU3PDmaChannelWaitForCompletion+0x8c>
40016cb0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40016cb4:	e3500000 	cmp	r0, #0
40016cb8:	1a000000 	bne	40016cc0 <CyU3PDmaChannelWaitForCompletion+0x84>
40016cbc:	e3a07046 	mov	r7, #70	; 0x46
40016cc0:	e3a08061 	mov	r8, #97	; 0x61
40016cc4:	ea00000c 	b	40016cfc <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cc8:	e3560003 	cmp	r6, #3
40016ccc:	1a000001 	bne	40016cd8 <CyU3PDmaChannelWaitForCompletion+0x9c>
40016cd0:	e3a08062 	mov	r8, #98	; 0x62
40016cd4:	ea000008 	b	40016cfc <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cd8:	e3560004 	cmp	r6, #4
40016cdc:	1a000001 	bne	40016ce8 <CyU3PDmaChannelWaitForCompletion+0xac>
40016ce0:	e3a08064 	mov	r8, #100	; 0x64
40016ce4:	ea000004 	b	40016cfc <CyU3PDmaChannelWaitForCompletion+0xc0>
40016ce8:	e3560005 	cmp	r6, #5
40016cec:	1a000001 	bne	40016cf8 <CyU3PDmaChannelWaitForCompletion+0xbc>
40016cf0:	e3a07049 	mov	r7, #73	; 0x49
40016cf4:	ea000000 	b	40016cfc <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cf8:	e3a07042 	mov	r7, #66	; 0x42
40016cfc:	e284003c 	add	r0, r4, #60	; 0x3c
40016d00:	ebffcccc 	bl	4000a038 <_txe_mutex_put>
40016d04:	e3570000 	cmp	r7, #0
40016d08:	1a000015 	bne	40016d64 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d0c:	e3580000 	cmp	r8, #0
40016d10:	0a000013 	beq	40016d64 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d14:	e58d5000 	str	r5, [sp]
40016d18:	e28d3004 	add	r3, sp, #4
40016d1c:	e3a02000 	mov	r2, #0
40016d20:	e1a01008 	mov	r1, r8
40016d24:	e2840074 	add	r0, r4, #116	; 0x74
40016d28:	ebffcbc5 	bl	40009c44 <_txe_event_flags_get>
40016d2c:	e1a07000 	mov	r7, r0
40016d30:	e3570000 	cmp	r7, #0
40016d34:	0a000001 	beq	40016d40 <CyU3PDmaChannelWaitForCompletion+0x104>
40016d38:	e3a07045 	mov	r7, #69	; 0x45
40016d3c:	ea000008 	b	40016d64 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d40:	e59d0004 	ldr	r0, [sp, #4]
40016d44:	e3100040 	tst	r0, #64	; 0x40
40016d48:	0a000001 	beq	40016d54 <CyU3PDmaChannelWaitForCompletion+0x118>
40016d4c:	e3a07049 	mov	r7, #73	; 0x49
40016d50:	ea000003 	b	40016d64 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d54:	e59d0004 	ldr	r0, [sp, #4]
40016d58:	e3100020 	tst	r0, #32
40016d5c:	0a000000 	beq	40016d64 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d60:	e3a07048 	mov	r7, #72	; 0x48
40016d64:	e1a00007 	mov	r0, r7
40016d68:	eaffffbe 	b	40016c68 <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

40016d6c <CyU3PDmaChannelWaitForRecvBuffer>:
40016d6c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016d70:	e24dd018 	sub	sp, sp, #24
40016d74:	e1a04000 	mov	r4, r0
40016d78:	e1a05001 	mov	r5, r1
40016d7c:	e1a06002 	mov	r6, r2
40016d80:	e3550000 	cmp	r5, #0
40016d84:	1a000002 	bne	40016d94 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
40016d88:	e3a00041 	mov	r0, #65	; 0x41
40016d8c:	e28dd018 	add	sp, sp, #24
40016d90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016d94:	e1a01006 	mov	r1, r6
40016d98:	e1a00004 	mov	r0, r4
40016d9c:	ebfff89b 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40016da0:	e1a07000 	mov	r7, r0
40016da4:	e3570000 	cmp	r7, #0
40016da8:	0a000001 	beq	40016db4 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
40016dac:	e1a00007 	mov	r0, r7
40016db0:	eafffff5 	b	40016d8c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016db4:	e1d400b4 	ldrh	r0, [r4, #4]
40016db8:	e3500004 	cmp	r0, #4
40016dbc:	1a000000 	bne	40016dc4 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40016dc0:	e3a07046 	mov	r7, #70	; 0x46
40016dc4:	e5948000 	ldr	r8, [r4]
40016dc8:	e3570000 	cmp	r7, #0
40016dcc:	1a000034 	bne	40016ea4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016dd0:	e3580004 	cmp	r8, #4
40016dd4:	1a00001e 	bne	40016e54 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40016dd8:	e284003c 	add	r0, r4, #60	; 0x3c
40016ddc:	ebffcc95 	bl	4000a038 <_txe_mutex_put>
40016de0:	e58d6000 	str	r6, [sp]
40016de4:	e28d3014 	add	r3, sp, #20
40016de8:	e3a02000 	mov	r2, #0
40016dec:	e3a01064 	mov	r1, #100	; 0x64
40016df0:	e2840074 	add	r0, r4, #116	; 0x74
40016df4:	ebffcb92 	bl	40009c44 <_txe_event_flags_get>
40016df8:	e1a07000 	mov	r7, r0
40016dfc:	e3570000 	cmp	r7, #0
40016e00:	0a000001 	beq	40016e0c <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
40016e04:	e3a00045 	mov	r0, #69	; 0x45
40016e08:	eaffffdf 	b	40016d8c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e0c:	e59d0014 	ldr	r0, [sp, #20]
40016e10:	e3100040 	tst	r0, #64	; 0x40
40016e14:	0a000001 	beq	40016e20 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
40016e18:	e3a00049 	mov	r0, #73	; 0x49
40016e1c:	eaffffda 	b	40016d8c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e20:	e59d0014 	ldr	r0, [sp, #20]
40016e24:	e3100020 	tst	r0, #32
40016e28:	0a000001 	beq	40016e34 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
40016e2c:	e3a00048 	mov	r0, #72	; 0x48
40016e30:	eaffffd5 	b	40016d8c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e34:	e1a01006 	mov	r1, r6
40016e38:	e1a00004 	mov	r0, r4
40016e3c:	ebfff873 	bl	40015010 <CyU3PDmaChannelAcquireLock>
40016e40:	e1a07000 	mov	r7, r0
40016e44:	e3570000 	cmp	r7, #0
40016e48:	0a000015 	beq	40016ea4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016e4c:	e1a00007 	mov	r0, r7
40016e50:	eaffffcd 	b	40016d8c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e54:	e3580001 	cmp	r8, #1
40016e58:	1a000010 	bne	40016ea0 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
40016e5c:	e3a03000 	mov	r3, #0
40016e60:	e58d3000 	str	r3, [sp]
40016e64:	e28d3014 	add	r3, sp, #20
40016e68:	e3a02000 	mov	r2, #0
40016e6c:	e3a01024 	mov	r1, #36	; 0x24
40016e70:	e2840074 	add	r0, r4, #116	; 0x74
40016e74:	ebffcb72 	bl	40009c44 <_txe_event_flags_get>
40016e78:	e1a07000 	mov	r7, r0
40016e7c:	e3570000 	cmp	r7, #0
40016e80:	0a000001 	beq	40016e8c <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40016e84:	e3a07047 	mov	r7, #71	; 0x47
40016e88:	ea000005 	b	40016ea4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016e8c:	e59d0014 	ldr	r0, [sp, #20]
40016e90:	e3100020 	tst	r0, #32
40016e94:	0a000002 	beq	40016ea4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016e98:	e3a07042 	mov	r7, #66	; 0x42
40016e9c:	ea000000 	b	40016ea4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016ea0:	e3a07047 	mov	r7, #71	; 0x47
40016ea4:	e3570000 	cmp	r7, #0
40016ea8:	0a000003 	beq	40016ebc <CyU3PDmaChannelWaitForRecvBuffer+0x150>
40016eac:	e284003c 	add	r0, r4, #60	; 0x3c
40016eb0:	ebffcc60 	bl	4000a038 <_txe_mutex_put>
40016eb4:	e1a00007 	mov	r0, r7
40016eb8:	eaffffb3 	b	40016d8c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016ebc:	e1d401b4 	ldrh	r0, [r4, #20]
40016ec0:	e28d1004 	add	r1, sp, #4
40016ec4:	eb002d53 	bl	40022418 <CyU3PDmaDscrGetConfig>
40016ec8:	e59d0004 	ldr	r0, [sp, #4]
40016ecc:	e5850000 	str	r0, [r5]
40016ed0:	e59d0010 	ldr	r0, [sp, #16]
40016ed4:	e59f1030 	ldr	r1, [pc, #48]	; 40016f0c <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40016ed8:	e0010820 	and	r0, r1, r0, lsr #16
40016edc:	e1c500b4 	strh	r0, [r5, #4]
40016ee0:	e241100f 	sub	r1, r1, #15
40016ee4:	e59d0010 	ldr	r0, [sp, #16]
40016ee8:	e0000001 	and	r0, r0, r1
40016eec:	e1c500b6 	strh	r0, [r5, #6]
40016ef0:	e59d0010 	ldr	r0, [sp, #16]
40016ef4:	e200000f 	and	r0, r0, #15
40016ef8:	e1c500b8 	strh	r0, [r5, #8]
40016efc:	e284003c 	add	r0, r4, #60	; 0x3c
40016f00:	ebffcc4c 	bl	4000a038 <_txe_mutex_put>
40016f04:	e3a00000 	mov	r0, #0
40016f08:	eaffff9f 	b	40016d8c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f0c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

40016f10 <CyU3PDmaConfigureSockets_TypeAuto>:
40016f10:	e92d4010 	push	{r4, lr}
40016f14:	e24dd018 	sub	sp, sp, #24
40016f18:	e1a04000 	mov	r4, r0
40016f1c:	e1d401b0 	ldrh	r0, [r4, #16]
40016f20:	ebfff6c6 	bl	40014a40 <CyU3PDmaSocketDisable>
40016f24:	e1d401b2 	ldrh	r0, [r4, #18]
40016f28:	ebfff6c4 	bl	40014a40 <CyU3PDmaSocketDisable>
40016f2c:	e1d401b0 	ldrh	r0, [r4, #16]
40016f30:	e1a0100d 	mov	r1, sp
40016f34:	ebfff6d9 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40016f38:	e1d400bc 	ldrh	r0, [r4, #12]
40016f3c:	e58d0000 	str	r0, [sp]
40016f40:	e3a00000 	mov	r0, #0
40016f44:	e58d0004 	str	r0, [sp, #4]
40016f48:	e58d0008 	str	r0, [sp, #8]
40016f4c:	e3a00646 	mov	r0, #73400320	; 0x4600000
40016f50:	e58d000c 	str	r0, [sp, #12]
40016f54:	e1d401b0 	ldrh	r0, [r4, #16]
40016f58:	eb000df6 	bl	4001a738 <CyU3PDmaIsSockAvlEnReqd>
40016f5c:	e3500000 	cmp	r0, #0
40016f60:	0a000002 	beq	40016f70 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
40016f64:	e59d000c 	ldr	r0, [sp, #12]
40016f68:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016f6c:	e58d000c 	str	r0, [sp, #12]
40016f70:	e3e00000 	mvn	r0, #0
40016f74:	e58d0010 	str	r0, [sp, #16]
40016f78:	e1d400b4 	ldrh	r0, [r4, #4]
40016f7c:	e3500001 	cmp	r0, #1
40016f80:	1a000001 	bne	40016f8c <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
40016f84:	e3a00041 	mov	r0, #65	; 0x41
40016f88:	ea000000 	b	40016f90 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
40016f8c:	e3a00040 	mov	r0, #64	; 0x40
40016f90:	e58d0014 	str	r0, [sp, #20]
40016f94:	e1d401b0 	ldrh	r0, [r4, #16]
40016f98:	e1a0100d 	mov	r1, sp
40016f9c:	ebfff769 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40016fa0:	e1d401b2 	ldrh	r0, [r4, #18]
40016fa4:	e1a0100d 	mov	r1, sp
40016fa8:	ebfff6bc 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40016fac:	e1d400bc 	ldrh	r0, [r4, #12]
40016fb0:	e58d0000 	str	r0, [sp]
40016fb4:	e3a00000 	mov	r0, #0
40016fb8:	e58d0004 	str	r0, [sp, #4]
40016fbc:	e58d0008 	str	r0, [sp, #8]
40016fc0:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40016fc4:	e58d000c 	str	r0, [sp, #12]
40016fc8:	e1d401b2 	ldrh	r0, [r4, #18]
40016fcc:	eb000dd9 	bl	4001a738 <CyU3PDmaIsSockAvlEnReqd>
40016fd0:	e3500000 	cmp	r0, #0
40016fd4:	0a000002 	beq	40016fe4 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
40016fd8:	e59d000c 	ldr	r0, [sp, #12]
40016fdc:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016fe0:	e58d000c 	str	r0, [sp, #12]
40016fe4:	e3e00000 	mvn	r0, #0
40016fe8:	e58d0010 	str	r0, [sp, #16]
40016fec:	e3a000c0 	mov	r0, #192	; 0xc0
40016ff0:	e58d0014 	str	r0, [sp, #20]
40016ff4:	e1d401b2 	ldrh	r0, [r4, #18]
40016ff8:	e1a0100d 	mov	r1, sp
40016ffc:	ebfff751 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40017000:	e3a00000 	mov	r0, #0
40017004:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017008:	e28dd018 	add	sp, sp, #24
4001700c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

40017010 <CyU3PDmaConfigureSockets_TypeManual>:
40017010:	e92d4010 	push	{r4, lr}
40017014:	e24dd018 	sub	sp, sp, #24
40017018:	e1a04000 	mov	r4, r0
4001701c:	e1d400b4 	ldrh	r0, [r4, #4]
40017020:	e3500004 	cmp	r0, #4
40017024:	0a00001f 	beq	400170a8 <CyU3PDmaConfigureSockets_TypeManual+0x98>
40017028:	e1d401b0 	ldrh	r0, [r4, #16]
4001702c:	ebfff683 	bl	40014a40 <CyU3PDmaSocketDisable>
40017030:	e1d401b0 	ldrh	r0, [r4, #16]
40017034:	e1a0100d 	mov	r1, sp
40017038:	ebfff698 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
4001703c:	e1d400bc 	ldrh	r0, [r4, #12]
40017040:	e58d0000 	str	r0, [sp]
40017044:	e3a00000 	mov	r0, #0
40017048:	e58d0004 	str	r0, [sp, #4]
4001704c:	e58d0008 	str	r0, [sp, #8]
40017050:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017054:	e58d000c 	str	r0, [sp, #12]
40017058:	e1d401b0 	ldrh	r0, [r4, #16]
4001705c:	eb000db5 	bl	4001a738 <CyU3PDmaIsSockAvlEnReqd>
40017060:	e3500000 	cmp	r0, #0
40017064:	0a000002 	beq	40017074 <CyU3PDmaConfigureSockets_TypeManual+0x64>
40017068:	e59d000c 	ldr	r0, [sp, #12]
4001706c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017070:	e58d000c 	str	r0, [sp, #12]
40017074:	e3e00000 	mvn	r0, #0
40017078:	e58d0010 	str	r0, [sp, #16]
4001707c:	e3a00041 	mov	r0, #65	; 0x41
40017080:	e58d0014 	str	r0, [sp, #20]
40017084:	e1d400b4 	ldrh	r0, [r4, #4]
40017088:	e3500003 	cmp	r0, #3
4001708c:	1a000002 	bne	4001709c <CyU3PDmaConfigureSockets_TypeManual+0x8c>
40017090:	e59d0014 	ldr	r0, [sp, #20]
40017094:	e3800080 	orr	r0, r0, #128	; 0x80
40017098:	e58d0014 	str	r0, [sp, #20]
4001709c:	e1d401b0 	ldrh	r0, [r4, #16]
400170a0:	e1a0100d 	mov	r1, sp
400170a4:	ebfff727 	bl	40014d48 <CyU3PDmaSocketSetConfig>
400170a8:	e1d400b4 	ldrh	r0, [r4, #4]
400170ac:	e3500003 	cmp	r0, #3
400170b0:	0a000019 	beq	4001711c <CyU3PDmaConfigureSockets_TypeManual+0x10c>
400170b4:	e1d401b2 	ldrh	r0, [r4, #18]
400170b8:	ebfff660 	bl	40014a40 <CyU3PDmaSocketDisable>
400170bc:	e1d401b2 	ldrh	r0, [r4, #18]
400170c0:	e1a0100d 	mov	r1, sp
400170c4:	ebfff675 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
400170c8:	e1d400be 	ldrh	r0, [r4, #14]
400170cc:	e58d0000 	str	r0, [sp]
400170d0:	e3a00000 	mov	r0, #0
400170d4:	e58d0004 	str	r0, [sp, #4]
400170d8:	e58d0008 	str	r0, [sp, #8]
400170dc:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400170e0:	e58d000c 	str	r0, [sp, #12]
400170e4:	e1d401b2 	ldrh	r0, [r4, #18]
400170e8:	eb000d92 	bl	4001a738 <CyU3PDmaIsSockAvlEnReqd>
400170ec:	e3500000 	cmp	r0, #0
400170f0:	0a000002 	beq	40017100 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
400170f4:	e59d000c 	ldr	r0, [sp, #12]
400170f8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400170fc:	e58d000c 	str	r0, [sp, #12]
40017100:	e3e00000 	mvn	r0, #0
40017104:	e58d0010 	str	r0, [sp, #16]
40017108:	e3a000c2 	mov	r0, #194	; 0xc2
4001710c:	e58d0014 	str	r0, [sp, #20]
40017110:	e1d401b2 	ldrh	r0, [r4, #18]
40017114:	e1a0100d 	mov	r1, sp
40017118:	ebfff70a 	bl	40014d48 <CyU3PDmaSocketSetConfig>
4001711c:	e3a00000 	mov	r0, #0
40017120:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017124:	e28dd018 	add	sp, sp, #24
40017128:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

4001712c <CyU3PDmaMultiChannelAcquireLock>:
4001712c:	e92d4070 	push	{r4, r5, r6, lr}
40017130:	e1a04000 	mov	r4, r0
40017134:	e1a05001 	mov	r5, r1
40017138:	e3540000 	cmp	r4, #0
4001713c:	1a000001 	bne	40017148 <CyU3PDmaMultiChannelAcquireLock+0x1c>
40017140:	e3a00041 	mov	r0, #65	; 0x41
40017144:	e8bd8070 	pop	{r4, r5, r6, pc}
40017148:	e5940000 	ldr	r0, [r4]
4001714c:	e3500000 	cmp	r0, #0
40017150:	1a000001 	bne	4001715c <CyU3PDmaMultiChannelAcquireLock+0x30>
40017154:	e3a00044 	mov	r0, #68	; 0x44
40017158:	eafffff9 	b	40017144 <CyU3PDmaMultiChannelAcquireLock+0x18>
4001715c:	e1a01005 	mov	r1, r5
40017160:	e2840078 	add	r0, r4, #120	; 0x78
40017164:	ebffcb7e 	bl	40009f64 <_txe_mutex_get>
40017168:	e3500000 	cmp	r0, #0
4001716c:	0a000001 	beq	40017178 <CyU3PDmaMultiChannelAcquireLock+0x4c>
40017170:	e3a0001d 	mov	r0, #29
40017174:	eafffff2 	b	40017144 <CyU3PDmaMultiChannelAcquireLock+0x18>
40017178:	e3a00000 	mov	r0, #0
4001717c:	eafffff0 	b	40017144 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

40017180 <CyU3PDmaMultiChannelCommitBuffer>:
40017180:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40017184:	e24dd03c 	sub	sp, sp, #60	; 0x3c
40017188:	e1a04000 	mov	r4, r0
4001718c:	e1a05001 	mov	r5, r1
40017190:	e1a06002 	mov	r6, r2
40017194:	e3e01000 	mvn	r1, #0
40017198:	e1a00004 	mov	r0, r4
4001719c:	ebffffe2 	bl	4001712c <CyU3PDmaMultiChannelAcquireLock>
400171a0:	e1a0b000 	mov	fp, r0
400171a4:	e35b0000 	cmp	fp, #0
400171a8:	0a000002 	beq	400171b8 <CyU3PDmaMultiChannelCommitBuffer+0x38>
400171ac:	e1a0000b 	mov	r0, fp
400171b0:	e28dd03c 	add	sp, sp, #60	; 0x3c
400171b4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400171b8:	e1d400b4 	ldrh	r0, [r4, #4]
400171bc:	e20070ff 	and	r7, r0, #255	; 0xff
400171c0:	e1d400b6 	ldrh	r0, [r4, #6]
400171c4:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400171c8:	e0400001 	sub	r0, r0, r1
400171cc:	e1500005 	cmp	r0, r5
400171d0:	aa000000 	bge	400171d8 <CyU3PDmaMultiChannelCommitBuffer+0x58>
400171d4:	e3a0b040 	mov	fp, #64	; 0x40
400171d8:	e5940000 	ldr	r0, [r4]
400171dc:	e3500002 	cmp	r0, #2
400171e0:	0a000000 	beq	400171e8 <CyU3PDmaMultiChannelCommitBuffer+0x68>
400171e4:	e3a0b042 	mov	fp, #66	; 0x42
400171e8:	e5940000 	ldr	r0, [r4]
400171ec:	e3500005 	cmp	r0, #5
400171f0:	1a000000 	bne	400171f8 <CyU3PDmaMultiChannelCommitBuffer+0x78>
400171f4:	e3a0b049 	mov	fp, #73	; 0x49
400171f8:	e5940000 	ldr	r0, [r4]
400171fc:	e3500007 	cmp	r0, #7
40017200:	1a000000 	bne	40017208 <CyU3PDmaMultiChannelCommitBuffer+0x88>
40017204:	e3a0b048 	mov	fp, #72	; 0x48
40017208:	e3570006 	cmp	r7, #6
4001720c:	1a000000 	bne	40017214 <CyU3PDmaMultiChannelCommitBuffer+0x94>
40017210:	e3a0b046 	mov	fp, #70	; 0x46
40017214:	e3570005 	cmp	r7, #5
40017218:	1a000034 	bne	400172f0 <CyU3PDmaMultiChannelCommitBuffer+0x170>
4001721c:	e35b0000 	cmp	fp, #0
40017220:	1a000032 	bne	400172f0 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017224:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017228:	e28d1024 	add	r1, sp, #36	; 0x24
4001722c:	ebfff61b 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40017230:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40017234:	e3100702 	tst	r0, #524288	; 0x80000
40017238:	0a000027 	beq	400172dc <CyU3PDmaMultiChannelCommitBuffer+0x15c>
4001723c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40017240:	e1a09800 	lsl	r9, r0, #16
40017244:	e1a09829 	lsr	r9, r9, #16
40017248:	e28d1004 	add	r1, sp, #4
4001724c:	e1a00009 	mov	r0, r9
40017250:	eb002c70 	bl	40022418 <CyU3PDmaDscrGetConfig>
40017254:	e59d0010 	ldr	r0, [sp, #16]
40017258:	e3100008 	tst	r0, #8
4001725c:	0a00001c 	beq	400172d4 <CyU3PDmaMultiChannelCommitBuffer+0x154>
40017260:	e59d0010 	ldr	r0, [sp, #16]
40017264:	e1a00800 	lsl	r0, r0, #16
40017268:	e1a00820 	lsr	r0, r0, #16
4001726c:	e58d0010 	str	r0, [sp, #16]
40017270:	e59d0010 	ldr	r0, [sp, #16]
40017274:	e1800805 	orr	r0, r0, r5, lsl #16
40017278:	e58d0010 	str	r0, [sp, #16]
4001727c:	e3560000 	cmp	r6, #0
40017280:	0a000007 	beq	400172a4 <CyU3PDmaMultiChannelCommitBuffer+0x124>
40017284:	e59d0010 	ldr	r0, [sp, #16]
40017288:	e3c0000f 	bic	r0, r0, #15
4001728c:	e58d0010 	str	r0, [sp, #16]
40017290:	e206100e 	and	r1, r6, #14
40017294:	e3811008 	orr	r1, r1, #8
40017298:	e59d0010 	ldr	r0, [sp, #16]
4001729c:	e1800001 	orr	r0, r0, r1
400172a0:	e58d0010 	str	r0, [sp, #16]
400172a4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400172a8:	e3500000 	cmp	r0, #0
400172ac:	0a000004 	beq	400172c4 <CyU3PDmaMultiChannelCommitBuffer+0x144>
400172b0:	e59d2010 	ldr	r2, [sp, #16]
400172b4:	e59f327c 	ldr	r3, [pc, #636]	; 40017538 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400172b8:	e0021003 	and	r1, r2, r3
400172bc:	e59d0004 	ldr	r0, [sp, #4]
400172c0:	ebffeb19 	bl	40011f2c <CyU3PSysCleanDRegion>
400172c4:	e28d1004 	add	r1, sp, #4
400172c8:	e1a00009 	mov	r0, r9
400172cc:	eb002c6c 	bl	40022484 <CyU3PDmaDscrSetConfig>
400172d0:	ea000002 	b	400172e0 <CyU3PDmaMultiChannelCommitBuffer+0x160>
400172d4:	e3a0b047 	mov	fp, #71	; 0x47
400172d8:	ea000000 	b	400172e0 <CyU3PDmaMultiChannelCommitBuffer+0x160>
400172dc:	e3a0b047 	mov	fp, #71	; 0x47
400172e0:	e2840078 	add	r0, r4, #120	; 0x78
400172e4:	ebffcb53 	bl	4000a038 <_txe_mutex_put>
400172e8:	e1a0000b 	mov	r0, fp
400172ec:	eaffffaf 	b	400171b0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400172f0:	e35b0000 	cmp	fp, #0
400172f4:	1a00000d 	bne	40017330 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
400172f8:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400172fc:	e28d1014 	add	r1, sp, #20
40017300:	eb002c44 	bl	40022418 <CyU3PDmaDscrGetConfig>
40017304:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017308:	e28d1004 	add	r1, sp, #4
4001730c:	eb002c41 	bl	40022418 <CyU3PDmaDscrGetConfig>
40017310:	e59d0020 	ldr	r0, [sp, #32]
40017314:	e3100008 	tst	r0, #8
40017318:	1a000000 	bne	40017320 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
4001731c:	e3a0b047 	mov	fp, #71	; 0x47
40017320:	e59d0010 	ldr	r0, [sp, #16]
40017324:	e3100008 	tst	r0, #8
40017328:	0a000000 	beq	40017330 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
4001732c:	e3a0b047 	mov	fp, #71	; 0x47
40017330:	e35b0000 	cmp	fp, #0
40017334:	0a000003 	beq	40017348 <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
40017338:	e2840078 	add	r0, r4, #120	; 0x78
4001733c:	ebffcb3d 	bl	4000a038 <_txe_mutex_put>
40017340:	e1a0000b 	mov	r0, fp
40017344:	eaffff99 	b	400171b0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017348:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001734c:	e3500000 	cmp	r0, #0
40017350:	0a000004 	beq	40017368 <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
40017354:	e59d2010 	ldr	r2, [sp, #16]
40017358:	e59f31d8 	ldr	r3, [pc, #472]	; 40017538 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
4001735c:	e0021003 	and	r1, r2, r3
40017360:	e59d0004 	ldr	r0, [sp, #4]
40017364:	ebffeaf0 	bl	40011f2c <CyU3PSysCleanDRegion>
40017368:	e3570009 	cmp	r7, #9
4001736c:	1a00003a 	bne	4001745c <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
40017370:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
40017374:	e3a0a000 	mov	sl, #0
40017378:	ea00002a 	b	40017428 <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
4001737c:	e28d1004 	add	r1, sp, #4
40017380:	e1a00009 	mov	r0, r9
40017384:	eb002c23 	bl	40022418 <CyU3PDmaDscrGetConfig>
40017388:	e284000c 	add	r0, r4, #12
4001738c:	e080008a 	add	r0, r0, sl, lsl #1
40017390:	e1d000b0 	ldrh	r0, [r0]
40017394:	e3500000 	cmp	r0, #0
40017398:	1a00001d 	bne	40017414 <CyU3PDmaMultiChannelCommitBuffer+0x294>
4001739c:	e59d0010 	ldr	r0, [sp, #16]
400173a0:	e59f1190 	ldr	r1, [pc, #400]	; 40017538 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400173a4:	e0000001 	and	r0, r0, r1
400173a8:	e58d0010 	str	r0, [sp, #16]
400173ac:	e59d0010 	ldr	r0, [sp, #16]
400173b0:	e1800805 	orr	r0, r0, r5, lsl #16
400173b4:	e58d0010 	str	r0, [sp, #16]
400173b8:	e3560000 	cmp	r6, #0
400173bc:	1a000005 	bne	400173d8 <CyU3PDmaMultiChannelCommitBuffer+0x258>
400173c0:	e59d1020 	ldr	r1, [sp, #32]
400173c4:	e201100f 	and	r1, r1, #15
400173c8:	e59d0010 	ldr	r0, [sp, #16]
400173cc:	e1800001 	orr	r0, r0, r1
400173d0:	e58d0010 	str	r0, [sp, #16]
400173d4:	ea000004 	b	400173ec <CyU3PDmaMultiChannelCommitBuffer+0x26c>
400173d8:	e206100e 	and	r1, r6, #14
400173dc:	e3811008 	orr	r1, r1, #8
400173e0:	e59d0010 	ldr	r0, [sp, #16]
400173e4:	e1800001 	orr	r0, r0, r1
400173e8:	e58d0010 	str	r0, [sp, #16]
400173ec:	e28d1004 	add	r1, sp, #4
400173f0:	e1a00009 	mov	r0, r9
400173f4:	eb002c22 	bl	40022484 <CyU3PDmaDscrSetConfig>
400173f8:	e59d0008 	ldr	r0, [sp, #8]
400173fc:	e1a08900 	lsl	r8, r0, #18
40017400:	e1a08928 	lsr	r8, r8, #18
40017404:	e3a02001 	mov	r2, #1
40017408:	e1a01009 	mov	r1, r9
4001740c:	e1a00008 	mov	r0, r8
40017410:	ebfff63a 	bl	40014d00 <CyU3PDmaSocketSendEvent>
40017414:	e59d000c 	ldr	r0, [sp, #12]
40017418:	e59f111c 	ldr	r1, [pc, #284]	; 4001753c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001741c:	e0019820 	and	r9, r1, r0, lsr #16
40017420:	e28a0001 	add	r0, sl, #1
40017424:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
40017428:	e1d400ba 	ldrh	r0, [r4, #10]
4001742c:	e150000a 	cmp	r0, sl
40017430:	caffffd1 	bgt	4001737c <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
40017434:	e59d001c 	ldr	r0, [sp, #28]
40017438:	e59f10fc 	ldr	r1, [pc, #252]	; 4001753c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001743c:	e0010820 	and	r0, r1, r0, lsr #16
40017440:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017444:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017448:	e28d1014 	add	r1, sp, #20
4001744c:	eb002bf1 	bl	40022418 <CyU3PDmaDscrGetConfig>
40017450:	e59d001c 	ldr	r0, [sp, #28]
40017454:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017458:	ea000032 	b	40017528 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
4001745c:	e59d0010 	ldr	r0, [sp, #16]
40017460:	e59f10d0 	ldr	r1, [pc, #208]	; 40017538 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017464:	e0000001 	and	r0, r0, r1
40017468:	e58d0010 	str	r0, [sp, #16]
4001746c:	e59d0010 	ldr	r0, [sp, #16]
40017470:	e1800805 	orr	r0, r0, r5, lsl #16
40017474:	e58d0010 	str	r0, [sp, #16]
40017478:	e3560000 	cmp	r6, #0
4001747c:	1a000005 	bne	40017498 <CyU3PDmaMultiChannelCommitBuffer+0x318>
40017480:	e59d1020 	ldr	r1, [sp, #32]
40017484:	e201100f 	and	r1, r1, #15
40017488:	e59d0010 	ldr	r0, [sp, #16]
4001748c:	e1800001 	orr	r0, r0, r1
40017490:	e58d0010 	str	r0, [sp, #16]
40017494:	ea000004 	b	400174ac <CyU3PDmaMultiChannelCommitBuffer+0x32c>
40017498:	e206100e 	and	r1, r6, #14
4001749c:	e3811008 	orr	r1, r1, #8
400174a0:	e59d0010 	ldr	r0, [sp, #16]
400174a4:	e1800001 	orr	r0, r0, r1
400174a8:	e58d0010 	str	r0, [sp, #16]
400174ac:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400174b0:	e28d1004 	add	r1, sp, #4
400174b4:	eb002bf2 	bl	40022484 <CyU3PDmaDscrSetConfig>
400174b8:	e59d0008 	ldr	r0, [sp, #8]
400174bc:	e1a08900 	lsl	r8, r0, #18
400174c0:	e1a08928 	lsr	r8, r8, #18
400174c4:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
400174c8:	e3a02001 	mov	r2, #1
400174cc:	e1a00008 	mov	r0, r8
400174d0:	ebfff60a 	bl	40014d00 <CyU3PDmaSocketSendEvent>
400174d4:	e3570007 	cmp	r7, #7
400174d8:	1a000009 	bne	40017504 <CyU3PDmaMultiChannelCommitBuffer+0x384>
400174dc:	e59d000c 	ldr	r0, [sp, #12]
400174e0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400174e4:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400174e8:	e28d1004 	add	r1, sp, #4
400174ec:	eb002bc9 	bl	40022418 <CyU3PDmaDscrGetConfig>
400174f0:	e59d000c 	ldr	r0, [sp, #12]
400174f4:	e59f1040 	ldr	r1, [pc, #64]	; 4001753c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400174f8:	e0010820 	and	r0, r1, r0, lsr #16
400174fc:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017500:	ea000008 	b	40017528 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017504:	e59d001c 	ldr	r0, [sp, #28]
40017508:	e59f102c 	ldr	r1, [pc, #44]	; 4001753c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001750c:	e0010820 	and	r0, r1, r0, lsr #16
40017510:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017514:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017518:	e28d1014 	add	r1, sp, #20
4001751c:	eb002bbd 	bl	40022418 <CyU3PDmaDscrGetConfig>
40017520:	e59d001c 	ldr	r0, [sp, #28]
40017524:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017528:	e2840078 	add	r0, r4, #120	; 0x78
4001752c:	ebffcac1 	bl	4000a038 <_txe_mutex_put>
40017530:	e3a00000 	mov	r0, #0
40017534:	eaffff1d 	b	400171b0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017538:	0000fff0 	.word	0x0000fff0
4001753c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

40017540 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
40017540:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017544:	e24dd024 	sub	sp, sp, #36	; 0x24
40017548:	e1a04000 	mov	r4, r0
4001754c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017550:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017554:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017558:	e3866801 	orr	r6, r6, #65536	; 0x10000
4001755c:	e1d400b8 	ldrh	r0, [r4, #8]
40017560:	e1d430ba 	ldrh	r3, [r4, #10]
40017564:	e0000093 	mul	r0, r3, r0
40017568:	e1a01800 	lsl	r1, r0, #16
4001756c:	e1a01821 	lsr	r1, r1, #16
40017570:	e1d420b6 	ldrh	r2, [r4, #6]
40017574:	e1a03006 	mov	r3, r6
40017578:	e284001c 	add	r0, r4, #28
4001757c:	eb002ab6 	bl	4002205c <CyU3PDmaDscrChainCreate>
40017580:	e1a05000 	mov	r5, r0
40017584:	e3550000 	cmp	r5, #0
40017588:	0a000002 	beq	40017598 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
4001758c:	e1a00005 	mov	r0, r5
40017590:	e28dd024 	add	sp, sp, #36	; 0x24
40017594:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017598:	e1d400b4 	ldrh	r0, [r4, #4]
4001759c:	e3500005 	cmp	r0, #5
400175a0:	1a00003c 	bne	40017698 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
400175a4:	e3a07000 	mov	r7, #0
400175a8:	e1d481bc 	ldrh	r8, [r4, #28]
400175ac:	ea000035 	b	40017688 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
400175b0:	e3a09000 	mov	r9, #0
400175b4:	ea00002e 	b	40017674 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
400175b8:	e28d1004 	add	r1, sp, #4
400175bc:	e1a00008 	mov	r0, r8
400175c0:	eb002b94 	bl	40022418 <CyU3PDmaDscrGetConfig>
400175c4:	e3570000 	cmp	r7, #0
400175c8:	1a000003 	bne	400175dc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
400175cc:	e2840014 	add	r0, r4, #20
400175d0:	e0800089 	add	r0, r0, r9, lsl #1
400175d4:	e1c080b0 	strh	r8, [r0]
400175d8:	ea000020 	b	40017660 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
400175dc:	e2841014 	add	r1, r4, #20
400175e0:	e0811089 	add	r1, r1, r9, lsl #1
400175e4:	e1d100b0 	ldrh	r0, [r1]
400175e8:	e28d1014 	add	r1, sp, #20
400175ec:	eb002b89 	bl	40022418 <CyU3PDmaDscrGetConfig>
400175f0:	e59d0018 	ldr	r0, [sp, #24]
400175f4:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
400175f8:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
400175fc:	e58d0018 	str	r0, [sp, #24]
40017600:	e2841024 	add	r1, r4, #36	; 0x24
40017604:	e0811089 	add	r1, r1, r9, lsl #1
40017608:	e59d0018 	ldr	r0, [sp, #24]
4001760c:	e1d110b0 	ldrh	r1, [r1]
40017610:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017614:	e1821801 	orr	r1, r2, r1, lsl #16
40017618:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
4001761c:	e1800001 	orr	r0, r0, r1
40017620:	e58d0018 	str	r0, [sp, #24]
40017624:	e59d001c 	ldr	r0, [sp, #28]
40017628:	e1a00800 	lsl	r0, r0, #16
4001762c:	e1a00820 	lsr	r0, r0, #16
40017630:	e58d001c 	str	r0, [sp, #28]
40017634:	e59d001c 	ldr	r0, [sp, #28]
40017638:	e1800808 	orr	r0, r0, r8, lsl #16
4001763c:	e58d001c 	str	r0, [sp, #28]
40017640:	e2841014 	add	r1, r4, #20
40017644:	e0811089 	add	r1, r1, r9, lsl #1
40017648:	e1d100b0 	ldrh	r0, [r1]
4001764c:	e28d1014 	add	r1, sp, #20
40017650:	eb002b8b 	bl	40022484 <CyU3PDmaDscrSetConfig>
40017654:	e2840014 	add	r0, r4, #20
40017658:	e0800089 	add	r0, r0, r9, lsl #1
4001765c:	e1c080b0 	strh	r8, [r0]
40017660:	e59d000c 	ldr	r0, [sp, #12]
40017664:	e1a08800 	lsl	r8, r0, #16
40017668:	e1a08828 	lsr	r8, r8, #16
4001766c:	e2890001 	add	r0, r9, #1
40017670:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017674:	e1d400ba 	ldrh	r0, [r4, #10]
40017678:	e1500009 	cmp	r0, r9
4001767c:	caffffcd 	bgt	400175b8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
40017680:	e2870001 	add	r0, r7, #1
40017684:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017688:	e1d400b8 	ldrh	r0, [r4, #8]
4001768c:	e1500007 	cmp	r0, r7
40017690:	aaffffc6 	bge	400175b0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
40017694:	ea000056 	b	400177f4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
40017698:	e3a07000 	mov	r7, #0
4001769c:	e1d481bc 	ldrh	r8, [r4, #28]
400176a0:	ea000050 	b	400177e8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
400176a4:	e3a09000 	mov	r9, #0
400176a8:	ea000049 	b	400177d4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
400176ac:	e3570000 	cmp	r7, #0
400176b0:	1a00000d 	bne	400176ec <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
400176b4:	e3a06cff 	mov	r6, #65280	; 0xff00
400176b8:	e2840024 	add	r0, r4, #36	; 0x24
400176bc:	e0800089 	add	r0, r0, r9, lsl #1
400176c0:	e1d000b0 	ldrh	r0, [r0]
400176c4:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400176c8:	e1810800 	orr	r0, r1, r0, lsl #16
400176cc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400176d0:	e1866000 	orr	r6, r6, r0
400176d4:	e1d410b8 	ldrh	r1, [r4, #8]
400176d8:	e2842014 	add	r2, r4, #20
400176dc:	e0820089 	add	r0, r2, r9, lsl #1
400176e0:	e1a03006 	mov	r3, r6
400176e4:	e3a02000 	mov	r2, #0
400176e8:	eb002a5b 	bl	4002205c <CyU3PDmaDscrChainCreate>
400176ec:	e2841014 	add	r1, r4, #20
400176f0:	e0811089 	add	r1, r1, r9, lsl #1
400176f4:	e1d100b0 	ldrh	r0, [r1]
400176f8:	e28d1014 	add	r1, sp, #20
400176fc:	eb002b45 	bl	40022418 <CyU3PDmaDscrGetConfig>
40017700:	e28d1004 	add	r1, sp, #4
40017704:	e1a00008 	mov	r0, r8
40017708:	eb002b42 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001770c:	e59d0004 	ldr	r0, [sp, #4]
40017710:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017714:	e0800001 	add	r0, r0, r1
40017718:	e58d0014 	str	r0, [sp, #20]
4001771c:	e59d0010 	ldr	r0, [sp, #16]
40017720:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017724:	e0400001 	sub	r0, r0, r1
40017728:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
4001772c:	e0400001 	sub	r0, r0, r1
40017730:	e58d0020 	str	r0, [sp, #32]
40017734:	e2841014 	add	r1, r4, #20
40017738:	e0811089 	add	r1, r1, r9, lsl #1
4001773c:	e1d100b0 	ldrh	r0, [r1]
40017740:	e28d1014 	add	r1, sp, #20
40017744:	eb002b4e 	bl	40022484 <CyU3PDmaDscrSetConfig>
40017748:	e59d0004 	ldr	r0, [sp, #4]
4001774c:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017750:	e0800001 	add	r0, r0, r1
40017754:	e58d0004 	str	r0, [sp, #4]
40017758:	e1d400b6 	ldrh	r0, [r4, #6]
4001775c:	e280000f 	add	r0, r0, #15
40017760:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017764:	e0400001 	sub	r0, r0, r1
40017768:	e59f10b4 	ldr	r1, [pc, #180]	; 40017824 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
4001776c:	e0000001 	and	r0, r0, r1
40017770:	e58d0010 	str	r0, [sp, #16]
40017774:	e59d000c 	ldr	r0, [sp, #12]
40017778:	e1a00800 	lsl	r0, r0, #16
4001777c:	e1a00820 	lsr	r0, r0, #16
40017780:	e58d000c 	str	r0, [sp, #12]
40017784:	e2841014 	add	r1, r4, #20
40017788:	e0811089 	add	r1, r1, r9, lsl #1
4001778c:	e59d000c 	ldr	r0, [sp, #12]
40017790:	e1d110b0 	ldrh	r1, [r1]
40017794:	e1800801 	orr	r0, r0, r1, lsl #16
40017798:	e58d000c 	str	r0, [sp, #12]
4001779c:	e28d1004 	add	r1, sp, #4
400177a0:	e1a00008 	mov	r0, r8
400177a4:	eb002b36 	bl	40022484 <CyU3PDmaDscrSetConfig>
400177a8:	e59d000c 	ldr	r0, [sp, #12]
400177ac:	e1a08800 	lsl	r8, r0, #16
400177b0:	e1a08828 	lsr	r8, r8, #16
400177b4:	e59d001c 	ldr	r0, [sp, #28]
400177b8:	e59f1068 	ldr	r1, [pc, #104]	; 40017828 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
400177bc:	e0010820 	and	r0, r1, r0, lsr #16
400177c0:	e2841014 	add	r1, r4, #20
400177c4:	e0811089 	add	r1, r1, r9, lsl #1
400177c8:	e1c100b0 	strh	r0, [r1]
400177cc:	e2890001 	add	r0, r9, #1
400177d0:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400177d4:	e1d400ba 	ldrh	r0, [r4, #10]
400177d8:	e1500009 	cmp	r0, r9
400177dc:	caffffb2 	bgt	400176ac <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
400177e0:	e2870001 	add	r0, r7, #1
400177e4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400177e8:	e1d400b8 	ldrh	r0, [r4, #8]
400177ec:	e1500007 	cmp	r0, r7
400177f0:	caffffab 	bgt	400176a4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
400177f4:	e1a00004 	mov	r0, r4
400177f8:	eb000509 	bl	40018c24 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
400177fc:	e1d401b4 	ldrh	r0, [r4, #20]
40017800:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017804:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017808:	e1d401bc 	ldrh	r0, [r4, #28]
4001780c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017810:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017814:	e2840034 	add	r0, r4, #52	; 0x34
40017818:	eb002a86 	bl	40022238 <CyU3PDmaDscrGet>
4001781c:	e3a00000 	mov	r0, #0
40017820:	eaffff5a 	b	40017590 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017824:	0000fff0 	.word	0x0000fff0
40017828:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

4001782c <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
4001782c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017830:	e24dd024 	sub	sp, sp, #36	; 0x24
40017834:	e1a04000 	mov	r4, r0
40017838:	e3a06cff 	mov	r6, #65280	; 0xff00
4001783c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017840:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017844:	e1810800 	orr	r0, r1, r0, lsl #16
40017848:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001784c:	e1866000 	orr	r6, r6, r0
40017850:	e1d400b8 	ldrh	r0, [r4, #8]
40017854:	e1d430ba 	ldrh	r3, [r4, #10]
40017858:	e0000093 	mul	r0, r3, r0
4001785c:	e1a01800 	lsl	r1, r0, #16
40017860:	e1a01821 	lsr	r1, r1, #16
40017864:	e1d420b6 	ldrh	r2, [r4, #6]
40017868:	e1a03006 	mov	r3, r6
4001786c:	e2840014 	add	r0, r4, #20
40017870:	eb0029f9 	bl	4002205c <CyU3PDmaDscrChainCreate>
40017874:	e1a05000 	mov	r5, r0
40017878:	e3550000 	cmp	r5, #0
4001787c:	0a000002 	beq	4001788c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
40017880:	e1a00005 	mov	r0, r5
40017884:	e28dd024 	add	sp, sp, #36	; 0x24
40017888:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001788c:	e1d400b4 	ldrh	r0, [r4, #4]
40017890:	e3500006 	cmp	r0, #6
40017894:	1a00003a 	bne	40017984 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
40017898:	e3a07000 	mov	r7, #0
4001789c:	e1d481b4 	ldrh	r8, [r4, #20]
400178a0:	ea000033 	b	40017974 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
400178a4:	e3a09000 	mov	r9, #0
400178a8:	ea00002c 	b	40017960 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
400178ac:	e28d1014 	add	r1, sp, #20
400178b0:	e1a00008 	mov	r0, r8
400178b4:	eb002ad7 	bl	40022418 <CyU3PDmaDscrGetConfig>
400178b8:	e3570000 	cmp	r7, #0
400178bc:	1a000003 	bne	400178d0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
400178c0:	e284001c 	add	r0, r4, #28
400178c4:	e0800089 	add	r0, r0, r9, lsl #1
400178c8:	e1c080b0 	strh	r8, [r0]
400178cc:	ea00001e 	b	4001794c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
400178d0:	e284101c 	add	r1, r4, #28
400178d4:	e0811089 	add	r1, r1, r9, lsl #1
400178d8:	e1d100b0 	ldrh	r0, [r1]
400178dc:	e28d1004 	add	r1, sp, #4
400178e0:	eb002acc 	bl	40022418 <CyU3PDmaDscrGetConfig>
400178e4:	e59d0008 	ldr	r0, [sp, #8]
400178e8:	e1a00720 	lsr	r0, r0, #14
400178ec:	e1a00700 	lsl	r0, r0, #14
400178f0:	e58d0008 	str	r0, [sp, #8]
400178f4:	e284102c 	add	r1, r4, #44	; 0x2c
400178f8:	e0811089 	add	r1, r1, r9, lsl #1
400178fc:	e59d0008 	ldr	r0, [sp, #8]
40017900:	e1d110b0 	ldrh	r1, [r1]
40017904:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017908:	e1800001 	orr	r0, r0, r1
4001790c:	e58d0008 	str	r0, [sp, #8]
40017910:	e59d000c 	ldr	r0, [sp, #12]
40017914:	e1a00820 	lsr	r0, r0, #16
40017918:	e1a00800 	lsl	r0, r0, #16
4001791c:	e58d000c 	str	r0, [sp, #12]
40017920:	e59d000c 	ldr	r0, [sp, #12]
40017924:	e1800008 	orr	r0, r0, r8
40017928:	e58d000c 	str	r0, [sp, #12]
4001792c:	e284101c 	add	r1, r4, #28
40017930:	e0811089 	add	r1, r1, r9, lsl #1
40017934:	e1d100b0 	ldrh	r0, [r1]
40017938:	e28d1004 	add	r1, sp, #4
4001793c:	eb002ad0 	bl	40022484 <CyU3PDmaDscrSetConfig>
40017940:	e284001c 	add	r0, r4, #28
40017944:	e0800089 	add	r0, r0, r9, lsl #1
40017948:	e1c080b0 	strh	r8, [r0]
4001794c:	e59d001c 	ldr	r0, [sp, #28]
40017950:	e59f11c4 	ldr	r1, [pc, #452]	; 40017b1c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017954:	e0018820 	and	r8, r1, r0, lsr #16
40017958:	e2890001 	add	r0, r9, #1
4001795c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017960:	e1d400ba 	ldrh	r0, [r4, #10]
40017964:	e1500009 	cmp	r0, r9
40017968:	caffffcf 	bgt	400178ac <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
4001796c:	e2870001 	add	r0, r7, #1
40017970:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017974:	e1d400b8 	ldrh	r0, [r4, #8]
40017978:	e1500007 	cmp	r0, r7
4001797c:	aaffffc8 	bge	400178a4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017980:	ea000059 	b	40017aec <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017984:	e3a07000 	mov	r7, #0
40017988:	e1d481b4 	ldrh	r8, [r4, #20]
4001798c:	ea000053 	b	40017ae0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017990:	e3a09000 	mov	r9, #0
40017994:	ea00004c 	b	40017acc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017998:	e3570000 	cmp	r7, #0
4001799c:	1a00000b 	bne	400179d0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
400179a0:	e284002c 	add	r0, r4, #44	; 0x2c
400179a4:	e0800089 	add	r0, r0, r9, lsl #1
400179a8:	e1d000b0 	ldrh	r0, [r0]
400179ac:	e3806903 	orr	r6, r0, #49152	; 0xc000
400179b0:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400179b4:	e3866801 	orr	r6, r6, #65536	; 0x10000
400179b8:	e1d410b8 	ldrh	r1, [r4, #8]
400179bc:	e284201c 	add	r2, r4, #28
400179c0:	e0820089 	add	r0, r2, r9, lsl #1
400179c4:	e1a03006 	mov	r3, r6
400179c8:	e3a02000 	mov	r2, #0
400179cc:	eb0029a2 	bl	4002205c <CyU3PDmaDscrChainCreate>
400179d0:	e284101c 	add	r1, r4, #28
400179d4:	e0811089 	add	r1, r1, r9, lsl #1
400179d8:	e1d100b0 	ldrh	r0, [r1]
400179dc:	e28d1004 	add	r1, sp, #4
400179e0:	eb002a8c 	bl	40022418 <CyU3PDmaDscrGetConfig>
400179e4:	e28d1014 	add	r1, sp, #20
400179e8:	e1a00008 	mov	r0, r8
400179ec:	eb002a89 	bl	40022418 <CyU3PDmaDscrGetConfig>
400179f0:	e59d0014 	ldr	r0, [sp, #20]
400179f4:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400179f8:	e0800001 	add	r0, r0, r1
400179fc:	e58d0004 	str	r0, [sp, #4]
40017a00:	e1d400b6 	ldrh	r0, [r4, #6]
40017a04:	e280000f 	add	r0, r0, #15
40017a08:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a0c:	e0400001 	sub	r0, r0, r1
40017a10:	e59f1108 	ldr	r1, [pc, #264]	; 40017b20 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017a14:	e0000001 	and	r0, r0, r1
40017a18:	e58d0010 	str	r0, [sp, #16]
40017a1c:	e59d000c 	ldr	r0, [sp, #12]
40017a20:	e1a00800 	lsl	r0, r0, #16
40017a24:	e1a00820 	lsr	r0, r0, #16
40017a28:	e58d000c 	str	r0, [sp, #12]
40017a2c:	e59d000c 	ldr	r0, [sp, #12]
40017a30:	e1800808 	orr	r0, r0, r8, lsl #16
40017a34:	e58d000c 	str	r0, [sp, #12]
40017a38:	e284101c 	add	r1, r4, #28
40017a3c:	e0811089 	add	r1, r1, r9, lsl #1
40017a40:	e1d100b0 	ldrh	r0, [r1]
40017a44:	e28d1004 	add	r1, sp, #4
40017a48:	eb002a8d 	bl	40022484 <CyU3PDmaDscrSetConfig>
40017a4c:	e59d0014 	ldr	r0, [sp, #20]
40017a50:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017a54:	e0800001 	add	r0, r0, r1
40017a58:	e58d0014 	str	r0, [sp, #20]
40017a5c:	e1d400b6 	ldrh	r0, [r4, #6]
40017a60:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017a64:	e0400001 	sub	r0, r0, r1
40017a68:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017a6c:	e0400001 	sub	r0, r0, r1
40017a70:	e58d0020 	str	r0, [sp, #32]
40017a74:	e59d001c 	ldr	r0, [sp, #28]
40017a78:	e1a00820 	lsr	r0, r0, #16
40017a7c:	e1a00800 	lsl	r0, r0, #16
40017a80:	e58d001c 	str	r0, [sp, #28]
40017a84:	e284101c 	add	r1, r4, #28
40017a88:	e0811089 	add	r1, r1, r9, lsl #1
40017a8c:	e59d001c 	ldr	r0, [sp, #28]
40017a90:	e1d110b0 	ldrh	r1, [r1]
40017a94:	e1800001 	orr	r0, r0, r1
40017a98:	e58d001c 	str	r0, [sp, #28]
40017a9c:	e28d1014 	add	r1, sp, #20
40017aa0:	e1a00008 	mov	r0, r8
40017aa4:	eb002a76 	bl	40022484 <CyU3PDmaDscrSetConfig>
40017aa8:	e59d001c 	ldr	r0, [sp, #28]
40017aac:	e59f1068 	ldr	r1, [pc, #104]	; 40017b1c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017ab0:	e0018820 	and	r8, r1, r0, lsr #16
40017ab4:	e284101c 	add	r1, r4, #28
40017ab8:	e0811089 	add	r1, r1, r9, lsl #1
40017abc:	e59d000c 	ldr	r0, [sp, #12]
40017ac0:	e1c100b0 	strh	r0, [r1]
40017ac4:	e2890001 	add	r0, r9, #1
40017ac8:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017acc:	e1d400ba 	ldrh	r0, [r4, #10]
40017ad0:	e1500009 	cmp	r0, r9
40017ad4:	caffffaf 	bgt	40017998 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017ad8:	e2870001 	add	r0, r7, #1
40017adc:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017ae0:	e1d400b8 	ldrh	r0, [r4, #8]
40017ae4:	e1500007 	cmp	r0, r7
40017ae8:	caffffa8 	bgt	40017990 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017aec:	e1d401b4 	ldrh	r0, [r4, #20]
40017af0:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017af4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017af8:	e1d401bc 	ldrh	r0, [r4, #28]
40017afc:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017b00:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017b04:	e2840034 	add	r0, r4, #52	; 0x34
40017b08:	eb0029ca 	bl	40022238 <CyU3PDmaDscrGet>
40017b0c:	e1a00004 	mov	r0, r4
40017b10:	eb0004a3 	bl	40018da4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017b14:	e3a00000 	mov	r0, #0
40017b18:	eaffff59 	b	40017884 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017b1c:	0000ffff 	.word	0x0000ffff
40017b20:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017b24 <CyU3PDmaMultiChannelCreate>:
40017b24:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017b28:	e1a04000 	mov	r4, r0
40017b2c:	e1a05001 	mov	r5, r1
40017b30:	e1a06002 	mov	r6, r2
40017b34:	e3560000 	cmp	r6, #0
40017b38:	1a000001 	bne	40017b44 <CyU3PDmaMultiChannelCreate+0x20>
40017b3c:	e3a00041 	mov	r0, #65	; 0x41
40017b40:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017b44:	e3540000 	cmp	r4, #0
40017b48:	1a000001 	bne	40017b54 <CyU3PDmaMultiChannelCreate+0x30>
40017b4c:	e3a00041 	mov	r0, #65	; 0x41
40017b50:	eafffffa 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017b54:	e1d600b2 	ldrh	r0, [r6, #2]
40017b58:	e3500000 	cmp	r0, #0
40017b5c:	1a000001 	bne	40017b68 <CyU3PDmaMultiChannelCreate+0x44>
40017b60:	e3a00040 	mov	r0, #64	; 0x40
40017b64:	eafffff5 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017b68:	e1d600b4 	ldrh	r0, [r6, #4]
40017b6c:	e3500002 	cmp	r0, #2
40017b70:	ba000002 	blt	40017b80 <CyU3PDmaMultiChannelCreate+0x5c>
40017b74:	e1d600b4 	ldrh	r0, [r6, #4]
40017b78:	e3500004 	cmp	r0, #4
40017b7c:	da000001 	ble	40017b88 <CyU3PDmaMultiChannelCreate+0x64>
40017b80:	e3a00040 	mov	r0, #64	; 0x40
40017b84:	eaffffed 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017b88:	e3550006 	cmp	r5, #6
40017b8c:	0a000001 	beq	40017b98 <CyU3PDmaMultiChannelCreate+0x74>
40017b90:	e3550005 	cmp	r5, #5
40017b94:	1a000007 	bne	40017bb8 <CyU3PDmaMultiChannelCreate+0x94>
40017b98:	eb0029de 	bl	40022318 <CyU3PDmaDscrGetFreeCount>
40017b9c:	e1d610b2 	ldrh	r1, [r6, #2]
40017ba0:	e1d620b4 	ldrh	r2, [r6, #4]
40017ba4:	e0010192 	mul	r1, r2, r1
40017ba8:	e1500001 	cmp	r0, r1
40017bac:	ca000016 	bgt	40017c0c <CyU3PDmaMultiChannelCreate+0xe8>
40017bb0:	e3a00010 	mov	r0, #16
40017bb4:	eaffffe1 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017bb8:	e3550008 	cmp	r5, #8
40017bbc:	0a000001 	beq	40017bc8 <CyU3PDmaMultiChannelCreate+0xa4>
40017bc0:	e3550007 	cmp	r5, #7
40017bc4:	1a000007 	bne	40017be8 <CyU3PDmaMultiChannelCreate+0xc4>
40017bc8:	eb0029d2 	bl	40022318 <CyU3PDmaDscrGetFreeCount>
40017bcc:	e1d610b2 	ldrh	r1, [r6, #2]
40017bd0:	e1d620b4 	ldrh	r2, [r6, #4]
40017bd4:	e0010192 	mul	r1, r2, r1
40017bd8:	e1500081 	cmp	r0, r1, lsl #1
40017bdc:	ca00000a 	bgt	40017c0c <CyU3PDmaMultiChannelCreate+0xe8>
40017be0:	e3a00010 	mov	r0, #16
40017be4:	eaffffd5 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017be8:	eb0029ca 	bl	40022318 <CyU3PDmaDscrGetFreeCount>
40017bec:	e1d610b2 	ldrh	r1, [r6, #2]
40017bf0:	e1d620b4 	ldrh	r2, [r6, #4]
40017bf4:	e2822001 	add	r2, r2, #1
40017bf8:	e0010192 	mul	r1, r2, r1
40017bfc:	e1500001 	cmp	r0, r1
40017c00:	ca000001 	bgt	40017c0c <CyU3PDmaMultiChannelCreate+0xe8>
40017c04:	e3a00010 	mov	r0, #16
40017c08:	eaffffcc 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017c0c:	e1d600b0 	ldrh	r0, [r6]
40017c10:	e3500000 	cmp	r0, #0
40017c14:	0a000003 	beq	40017c28 <CyU3PDmaMultiChannelCreate+0x104>
40017c18:	e1d600b0 	ldrh	r0, [r6]
40017c1c:	e59f1634 	ldr	r1, [pc, #1588]	; 40018258 <CyU3PDmaMultiChannelCreate+0x734>
40017c20:	e1500001 	cmp	r0, r1
40017c24:	da000001 	ble	40017c30 <CyU3PDmaMultiChannelCreate+0x10c>
40017c28:	e3a00040 	mov	r0, #64	; 0x40
40017c2c:	eaffffc3 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017c30:	e3550005 	cmp	r5, #5
40017c34:	0a000001 	beq	40017c40 <CyU3PDmaMultiChannelCreate+0x11c>
40017c38:	e3550006 	cmp	r5, #6
40017c3c:	1a000004 	bne	40017c54 <CyU3PDmaMultiChannelCreate+0x130>
40017c40:	e1d600b0 	ldrh	r0, [r6]
40017c44:	e310000f 	tst	r0, #15
40017c48:	0a00000b 	beq	40017c7c <CyU3PDmaMultiChannelCreate+0x158>
40017c4c:	e3a00040 	mov	r0, #64	; 0x40
40017c50:	eaffffba 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017c54:	e1d600b0 	ldrh	r0, [r6]
40017c58:	e1d611b8 	ldrh	r1, [r6, #24]
40017c5c:	e0400001 	sub	r0, r0, r1
40017c60:	e1d611ba 	ldrh	r1, [r6, #26]
40017c64:	e0400001 	sub	r0, r0, r1
40017c68:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40017c6c:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40017c70:	0a000001 	beq	40017c7c <CyU3PDmaMultiChannelCreate+0x158>
40017c74:	e3a00040 	mov	r0, #64	; 0x40
40017c78:	eaffffb0 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017c7c:	e5d6001e 	ldrb	r0, [r6, #30]
40017c80:	e3500002 	cmp	r0, #2
40017c84:	ba000001 	blt	40017c90 <CyU3PDmaMultiChannelCreate+0x16c>
40017c88:	e3a00040 	mov	r0, #64	; 0x40
40017c8c:	eaffffab 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017c90:	e3550005 	cmp	r5, #5
40017c94:	0a000001 	beq	40017ca0 <CyU3PDmaMultiChannelCreate+0x17c>
40017c98:	e3550007 	cmp	r5, #7
40017c9c:	1a000065 	bne	40017e38 <CyU3PDmaMultiChannelCreate+0x314>
40017ca0:	e1d601b6 	ldrh	r0, [r6, #22]
40017ca4:	e3500000 	cmp	r0, #0
40017ca8:	0a000008 	beq	40017cd0 <CyU3PDmaMultiChannelCreate+0x1ac>
40017cac:	e1d601b6 	ldrh	r0, [r6, #22]
40017cb0:	e1d610b2 	ldrh	r1, [r6, #2]
40017cb4:	e1500001 	cmp	r0, r1
40017cb8:	aa000002 	bge	40017cc8 <CyU3PDmaMultiChannelCreate+0x1a4>
40017cbc:	e1d600b2 	ldrh	r0, [r6, #2]
40017cc0:	e350001f 	cmp	r0, #31
40017cc4:	da000001 	ble	40017cd0 <CyU3PDmaMultiChannelCreate+0x1ac>
40017cc8:	e3a00040 	mov	r0, #64	; 0x40
40017ccc:	eaffff9b 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017cd0:	e3a09000 	mov	r9, #0
40017cd4:	ea00002b 	b	40017d88 <CyU3PDmaMultiChannelCreate+0x264>
40017cd8:	e2860006 	add	r0, r6, #6
40017cdc:	e0800089 	add	r0, r0, r9, lsl #1
40017ce0:	e1d000b0 	ldrh	r0, [r0]
40017ce4:	e3a0103f 	mov	r1, #63	; 0x3f
40017ce8:	e0018440 	and	r8, r1, r0, asr #8
40017cec:	e2860006 	add	r0, r6, #6
40017cf0:	e0800089 	add	r0, r0, r9, lsl #1
40017cf4:	e1d000b0 	ldrh	r0, [r0]
40017cf8:	e20070ff 	and	r7, r0, #255	; 0xff
40017cfc:	e2861006 	add	r1, r6, #6
40017d00:	e0811089 	add	r1, r1, r9, lsl #1
40017d04:	e1d100b0 	ldrh	r0, [r1]
40017d08:	ebfff3c4 	bl	40014c20 <CyU3PDmaSocketIsValidProducer>
40017d0c:	e3500000 	cmp	r0, #0
40017d10:	1a000001 	bne	40017d1c <CyU3PDmaMultiChannelCreate+0x1f8>
40017d14:	e3a00040 	mov	r0, #64	; 0x40
40017d18:	eaffff88 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017d1c:	e59f0538 	ldr	r0, [pc, #1336]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40017d20:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017d24:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017d28:	e3500000 	cmp	r0, #0
40017d2c:	0a000001 	beq	40017d38 <CyU3PDmaMultiChannelCreate+0x214>
40017d30:	e3a00040 	mov	r0, #64	; 0x40
40017d34:	eaffff81 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017d38:	e2890001 	add	r0, r9, #1
40017d3c:	e200a0ff 	and	sl, r0, #255	; 0xff
40017d40:	ea00000b 	b	40017d74 <CyU3PDmaMultiChannelCreate+0x250>
40017d44:	e2860006 	add	r0, r6, #6
40017d48:	e0800089 	add	r0, r0, r9, lsl #1
40017d4c:	e1d000b0 	ldrh	r0, [r0]
40017d50:	e2861006 	add	r1, r6, #6
40017d54:	e081108a 	add	r1, r1, sl, lsl #1
40017d58:	e1d110b0 	ldrh	r1, [r1]
40017d5c:	e1500001 	cmp	r0, r1
40017d60:	1a000001 	bne	40017d6c <CyU3PDmaMultiChannelCreate+0x248>
40017d64:	e3a00040 	mov	r0, #64	; 0x40
40017d68:	eaffff74 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017d6c:	e28a0001 	add	r0, sl, #1
40017d70:	e200a0ff 	and	sl, r0, #255	; 0xff
40017d74:	e1d600b4 	ldrh	r0, [r6, #4]
40017d78:	e150000a 	cmp	r0, sl
40017d7c:	cafffff0 	bgt	40017d44 <CyU3PDmaMultiChannelCreate+0x220>
40017d80:	e2890001 	add	r0, r9, #1
40017d84:	e20090ff 	and	r9, r0, #255	; 0xff
40017d88:	e1d600b4 	ldrh	r0, [r6, #4]
40017d8c:	e1500009 	cmp	r0, r9
40017d90:	caffffd0 	bgt	40017cd8 <CyU3PDmaMultiChannelCreate+0x1b4>
40017d94:	e1d600be 	ldrh	r0, [r6, #14]
40017d98:	e3a0103f 	mov	r1, #63	; 0x3f
40017d9c:	e0018440 	and	r8, r1, r0, asr #8
40017da0:	e1d600be 	ldrh	r0, [r6, #14]
40017da4:	e20070ff 	and	r7, r0, #255	; 0xff
40017da8:	e1d600be 	ldrh	r0, [r6, #14]
40017dac:	ebfff363 	bl	40014b40 <CyU3PDmaSocketIsValidConsumer>
40017db0:	e3500000 	cmp	r0, #0
40017db4:	1a000001 	bne	40017dc0 <CyU3PDmaMultiChannelCreate+0x29c>
40017db8:	e3a00040 	mov	r0, #64	; 0x40
40017dbc:	eaffff5f 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017dc0:	e59f0494 	ldr	r0, [pc, #1172]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40017dc4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017dc8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017dcc:	e3500000 	cmp	r0, #0
40017dd0:	0a000001 	beq	40017ddc <CyU3PDmaMultiChannelCreate+0x2b8>
40017dd4:	e3a00040 	mov	r0, #64	; 0x40
40017dd8:	eaffff58 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017ddc:	e59f0478 	ldr	r0, [pc, #1144]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40017de0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017de4:	e7804107 	str	r4, [r0, r7, lsl #2]
40017de8:	e3a09000 	mov	r9, #0
40017dec:	ea00000d 	b	40017e28 <CyU3PDmaMultiChannelCreate+0x304>
40017df0:	e2860006 	add	r0, r6, #6
40017df4:	e0800089 	add	r0, r0, r9, lsl #1
40017df8:	e1d000b0 	ldrh	r0, [r0]
40017dfc:	e3a0103f 	mov	r1, #63	; 0x3f
40017e00:	e0018440 	and	r8, r1, r0, asr #8
40017e04:	e2860006 	add	r0, r6, #6
40017e08:	e0800089 	add	r0, r0, r9, lsl #1
40017e0c:	e1d000b0 	ldrh	r0, [r0]
40017e10:	e20070ff 	and	r7, r0, #255	; 0xff
40017e14:	e59f0440 	ldr	r0, [pc, #1088]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40017e18:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017e1c:	e7804107 	str	r4, [r0, r7, lsl #2]
40017e20:	e2890001 	add	r0, r9, #1
40017e24:	e20090ff 	and	r9, r0, #255	; 0xff
40017e28:	e1d600b4 	ldrh	r0, [r6, #4]
40017e2c:	e1500009 	cmp	r0, r9
40017e30:	caffffee 	bgt	40017df0 <CyU3PDmaMultiChannelCreate+0x2cc>
40017e34:	ea00005d 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x48c>
40017e38:	e1d601b6 	ldrh	r0, [r6, #22]
40017e3c:	e3500000 	cmp	r0, #0
40017e40:	0a000001 	beq	40017e4c <CyU3PDmaMultiChannelCreate+0x328>
40017e44:	e3a00040 	mov	r0, #64	; 0x40
40017e48:	eaffff3c 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017e4c:	e3a09000 	mov	r9, #0
40017e50:	ea00002b 	b	40017f04 <CyU3PDmaMultiChannelCreate+0x3e0>
40017e54:	e286000e 	add	r0, r6, #14
40017e58:	e0800089 	add	r0, r0, r9, lsl #1
40017e5c:	e1d000b0 	ldrh	r0, [r0]
40017e60:	e3a0103f 	mov	r1, #63	; 0x3f
40017e64:	e0018440 	and	r8, r1, r0, asr #8
40017e68:	e286000e 	add	r0, r6, #14
40017e6c:	e0800089 	add	r0, r0, r9, lsl #1
40017e70:	e1d000b0 	ldrh	r0, [r0]
40017e74:	e20070ff 	and	r7, r0, #255	; 0xff
40017e78:	e286100e 	add	r1, r6, #14
40017e7c:	e0811089 	add	r1, r1, r9, lsl #1
40017e80:	e1d100b0 	ldrh	r0, [r1]
40017e84:	ebfff32d 	bl	40014b40 <CyU3PDmaSocketIsValidConsumer>
40017e88:	e3500000 	cmp	r0, #0
40017e8c:	1a000001 	bne	40017e98 <CyU3PDmaMultiChannelCreate+0x374>
40017e90:	e3a00040 	mov	r0, #64	; 0x40
40017e94:	eaffff29 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017e98:	e59f03bc 	ldr	r0, [pc, #956]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40017e9c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017ea0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017ea4:	e3500000 	cmp	r0, #0
40017ea8:	0a000001 	beq	40017eb4 <CyU3PDmaMultiChannelCreate+0x390>
40017eac:	e3a00040 	mov	r0, #64	; 0x40
40017eb0:	eaffff22 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017eb4:	e2890001 	add	r0, r9, #1
40017eb8:	e200a0ff 	and	sl, r0, #255	; 0xff
40017ebc:	ea00000b 	b	40017ef0 <CyU3PDmaMultiChannelCreate+0x3cc>
40017ec0:	e286000e 	add	r0, r6, #14
40017ec4:	e0800089 	add	r0, r0, r9, lsl #1
40017ec8:	e1d000b0 	ldrh	r0, [r0]
40017ecc:	e286100e 	add	r1, r6, #14
40017ed0:	e081108a 	add	r1, r1, sl, lsl #1
40017ed4:	e1d110b0 	ldrh	r1, [r1]
40017ed8:	e1500001 	cmp	r0, r1
40017edc:	1a000001 	bne	40017ee8 <CyU3PDmaMultiChannelCreate+0x3c4>
40017ee0:	e3a00040 	mov	r0, #64	; 0x40
40017ee4:	eaffff15 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017ee8:	e28a0001 	add	r0, sl, #1
40017eec:	e200a0ff 	and	sl, r0, #255	; 0xff
40017ef0:	e1d600b4 	ldrh	r0, [r6, #4]
40017ef4:	e150000a 	cmp	r0, sl
40017ef8:	cafffff0 	bgt	40017ec0 <CyU3PDmaMultiChannelCreate+0x39c>
40017efc:	e2890001 	add	r0, r9, #1
40017f00:	e20090ff 	and	r9, r0, #255	; 0xff
40017f04:	e1d600b4 	ldrh	r0, [r6, #4]
40017f08:	e1500009 	cmp	r0, r9
40017f0c:	caffffd0 	bgt	40017e54 <CyU3PDmaMultiChannelCreate+0x330>
40017f10:	e1d600b6 	ldrh	r0, [r6, #6]
40017f14:	e3a0103f 	mov	r1, #63	; 0x3f
40017f18:	e0018440 	and	r8, r1, r0, asr #8
40017f1c:	e1d600b6 	ldrh	r0, [r6, #6]
40017f20:	e20070ff 	and	r7, r0, #255	; 0xff
40017f24:	e1d600b6 	ldrh	r0, [r6, #6]
40017f28:	ebfff33c 	bl	40014c20 <CyU3PDmaSocketIsValidProducer>
40017f2c:	e3500000 	cmp	r0, #0
40017f30:	1a000001 	bne	40017f3c <CyU3PDmaMultiChannelCreate+0x418>
40017f34:	e3a00040 	mov	r0, #64	; 0x40
40017f38:	eaffff00 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017f3c:	e59f0318 	ldr	r0, [pc, #792]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40017f40:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f44:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017f48:	e3500000 	cmp	r0, #0
40017f4c:	0a000001 	beq	40017f58 <CyU3PDmaMultiChannelCreate+0x434>
40017f50:	e3a00040 	mov	r0, #64	; 0x40
40017f54:	eafffef9 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40017f58:	e59f02fc 	ldr	r0, [pc, #764]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40017f5c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f60:	e7804107 	str	r4, [r0, r7, lsl #2]
40017f64:	e3a09000 	mov	r9, #0
40017f68:	ea00000d 	b	40017fa4 <CyU3PDmaMultiChannelCreate+0x480>
40017f6c:	e286000e 	add	r0, r6, #14
40017f70:	e0800089 	add	r0, r0, r9, lsl #1
40017f74:	e1d000b0 	ldrh	r0, [r0]
40017f78:	e3a0103f 	mov	r1, #63	; 0x3f
40017f7c:	e0018440 	and	r8, r1, r0, asr #8
40017f80:	e286000e 	add	r0, r6, #14
40017f84:	e0800089 	add	r0, r0, r9, lsl #1
40017f88:	e1d000b0 	ldrh	r0, [r0]
40017f8c:	e20070ff 	and	r7, r0, #255	; 0xff
40017f90:	e59f02c4 	ldr	r0, [pc, #708]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40017f94:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f98:	e7804107 	str	r4, [r0, r7, lsl #2]
40017f9c:	e2890001 	add	r0, r9, #1
40017fa0:	e20090ff 	and	r9, r0, #255	; 0xff
40017fa4:	e1d600b4 	ldrh	r0, [r6, #4]
40017fa8:	e1500009 	cmp	r0, r9
40017fac:	caffffee 	bgt	40017f6c <CyU3PDmaMultiChannelCreate+0x448>
40017fb0:	e1c450b4 	strh	r5, [r4, #4]
40017fb4:	e1d600b0 	ldrh	r0, [r6]
40017fb8:	e1c400b6 	strh	r0, [r4, #6]
40017fbc:	e1d600b2 	ldrh	r0, [r6, #2]
40017fc0:	e1c400b8 	strh	r0, [r4, #8]
40017fc4:	e1d601b6 	ldrh	r0, [r6, #22]
40017fc8:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
40017fcc:	e1d600b4 	ldrh	r0, [r6, #4]
40017fd0:	e1c400ba 	strh	r0, [r4, #10]
40017fd4:	e3a09000 	mov	r9, #0
40017fd8:	ea000014 	b	40018030 <CyU3PDmaMultiChannelCreate+0x50c>
40017fdc:	e2860006 	add	r0, r6, #6
40017fe0:	e0800089 	add	r0, r0, r9, lsl #1
40017fe4:	e1d000b0 	ldrh	r0, [r0]
40017fe8:	e2841024 	add	r1, r4, #36	; 0x24
40017fec:	e0811089 	add	r1, r1, r9, lsl #1
40017ff0:	e1c100b0 	strh	r0, [r1]
40017ff4:	e286000e 	add	r0, r6, #14
40017ff8:	e0800089 	add	r0, r0, r9, lsl #1
40017ffc:	e1d000b0 	ldrh	r0, [r0]
40018000:	e284102c 	add	r1, r4, #44	; 0x2c
40018004:	e0811089 	add	r1, r1, r9, lsl #1
40018008:	e1c100b0 	strh	r0, [r1]
4001800c:	e3a00000 	mov	r0, #0
40018010:	e284105c 	add	r1, r4, #92	; 0x5c
40018014:	e0811089 	add	r1, r1, r9, lsl #1
40018018:	e1c100b0 	strh	r0, [r1]
4001801c:	e2841064 	add	r1, r4, #100	; 0x64
40018020:	e0811089 	add	r1, r1, r9, lsl #1
40018024:	e1c100b0 	strh	r0, [r1]
40018028:	e2890001 	add	r0, r9, #1
4001802c:	e20090ff 	and	r9, r0, #255	; 0xff
40018030:	e3590004 	cmp	r9, #4
40018034:	baffffe8 	blt	40017fdc <CyU3PDmaMultiChannelCreate+0x4b8>
40018038:	e1d601b8 	ldrh	r0, [r6, #24]
4001803c:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
40018040:	e1d601ba 	ldrh	r0, [r6, #26]
40018044:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
40018048:	e1d601bc 	ldrh	r0, [r6, #28]
4001804c:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
40018050:	e5d6001e 	ldrb	r0, [r6, #30]
40018054:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
40018058:	e5960020 	ldr	r0, [r6, #32]
4001805c:	e584006c 	str	r0, [r4, #108]	; 0x6c
40018060:	e3a03038 	mov	r3, #56	; 0x38
40018064:	e3a02000 	mov	r2, #0
40018068:	e1a01002 	mov	r1, r2
4001806c:	e2840078 	add	r0, r4, #120	; 0x78
40018070:	ebffc73d 	bl	40009d6c <_txe_mutex_create>
40018074:	e3a02028 	mov	r2, #40	; 0x28
40018078:	e3a01000 	mov	r1, #0
4001807c:	e28400b0 	add	r0, r4, #176	; 0xb0
40018080:	ebffc67f 	bl	40009a84 <_txe_event_flags_create>
40018084:	e5960024 	ldr	r0, [r6, #36]	; 0x24
40018088:	e58400d8 	str	r0, [r4, #216]	; 0xd8
4001808c:	e59f01cc 	ldr	r0, [pc, #460]	; 40018260 <CyU3PDmaMultiChannelCreate+0x73c>
40018090:	e5900000 	ldr	r0, [r0]
40018094:	e5840074 	str	r0, [r4, #116]	; 0x74
40018098:	e2450005 	sub	r0, r5, #5
4001809c:	e3500005 	cmp	r0, #5
400180a0:	308ff100 	addcc	pc, pc, r0, lsl #2
400180a4:	ea00001d 	b	40018120 <CyU3PDmaMultiChannelCreate+0x5fc>
400180a8:	ea000003 	b	400180bc <CyU3PDmaMultiChannelCreate+0x598>
400180ac:	ea000008 	b	400180d4 <CyU3PDmaMultiChannelCreate+0x5b0>
400180b0:	ea000003 	b	400180c4 <CyU3PDmaMultiChannelCreate+0x5a0>
400180b4:	ea000008 	b	400180dc <CyU3PDmaMultiChannelCreate+0x5b8>
400180b8:	ea00000b 	b	400180ec <CyU3PDmaMultiChannelCreate+0x5c8>
400180bc:	e1a00000 	nop			; (mov r0, r0)
400180c0:	e1a00000 	nop			; (mov r0, r0)
400180c4:	e1a00004 	mov	r0, r4
400180c8:	ebfffd1c 	bl	40017540 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
400180cc:	e1a0b000 	mov	fp, r0
400180d0:	ea000015 	b	4001812c <CyU3PDmaMultiChannelCreate+0x608>
400180d4:	e1a00000 	nop			; (mov r0, r0)
400180d8:	e1a00000 	nop			; (mov r0, r0)
400180dc:	e1a00004 	mov	r0, r4
400180e0:	ebfffdd1 	bl	4001782c <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
400180e4:	e1a0b000 	mov	fp, r0
400180e8:	ea00000f 	b	4001812c <CyU3PDmaMultiChannelCreate+0x608>
400180ec:	e1a00000 	nop			; (mov r0, r0)
400180f0:	e59f016c 	ldr	r0, [pc, #364]	; 40018264 <CyU3PDmaMultiChannelCreate+0x740>
400180f4:	e5900000 	ldr	r0, [r0]
400180f8:	e3500000 	cmp	r0, #0
400180fc:	1a000001 	bne	40018108 <CyU3PDmaMultiChannelCreate+0x5e4>
40018100:	e3a0b047 	mov	fp, #71	; 0x47
40018104:	ea000004 	b	4001811c <CyU3PDmaMultiChannelCreate+0x5f8>
40018108:	e1a00004 	mov	r0, r4
4001810c:	e59f1150 	ldr	r1, [pc, #336]	; 40018264 <CyU3PDmaMultiChannelCreate+0x740>
40018110:	e5911000 	ldr	r1, [r1]
40018114:	e12fff31 	blx	r1
40018118:	e1a0b000 	mov	fp, r0
4001811c:	ea000002 	b	4001812c <CyU3PDmaMultiChannelCreate+0x608>
40018120:	e1a00000 	nop			; (mov r0, r0)
40018124:	e3a0b040 	mov	fp, #64	; 0x40
40018128:	e1a00000 	nop			; (mov r0, r0)
4001812c:	e1a00000 	nop			; (mov r0, r0)
40018130:	e35b0000 	cmp	fp, #0
40018134:	1a000002 	bne	40018144 <CyU3PDmaMultiChannelCreate+0x620>
40018138:	e3a00001 	mov	r0, #1
4001813c:	e5840000 	str	r0, [r4]
40018140:	ea000042 	b	40018250 <CyU3PDmaMultiChannelCreate+0x72c>
40018144:	e2840078 	add	r0, r4, #120	; 0x78
40018148:	ebffc765 	bl	40009ee4 <_txe_mutex_delete>
4001814c:	e28400b0 	add	r0, r4, #176	; 0xb0
40018150:	ebffc69b 	bl	40009bc4 <_txe_event_flags_delete>
40018154:	e3550005 	cmp	r5, #5
40018158:	0a000001 	beq	40018164 <CyU3PDmaMultiChannelCreate+0x640>
4001815c:	e3550007 	cmp	r5, #7
40018160:	1a00001d 	bne	400181dc <CyU3PDmaMultiChannelCreate+0x6b8>
40018164:	e1d600be 	ldrh	r0, [r6, #14]
40018168:	e3a0103f 	mov	r1, #63	; 0x3f
4001816c:	e0018440 	and	r8, r1, r0, asr #8
40018170:	e1d600be 	ldrh	r0, [r6, #14]
40018174:	e20070ff 	and	r7, r0, #255	; 0xff
40018178:	e3a00000 	mov	r0, #0
4001817c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40018180:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018184:	e7810107 	str	r0, [r1, r7, lsl #2]
40018188:	e3a09000 	mov	r9, #0
4001818c:	ea00000e 	b	400181cc <CyU3PDmaMultiChannelCreate+0x6a8>
40018190:	e2860006 	add	r0, r6, #6
40018194:	e0800089 	add	r0, r0, r9, lsl #1
40018198:	e1d000b0 	ldrh	r0, [r0]
4001819c:	e3a0103f 	mov	r1, #63	; 0x3f
400181a0:	e0018440 	and	r8, r1, r0, asr #8
400181a4:	e2860006 	add	r0, r6, #6
400181a8:	e0800089 	add	r0, r0, r9, lsl #1
400181ac:	e1d000b0 	ldrh	r0, [r0]
400181b0:	e20070ff 	and	r7, r0, #255	; 0xff
400181b4:	e3a00000 	mov	r0, #0
400181b8:	e59f109c 	ldr	r1, [pc, #156]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
400181bc:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400181c0:	e7810107 	str	r0, [r1, r7, lsl #2]
400181c4:	e2890001 	add	r0, r9, #1
400181c8:	e20090ff 	and	r9, r0, #255	; 0xff
400181cc:	e1d600b4 	ldrh	r0, [r6, #4]
400181d0:	e1500009 	cmp	r0, r9
400181d4:	caffffed 	bgt	40018190 <CyU3PDmaMultiChannelCreate+0x66c>
400181d8:	ea00001c 	b	40018250 <CyU3PDmaMultiChannelCreate+0x72c>
400181dc:	e1d600b6 	ldrh	r0, [r6, #6]
400181e0:	e3a0103f 	mov	r1, #63	; 0x3f
400181e4:	e0018440 	and	r8, r1, r0, asr #8
400181e8:	e1d600b6 	ldrh	r0, [r6, #6]
400181ec:	e20070ff 	and	r7, r0, #255	; 0xff
400181f0:	e3a00000 	mov	r0, #0
400181f4:	e59f1060 	ldr	r1, [pc, #96]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
400181f8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400181fc:	e7810107 	str	r0, [r1, r7, lsl #2]
40018200:	e3a09000 	mov	r9, #0
40018204:	ea00000e 	b	40018244 <CyU3PDmaMultiChannelCreate+0x720>
40018208:	e286000e 	add	r0, r6, #14
4001820c:	e0800089 	add	r0, r0, r9, lsl #1
40018210:	e1d000b0 	ldrh	r0, [r0]
40018214:	e3a0103f 	mov	r1, #63	; 0x3f
40018218:	e0018440 	and	r8, r1, r0, asr #8
4001821c:	e286000e 	add	r0, r6, #14
40018220:	e0800089 	add	r0, r0, r9, lsl #1
40018224:	e1d000b0 	ldrh	r0, [r0]
40018228:	e20070ff 	and	r7, r0, #255	; 0xff
4001822c:	e3a00000 	mov	r0, #0
40018230:	e59f1024 	ldr	r1, [pc, #36]	; 4001825c <CyU3PDmaMultiChannelCreate+0x738>
40018234:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018238:	e7810107 	str	r0, [r1, r7, lsl #2]
4001823c:	e2890001 	add	r0, r9, #1
40018240:	e20090ff 	and	r9, r0, #255	; 0xff
40018244:	e1d600b4 	ldrh	r0, [r6, #4]
40018248:	e1500009 	cmp	r0, r9
4001824c:	caffffed 	bgt	40018208 <CyU3PDmaMultiChannelCreate+0x6e4>
40018250:	e1a0000b 	mov	r0, fp
40018254:	eafffe39 	b	40017b40 <CyU3PDmaMultiChannelCreate+0x1c>
40018258:	0000fff0 	.word	0x0000fff0
4001825c:	40030d00 	.word	0x40030d00
40018260:	40030c64 	.word	0x40030c64
40018264:	40030cec 	.word	0x40030cec

Disassembly of section i.CyU3PDmaMultiChannelReset:

40018268 <CyU3PDmaMultiChannelReset>:
40018268:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4001826c:	e1a04000 	mov	r4, r0
40018270:	e3e01000 	mvn	r1, #0
40018274:	e1a00004 	mov	r0, r4
40018278:	ebfffbab 	bl	4001712c <CyU3PDmaMultiChannelAcquireLock>
4001827c:	e1a06000 	mov	r6, r0
40018280:	e3560000 	cmp	r6, #0
40018284:	0a000001 	beq	40018290 <CyU3PDmaMultiChannelReset+0x28>
40018288:	e1a00006 	mov	r0, r6
4001828c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40018290:	e1d400b4 	ldrh	r0, [r4, #4]
40018294:	e2400005 	sub	r0, r0, #5
40018298:	e3500005 	cmp	r0, #5
4001829c:	308ff100 	addcc	pc, pc, r0, lsl #2
400182a0:	ea00001a 	b	40018310 <CyU3PDmaMultiChannelReset+0xa8>
400182a4:	ea000003 	b	400182b8 <CyU3PDmaMultiChannelReset+0x50>
400182a8:	ea000007 	b	400182cc <CyU3PDmaMultiChannelReset+0x64>
400182ac:	ea000003 	b	400182c0 <CyU3PDmaMultiChannelReset+0x58>
400182b0:	ea000007 	b	400182d4 <CyU3PDmaMultiChannelReset+0x6c>
400182b4:	ea000009 	b	400182e0 <CyU3PDmaMultiChannelReset+0x78>
400182b8:	e1a00000 	nop			; (mov r0, r0)
400182bc:	e1a00000 	nop			; (mov r0, r0)
400182c0:	e1a00004 	mov	r0, r4
400182c4:	eb00003c 	bl	400183bc <CyU3PDmaMultiChannelReset_TypeManyToOne>
400182c8:	ea000012 	b	40018318 <CyU3PDmaMultiChannelReset+0xb0>
400182cc:	e1a00000 	nop			; (mov r0, r0)
400182d0:	e1a00000 	nop			; (mov r0, r0)
400182d4:	e1a00004 	mov	r0, r4
400182d8:	eb000083 	bl	400184ec <CyU3PDmaMultiChannelReset_TypeOneToMany>
400182dc:	ea00000d 	b	40018318 <CyU3PDmaMultiChannelReset+0xb0>
400182e0:	e1a00000 	nop			; (mov r0, r0)
400182e4:	e59f00cc 	ldr	r0, [pc, #204]	; 400183b8 <CyU3PDmaMultiChannelReset+0x150>
400182e8:	e5900000 	ldr	r0, [r0]
400182ec:	e3500000 	cmp	r0, #0
400182f0:	1a000001 	bne	400182fc <CyU3PDmaMultiChannelReset+0x94>
400182f4:	e3a00047 	mov	r0, #71	; 0x47
400182f8:	eaffffe3 	b	4001828c <CyU3PDmaMultiChannelReset+0x24>
400182fc:	e1a00004 	mov	r0, r4
40018300:	e59f10b0 	ldr	r1, [pc, #176]	; 400183b8 <CyU3PDmaMultiChannelReset+0x150>
40018304:	e5911000 	ldr	r1, [r1]
40018308:	e12fff31 	blx	r1
4001830c:	ea000001 	b	40018318 <CyU3PDmaMultiChannelReset+0xb0>
40018310:	e1a00000 	nop			; (mov r0, r0)
40018314:	e1a00000 	nop			; (mov r0, r0)
40018318:	e1a00000 	nop			; (mov r0, r0)
4001831c:	ebffc0fb 	bl	40008710 <_tx_thread_identify>
40018320:	e1a05000 	mov	r5, r0
40018324:	e3550000 	cmp	r5, #0
40018328:	0a000003 	beq	4001833c <CyU3PDmaMultiChannelReset+0xd4>
4001832c:	e1a0200d 	mov	r2, sp
40018330:	e3a01002 	mov	r1, #2
40018334:	e1a00005 	mov	r0, r5
40018338:	ebffc902 	bl	4000a748 <_txe_thread_priority_change>
4001833c:	e3a02002 	mov	r2, #2
40018340:	e3e01047 	mvn	r1, #71	; 0x47
40018344:	e28400b0 	add	r0, r4, #176	; 0xb0
40018348:	ebffc66d 	bl	40009d04 <_txe_event_flags_set>
4001834c:	e3a02000 	mov	r2, #0
40018350:	e3a01020 	mov	r1, #32
40018354:	e28400b0 	add	r0, r4, #176	; 0xb0
40018358:	ebffc669 	bl	40009d04 <_txe_event_flags_set>
4001835c:	e3a00001 	mov	r0, #1
40018360:	e5840000 	str	r0, [r4]
40018364:	e2840078 	add	r0, r4, #120	; 0x78
40018368:	ebffc732 	bl	4000a038 <_txe_mutex_put>
4001836c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40018370:	e3500000 	cmp	r0, #0
40018374:	0a000007 	beq	40018398 <CyU3PDmaMultiChannelReset+0x130>
40018378:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001837c:	e3100020 	tst	r0, #32
40018380:	0a000004 	beq	40018398 <CyU3PDmaMultiChannelReset+0x130>
40018384:	e3a02000 	mov	r2, #0
40018388:	e3a01020 	mov	r1, #32
4001838c:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
40018390:	e1a00004 	mov	r0, r4
40018394:	e12fff33 	blx	r3
40018398:	e3550000 	cmp	r5, #0
4001839c:	0a000003 	beq	400183b0 <CyU3PDmaMultiChannelReset+0x148>
400183a0:	e1a0200d 	mov	r2, sp
400183a4:	e1a00005 	mov	r0, r5
400183a8:	e59d1000 	ldr	r1, [sp]
400183ac:	ebffc8e5 	bl	4000a748 <_txe_thread_priority_change>
400183b0:	e3a00000 	mov	r0, #0
400183b4:	eaffffb4 	b	4001828c <CyU3PDmaMultiChannelReset+0x24>
400183b8:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

400183bc <CyU3PDmaMultiChannelReset_TypeManyToOne>:
400183bc:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400183c0:	e1a04000 	mov	r4, r0
400183c4:	e1a00004 	mov	r0, r4
400183c8:	eb000215 	bl	40018c24 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
400183cc:	e1d451bc 	ldrh	r5, [r4, #28]
400183d0:	e1d400b8 	ldrh	r0, [r4, #8]
400183d4:	e1d410ba 	ldrh	r1, [r4, #10]
400183d8:	e0000091 	mul	r0, r1, r0
400183dc:	e1a06800 	lsl	r6, r0, #16
400183e0:	e1a06826 	lsr	r6, r6, #16
400183e4:	ea00000c 	b	4001841c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
400183e8:	e1a0100d 	mov	r1, sp
400183ec:	e1a00005 	mov	r0, r5
400183f0:	eb002808 	bl	40022418 <CyU3PDmaDscrGetConfig>
400183f4:	e59d000c 	ldr	r0, [sp, #12]
400183f8:	e59f10e4 	ldr	r1, [pc, #228]	; 400184e4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
400183fc:	e0000001 	and	r0, r0, r1
40018400:	e58d000c 	str	r0, [sp, #12]
40018404:	e1a0100d 	mov	r1, sp
40018408:	e1a00005 	mov	r0, r5
4001840c:	eb00281c 	bl	40022484 <CyU3PDmaDscrSetConfig>
40018410:	e59d0008 	ldr	r0, [sp, #8]
40018414:	e1a05800 	lsl	r5, r0, #16
40018418:	e1a05825 	lsr	r5, r5, #16
4001841c:	e1b00006 	movs	r0, r6
40018420:	e2461001 	sub	r1, r6, #1
40018424:	e1a06801 	lsl	r6, r1, #16
40018428:	e1a06826 	lsr	r6, r6, #16
4001842c:	1affffed 	bne	400183e8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
40018430:	e1d400b4 	ldrh	r0, [r4, #4]
40018434:	e3500007 	cmp	r0, #7
40018438:	1a000021 	bne	400184c4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
4001843c:	e3a07000 	mov	r7, #0
40018440:	ea00001c 	b	400184b8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
40018444:	e2840014 	add	r0, r4, #20
40018448:	e0800087 	add	r0, r0, r7, lsl #1
4001844c:	e1d000b0 	ldrh	r0, [r0]
40018450:	e284103e 	add	r1, r4, #62	; 0x3e
40018454:	e0811087 	add	r1, r1, r7, lsl #1
40018458:	e1c100b0 	strh	r0, [r1]
4001845c:	e1a05000 	mov	r5, r0
40018460:	e3a06000 	mov	r6, #0
40018464:	ea00000e 	b	400184a4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
40018468:	e1a0100d 	mov	r1, sp
4001846c:	e1a00005 	mov	r0, r5
40018470:	eb0027e8 	bl	40022418 <CyU3PDmaDscrGetConfig>
40018474:	e59d000c 	ldr	r0, [sp, #12]
40018478:	e59f1064 	ldr	r1, [pc, #100]	; 400184e4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
4001847c:	e0000001 	and	r0, r0, r1
40018480:	e58d000c 	str	r0, [sp, #12]
40018484:	e1a0100d 	mov	r1, sp
40018488:	e1a00005 	mov	r0, r5
4001848c:	eb0027fc 	bl	40022484 <CyU3PDmaDscrSetConfig>
40018490:	e59d0008 	ldr	r0, [sp, #8]
40018494:	e59f104c 	ldr	r1, [pc, #76]	; 400184e8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
40018498:	e0015820 	and	r5, r1, r0, lsr #16
4001849c:	e2860001 	add	r0, r6, #1
400184a0:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400184a4:	e1d400b8 	ldrh	r0, [r4, #8]
400184a8:	e1500006 	cmp	r0, r6
400184ac:	caffffed 	bgt	40018468 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
400184b0:	e2870001 	add	r0, r7, #1
400184b4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400184b8:	e1d400ba 	ldrh	r0, [r4, #10]
400184bc:	e1500007 	cmp	r0, r7
400184c0:	caffffdf 	bgt	40018444 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
400184c4:	e1d401b4 	ldrh	r0, [r4, #20]
400184c8:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400184cc:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400184d0:	e1d401bc 	ldrh	r0, [r4, #28]
400184d4:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
400184d8:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
400184dc:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400184e0:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400184e4:	0000fff0 	.word	0x0000fff0
400184e8:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

400184ec <CyU3PDmaMultiChannelReset_TypeOneToMany>:
400184ec:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400184f0:	e1a04000 	mov	r4, r0
400184f4:	e1a00004 	mov	r0, r4
400184f8:	eb000229 	bl	40018da4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
400184fc:	e1d451b4 	ldrh	r5, [r4, #20]
40018500:	e1d400b8 	ldrh	r0, [r4, #8]
40018504:	e1d410ba 	ldrh	r1, [r4, #10]
40018508:	e0000091 	mul	r0, r1, r0
4001850c:	e1a06800 	lsl	r6, r0, #16
40018510:	e1a06826 	lsr	r6, r6, #16
40018514:	ea00000c 	b	4001854c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
40018518:	e1a0100d 	mov	r1, sp
4001851c:	e1a00005 	mov	r0, r5
40018520:	eb0027bc 	bl	40022418 <CyU3PDmaDscrGetConfig>
40018524:	e59d000c 	ldr	r0, [sp, #12]
40018528:	e59f10e4 	ldr	r1, [pc, #228]	; 40018614 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
4001852c:	e0000001 	and	r0, r0, r1
40018530:	e58d000c 	str	r0, [sp, #12]
40018534:	e1a0100d 	mov	r1, sp
40018538:	e1a00005 	mov	r0, r5
4001853c:	eb0027d0 	bl	40022484 <CyU3PDmaDscrSetConfig>
40018540:	e59d0008 	ldr	r0, [sp, #8]
40018544:	e59f10cc 	ldr	r1, [pc, #204]	; 40018618 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
40018548:	e0015820 	and	r5, r1, r0, lsr #16
4001854c:	e1b00006 	movs	r0, r6
40018550:	e2461001 	sub	r1, r6, #1
40018554:	e1a06801 	lsl	r6, r1, #16
40018558:	e1a06826 	lsr	r6, r6, #16
4001855c:	1affffed 	bne	40018518 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
40018560:	e1d400b4 	ldrh	r0, [r4, #4]
40018564:	e3500008 	cmp	r0, #8
40018568:	1a000021 	bne	400185f4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
4001856c:	e3a07000 	mov	r7, #0
40018570:	ea00001c 	b	400185e8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
40018574:	e284001c 	add	r0, r4, #28
40018578:	e0800087 	add	r0, r0, r7, lsl #1
4001857c:	e1d000b0 	ldrh	r0, [r0]
40018580:	e2841046 	add	r1, r4, #70	; 0x46
40018584:	e0811087 	add	r1, r1, r7, lsl #1
40018588:	e1c100b0 	strh	r0, [r1]
4001858c:	e1a05000 	mov	r5, r0
40018590:	e3a06000 	mov	r6, #0
40018594:	ea00000e 	b	400185d4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
40018598:	e1a0100d 	mov	r1, sp
4001859c:	e1a00005 	mov	r0, r5
400185a0:	eb00279c 	bl	40022418 <CyU3PDmaDscrGetConfig>
400185a4:	e59d000c 	ldr	r0, [sp, #12]
400185a8:	e59f1064 	ldr	r1, [pc, #100]	; 40018614 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400185ac:	e0000001 	and	r0, r0, r1
400185b0:	e58d000c 	str	r0, [sp, #12]
400185b4:	e1a0100d 	mov	r1, sp
400185b8:	e1a00005 	mov	r0, r5
400185bc:	eb0027b0 	bl	40022484 <CyU3PDmaDscrSetConfig>
400185c0:	e59d0008 	ldr	r0, [sp, #8]
400185c4:	e1a05800 	lsl	r5, r0, #16
400185c8:	e1a05825 	lsr	r5, r5, #16
400185cc:	e2860001 	add	r0, r6, #1
400185d0:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400185d4:	e1d400b8 	ldrh	r0, [r4, #8]
400185d8:	e1500006 	cmp	r0, r6
400185dc:	caffffed 	bgt	40018598 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
400185e0:	e2870001 	add	r0, r7, #1
400185e4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400185e8:	e1d400ba 	ldrh	r0, [r4, #10]
400185ec:	e1500007 	cmp	r0, r7
400185f0:	caffffdf 	bgt	40018574 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
400185f4:	e1d401b4 	ldrh	r0, [r4, #20]
400185f8:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
400185fc:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018600:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018604:	e1d401bc 	ldrh	r0, [r4, #28]
40018608:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
4001860c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018610:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018614:	0000fff0 	.word	0x0000fff0
40018618:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

4001861c <CyU3PDmaMultiChannelSetXfer>:
4001861c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018620:	e1a04000 	mov	r4, r0
40018624:	e1a05001 	mov	r5, r1
40018628:	e1a06002 	mov	r6, r2
4001862c:	e3e01000 	mvn	r1, #0
40018630:	e1a00004 	mov	r0, r4
40018634:	ebfffabc 	bl	4001712c <CyU3PDmaMultiChannelAcquireLock>
40018638:	e1a07000 	mov	r7, r0
4001863c:	e3570000 	cmp	r7, #0
40018640:	0a000001 	beq	4001864c <CyU3PDmaMultiChannelSetXfer+0x30>
40018644:	e1a00007 	mov	r0, r7
40018648:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001864c:	e5940000 	ldr	r0, [r4]
40018650:	e3500001 	cmp	r0, #1
40018654:	0a000000 	beq	4001865c <CyU3PDmaMultiChannelSetXfer+0x40>
40018658:	e3a07043 	mov	r7, #67	; 0x43
4001865c:	e1d400ba 	ldrh	r0, [r4, #10]
40018660:	e1500006 	cmp	r0, r6
40018664:	ca000000 	bgt	4001866c <CyU3PDmaMultiChannelSetXfer+0x50>
40018668:	e3a07040 	mov	r7, #64	; 0x40
4001866c:	e1d400b4 	ldrh	r0, [r4, #4]
40018670:	e3500009 	cmp	r0, #9
40018674:	1a000002 	bne	40018684 <CyU3PDmaMultiChannelSetXfer+0x68>
40018678:	e3560000 	cmp	r6, #0
4001867c:	0a000000 	beq	40018684 <CyU3PDmaMultiChannelSetXfer+0x68>
40018680:	e3a07040 	mov	r7, #64	; 0x40
40018684:	e3570000 	cmp	r7, #0
40018688:	1a00002d 	bne	40018744 <CyU3PDmaMultiChannelSetXfer+0x128>
4001868c:	e3a02002 	mov	r2, #2
40018690:	e3e01027 	mvn	r1, #39	; 0x27
40018694:	e28400b0 	add	r0, r4, #176	; 0xb0
40018698:	ebffc599 	bl	40009d04 <_txe_event_flags_set>
4001869c:	e5845070 	str	r5, [r4, #112]	; 0x70
400186a0:	e1d400b4 	ldrh	r0, [r4, #4]
400186a4:	e2400005 	sub	r0, r0, #5
400186a8:	e3500005 	cmp	r0, #5
400186ac:	308ff100 	addcc	pc, pc, r0, lsl #2
400186b0:	ea000020 	b	40018738 <CyU3PDmaMultiChannelSetXfer+0x11c>
400186b4:	ea000003 	b	400186c8 <CyU3PDmaMultiChannelSetXfer+0xac>
400186b8:	ea000009 	b	400186e4 <CyU3PDmaMultiChannelSetXfer+0xc8>
400186bc:	ea000003 	b	400186d0 <CyU3PDmaMultiChannelSetXfer+0xb4>
400186c0:	ea000009 	b	400186ec <CyU3PDmaMultiChannelSetXfer+0xd0>
400186c4:	ea00000d 	b	40018700 <CyU3PDmaMultiChannelSetXfer+0xe4>
400186c8:	e1a00000 	nop			; (mov r0, r0)
400186cc:	e1a00000 	nop			; (mov r0, r0)
400186d0:	e1a02006 	mov	r2, r6
400186d4:	e1a01005 	mov	r1, r5
400186d8:	e1a00004 	mov	r0, r4
400186dc:	eb00001d 	bl	40018758 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
400186e0:	ea000016 	b	40018740 <CyU3PDmaMultiChannelSetXfer+0x124>
400186e4:	e1a00000 	nop			; (mov r0, r0)
400186e8:	e1a00000 	nop			; (mov r0, r0)
400186ec:	e1a02006 	mov	r2, r6
400186f0:	e1a01005 	mov	r1, r5
400186f4:	e1a00004 	mov	r0, r4
400186f8:	eb0000b2 	bl	400189c8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
400186fc:	ea00000f 	b	40018740 <CyU3PDmaMultiChannelSetXfer+0x124>
40018700:	e1a00000 	nop			; (mov r0, r0)
40018704:	e59f0048 	ldr	r0, [pc, #72]	; 40018754 <CyU3PDmaMultiChannelSetXfer+0x138>
40018708:	e5900000 	ldr	r0, [r0]
4001870c:	e3500000 	cmp	r0, #0
40018710:	1a000001 	bne	4001871c <CyU3PDmaMultiChannelSetXfer+0x100>
40018714:	e3a00047 	mov	r0, #71	; 0x47
40018718:	eaffffca 	b	40018648 <CyU3PDmaMultiChannelSetXfer+0x2c>
4001871c:	e1a02006 	mov	r2, r6
40018720:	e1a01005 	mov	r1, r5
40018724:	e1a00004 	mov	r0, r4
40018728:	e59f3024 	ldr	r3, [pc, #36]	; 40018754 <CyU3PDmaMultiChannelSetXfer+0x138>
4001872c:	e5933000 	ldr	r3, [r3]
40018730:	e12fff33 	blx	r3
40018734:	ea000001 	b	40018740 <CyU3PDmaMultiChannelSetXfer+0x124>
40018738:	e1a00000 	nop			; (mov r0, r0)
4001873c:	e1a00000 	nop			; (mov r0, r0)
40018740:	e1a00000 	nop			; (mov r0, r0)
40018744:	e2840078 	add	r0, r4, #120	; 0x78
40018748:	ebffc63a 	bl	4000a038 <_txe_mutex_put>
4001874c:	e1a00007 	mov	r0, r7
40018750:	eaffffbc 	b	40018648 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018754:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

40018758 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
40018758:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001875c:	e24dd028 	sub	sp, sp, #40	; 0x28
40018760:	e1a04000 	mov	r4, r0
40018764:	e1a05001 	mov	r5, r1
40018768:	e1a06002 	mov	r6, r2
4001876c:	e3a00002 	mov	r0, #2
40018770:	e5840000 	str	r0, [r4]
40018774:	e3a07000 	mov	r7, #0
40018778:	ea000005 	b	40018794 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
4001877c:	e2841024 	add	r1, r4, #36	; 0x24
40018780:	e0811087 	add	r1, r1, r7, lsl #1
40018784:	e1d100b0 	ldrh	r0, [r1]
40018788:	ebfff0ac 	bl	40014a40 <CyU3PDmaSocketDisable>
4001878c:	e2870001 	add	r0, r7, #1
40018790:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018794:	e1d400ba 	ldrh	r0, [r4, #10]
40018798:	e1500007 	cmp	r0, r7
4001879c:	cafffff6 	bgt	4001877c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
400187a0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400187a4:	ebfff0a5 	bl	40014a40 <CyU3PDmaSocketDisable>
400187a8:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
400187ac:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400187b0:	ebfff1bd 	bl	40014eac <CyU3PDmaUpdateSocketSuspendOption>
400187b4:	e2840014 	add	r0, r4, #20
400187b8:	e0800086 	add	r0, r0, r6, lsl #1
400187bc:	e1d000b0 	ldrh	r0, [r0]
400187c0:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400187c4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400187c8:	e3a07000 	mov	r7, #0
400187cc:	ea000040 	b	400188d4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
400187d0:	e2841024 	add	r1, r4, #36	; 0x24
400187d4:	e0811087 	add	r1, r1, r7, lsl #1
400187d8:	e1d100b0 	ldrh	r0, [r1]
400187dc:	e28d1010 	add	r1, sp, #16
400187e0:	ebfff0ae 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
400187e4:	e3a00000 	mov	r0, #0
400187e8:	e58d0014 	str	r0, [sp, #20]
400187ec:	e58d0018 	str	r0, [sp, #24]
400187f0:	e59d001c 	ldr	r0, [sp, #28]
400187f4:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400187f8:	e58d001c 	str	r0, [sp, #28]
400187fc:	e59d001c 	ldr	r0, [sp, #28]
40018800:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018804:	e58d001c 	str	r0, [sp, #28]
40018808:	e59d001c 	ldr	r0, [sp, #28]
4001880c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018810:	e58d001c 	str	r0, [sp, #28]
40018814:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018818:	e3500001 	cmp	r0, #1
4001881c:	1a000003 	bne	40018830 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018820:	e59d001c 	ldr	r0, [sp, #28]
40018824:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018828:	e58d001c 	str	r0, [sp, #28]
4001882c:	ea000002 	b	4001883c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018830:	e59d001c 	ldr	r0, [sp, #28]
40018834:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018838:	e58d001c 	str	r0, [sp, #28]
4001883c:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018840:	e3500000 	cmp	r0, #0
40018844:	0a000006 	beq	40018864 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
40018848:	e1d400b8 	ldrh	r0, [r4, #8]
4001884c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018850:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018854:	e1800281 	orr	r0, r0, r1, lsl #5
40018858:	e59d101c 	ldr	r1, [sp, #28]
4001885c:	e1800001 	orr	r0, r0, r1
40018860:	e58d001c 	str	r0, [sp, #28]
40018864:	e3e00000 	mvn	r0, #0
40018868:	e58d0020 	str	r0, [sp, #32]
4001886c:	e1570006 	cmp	r7, r6
40018870:	ba000004 	blt	40018888 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018874:	e2840014 	add	r0, r4, #20
40018878:	e0800087 	add	r0, r0, r7, lsl #1
4001887c:	e1d000b0 	ldrh	r0, [r0]
40018880:	e58d0010 	str	r0, [sp, #16]
40018884:	ea000007 	b	400188a8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
40018888:	e2841014 	add	r1, r4, #20
4001888c:	e0811087 	add	r1, r1, r7, lsl #1
40018890:	e1d100b0 	ldrh	r0, [r1]
40018894:	e1a0100d 	mov	r1, sp
40018898:	eb0026de 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001889c:	e59d0008 	ldr	r0, [sp, #8]
400188a0:	e1a00820 	lsr	r0, r0, #16
400188a4:	e58d0010 	str	r0, [sp, #16]
400188a8:	e284103e 	add	r1, r4, #62	; 0x3e
400188ac:	e0811087 	add	r1, r1, r7, lsl #1
400188b0:	e59d0010 	ldr	r0, [sp, #16]
400188b4:	e1c100b0 	strh	r0, [r1]
400188b8:	e2841024 	add	r1, r4, #36	; 0x24
400188bc:	e0811087 	add	r1, r1, r7, lsl #1
400188c0:	e1d100b0 	ldrh	r0, [r1]
400188c4:	e28d1010 	add	r1, sp, #16
400188c8:	ebfff11e 	bl	40014d48 <CyU3PDmaSocketSetConfig>
400188cc:	e2870001 	add	r0, r7, #1
400188d0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400188d4:	e1d400ba 	ldrh	r0, [r4, #10]
400188d8:	e1500007 	cmp	r0, r7
400188dc:	caffffbb 	bgt	400187d0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
400188e0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400188e4:	e28d1010 	add	r1, sp, #16
400188e8:	ebfff06c 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
400188ec:	e58d5014 	str	r5, [sp, #20]
400188f0:	e3a00000 	mov	r0, #0
400188f4:	e58d0018 	str	r0, [sp, #24]
400188f8:	e3550000 	cmp	r5, #0
400188fc:	1a000006 	bne	4001891c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018900:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018904:	e3c00080 	bic	r0, r0, #128	; 0x80
40018908:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001890c:	e59d001c 	ldr	r0, [sp, #28]
40018910:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018914:	e58d001c 	str	r0, [sp, #28]
40018918:	ea000005 	b	40018934 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
4001891c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018920:	e3800080 	orr	r0, r0, #128	; 0x80
40018924:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018928:	e59d001c 	ldr	r0, [sp, #28]
4001892c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018930:	e58d001c 	str	r0, [sp, #28]
40018934:	e59d001c 	ldr	r0, [sp, #28]
40018938:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001893c:	e58d001c 	str	r0, [sp, #28]
40018940:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018944:	e3500001 	cmp	r0, #1
40018948:	1a000003 	bne	4001895c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
4001894c:	e59d001c 	ldr	r0, [sp, #28]
40018950:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018954:	e58d001c 	str	r0, [sp, #28]
40018958:	ea000002 	b	40018968 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
4001895c:	e59d001c 	ldr	r0, [sp, #28]
40018960:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018964:	e58d001c 	str	r0, [sp, #28]
40018968:	e3e00000 	mvn	r0, #0
4001896c:	e58d0020 	str	r0, [sp, #32]
40018970:	e1d481bc 	ldrh	r8, [r4, #28]
40018974:	e3a07000 	mov	r7, #0
40018978:	ea000007 	b	4001899c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
4001897c:	e1a0100d 	mov	r1, sp
40018980:	e1a00008 	mov	r0, r8
40018984:	eb0026a3 	bl	40022418 <CyU3PDmaDscrGetConfig>
40018988:	e59d0008 	ldr	r0, [sp, #8]
4001898c:	e1a08800 	lsl	r8, r0, #16
40018990:	e1a08828 	lsr	r8, r8, #16
40018994:	e2870001 	add	r0, r7, #1
40018998:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001899c:	e1570006 	cmp	r7, r6
400189a0:	bafffff5 	blt	4001897c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
400189a4:	e58d8010 	str	r8, [sp, #16]
400189a8:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
400189ac:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
400189b0:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
400189b4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400189b8:	e28d1010 	add	r1, sp, #16
400189bc:	ebfff0e1 	bl	40014d48 <CyU3PDmaSocketSetConfig>
400189c0:	e28dd028 	add	sp, sp, #40	; 0x28
400189c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

400189c8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
400189c8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400189cc:	e24dd028 	sub	sp, sp, #40	; 0x28
400189d0:	e1a04000 	mov	r4, r0
400189d4:	e1a05001 	mov	r5, r1
400189d8:	e1a06002 	mov	r6, r2
400189dc:	e3a00002 	mov	r0, #2
400189e0:	e5840000 	str	r0, [r4]
400189e4:	e3a07000 	mov	r7, #0
400189e8:	ea000005 	b	40018a04 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
400189ec:	e284102c 	add	r1, r4, #44	; 0x2c
400189f0:	e0811087 	add	r1, r1, r7, lsl #1
400189f4:	e1d100b0 	ldrh	r0, [r1]
400189f8:	ebfff010 	bl	40014a40 <CyU3PDmaSocketDisable>
400189fc:	e2870001 	add	r0, r7, #1
40018a00:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a04:	e1d400ba 	ldrh	r0, [r4, #10]
40018a08:	e1500007 	cmp	r0, r7
40018a0c:	cafffff6 	bgt	400189ec <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018a10:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a14:	ebfff009 	bl	40014a40 <CyU3PDmaSocketDisable>
40018a18:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018a1c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a20:	ebfff121 	bl	40014eac <CyU3PDmaUpdateSocketSuspendOption>
40018a24:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a28:	e28d1010 	add	r1, sp, #16
40018a2c:	ebfff01b 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40018a30:	e58d5014 	str	r5, [sp, #20]
40018a34:	e3a00000 	mov	r0, #0
40018a38:	e58d0018 	str	r0, [sp, #24]
40018a3c:	e3550000 	cmp	r5, #0
40018a40:	1a000006 	bne	40018a60 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018a44:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a48:	e3c00080 	bic	r0, r0, #128	; 0x80
40018a4c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a50:	e59d001c 	ldr	r0, [sp, #28]
40018a54:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018a58:	e58d001c 	str	r0, [sp, #28]
40018a5c:	ea000005 	b	40018a78 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018a60:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a64:	e3800080 	orr	r0, r0, #128	; 0x80
40018a68:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a6c:	e59d001c 	ldr	r0, [sp, #28]
40018a70:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018a74:	e58d001c 	str	r0, [sp, #28]
40018a78:	e59d001c 	ldr	r0, [sp, #28]
40018a7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018a80:	e58d001c 	str	r0, [sp, #28]
40018a84:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018a88:	e3500001 	cmp	r0, #1
40018a8c:	1a000003 	bne	40018aa0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018a90:	e59d001c 	ldr	r0, [sp, #28]
40018a94:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018a98:	e58d001c 	str	r0, [sp, #28]
40018a9c:	ea000002 	b	40018aac <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018aa0:	e59d001c 	ldr	r0, [sp, #28]
40018aa4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018aa8:	e58d001c 	str	r0, [sp, #28]
40018aac:	e3e00000 	mvn	r0, #0
40018ab0:	e58d0020 	str	r0, [sp, #32]
40018ab4:	e1d481b4 	ldrh	r8, [r4, #20]
40018ab8:	e3a07000 	mov	r7, #0
40018abc:	ea000007 	b	40018ae0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018ac0:	e1a0100d 	mov	r1, sp
40018ac4:	e1a00008 	mov	r0, r8
40018ac8:	eb002652 	bl	40022418 <CyU3PDmaDscrGetConfig>
40018acc:	e59d0008 	ldr	r0, [sp, #8]
40018ad0:	e59f1148 	ldr	r1, [pc, #328]	; 40018c20 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018ad4:	e0018820 	and	r8, r1, r0, lsr #16
40018ad8:	e2870001 	add	r0, r7, #1
40018adc:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018ae0:	e1570006 	cmp	r7, r6
40018ae4:	bafffff5 	blt	40018ac0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018ae8:	e58d8010 	str	r8, [sp, #16]
40018aec:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018af0:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018af4:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018af8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018afc:	e28d1010 	add	r1, sp, #16
40018b00:	ebfff090 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40018b04:	e284001c 	add	r0, r4, #28
40018b08:	e0800086 	add	r0, r0, r6, lsl #1
40018b0c:	e1d000b0 	ldrh	r0, [r0]
40018b10:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018b14:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018b18:	e3a07000 	mov	r7, #0
40018b1c:	ea00003a 	b	40018c0c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018b20:	e284102c 	add	r1, r4, #44	; 0x2c
40018b24:	e0811087 	add	r1, r1, r7, lsl #1
40018b28:	e1d100b0 	ldrh	r0, [r1]
40018b2c:	e28d1010 	add	r1, sp, #16
40018b30:	ebffefda 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40018b34:	e3a00000 	mov	r0, #0
40018b38:	e58d0014 	str	r0, [sp, #20]
40018b3c:	e58d0018 	str	r0, [sp, #24]
40018b40:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018b44:	e3c00080 	bic	r0, r0, #128	; 0x80
40018b48:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018b4c:	e59d001c 	ldr	r0, [sp, #28]
40018b50:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018b54:	e58d001c 	str	r0, [sp, #28]
40018b58:	e59d001c 	ldr	r0, [sp, #28]
40018b5c:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018b60:	e58d001c 	str	r0, [sp, #28]
40018b64:	e59d001c 	ldr	r0, [sp, #28]
40018b68:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018b6c:	e58d001c 	str	r0, [sp, #28]
40018b70:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018b74:	e3500001 	cmp	r0, #1
40018b78:	1a000003 	bne	40018b8c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40018b7c:	e59d001c 	ldr	r0, [sp, #28]
40018b80:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018b84:	e58d001c 	str	r0, [sp, #28]
40018b88:	ea000002 	b	40018b98 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40018b8c:	e59d001c 	ldr	r0, [sp, #28]
40018b90:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018b94:	e58d001c 	str	r0, [sp, #28]
40018b98:	e3e00000 	mvn	r0, #0
40018b9c:	e58d0020 	str	r0, [sp, #32]
40018ba0:	e1570006 	cmp	r7, r6
40018ba4:	ba000004 	blt	40018bbc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40018ba8:	e284001c 	add	r0, r4, #28
40018bac:	e0800087 	add	r0, r0, r7, lsl #1
40018bb0:	e1d000b0 	ldrh	r0, [r0]
40018bb4:	e58d0010 	str	r0, [sp, #16]
40018bb8:	ea000008 	b	40018be0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40018bbc:	e284101c 	add	r1, r4, #28
40018bc0:	e0811087 	add	r1, r1, r7, lsl #1
40018bc4:	e1d100b0 	ldrh	r0, [r1]
40018bc8:	e1a0100d 	mov	r1, sp
40018bcc:	eb002611 	bl	40022418 <CyU3PDmaDscrGetConfig>
40018bd0:	e59d0008 	ldr	r0, [sp, #8]
40018bd4:	e1a00800 	lsl	r0, r0, #16
40018bd8:	e1a00820 	lsr	r0, r0, #16
40018bdc:	e58d0010 	str	r0, [sp, #16]
40018be0:	e2841046 	add	r1, r4, #70	; 0x46
40018be4:	e0811087 	add	r1, r1, r7, lsl #1
40018be8:	e59d0010 	ldr	r0, [sp, #16]
40018bec:	e1c100b0 	strh	r0, [r1]
40018bf0:	e284102c 	add	r1, r4, #44	; 0x2c
40018bf4:	e0811087 	add	r1, r1, r7, lsl #1
40018bf8:	e1d100b0 	ldrh	r0, [r1]
40018bfc:	e28d1010 	add	r1, sp, #16
40018c00:	ebfff050 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40018c04:	e2870001 	add	r0, r7, #1
40018c08:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c0c:	e1d400ba 	ldrh	r0, [r4, #10]
40018c10:	e1500007 	cmp	r0, r7
40018c14:	caffffc1 	bgt	40018b20 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40018c18:	e28dd028 	add	sp, sp, #40	; 0x28
40018c1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018c20:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40018c24 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40018c24:	e92d4030 	push	{r4, r5, lr}
40018c28:	e24dd01c 	sub	sp, sp, #28
40018c2c:	e1a04000 	mov	r4, r0
40018c30:	e3a05000 	mov	r5, #0
40018c34:	ea000031 	b	40018d00 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
40018c38:	e2840014 	add	r0, r4, #20
40018c3c:	e0800085 	add	r0, r0, r5, lsl #1
40018c40:	e1d000b0 	ldrh	r0, [r0]
40018c44:	e284103e 	add	r1, r4, #62	; 0x3e
40018c48:	e0811085 	add	r1, r1, r5, lsl #1
40018c4c:	e1c100b0 	strh	r0, [r1]
40018c50:	e2841024 	add	r1, r4, #36	; 0x24
40018c54:	e0811085 	add	r1, r1, r5, lsl #1
40018c58:	e1d100b0 	ldrh	r0, [r1]
40018c5c:	ebffef77 	bl	40014a40 <CyU3PDmaSocketDisable>
40018c60:	e2841024 	add	r1, r4, #36	; 0x24
40018c64:	e0811085 	add	r1, r1, r5, lsl #1
40018c68:	e1d100b0 	ldrh	r0, [r1]
40018c6c:	e28d1004 	add	r1, sp, #4
40018c70:	ebffef8a 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40018c74:	e2840014 	add	r0, r4, #20
40018c78:	e0800085 	add	r0, r0, r5, lsl #1
40018c7c:	e1d000b0 	ldrh	r0, [r0]
40018c80:	e58d0004 	str	r0, [sp, #4]
40018c84:	e3a00000 	mov	r0, #0
40018c88:	e58d0008 	str	r0, [sp, #8]
40018c8c:	e58d000c 	str	r0, [sp, #12]
40018c90:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018c94:	e58d0010 	str	r0, [sp, #16]
40018c98:	e2841024 	add	r1, r4, #36	; 0x24
40018c9c:	e0811085 	add	r1, r1, r5, lsl #1
40018ca0:	e1d100b0 	ldrh	r0, [r1]
40018ca4:	eb0006a3 	bl	4001a738 <CyU3PDmaIsSockAvlEnReqd>
40018ca8:	e3500000 	cmp	r0, #0
40018cac:	0a000002 	beq	40018cbc <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40018cb0:	e59d0010 	ldr	r0, [sp, #16]
40018cb4:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018cb8:	e58d0010 	str	r0, [sp, #16]
40018cbc:	e3e00000 	mvn	r0, #0
40018cc0:	e58d0014 	str	r0, [sp, #20]
40018cc4:	e1d400b4 	ldrh	r0, [r4, #4]
40018cc8:	e3500005 	cmp	r0, #5
40018ccc:	1a000002 	bne	40018cdc <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40018cd0:	e3a00040 	mov	r0, #64	; 0x40
40018cd4:	e58d0018 	str	r0, [sp, #24]
40018cd8:	ea000001 	b	40018ce4 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40018cdc:	e3a00041 	mov	r0, #65	; 0x41
40018ce0:	e58d0018 	str	r0, [sp, #24]
40018ce4:	e2841024 	add	r1, r4, #36	; 0x24
40018ce8:	e0811085 	add	r1, r1, r5, lsl #1
40018cec:	e1d100b0 	ldrh	r0, [r1]
40018cf0:	e28d1004 	add	r1, sp, #4
40018cf4:	ebfff013 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40018cf8:	e2850001 	add	r0, r5, #1
40018cfc:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018d00:	e1d400ba 	ldrh	r0, [r4, #10]
40018d04:	e1500005 	cmp	r0, r5
40018d08:	caffffca 	bgt	40018c38 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
40018d0c:	e1d401bc 	ldrh	r0, [r4, #28]
40018d10:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018d14:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d18:	ebffef48 	bl	40014a40 <CyU3PDmaSocketDisable>
40018d1c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d20:	e28d1004 	add	r1, sp, #4
40018d24:	ebffef5d 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40018d28:	e1d401bc 	ldrh	r0, [r4, #28]
40018d2c:	e58d0004 	str	r0, [sp, #4]
40018d30:	e3a00000 	mov	r0, #0
40018d34:	e58d0008 	str	r0, [sp, #8]
40018d38:	e58d000c 	str	r0, [sp, #12]
40018d3c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018d40:	e58d0010 	str	r0, [sp, #16]
40018d44:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d48:	eb00067a 	bl	4001a738 <CyU3PDmaIsSockAvlEnReqd>
40018d4c:	e3500000 	cmp	r0, #0
40018d50:	0a000002 	beq	40018d60 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
40018d54:	e59d0010 	ldr	r0, [sp, #16]
40018d58:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018d5c:	e58d0010 	str	r0, [sp, #16]
40018d60:	e3e00000 	mvn	r0, #0
40018d64:	e58d0014 	str	r0, [sp, #20]
40018d68:	e1d400b4 	ldrh	r0, [r4, #4]
40018d6c:	e3500005 	cmp	r0, #5
40018d70:	1a000002 	bne	40018d80 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40018d74:	e3a000c0 	mov	r0, #192	; 0xc0
40018d78:	e58d0018 	str	r0, [sp, #24]
40018d7c:	ea000001 	b	40018d88 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40018d80:	e3a000c2 	mov	r0, #194	; 0xc2
40018d84:	e58d0018 	str	r0, [sp, #24]
40018d88:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d8c:	e28d1004 	add	r1, sp, #4
40018d90:	ebffefec 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40018d94:	e3a00000 	mov	r0, #0
40018d98:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
40018d9c:	e28dd01c 	add	sp, sp, #28
40018da0:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40018da4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40018da4:	e92d4030 	push	{r4, r5, lr}
40018da8:	e24dd01c 	sub	sp, sp, #28
40018dac:	e1a04000 	mov	r4, r0
40018db0:	e1d401b4 	ldrh	r0, [r4, #20]
40018db4:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018db8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018dbc:	ebffef1f 	bl	40014a40 <CyU3PDmaSocketDisable>
40018dc0:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018dc4:	e28d1004 	add	r1, sp, #4
40018dc8:	ebffef34 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40018dcc:	e1d401b4 	ldrh	r0, [r4, #20]
40018dd0:	e58d0004 	str	r0, [sp, #4]
40018dd4:	e3a00000 	mov	r0, #0
40018dd8:	e58d0008 	str	r0, [sp, #8]
40018ddc:	e58d000c 	str	r0, [sp, #12]
40018de0:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018de4:	e58d0010 	str	r0, [sp, #16]
40018de8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018dec:	eb000651 	bl	4001a738 <CyU3PDmaIsSockAvlEnReqd>
40018df0:	e3500000 	cmp	r0, #0
40018df4:	0a000002 	beq	40018e04 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
40018df8:	e59d0010 	ldr	r0, [sp, #16]
40018dfc:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018e00:	e58d0010 	str	r0, [sp, #16]
40018e04:	e3e00000 	mvn	r0, #0
40018e08:	e58d0014 	str	r0, [sp, #20]
40018e0c:	e1d400b4 	ldrh	r0, [r4, #4]
40018e10:	e3500006 	cmp	r0, #6
40018e14:	1a000002 	bne	40018e24 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
40018e18:	e3a000c0 	mov	r0, #192	; 0xc0
40018e1c:	e58d0018 	str	r0, [sp, #24]
40018e20:	ea000001 	b	40018e2c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40018e24:	e3a000c1 	mov	r0, #193	; 0xc1
40018e28:	e58d0018 	str	r0, [sp, #24]
40018e2c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e30:	e28d1004 	add	r1, sp, #4
40018e34:	ebffefc3 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40018e38:	e3a05000 	mov	r5, #0
40018e3c:	ea000035 	b	40018f18 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
40018e40:	e284001c 	add	r0, r4, #28
40018e44:	e0800085 	add	r0, r0, r5, lsl #1
40018e48:	e1d000b0 	ldrh	r0, [r0]
40018e4c:	e2841046 	add	r1, r4, #70	; 0x46
40018e50:	e0811085 	add	r1, r1, r5, lsl #1
40018e54:	e1c100b0 	strh	r0, [r1]
40018e58:	e284102c 	add	r1, r4, #44	; 0x2c
40018e5c:	e0811085 	add	r1, r1, r5, lsl #1
40018e60:	e1d100b0 	ldrh	r0, [r1]
40018e64:	ebffeef5 	bl	40014a40 <CyU3PDmaSocketDisable>
40018e68:	e284102c 	add	r1, r4, #44	; 0x2c
40018e6c:	e0811085 	add	r1, r1, r5, lsl #1
40018e70:	e1d100b0 	ldrh	r0, [r1]
40018e74:	e28d1004 	add	r1, sp, #4
40018e78:	ebffef08 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40018e7c:	e284001c 	add	r0, r4, #28
40018e80:	e0800085 	add	r0, r0, r5, lsl #1
40018e84:	e1d000b0 	ldrh	r0, [r0]
40018e88:	e58d0004 	str	r0, [sp, #4]
40018e8c:	e3a00000 	mov	r0, #0
40018e90:	e58d0008 	str	r0, [sp, #8]
40018e94:	e58d000c 	str	r0, [sp, #12]
40018e98:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018e9c:	e58d0010 	str	r0, [sp, #16]
40018ea0:	e284102c 	add	r1, r4, #44	; 0x2c
40018ea4:	e0811085 	add	r1, r1, r5, lsl #1
40018ea8:	e1d100b0 	ldrh	r0, [r1]
40018eac:	eb000621 	bl	4001a738 <CyU3PDmaIsSockAvlEnReqd>
40018eb0:	e3500000 	cmp	r0, #0
40018eb4:	0a000002 	beq	40018ec4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40018eb8:	e59d0010 	ldr	r0, [sp, #16]
40018ebc:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018ec0:	e58d0010 	str	r0, [sp, #16]
40018ec4:	e3e00000 	mvn	r0, #0
40018ec8:	e58d0014 	str	r0, [sp, #20]
40018ecc:	e1d400b4 	ldrh	r0, [r4, #4]
40018ed0:	e3500006 	cmp	r0, #6
40018ed4:	1a000002 	bne	40018ee4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40018ed8:	e3a00040 	mov	r0, #64	; 0x40
40018edc:	e58d0018 	str	r0, [sp, #24]
40018ee0:	ea000001 	b	40018eec <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40018ee4:	e3a00042 	mov	r0, #66	; 0x42
40018ee8:	e58d0018 	str	r0, [sp, #24]
40018eec:	e284102c 	add	r1, r4, #44	; 0x2c
40018ef0:	e0811085 	add	r1, r1, r5, lsl #1
40018ef4:	e1d100b0 	ldrh	r0, [r1]
40018ef8:	e28d1004 	add	r1, sp, #4
40018efc:	ebffef91 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40018f00:	e3a00000 	mov	r0, #0
40018f04:	e2841064 	add	r1, r4, #100	; 0x64
40018f08:	e0811085 	add	r1, r1, r5, lsl #1
40018f0c:	e1c100b0 	strh	r0, [r1]
40018f10:	e2850001 	add	r0, r5, #1
40018f14:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018f18:	e1d400ba 	ldrh	r0, [r4, #10]
40018f1c:	e1500005 	cmp	r0, r5
40018f20:	caffffc6 	bgt	40018e40 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
40018f24:	e28dd01c 	add	sp, sp, #28
40018f28:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

40018f2c <CyU3PDmaMultiChannelSetWrapUp>:
40018f2c:	e92d4070 	push	{r4, r5, r6, lr}
40018f30:	e1a04000 	mov	r4, r0
40018f34:	e1a05001 	mov	r5, r1
40018f38:	e3e01000 	mvn	r1, #0
40018f3c:	e1a00004 	mov	r0, r4
40018f40:	ebfff879 	bl	4001712c <CyU3PDmaMultiChannelAcquireLock>
40018f44:	e1a06000 	mov	r6, r0
40018f48:	e3560000 	cmp	r6, #0
40018f4c:	0a000001 	beq	40018f58 <CyU3PDmaMultiChannelSetWrapUp+0x2c>
40018f50:	e1a00006 	mov	r0, r6
40018f54:	e8bd8070 	pop	{r4, r5, r6, pc}
40018f58:	e5940000 	ldr	r0, [r4]
40018f5c:	e3500004 	cmp	r0, #4
40018f60:	0a000003 	beq	40018f74 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40018f64:	e5940000 	ldr	r0, [r4]
40018f68:	e3500002 	cmp	r0, #2
40018f6c:	0a000000 	beq	40018f74 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40018f70:	e3a06047 	mov	r6, #71	; 0x47
40018f74:	e1d400b4 	ldrh	r0, [r4, #4]
40018f78:	e3500006 	cmp	r0, #6
40018f7c:	0a000005 	beq	40018f98 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40018f80:	e1d400b4 	ldrh	r0, [r4, #4]
40018f84:	e3500008 	cmp	r0, #8
40018f88:	0a000002 	beq	40018f98 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40018f8c:	e1d400b4 	ldrh	r0, [r4, #4]
40018f90:	e3500009 	cmp	r0, #9
40018f94:	1a000003 	bne	40018fa8 <CyU3PDmaMultiChannelSetWrapUp+0x7c>
40018f98:	e3550000 	cmp	r5, #0
40018f9c:	0a000005 	beq	40018fb8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fa0:	e3a06040 	mov	r6, #64	; 0x40
40018fa4:	ea000003 	b	40018fb8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fa8:	e1d400ba 	ldrh	r0, [r4, #10]
40018fac:	e1500005 	cmp	r0, r5
40018fb0:	ca000000 	bgt	40018fb8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fb4:	e3a06040 	mov	r6, #64	; 0x40
40018fb8:	e3560000 	cmp	r6, #0
40018fbc:	1a000003 	bne	40018fd0 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
40018fc0:	e2841024 	add	r1, r4, #36	; 0x24
40018fc4:	e0811085 	add	r1, r1, r5, lsl #1
40018fc8:	e1d100b0 	ldrh	r0, [r1]
40018fcc:	ebffef88 	bl	40014df4 <CyU3PDmaSocketSetWrapUp>
40018fd0:	e2840078 	add	r0, r4, #120	; 0x78
40018fd4:	ebffc417 	bl	4000a038 <_txe_mutex_put>
40018fd8:	e1a00006 	mov	r0, r6
40018fdc:	eaffffdc 	b	40018f54 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

40018fe0 <CyU3PDmaApplicationDefine>:
40018fe0:	e92d4010 	push	{r4, lr}
40018fe4:	e24dd020 	sub	sp, sp, #32
40018fe8:	eb000051 	bl	40019134 <CyU3PDmaInit>
40018fec:	e3a02028 	mov	r2, #40	; 0x28
40018ff0:	e3a01000 	mov	r1, #0
40018ff4:	e59f007c 	ldr	r0, [pc, #124]	; 40019078 <CyU3PDmaApplicationDefine+0x98>
40018ff8:	ebffc2a1 	bl	40009a84 <_txe_event_flags_create>
40018ffc:	e3a00c02 	mov	r0, #512	; 0x200
40019000:	ebffa99b 	bl	40003674 <CyU3PMemAlloc>
40019004:	e1a04000 	mov	r4, r0
40019008:	e3a0303c 	mov	r3, #60	; 0x3c
4001900c:	e3a02c02 	mov	r2, #512	; 0x200
40019010:	e1cd20f0 	strd	r2, [sp]
40019014:	e1a03004 	mov	r3, r4
40019018:	e3a02004 	mov	r2, #4
4001901c:	e3a01000 	mov	r1, #0
40019020:	e59f0054 	ldr	r0, [pc, #84]	; 4001907c <CyU3PDmaApplicationDefine+0x9c>
40019024:	ebffc42b 	bl	4000a0d8 <_txe_queue_create>
40019028:	e3a00b01 	mov	r0, #1024	; 0x400
4001902c:	ebffa990 	bl	40003674 <CyU3PMemAlloc>
40019030:	e1a04000 	mov	r4, r0
40019034:	e3a030a8 	mov	r3, #168	; 0xa8
40019038:	e3a02001 	mov	r2, #1
4001903c:	e3a01000 	mov	r1, #0
40019040:	e3a00002 	mov	r0, #2
40019044:	e28dc00c 	add	ip, sp, #12
40019048:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001904c:	e3a02b01 	mov	r2, #1024	; 0x400
40019050:	e1a03001 	mov	r3, r1
40019054:	e58d2004 	str	r2, [sp, #4]
40019058:	e59f2020 	ldr	r2, [pc, #32]	; 40019080 <CyU3PDmaApplicationDefine+0xa0>
4001905c:	e28f1020 	add	r1, pc, #32
40019060:	e58d0008 	str	r0, [sp, #8]
40019064:	e59f0028 	ldr	r0, [pc, #40]	; 40019094 <CyU3PDmaApplicationDefine+0xb4>
40019068:	e58d4000 	str	r4, [sp]
4001906c:	ebffc4ff 	bl	4000a470 <_txe_thread_create>
40019070:	e28dd020 	add	sp, sp, #32
40019074:	e8bd8010 	pop	{r4, pc}
40019078:	40031908 	.word	0x40031908
4001907c:	40031930 	.word	0x40031930
40019080:	4001a8e4 	.word	0x4001a8e4
40019084:	445f3130 	.word	0x445f3130
40019088:	545f414d 	.word	0x545f414d
4001908c:	41455248 	.word	0x41455248
40019090:	00000044 	.word	0x00000044
40019094:	40031860 	.word	0x40031860

Disassembly of section i.CyU3PDmaChannelHandleError:

40019098 <CyU3PDmaChannelHandleError>:
40019098:	e92d4010 	push	{r4, lr}
4001909c:	e1a04000 	mov	r4, r0
400190a0:	e3e01000 	mvn	r1, #0
400190a4:	e284003c 	add	r0, r4, #60	; 0x3c
400190a8:	ebffc3ad 	bl	40009f64 <_txe_mutex_get>
400190ac:	e1d400b4 	ldrh	r0, [r4, #4]
400190b0:	e3500004 	cmp	r0, #4
400190b4:	0a000001 	beq	400190c0 <CyU3PDmaChannelHandleError+0x28>
400190b8:	e1d401b0 	ldrh	r0, [r4, #16]
400190bc:	ebffee5f 	bl	40014a40 <CyU3PDmaSocketDisable>
400190c0:	e1d400b4 	ldrh	r0, [r4, #4]
400190c4:	e3500003 	cmp	r0, #3
400190c8:	0a000001 	beq	400190d4 <CyU3PDmaChannelHandleError+0x3c>
400190cc:	e1d401b2 	ldrh	r0, [r4, #18]
400190d0:	ebffee5a 	bl	40014a40 <CyU3PDmaSocketDisable>
400190d4:	e3a02002 	mov	r2, #2
400190d8:	e3e01007 	mvn	r1, #7
400190dc:	e2840074 	add	r0, r4, #116	; 0x74
400190e0:	ebffc307 	bl	40009d04 <_txe_event_flags_set>
400190e4:	e3a02000 	mov	r2, #0
400190e8:	e3a01040 	mov	r1, #64	; 0x40
400190ec:	e2840074 	add	r0, r4, #116	; 0x74
400190f0:	ebffc303 	bl	40009d04 <_txe_event_flags_set>
400190f4:	e3a00005 	mov	r0, #5
400190f8:	e5840000 	str	r0, [r4]
400190fc:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40019100:	e3500000 	cmp	r0, #0
40019104:	0a000007 	beq	40019128 <CyU3PDmaChannelHandleError+0x90>
40019108:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4001910c:	e3100040 	tst	r0, #64	; 0x40
40019110:	0a000004 	beq	40019128 <CyU3PDmaChannelHandleError+0x90>
40019114:	e3a02000 	mov	r2, #0
40019118:	e3a01040 	mov	r1, #64	; 0x40
4001911c:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40019120:	e1a00004 	mov	r0, r4
40019124:	e12fff33 	blx	r3
40019128:	e284003c 	add	r0, r4, #60	; 0x3c
4001912c:	ebffc3c1 	bl	4000a038 <_txe_mutex_put>
40019130:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

40019134 <CyU3PDmaInit>:
40019134:	e92d4010 	push	{r4, lr}
40019138:	e3a02020 	mov	r2, #32
4001913c:	e3a01000 	mov	r1, #0
40019140:	e59f006c 	ldr	r0, [pc, #108]	; 400191b4 <CyU3PDmaInit+0x80>
40019144:	ebffa95b 	bl	400036b8 <CyU3PMemSet>
40019148:	e3a02080 	mov	r2, #128	; 0x80
4001914c:	e3a01000 	mov	r1, #0
40019150:	e59f0060 	ldr	r0, [pc, #96]	; 400191b8 <CyU3PDmaInit+0x84>
40019154:	ebffa957 	bl	400036b8 <CyU3PMemSet>
40019158:	e3a02020 	mov	r2, #32
4001915c:	e3a01000 	mov	r1, #0
40019160:	e59f0054 	ldr	r0, [pc, #84]	; 400191bc <CyU3PDmaInit+0x88>
40019164:	ebffa953 	bl	400036b8 <CyU3PMemSet>
40019168:	e3a02040 	mov	r2, #64	; 0x40
4001916c:	e3a01000 	mov	r1, #0
40019170:	e59f0048 	ldr	r0, [pc, #72]	; 400191c0 <CyU3PDmaInit+0x8c>
40019174:	ebffa94f 	bl	400036b8 <CyU3PMemSet>
40019178:	e3a02040 	mov	r2, #64	; 0x40
4001917c:	e3a01000 	mov	r1, #0
40019180:	e59f003c 	ldr	r0, [pc, #60]	; 400191c4 <CyU3PDmaInit+0x90>
40019184:	ebffa94b 	bl	400036b8 <CyU3PMemSet>
40019188:	e3a00000 	mov	r0, #0
4001918c:	e59f1034 	ldr	r1, [pc, #52]	; 400191c8 <CyU3PDmaInit+0x94>
40019190:	e5810000 	str	r0, [r1]
40019194:	eb002463 	bl	40022328 <CyU3PDmaDscrListCreate>
40019198:	ebffaa87 	bl	40003bbc <CyU3PDmaBufferInit>
4001919c:	e3a00000 	mov	r0, #0
400191a0:	e59f1024 	ldr	r1, [pc, #36]	; 400191cc <CyU3PDmaInit+0x98>
400191a4:	e1c100b0 	strh	r0, [r1]
400191a8:	e59f1020 	ldr	r1, [pc, #32]	; 400191d0 <CyU3PDmaInit+0x9c>
400191ac:	e1c100b0 	strh	r0, [r1]
400191b0:	e8bd8010 	pop	{r4, pc}
400191b4:	40031720 	.word	0x40031720
400191b8:	40031740 	.word	0x40031740
400191bc:	400317c0 	.word	0x400317c0
400191c0:	400317e0 	.word	0x400317e0
400191c4:	40031820 	.word	0x40031820
400191c8:	40030cd4 	.word	0x40030cd4
400191cc:	40030cfc 	.word	0x40030cfc
400191d0:	40030cfe 	.word	0x40030cfe

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

400191d4 <CyU3PDmaIntHandler_TypeAuto>:
400191d4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400191d8:	e24dd01c 	sub	sp, sp, #28
400191dc:	e1a04000 	mov	r4, r0
400191e0:	e5949004 	ldr	r9, [r4, #4]
400191e4:	e5948008 	ldr	r8, [r4, #8]
400191e8:	e3180040 	tst	r8, #64	; 0x40
400191ec:	0a000003 	beq	40019200 <CyU3PDmaIntHandler_TypeAuto+0x2c>
400191f0:	e1a00009 	mov	r0, r9
400191f4:	ebffffa7 	bl	40019098 <CyU3PDmaChannelHandleError>
400191f8:	e28dd01c 	add	sp, sp, #28
400191fc:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019200:	e3e01000 	mvn	r1, #0
40019204:	e289003c 	add	r0, r9, #60	; 0x3c
40019208:	ebffc355 	bl	40009f64 <_txe_mutex_get>
4001920c:	e1d901b2 	ldrh	r0, [r9, #18]
40019210:	e5941000 	ldr	r1, [r4]
40019214:	e1500821 	cmp	r0, r1, lsr #16
40019218:	1a00004b 	bne	4001934c <CyU3PDmaIntHandler_TypeAuto+0x178>
4001921c:	e1d901b2 	ldrh	r0, [r9, #18]
40019220:	e3a0103f 	mov	r1, #63	; 0x3f
40019224:	e0015440 	and	r5, r1, r0, asr #8
40019228:	e1d901b2 	ldrh	r0, [r9, #18]
4001922c:	e20060ff 	and	r6, r0, #255	; 0xff
40019230:	e594000c 	ldr	r0, [r4, #12]
40019234:	e1a07800 	lsl	r7, r0, #16
40019238:	e1a07827 	lsr	r7, r7, #16
4001923c:	e3180080 	tst	r8, #128	; 0x80
40019240:	0a000012 	beq	40019290 <CyU3PDmaIntHandler_TypeAuto+0xbc>
40019244:	e3a00001 	mov	r0, #1
40019248:	e5890000 	str	r0, [r9]
4001924c:	e3a02000 	mov	r2, #0
40019250:	e3a01001 	mov	r1, #1
40019254:	e2890074 	add	r0, r9, #116	; 0x74
40019258:	ebffc2a9 	bl	40009d04 <_txe_event_flags_set>
4001925c:	ebffe599 	bl	400128c8 <CyU3PSysBarrierSync>
40019260:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019264:	e3500000 	cmp	r0, #0
40019268:	0a000028 	beq	40019310 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001926c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019270:	e3100001 	tst	r0, #1
40019274:	0a000025 	beq	40019310 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019278:	e3a02000 	mov	r2, #0
4001927c:	e3a01001 	mov	r1, #1
40019280:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019284:	e1a00009 	mov	r0, r9
40019288:	e12fff33 	blx	r3
4001928c:	ea00001f 	b	40019310 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019290:	e3180002 	tst	r8, #2
40019294:	0a00001d 	beq	40019310 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019298:	e5990000 	ldr	r0, [r9]
4001929c:	e3500003 	cmp	r0, #3
400192a0:	1a00001a 	bne	40019310 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192a4:	e3a00001 	mov	r0, #1
400192a8:	e5890000 	str	r0, [r9]
400192ac:	e59f0284 	ldr	r0, [pc, #644]	; 40019538 <CyU3PDmaIntHandler_TypeAuto+0x364>
400192b0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400192b4:	e0800386 	add	r0, r0, r6, lsl #7
400192b8:	e5900014 	ldr	r0, [r0, #20]
400192bc:	e3c00002 	bic	r0, r0, #2
400192c0:	e59f1270 	ldr	r1, [pc, #624]	; 40019538 <CyU3PDmaIntHandler_TypeAuto+0x364>
400192c4:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400192c8:	e0811386 	add	r1, r1, r6, lsl #7
400192cc:	e5810014 	str	r0, [r1, #20]
400192d0:	e3a02000 	mov	r2, #0
400192d4:	e3a01002 	mov	r1, #2
400192d8:	e2890074 	add	r0, r9, #116	; 0x74
400192dc:	ebffc288 	bl	40009d04 <_txe_event_flags_set>
400192e0:	ebffe578 	bl	400128c8 <CyU3PSysBarrierSync>
400192e4:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400192e8:	e3500000 	cmp	r0, #0
400192ec:	0a000007 	beq	40019310 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192f0:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400192f4:	e3100002 	tst	r0, #2
400192f8:	0a000004 	beq	40019310 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192fc:	e3a02000 	mov	r2, #0
40019300:	e3a01002 	mov	r1, #2
40019304:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019308:	e1a00009 	mov	r0, r9
4001930c:	e12fff33 	blx	r3
40019310:	e3180e12 	tst	r8, #288	; 0x120
40019314:	0a000084 	beq	4001952c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019318:	ebffe56a 	bl	400128c8 <CyU3PSysBarrierSync>
4001931c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019320:	e3500000 	cmp	r0, #0
40019324:	0a000080 	beq	4001952c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019328:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001932c:	e3100c01 	tst	r0, #256	; 0x100
40019330:	0a00007d 	beq	4001952c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019334:	e3a02000 	mov	r2, #0
40019338:	e3a01c01 	mov	r1, #256	; 0x100
4001933c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019340:	e1a00009 	mov	r0, r9
40019344:	e12fff33 	blx	r3
40019348:	ea000077 	b	4001952c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001934c:	e1d901b0 	ldrh	r0, [r9, #16]
40019350:	e3a0103f 	mov	r1, #63	; 0x3f
40019354:	e0015440 	and	r5, r1, r0, asr #8
40019358:	e1d901b0 	ldrh	r0, [r9, #16]
4001935c:	e20060ff 	and	r6, r0, #255	; 0xff
40019360:	e594000c 	ldr	r0, [r4, #12]
40019364:	e1a07800 	lsl	r7, r0, #16
40019368:	e1a07827 	lsr	r7, r7, #16
4001936c:	e3180001 	tst	r8, #1
40019370:	0a00005f 	beq	400194f4 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019374:	e5990000 	ldr	r0, [r9]
40019378:	e3500004 	cmp	r0, #4
4001937c:	0a00002b 	beq	40019430 <CyU3PDmaIntHandler_TypeAuto+0x25c>
40019380:	e1a00000 	nop			; (mov r0, r0)
40019384:	e1d901b6 	ldrh	r0, [r9, #22]
40019388:	e28d100c 	add	r1, sp, #12
4001938c:	eb002421 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019390:	e59d000c 	ldr	r0, [sp, #12]
40019394:	e58d0000 	str	r0, [sp]
40019398:	e59d0018 	ldr	r0, [sp, #24]
4001939c:	e59f1198 	ldr	r1, [pc, #408]	; 4001953c <CyU3PDmaIntHandler_TypeAuto+0x368>
400193a0:	e0010820 	and	r0, r1, r0, lsr #16
400193a4:	e1cd00b4 	strh	r0, [sp, #4]
400193a8:	e241100f 	sub	r1, r1, #15
400193ac:	e59d0018 	ldr	r0, [sp, #24]
400193b0:	e0000001 	and	r0, r0, r1
400193b4:	e1cd00b6 	strh	r0, [sp, #6]
400193b8:	e59d0018 	ldr	r0, [sp, #24]
400193bc:	e200000f 	and	r0, r0, #15
400193c0:	e1cd00b8 	strh	r0, [sp, #8]
400193c4:	e1811241 	orr	r1, r1, r1, asr #4
400193c8:	e59d0014 	ldr	r0, [sp, #20]
400193cc:	e0010820 	and	r0, r1, r0, lsr #16
400193d0:	e1c901b6 	strh	r0, [r9, #22]
400193d4:	ebffe53b 	bl	400128c8 <CyU3PSysBarrierSync>
400193d8:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400193dc:	e3500000 	cmp	r0, #0
400193e0:	0a000002 	beq	400193f0 <CyU3PDmaIntHandler_TypeAuto+0x21c>
400193e4:	e1dd10b6 	ldrh	r1, [sp, #6]
400193e8:	e59d0000 	ldr	r0, [sp]
400193ec:	ebffe2dc 	bl	40011f64 <CyU3PSysFlushDRegion>
400193f0:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400193f4:	e3500000 	cmp	r0, #0
400193f8:	0a000007 	beq	4001941c <CyU3PDmaIntHandler_TypeAuto+0x248>
400193fc:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019400:	e3100008 	tst	r0, #8
40019404:	0a000004 	beq	4001941c <CyU3PDmaIntHandler_TypeAuto+0x248>
40019408:	e1a0200d 	mov	r2, sp
4001940c:	e3a01008 	mov	r1, #8
40019410:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019414:	e1a00009 	mov	r0, r9
40019418:	e12fff33 	blx	r3
4001941c:	e1d901b6 	ldrh	r0, [r9, #22]
40019420:	e1500007 	cmp	r0, r7
40019424:	1affffd6 	bne	40019384 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
40019428:	e1c971be 	strh	r7, [r9, #30]
4001942c:	ea000030 	b	400194f4 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019430:	e1d901b4 	ldrh	r0, [r9, #20]
40019434:	e28d100c 	add	r1, sp, #12
40019438:	eb0023f6 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001943c:	e59d000c 	ldr	r0, [sp, #12]
40019440:	e58d0000 	str	r0, [sp]
40019444:	e59d0018 	ldr	r0, [sp, #24]
40019448:	e59f10ec 	ldr	r1, [pc, #236]	; 4001953c <CyU3PDmaIntHandler_TypeAuto+0x368>
4001944c:	e0010820 	and	r0, r1, r0, lsr #16
40019450:	e1cd00b4 	strh	r0, [sp, #4]
40019454:	e241100f 	sub	r1, r1, #15
40019458:	e59d0018 	ldr	r0, [sp, #24]
4001945c:	e0000001 	and	r0, r0, r1
40019460:	e1cd00b6 	strh	r0, [sp, #6]
40019464:	e59d0018 	ldr	r0, [sp, #24]
40019468:	e200000f 	and	r0, r0, #15
4001946c:	e1cd00b8 	strh	r0, [sp, #8]
40019470:	e3a00001 	mov	r0, #1
40019474:	e5890000 	str	r0, [r9]
40019478:	e59f00b8 	ldr	r0, [pc, #184]	; 40019538 <CyU3PDmaIntHandler_TypeAuto+0x364>
4001947c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019480:	e0800386 	add	r0, r0, r6, lsl #7
40019484:	e5900014 	ldr	r0, [r0, #20]
40019488:	e3c00001 	bic	r0, r0, #1
4001948c:	e59f10a4 	ldr	r1, [pc, #164]	; 40019538 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019490:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019494:	e0811386 	add	r1, r1, r6, lsl #7
40019498:	e5810014 	str	r0, [r1, #20]
4001949c:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400194a0:	e3500000 	cmp	r0, #0
400194a4:	0a000002 	beq	400194b4 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
400194a8:	e1dd10b6 	ldrh	r1, [sp, #6]
400194ac:	e59d0000 	ldr	r0, [sp]
400194b0:	ebffe2ab 	bl	40011f64 <CyU3PSysFlushDRegion>
400194b4:	e3a02000 	mov	r2, #0
400194b8:	e3a01004 	mov	r1, #4
400194bc:	e2890074 	add	r0, r9, #116	; 0x74
400194c0:	ebffc20f 	bl	40009d04 <_txe_event_flags_set>
400194c4:	ebffe4ff 	bl	400128c8 <CyU3PSysBarrierSync>
400194c8:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400194cc:	e3500000 	cmp	r0, #0
400194d0:	0a000007 	beq	400194f4 <CyU3PDmaIntHandler_TypeAuto+0x320>
400194d4:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400194d8:	e3100004 	tst	r0, #4
400194dc:	0a000004 	beq	400194f4 <CyU3PDmaIntHandler_TypeAuto+0x320>
400194e0:	e1a0200d 	mov	r2, sp
400194e4:	e3a01004 	mov	r1, #4
400194e8:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400194ec:	e1a00009 	mov	r0, r9
400194f0:	e12fff33 	blx	r3
400194f4:	e3180020 	tst	r8, #32
400194f8:	0a00000b 	beq	4001952c <CyU3PDmaIntHandler_TypeAuto+0x358>
400194fc:	ebffe4f1 	bl	400128c8 <CyU3PSysBarrierSync>
40019500:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019504:	e3500000 	cmp	r0, #0
40019508:	0a000007 	beq	4001952c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001950c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019510:	e3100080 	tst	r0, #128	; 0x80
40019514:	0a000004 	beq	4001952c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019518:	e3a02000 	mov	r2, #0
4001951c:	e3a01080 	mov	r1, #128	; 0x80
40019520:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019524:	e1a00009 	mov	r0, r9
40019528:	e12fff33 	blx	r3
4001952c:	e289003c 	add	r0, r9, #60	; 0x3c
40019530:	ebffc2c0 	bl	4000a038 <_txe_mutex_put>
40019534:	eaffff2f 	b	400191f8 <CyU3PDmaIntHandler_TypeAuto+0x24>
40019538:	40030cd8 	.word	0x40030cd8
4001953c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

40019540 <CyU3PDmaIntHandler_TypeManual>:
40019540:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40019544:	e24dd034 	sub	sp, sp, #52	; 0x34
40019548:	e1a04000 	mov	r4, r0
4001954c:	e5945004 	ldr	r5, [r4, #4]
40019550:	e5946008 	ldr	r6, [r4, #8]
40019554:	e3160040 	tst	r6, #64	; 0x40
40019558:	0a000003 	beq	4001956c <CyU3PDmaIntHandler_TypeManual+0x2c>
4001955c:	e1a00005 	mov	r0, r5
40019560:	ebfffecc 	bl	40019098 <CyU3PDmaChannelHandleError>
40019564:	e28dd034 	add	sp, sp, #52	; 0x34
40019568:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001956c:	e3e01000 	mvn	r1, #0
40019570:	e285003c 	add	r0, r5, #60	; 0x3c
40019574:	ebffc27a 	bl	40009f64 <_txe_mutex_get>
40019578:	e1d501b2 	ldrh	r0, [r5, #18]
4001957c:	e5941000 	ldr	r1, [r4]
40019580:	e1500821 	cmp	r0, r1, lsr #16
40019584:	1a0000d6 	bne	400198e4 <CyU3PDmaIntHandler_TypeManual+0x3a4>
40019588:	e594000c 	ldr	r0, [r4, #12]
4001958c:	e1a07800 	lsl	r7, r0, #16
40019590:	e1a07827 	lsr	r7, r7, #16
40019594:	e3160002 	tst	r6, #2
40019598:	0a000060 	beq	40019720 <CyU3PDmaIntHandler_TypeManual+0x1e0>
4001959c:	e5950000 	ldr	r0, [r5]
400195a0:	e3500003 	cmp	r0, #3
400195a4:	1a000013 	bne	400195f8 <CyU3PDmaIntHandler_TypeManual+0xb8>
400195a8:	e3a00001 	mov	r0, #1
400195ac:	e5850000 	str	r0, [r5]
400195b0:	e3a02000 	mov	r2, #0
400195b4:	e3a01002 	mov	r1, #2
400195b8:	e2850074 	add	r0, r5, #116	; 0x74
400195bc:	ebffc1d0 	bl	40009d04 <_txe_event_flags_set>
400195c0:	e3c66080 	bic	r6, r6, #128	; 0x80
400195c4:	ebffe4bf 	bl	400128c8 <CyU3PSysBarrierSync>
400195c8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400195cc:	e3500000 	cmp	r0, #0
400195d0:	0a000052 	beq	40019720 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400195d4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400195d8:	e3100002 	tst	r0, #2
400195dc:	0a00004f 	beq	40019720 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400195e0:	e3a02000 	mov	r2, #0
400195e4:	e3a01002 	mov	r1, #2
400195e8:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400195ec:	e1a00005 	mov	r0, r5
400195f0:	e12fff33 	blx	r3
400195f4:	ea000049 	b	40019720 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400195f8:	e1d500b4 	ldrh	r0, [r5, #4]
400195fc:	e3500002 	cmp	r0, #2
40019600:	1a000027 	bne	400196a4 <CyU3PDmaIntHandler_TypeManual+0x164>
40019604:	e1a00000 	nop			; (mov r0, r0)
40019608:	e1d501ba 	ldrh	r0, [r5, #26]
4001960c:	e28d1024 	add	r1, sp, #36	; 0x24
40019610:	eb002380 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019614:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019618:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019ac8 <CyU3PDmaIntHandler_TypeManual+0x588>
4001961c:	e0000001 	and	r0, r0, r1
40019620:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019624:	e1d501ba 	ldrh	r0, [r5, #26]
40019628:	e28d1024 	add	r1, sp, #36	; 0x24
4001962c:	eb002394 	bl	40022484 <CyU3PDmaDscrSetConfig>
40019630:	e1d511ba 	ldrh	r1, [r5, #26]
40019634:	e1d501b0 	ldrh	r0, [r5, #16]
40019638:	e3a02000 	mov	r2, #0
4001963c:	ebffedaf 	bl	40014d00 <CyU3PDmaSocketSendEvent>
40019640:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019644:	e59f1480 	ldr	r1, [pc, #1152]	; 40019acc <CyU3PDmaIntHandler_TypeManual+0x58c>
40019648:	e0010820 	and	r0, r1, r0, lsr #16
4001964c:	e1c501ba 	strh	r0, [r5, #26]
40019650:	e1d502b0 	ldrh	r0, [r5, #32]
40019654:	e28d1024 	add	r1, sp, #36	; 0x24
40019658:	eb00236e 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001965c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019660:	e1c502b0 	strh	r0, [r5, #32]
40019664:	ebffe497 	bl	400128c8 <CyU3PSysBarrierSync>
40019668:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
4001966c:	e3500000 	cmp	r0, #0
40019670:	0a000007 	beq	40019694 <CyU3PDmaIntHandler_TypeManual+0x154>
40019674:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019678:	e3100010 	tst	r0, #16
4001967c:	0a000004 	beq	40019694 <CyU3PDmaIntHandler_TypeManual+0x154>
40019680:	e3a02000 	mov	r2, #0
40019684:	e3a01010 	mov	r1, #16
40019688:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
4001968c:	e1a00005 	mov	r0, r5
40019690:	e12fff33 	blx	r3
40019694:	e1d502b0 	ldrh	r0, [r5, #32]
40019698:	e1500007 	cmp	r0, r7
4001969c:	1affffd9 	bne	40019608 <CyU3PDmaIntHandler_TypeManual+0xc8>
400196a0:	ea00001e 	b	40019720 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400196a4:	e1a00000 	nop			; (mov r0, r0)
400196a8:	e1d501b8 	ldrh	r0, [r5, #24]
400196ac:	e28d1024 	add	r1, sp, #36	; 0x24
400196b0:	eb002358 	bl	40022418 <CyU3PDmaDscrGetConfig>
400196b4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400196b8:	e3100008 	tst	r0, #8
400196bc:	1a000003 	bne	400196d0 <CyU3PDmaIntHandler_TypeManual+0x190>
400196c0:	e3a02000 	mov	r2, #0
400196c4:	e3a01010 	mov	r1, #16
400196c8:	e2850074 	add	r0, r5, #116	; 0x74
400196cc:	ebffc18c 	bl	40009d04 <_txe_event_flags_set>
400196d0:	e1d502b0 	ldrh	r0, [r5, #32]
400196d4:	e28d1024 	add	r1, sp, #36	; 0x24
400196d8:	eb00234e 	bl	40022418 <CyU3PDmaDscrGetConfig>
400196dc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400196e0:	e1c502b0 	strh	r0, [r5, #32]
400196e4:	ebffe477 	bl	400128c8 <CyU3PSysBarrierSync>
400196e8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400196ec:	e3500000 	cmp	r0, #0
400196f0:	0a000007 	beq	40019714 <CyU3PDmaIntHandler_TypeManual+0x1d4>
400196f4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400196f8:	e3100010 	tst	r0, #16
400196fc:	0a000004 	beq	40019714 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019700:	e3a02000 	mov	r2, #0
40019704:	e3a01010 	mov	r1, #16
40019708:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
4001970c:	e1a00005 	mov	r0, r5
40019710:	e12fff33 	blx	r3
40019714:	e1d502b0 	ldrh	r0, [r5, #32]
40019718:	e1500007 	cmp	r0, r7
4001971c:	1affffe1 	bne	400196a8 <CyU3PDmaIntHandler_TypeManual+0x168>
40019720:	e3160010 	tst	r6, #16
40019724:	0a000046 	beq	40019844 <CyU3PDmaIntHandler_TypeManual+0x304>
40019728:	e1d502b0 	ldrh	r0, [r5, #32]
4001972c:	e28d1024 	add	r1, sp, #36	; 0x24
40019730:	eb002338 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019734:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019738:	e3100001 	tst	r0, #1
4001973c:	0a000040 	beq	40019844 <CyU3PDmaIntHandler_TypeManual+0x304>
40019740:	e1d501b2 	ldrh	r0, [r5, #18]
40019744:	ebffecbd 	bl	40014a40 <CyU3PDmaSocketDisable>
40019748:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001974c:	e59f1374 	ldr	r1, [pc, #884]	; 40019ac8 <CyU3PDmaIntHandler_TypeManual+0x588>
40019750:	e0000001 	and	r0, r0, r1
40019754:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019758:	e1d502b0 	ldrh	r0, [r5, #32]
4001975c:	e28d1024 	add	r1, sp, #36	; 0x24
40019760:	eb002347 	bl	40022484 <CyU3PDmaDscrSetConfig>
40019764:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019768:	e1c502b0 	strh	r0, [r5, #32]
4001976c:	e1d501b2 	ldrh	r0, [r5, #18]
40019770:	e28d100c 	add	r1, sp, #12
40019774:	ebffecc9 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40019778:	e59d0018 	ldr	r0, [sp, #24]
4001977c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019780:	e58d0018 	str	r0, [sp, #24]
40019784:	e59d0018 	ldr	r0, [sp, #24]
40019788:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001978c:	e58d0018 	str	r0, [sp, #24]
40019790:	e3a00000 	mov	r0, #0
40019794:	e58d001c 	str	r0, [sp, #28]
40019798:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
4001979c:	e2400001 	sub	r0, r0, #1
400197a0:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
400197a4:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
400197a8:	e3500000 	cmp	r0, #0
400197ac:	1a000004 	bne	400197c4 <CyU3PDmaIntHandler_TypeManual+0x284>
400197b0:	e3a00010 	mov	r0, #16
400197b4:	e58d001c 	str	r0, [sp, #28]
400197b8:	e59d0020 	ldr	r0, [sp, #32]
400197bc:	e3c00010 	bic	r0, r0, #16
400197c0:	e58d0020 	str	r0, [sp, #32]
400197c4:	e1d502b0 	ldrh	r0, [r5, #32]
400197c8:	e58d000c 	str	r0, [sp, #12]
400197cc:	e1d501b2 	ldrh	r0, [r5, #18]
400197d0:	e28d100c 	add	r1, sp, #12
400197d4:	ebffed5b 	bl	40014d48 <CyU3PDmaSocketSetConfig>
400197d8:	e1d501ba 	ldrh	r0, [r5, #26]
400197dc:	e28d1024 	add	r1, sp, #36	; 0x24
400197e0:	eb00230c 	bl	40022418 <CyU3PDmaDscrGetConfig>
400197e4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400197e8:	e59f12d8 	ldr	r1, [pc, #728]	; 40019ac8 <CyU3PDmaIntHandler_TypeManual+0x588>
400197ec:	e0000001 	and	r0, r0, r1
400197f0:	e58d0030 	str	r0, [sp, #48]	; 0x30
400197f4:	e1d501ba 	ldrh	r0, [r5, #26]
400197f8:	e28d1024 	add	r1, sp, #36	; 0x24
400197fc:	eb002320 	bl	40022484 <CyU3PDmaDscrSetConfig>
40019800:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019804:	e3500000 	cmp	r0, #0
40019808:	0a000004 	beq	40019820 <CyU3PDmaIntHandler_TypeManual+0x2e0>
4001980c:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019810:	e59f32b0 	ldr	r3, [pc, #688]	; 40019ac8 <CyU3PDmaIntHandler_TypeManual+0x588>
40019814:	e0021003 	and	r1, r2, r3
40019818:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001981c:	ebffe1d0 	bl	40011f64 <CyU3PSysFlushDRegion>
40019820:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019824:	e59f12a0 	ldr	r1, [pc, #672]	; 40019acc <CyU3PDmaIntHandler_TypeManual+0x58c>
40019828:	e0010820 	and	r0, r1, r0, lsr #16
4001982c:	e1c501ba 	strh	r0, [r5, #26]
40019830:	e1d511ba 	ldrh	r1, [r5, #26]
40019834:	e1d501b0 	ldrh	r0, [r5, #16]
40019838:	e3a02000 	mov	r2, #0
4001983c:	ebffed2f 	bl	40014d00 <CyU3PDmaSocketSendEvent>
40019840:	ebffe420 	bl	400128c8 <CyU3PSysBarrierSync>
40019844:	e3160080 	tst	r6, #128	; 0x80
40019848:	0a000016 	beq	400198a8 <CyU3PDmaIntHandler_TypeManual+0x368>
4001984c:	e1d500b4 	ldrh	r0, [r5, #4]
40019850:	e3500002 	cmp	r0, #2
40019854:	1a000001 	bne	40019860 <CyU3PDmaIntHandler_TypeManual+0x320>
40019858:	e1d501b0 	ldrh	r0, [r5, #16]
4001985c:	ebffec77 	bl	40014a40 <CyU3PDmaSocketDisable>
40019860:	e3a00001 	mov	r0, #1
40019864:	e5850000 	str	r0, [r5]
40019868:	e3a02000 	mov	r2, #0
4001986c:	e3a01001 	mov	r1, #1
40019870:	e2850074 	add	r0, r5, #116	; 0x74
40019874:	ebffc122 	bl	40009d04 <_txe_event_flags_set>
40019878:	ebffe412 	bl	400128c8 <CyU3PSysBarrierSync>
4001987c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019880:	e3500000 	cmp	r0, #0
40019884:	0a000007 	beq	400198a8 <CyU3PDmaIntHandler_TypeManual+0x368>
40019888:	e5950030 	ldr	r0, [r5, #48]	; 0x30
4001988c:	e3100001 	tst	r0, #1
40019890:	0a000004 	beq	400198a8 <CyU3PDmaIntHandler_TypeManual+0x368>
40019894:	e3a02000 	mov	r2, #0
40019898:	e3a01001 	mov	r1, #1
4001989c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400198a0:	e1a00005 	mov	r0, r5
400198a4:	e12fff33 	blx	r3
400198a8:	e3160e12 	tst	r6, #288	; 0x120
400198ac:	0a000082 	beq	40019abc <CyU3PDmaIntHandler_TypeManual+0x57c>
400198b0:	ebffe404 	bl	400128c8 <CyU3PSysBarrierSync>
400198b4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400198b8:	e3500000 	cmp	r0, #0
400198bc:	0a00007e 	beq	40019abc <CyU3PDmaIntHandler_TypeManual+0x57c>
400198c0:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400198c4:	e3100c01 	tst	r0, #256	; 0x100
400198c8:	0a00007b 	beq	40019abc <CyU3PDmaIntHandler_TypeManual+0x57c>
400198cc:	e3a02000 	mov	r2, #0
400198d0:	e3a01c01 	mov	r1, #256	; 0x100
400198d4:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400198d8:	e1a00005 	mov	r0, r5
400198dc:	e12fff33 	blx	r3
400198e0:	ea000075 	b	40019abc <CyU3PDmaIntHandler_TypeManual+0x57c>
400198e4:	e594000c 	ldr	r0, [r4, #12]
400198e8:	e1a07800 	lsl	r7, r0, #16
400198ec:	e1a07827 	lsr	r7, r7, #16
400198f0:	e3160001 	tst	r6, #1
400198f4:	0a00005d 	beq	40019a70 <CyU3PDmaIntHandler_TypeManual+0x530>
400198f8:	e5950000 	ldr	r0, [r5]
400198fc:	e3500004 	cmp	r0, #4
40019900:	0a000031 	beq	400199cc <CyU3PDmaIntHandler_TypeManual+0x48c>
40019904:	e1a00000 	nop			; (mov r0, r0)
40019908:	e1d501be 	ldrh	r0, [r5, #30]
4001990c:	e28d1024 	add	r1, sp, #36	; 0x24
40019910:	eb0022c0 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019914:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019918:	e58d0000 	str	r0, [sp]
4001991c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019920:	e59f11a4 	ldr	r1, [pc, #420]	; 40019acc <CyU3PDmaIntHandler_TypeManual+0x58c>
40019924:	e0010820 	and	r0, r1, r0, lsr #16
40019928:	e1cd00b4 	strh	r0, [sp, #4]
4001992c:	e241100f 	sub	r1, r1, #15
40019930:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019934:	e0000001 	and	r0, r0, r1
40019938:	e1cd00b6 	strh	r0, [sp, #6]
4001993c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019940:	e200000f 	and	r0, r0, #15
40019944:	e1cd00b8 	strh	r0, [sp, #8]
40019948:	e5950038 	ldr	r0, [r5, #56]	; 0x38
4001994c:	e3500000 	cmp	r0, #0
40019950:	0a000002 	beq	40019960 <CyU3PDmaIntHandler_TypeManual+0x420>
40019954:	e1dd10b6 	ldrh	r1, [sp, #6]
40019958:	e59d0000 	ldr	r0, [sp]
4001995c:	ebffe180 	bl	40011f64 <CyU3PSysFlushDRegion>
40019960:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019964:	e3100008 	tst	r0, #8
40019968:	0a000003 	beq	4001997c <CyU3PDmaIntHandler_TypeManual+0x43c>
4001996c:	e3a02000 	mov	r2, #0
40019970:	e3a01008 	mov	r1, #8
40019974:	e2850074 	add	r0, r5, #116	; 0x74
40019978:	ebffc0e1 	bl	40009d04 <_txe_event_flags_set>
4001997c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019980:	e59f1144 	ldr	r1, [pc, #324]	; 40019acc <CyU3PDmaIntHandler_TypeManual+0x58c>
40019984:	e0010820 	and	r0, r1, r0, lsr #16
40019988:	e1c501be 	strh	r0, [r5, #30]
4001998c:	ebffe3cd 	bl	400128c8 <CyU3PSysBarrierSync>
40019990:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019994:	e3500000 	cmp	r0, #0
40019998:	0a000007 	beq	400199bc <CyU3PDmaIntHandler_TypeManual+0x47c>
4001999c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400199a0:	e3100008 	tst	r0, #8
400199a4:	0a000004 	beq	400199bc <CyU3PDmaIntHandler_TypeManual+0x47c>
400199a8:	e1a0200d 	mov	r2, sp
400199ac:	e3a01008 	mov	r1, #8
400199b0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400199b4:	e1a00005 	mov	r0, r5
400199b8:	e12fff33 	blx	r3
400199bc:	e1d501be 	ldrh	r0, [r5, #30]
400199c0:	e1500007 	cmp	r0, r7
400199c4:	1affffcf 	bne	40019908 <CyU3PDmaIntHandler_TypeManual+0x3c8>
400199c8:	ea000028 	b	40019a70 <CyU3PDmaIntHandler_TypeManual+0x530>
400199cc:	e1d501b4 	ldrh	r0, [r5, #20]
400199d0:	e28d1024 	add	r1, sp, #36	; 0x24
400199d4:	eb00228f 	bl	40022418 <CyU3PDmaDscrGetConfig>
400199d8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400199dc:	e58d0000 	str	r0, [sp]
400199e0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400199e4:	e59f10e0 	ldr	r1, [pc, #224]	; 40019acc <CyU3PDmaIntHandler_TypeManual+0x58c>
400199e8:	e0010820 	and	r0, r1, r0, lsr #16
400199ec:	e1cd00b4 	strh	r0, [sp, #4]
400199f0:	e241100f 	sub	r1, r1, #15
400199f4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400199f8:	e0000001 	and	r0, r0, r1
400199fc:	e1cd00b6 	strh	r0, [sp, #6]
40019a00:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a04:	e200000f 	and	r0, r0, #15
40019a08:	e1cd00b8 	strh	r0, [sp, #8]
40019a0c:	e3a00001 	mov	r0, #1
40019a10:	e5850000 	str	r0, [r5]
40019a14:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019a18:	e3500000 	cmp	r0, #0
40019a1c:	0a000002 	beq	40019a2c <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019a20:	e1dd10b6 	ldrh	r1, [sp, #6]
40019a24:	e59d0000 	ldr	r0, [sp]
40019a28:	ebffe14d 	bl	40011f64 <CyU3PSysFlushDRegion>
40019a2c:	e3a02000 	mov	r2, #0
40019a30:	e3a01004 	mov	r1, #4
40019a34:	e2850074 	add	r0, r5, #116	; 0x74
40019a38:	ebffc0b1 	bl	40009d04 <_txe_event_flags_set>
40019a3c:	e3c66080 	bic	r6, r6, #128	; 0x80
40019a40:	ebffe3a0 	bl	400128c8 <CyU3PSysBarrierSync>
40019a44:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a48:	e3500000 	cmp	r0, #0
40019a4c:	0a000007 	beq	40019a70 <CyU3PDmaIntHandler_TypeManual+0x530>
40019a50:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a54:	e3100004 	tst	r0, #4
40019a58:	0a000004 	beq	40019a70 <CyU3PDmaIntHandler_TypeManual+0x530>
40019a5c:	e1a0200d 	mov	r2, sp
40019a60:	e3a01004 	mov	r1, #4
40019a64:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a68:	e1a00005 	mov	r0, r5
40019a6c:	e12fff33 	blx	r3
40019a70:	e3160080 	tst	r6, #128	; 0x80
40019a74:	0a000002 	beq	40019a84 <CyU3PDmaIntHandler_TypeManual+0x544>
40019a78:	e3a00006 	mov	r0, #6
40019a7c:	e5850000 	str	r0, [r5]
40019a80:	ebffe390 	bl	400128c8 <CyU3PSysBarrierSync>
40019a84:	e3160020 	tst	r6, #32
40019a88:	0a00000b 	beq	40019abc <CyU3PDmaIntHandler_TypeManual+0x57c>
40019a8c:	ebffe38d 	bl	400128c8 <CyU3PSysBarrierSync>
40019a90:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a94:	e3500000 	cmp	r0, #0
40019a98:	0a000007 	beq	40019abc <CyU3PDmaIntHandler_TypeManual+0x57c>
40019a9c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019aa0:	e3100080 	tst	r0, #128	; 0x80
40019aa4:	0a000004 	beq	40019abc <CyU3PDmaIntHandler_TypeManual+0x57c>
40019aa8:	e3a02000 	mov	r2, #0
40019aac:	e3a01080 	mov	r1, #128	; 0x80
40019ab0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019ab4:	e1a00005 	mov	r0, r5
40019ab8:	e12fff33 	blx	r3
40019abc:	e285003c 	add	r0, r5, #60	; 0x3c
40019ac0:	ebffc15c 	bl	4000a038 <_txe_mutex_put>
40019ac4:	eafffea6 	b	40019564 <CyU3PDmaIntHandler_TypeManual+0x24>
40019ac8:	0000fff0 	.word	0x0000fff0
40019acc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019ad0 <CyU3PDmaIntHandler_TypeManyToOne>:
40019ad0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019ad4:	e24dd034 	sub	sp, sp, #52	; 0x34
40019ad8:	e1a04000 	mov	r4, r0
40019adc:	e5945004 	ldr	r5, [r4, #4]
40019ae0:	e5946008 	ldr	r6, [r4, #8]
40019ae4:	e3160040 	tst	r6, #64	; 0x40
40019ae8:	0a000003 	beq	40019afc <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019aec:	e1a00005 	mov	r0, r5
40019af0:	eb00033d 	bl	4001a7ec <CyU3PDmaMultiChannelHandleError>
40019af4:	e28dd034 	add	sp, sp, #52	; 0x34
40019af8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019afc:	e3e01000 	mvn	r1, #0
40019b00:	e2850078 	add	r0, r5, #120	; 0x78
40019b04:	ebffc116 	bl	40009f64 <_txe_mutex_get>
40019b08:	e5940000 	ldr	r0, [r4]
40019b0c:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a0a4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019b10:	e0019820 	and	r9, r1, r0, lsr #16
40019b14:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019b18:	e1500009 	cmp	r0, r9
40019b1c:	1a0000d8 	bne	40019e84 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019b20:	e594000c 	ldr	r0, [r4, #12]
40019b24:	e0007001 	and	r7, r0, r1
40019b28:	e3160002 	tst	r6, #2
40019b2c:	0a000054 	beq	40019c84 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019b30:	e5950000 	ldr	r0, [r5]
40019b34:	e3500003 	cmp	r0, #3
40019b38:	0a000030 	beq	40019c00 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019b3c:	e1a00000 	nop			; (mov r0, r0)
40019b40:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019b44:	e28d1024 	add	r1, sp, #36	; 0x24
40019b48:	eb002232 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019b4c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b50:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a0a4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019b54:	e0010820 	and	r0, r1, r0, lsr #16
40019b58:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019b5c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b60:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019b64:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019b68:	e28d1024 	add	r1, sp, #36	; 0x24
40019b6c:	eb002229 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019b70:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b74:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a0a8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019b78:	e0000001 	and	r0, r0, r1
40019b7c:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019b80:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019b84:	e28d1024 	add	r1, sp, #36	; 0x24
40019b88:	eb00223d 	bl	40022484 <CyU3PDmaDscrSetConfig>
40019b8c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019b90:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019b94:	e0000001 	and	r0, r0, r1
40019b98:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019b9c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019ba0:	e1a00820 	lsr	r0, r0, #16
40019ba4:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019ba8:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019bac:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019bb0:	e1a00802 	lsl	r0, r2, #16
40019bb4:	e1a00820 	lsr	r0, r0, #16
40019bb8:	e3a02000 	mov	r2, #0
40019bbc:	ebffec4f 	bl	40014d00 <CyU3PDmaSocketSendEvent>
40019bc0:	ebffe340 	bl	400128c8 <CyU3PSysBarrierSync>
40019bc4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019bc8:	e3500000 	cmp	r0, #0
40019bcc:	0a000007 	beq	40019bf0 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019bd0:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019bd4:	e3100010 	tst	r0, #16
40019bd8:	0a000004 	beq	40019bf0 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019bdc:	e3a02000 	mov	r2, #0
40019be0:	e3a01010 	mov	r1, #16
40019be4:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019be8:	e1a00005 	mov	r0, r5
40019bec:	e12fff33 	blx	r3
40019bf0:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019bf4:	e1500007 	cmp	r0, r7
40019bf8:	1affffd0 	bne	40019b40 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
40019bfc:	ea000020 	b	40019c84 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c00:	e3a00001 	mov	r0, #1
40019c04:	e5850000 	str	r0, [r5]
40019c08:	e1d500b4 	ldrh	r0, [r5, #4]
40019c0c:	e3500005 	cmp	r0, #5
40019c10:	1a00000a 	bne	40019c40 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
40019c14:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019c18:	e1a0100d 	mov	r1, sp
40019c1c:	ebffeb9f 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40019c20:	e3a00000 	mov	r0, #0
40019c24:	e58d0010 	str	r0, [sp, #16]
40019c28:	e59d0014 	ldr	r0, [sp, #20]
40019c2c:	e3c00002 	bic	r0, r0, #2
40019c30:	e58d0014 	str	r0, [sp, #20]
40019c34:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019c38:	e1a0100d 	mov	r1, sp
40019c3c:	ebffec41 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40019c40:	e3a02000 	mov	r2, #0
40019c44:	e3a01002 	mov	r1, #2
40019c48:	e28500b0 	add	r0, r5, #176	; 0xb0
40019c4c:	ebffc02c 	bl	40009d04 <_txe_event_flags_set>
40019c50:	e3c66080 	bic	r6, r6, #128	; 0x80
40019c54:	ebffe31b 	bl	400128c8 <CyU3PSysBarrierSync>
40019c58:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019c5c:	e3500000 	cmp	r0, #0
40019c60:	0a000007 	beq	40019c84 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c64:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019c68:	e3100002 	tst	r0, #2
40019c6c:	0a000004 	beq	40019c84 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c70:	e3a02000 	mov	r2, #0
40019c74:	e3a01002 	mov	r1, #2
40019c78:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019c7c:	e1a00005 	mov	r0, r5
40019c80:	e12fff33 	blx	r3
40019c84:	e3160010 	tst	r6, #16
40019c88:	0a00004f 	beq	40019dcc <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019c8c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019c90:	e28d1024 	add	r1, sp, #36	; 0x24
40019c94:	eb0021df 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019c98:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019c9c:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a0a4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019ca0:	e0010820 	and	r0, r1, r0, lsr #16
40019ca4:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019ca8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cac:	e3100001 	tst	r0, #1
40019cb0:	0a000045 	beq	40019dcc <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019cb4:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019cb8:	ebffeb60 	bl	40014a40 <CyU3PDmaSocketDisable>
40019cbc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cc0:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a0a8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019cc4:	e0000001 	and	r0, r0, r1
40019cc8:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ccc:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019cd0:	e28d1024 	add	r1, sp, #36	; 0x24
40019cd4:	eb0021ea 	bl	40022484 <CyU3PDmaDscrSetConfig>
40019cd8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019cdc:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019ce0:	e1a0100d 	mov	r1, sp
40019ce4:	e1a00009 	mov	r0, r9
40019ce8:	ebffeb6c 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
40019cec:	e59d000c 	ldr	r0, [sp, #12]
40019cf0:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019cf4:	e58d000c 	str	r0, [sp, #12]
40019cf8:	e59d000c 	ldr	r0, [sp, #12]
40019cfc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019d00:	e58d000c 	str	r0, [sp, #12]
40019d04:	e3a00000 	mov	r0, #0
40019d08:	e58d0010 	str	r0, [sp, #16]
40019d0c:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019d10:	e2400001 	sub	r0, r0, #1
40019d14:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
40019d18:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019d1c:	e3500000 	cmp	r0, #0
40019d20:	1a000004 	bne	40019d38 <CyU3PDmaIntHandler_TypeManyToOne+0x268>
40019d24:	e3a00010 	mov	r0, #16
40019d28:	e58d0010 	str	r0, [sp, #16]
40019d2c:	e59d0014 	ldr	r0, [sp, #20]
40019d30:	e3c00010 	bic	r0, r0, #16
40019d34:	e58d0014 	str	r0, [sp, #20]
40019d38:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019d3c:	e58d0000 	str	r0, [sp]
40019d40:	e1a0100d 	mov	r1, sp
40019d44:	e1a00009 	mov	r0, r9
40019d48:	ebffebfe 	bl	40014d48 <CyU3PDmaSocketSetConfig>
40019d4c:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019d50:	e28d1024 	add	r1, sp, #36	; 0x24
40019d54:	eb0021af 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019d58:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019d5c:	e59f1344 	ldr	r1, [pc, #836]	; 4001a0a8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019d60:	e0000001 	and	r0, r0, r1
40019d64:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019d68:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019d6c:	e28d1024 	add	r1, sp, #36	; 0x24
40019d70:	eb0021c3 	bl	40022484 <CyU3PDmaDscrSetConfig>
40019d74:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019d78:	e3500000 	cmp	r0, #0
40019d7c:	0a000004 	beq	40019d94 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
40019d80:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019d84:	e59f331c 	ldr	r3, [pc, #796]	; 4001a0a8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019d88:	e0021003 	and	r1, r2, r3
40019d8c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019d90:	ebffe073 	bl	40011f64 <CyU3PSysFlushDRegion>
40019d94:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019d98:	e59f130c 	ldr	r1, [pc, #780]	; 4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019d9c:	e0000001 	and	r0, r0, r1
40019da0:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019da4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019da8:	e1a00820 	lsr	r0, r0, #16
40019dac:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019db0:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019db4:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019db8:	e1a00802 	lsl	r0, r2, #16
40019dbc:	e1a00820 	lsr	r0, r0, #16
40019dc0:	e3a02000 	mov	r2, #0
40019dc4:	ebffebcd 	bl	40014d00 <CyU3PDmaSocketSendEvent>
40019dc8:	ebffe2be 	bl	400128c8 <CyU3PSysBarrierSync>
40019dcc:	e3160080 	tst	r6, #128	; 0x80
40019dd0:	0a00001c 	beq	40019e48 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019dd4:	e3a08000 	mov	r8, #0
40019dd8:	ea000005 	b	40019df4 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
40019ddc:	e2851024 	add	r1, r5, #36	; 0x24
40019de0:	e0811088 	add	r1, r1, r8, lsl #1
40019de4:	e1d100b0 	ldrh	r0, [r1]
40019de8:	ebffeb14 	bl	40014a40 <CyU3PDmaSocketDisable>
40019dec:	e2880001 	add	r0, r8, #1
40019df0:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019df4:	e1d500ba 	ldrh	r0, [r5, #10]
40019df8:	e1500008 	cmp	r0, r8
40019dfc:	cafffff6 	bgt	40019ddc <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
40019e00:	e3a00001 	mov	r0, #1
40019e04:	e5850000 	str	r0, [r5]
40019e08:	e3a02000 	mov	r2, #0
40019e0c:	e3a01001 	mov	r1, #1
40019e10:	e28500b0 	add	r0, r5, #176	; 0xb0
40019e14:	ebffbfba 	bl	40009d04 <_txe_event_flags_set>
40019e18:	ebffe2aa 	bl	400128c8 <CyU3PSysBarrierSync>
40019e1c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019e20:	e3500000 	cmp	r0, #0
40019e24:	0a000007 	beq	40019e48 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019e28:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019e2c:	e3100001 	tst	r0, #1
40019e30:	0a000004 	beq	40019e48 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019e34:	e3a02000 	mov	r2, #0
40019e38:	e3a01001 	mov	r1, #1
40019e3c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019e40:	e1a00005 	mov	r0, r5
40019e44:	e12fff33 	blx	r3
40019e48:	e3160e12 	tst	r6, #288	; 0x120
40019e4c:	0a000091 	beq	4001a098 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e50:	ebffe29c 	bl	400128c8 <CyU3PSysBarrierSync>
40019e54:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019e58:	e3500000 	cmp	r0, #0
40019e5c:	0a00008d 	beq	4001a098 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e60:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019e64:	e3100c01 	tst	r0, #256	; 0x100
40019e68:	0a00008a 	beq	4001a098 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e6c:	e3a02000 	mov	r2, #0
40019e70:	e3a01c01 	mov	r1, #256	; 0x100
40019e74:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019e78:	e1a00005 	mov	r0, r5
40019e7c:	e12fff33 	blx	r3
40019e80:	ea000084 	b	4001a098 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e84:	e594000c 	ldr	r0, [r4, #12]
40019e88:	e1a07800 	lsl	r7, r0, #16
40019e8c:	e1a07827 	lsr	r7, r7, #16
40019e90:	e3160001 	tst	r6, #1
40019e94:	0a000048 	beq	40019fbc <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
40019e98:	e5950000 	ldr	r0, [r5]
40019e9c:	e3500004 	cmp	r0, #4
40019ea0:	0a00007c 	beq	4001a098 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019ea4:	e3a08000 	mov	r8, #0
40019ea8:	ea000007 	b	40019ecc <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
40019eac:	e2850024 	add	r0, r5, #36	; 0x24
40019eb0:	e0800088 	add	r0, r0, r8, lsl #1
40019eb4:	e1d000b0 	ldrh	r0, [r0]
40019eb8:	e1500009 	cmp	r0, r9
40019ebc:	1a000000 	bne	40019ec4 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
40019ec0:	ea000004 	b	40019ed8 <CyU3PDmaIntHandler_TypeManyToOne+0x408>
40019ec4:	e2880001 	add	r0, r8, #1
40019ec8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019ecc:	e1d500ba 	ldrh	r0, [r5, #10]
40019ed0:	e1500008 	cmp	r0, r8
40019ed4:	cafffff4 	bgt	40019eac <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
40019ed8:	e1a00000 	nop			; (mov r0, r0)
40019edc:	e1a00000 	nop			; (mov r0, r0)
40019ee0:	e285103e 	add	r1, r5, #62	; 0x3e
40019ee4:	e0811088 	add	r1, r1, r8, lsl #1
40019ee8:	e1d100b0 	ldrh	r0, [r1]
40019eec:	e28d1024 	add	r1, sp, #36	; 0x24
40019ef0:	eb002148 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019ef4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019ef8:	e58d0018 	str	r0, [sp, #24]
40019efc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f00:	e59f119c 	ldr	r1, [pc, #412]	; 4001a0a4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f04:	e0010820 	and	r0, r1, r0, lsr #16
40019f08:	e1cd01bc 	strh	r0, [sp, #28]
40019f0c:	e241100f 	sub	r1, r1, #15
40019f10:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f14:	e0000001 	and	r0, r0, r1
40019f18:	e1cd01be 	strh	r0, [sp, #30]
40019f1c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f20:	e200000f 	and	r0, r0, #15
40019f24:	e1cd02b0 	strh	r0, [sp, #32]
40019f28:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019f2c:	e3500000 	cmp	r0, #0
40019f30:	0a000002 	beq	40019f40 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
40019f34:	e1dd11be 	ldrh	r1, [sp, #30]
40019f38:	e59d0018 	ldr	r0, [sp, #24]
40019f3c:	ebffe008 	bl	40011f64 <CyU3PSysFlushDRegion>
40019f40:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f44:	e3100008 	tst	r0, #8
40019f48:	0a000003 	beq	40019f5c <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
40019f4c:	e3a02000 	mov	r2, #0
40019f50:	e3a01008 	mov	r1, #8
40019f54:	e28500b0 	add	r0, r5, #176	; 0xb0
40019f58:	ebffbf69 	bl	40009d04 <_txe_event_flags_set>
40019f5c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019f60:	e59f113c 	ldr	r1, [pc, #316]	; 4001a0a4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f64:	e0010820 	and	r0, r1, r0, lsr #16
40019f68:	e285103e 	add	r1, r5, #62	; 0x3e
40019f6c:	e0811088 	add	r1, r1, r8, lsl #1
40019f70:	e1c100b0 	strh	r0, [r1]
40019f74:	ebffe253 	bl	400128c8 <CyU3PSysBarrierSync>
40019f78:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019f7c:	e3500000 	cmp	r0, #0
40019f80:	0a000007 	beq	40019fa4 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
40019f84:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019f88:	e3100008 	tst	r0, #8
40019f8c:	0a000004 	beq	40019fa4 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
40019f90:	e28d2018 	add	r2, sp, #24
40019f94:	e3a01008 	mov	r1, #8
40019f98:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019f9c:	e1a00005 	mov	r0, r5
40019fa0:	e12fff33 	blx	r3
40019fa4:	e285003e 	add	r0, r5, #62	; 0x3e
40019fa8:	e0800088 	add	r0, r0, r8, lsl #1
40019fac:	e1d000b0 	ldrh	r0, [r0]
40019fb0:	e1500007 	cmp	r0, r7
40019fb4:	1affffc9 	bne	40019ee0 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
40019fb8:	ea000036 	b	4001a098 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019fbc:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
40019fc0:	e28d1024 	add	r1, sp, #36	; 0x24
40019fc4:	eb002113 	bl	40022418 <CyU3PDmaDscrGetConfig>
40019fc8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019fcc:	e58d0018 	str	r0, [sp, #24]
40019fd0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019fd4:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a0a4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019fd8:	e0010820 	and	r0, r1, r0, lsr #16
40019fdc:	e1cd01bc 	strh	r0, [sp, #28]
40019fe0:	e241100f 	sub	r1, r1, #15
40019fe4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019fe8:	e0000001 	and	r0, r0, r1
40019fec:	e1cd01be 	strh	r0, [sp, #30]
40019ff0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ff4:	e200000f 	and	r0, r0, #15
40019ff8:	e1cd02b0 	strh	r0, [sp, #32]
40019ffc:	e3a00001 	mov	r0, #1
4001a000:	e5850000 	str	r0, [r5]
4001a004:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a008:	e3500000 	cmp	r0, #0
4001a00c:	0a000002 	beq	4001a01c <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a010:	e1dd11be 	ldrh	r1, [sp, #30]
4001a014:	e59d0018 	ldr	r0, [sp, #24]
4001a018:	ebffdfd1 	bl	40011f64 <CyU3PSysFlushDRegion>
4001a01c:	e1d500b4 	ldrh	r0, [r5, #4]
4001a020:	e3500005 	cmp	r0, #5
4001a024:	1a00000a 	bne	4001a054 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a028:	e1a0100d 	mov	r1, sp
4001a02c:	e1a00009 	mov	r0, r9
4001a030:	ebffea9a 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
4001a034:	e3a00000 	mov	r0, #0
4001a038:	e58d0010 	str	r0, [sp, #16]
4001a03c:	e59d0014 	ldr	r0, [sp, #20]
4001a040:	e3c00001 	bic	r0, r0, #1
4001a044:	e58d0014 	str	r0, [sp, #20]
4001a048:	e1a0100d 	mov	r1, sp
4001a04c:	e1a00009 	mov	r0, r9
4001a050:	ebffeb3c 	bl	40014d48 <CyU3PDmaSocketSetConfig>
4001a054:	e3a02000 	mov	r2, #0
4001a058:	e3a01004 	mov	r1, #4
4001a05c:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a060:	ebffbf27 	bl	40009d04 <_txe_event_flags_set>
4001a064:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a068:	ebffe216 	bl	400128c8 <CyU3PSysBarrierSync>
4001a06c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a070:	e3500000 	cmp	r0, #0
4001a074:	0a000007 	beq	4001a098 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a078:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a07c:	e3100004 	tst	r0, #4
4001a080:	0a000004 	beq	4001a098 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a084:	e28d2018 	add	r2, sp, #24
4001a088:	e3a01004 	mov	r1, #4
4001a08c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a090:	e1a00005 	mov	r0, r5
4001a094:	e12fff33 	blx	r3
4001a098:	e2850078 	add	r0, r5, #120	; 0x78
4001a09c:	ebffbfe5 	bl	4000a038 <_txe_mutex_put>
4001a0a0:	eafffe93 	b	40019af4 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a0a4:	0000ffff 	.word	0x0000ffff
4001a0a8:	0000fff0 	.word	0x0000fff0
4001a0ac:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a0b0 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a0b0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a0b4:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a0b8:	e1a04000 	mov	r4, r0
4001a0bc:	e594a004 	ldr	sl, [r4, #4]
4001a0c0:	e5940000 	ldr	r0, [r4]
4001a0c4:	e59f1664 	ldr	r1, [pc, #1636]	; 4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a0c8:	e0016820 	and	r6, r1, r0, lsr #16
4001a0cc:	e5945008 	ldr	r5, [r4, #8]
4001a0d0:	e3150040 	tst	r5, #64	; 0x40
4001a0d4:	0a000003 	beq	4001a0e8 <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a0d8:	e1a0000a 	mov	r0, sl
4001a0dc:	eb0001c2 	bl	4001a7ec <CyU3PDmaMultiChannelHandleError>
4001a0e0:	e28dd038 	add	sp, sp, #56	; 0x38
4001a0e4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a0e8:	e3e01000 	mvn	r1, #0
4001a0ec:	e28a0078 	add	r0, sl, #120	; 0x78
4001a0f0:	ebffbf9b 	bl	40009f64 <_txe_mutex_get>
4001a0f4:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a0f8:	e1500006 	cmp	r0, r6
4001a0fc:	0a0000fc 	beq	4001a4f4 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a100:	e594000c 	ldr	r0, [r4, #12]
4001a104:	e1a09800 	lsl	r9, r0, #16
4001a108:	e1a09829 	lsr	r9, r9, #16
4001a10c:	e3a08000 	mov	r8, #0
4001a110:	ea000007 	b	4001a134 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a114:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a118:	e0800088 	add	r0, r0, r8, lsl #1
4001a11c:	e1d000b0 	ldrh	r0, [r0]
4001a120:	e1500006 	cmp	r0, r6
4001a124:	1a000000 	bne	4001a12c <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a128:	ea000004 	b	4001a140 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a12c:	e2880001 	add	r0, r8, #1
4001a130:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a134:	e1da00ba 	ldrh	r0, [sl, #10]
4001a138:	e1500008 	cmp	r0, r8
4001a13c:	cafffff4 	bgt	4001a114 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a140:	e1a00000 	nop			; (mov r0, r0)
4001a144:	e3150002 	tst	r5, #2
4001a148:	0a00007e 	beq	4001a348 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a14c:	e59a0000 	ldr	r0, [sl]
4001a150:	e3500003 	cmp	r0, #3
4001a154:	0a00005a 	beq	4001a2c4 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a158:	e1a00000 	nop			; (mov r0, r0)
4001a15c:	e28a1046 	add	r1, sl, #70	; 0x46
4001a160:	e0811088 	add	r1, r1, r8, lsl #1
4001a164:	e1d100b0 	ldrh	r0, [r1]
4001a168:	e28d1028 	add	r1, sp, #40	; 0x28
4001a16c:	eb0020a9 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001a170:	e28a1046 	add	r1, sl, #70	; 0x46
4001a174:	e0811088 	add	r1, r1, r8, lsl #1
4001a178:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a17c:	e1c100b0 	strh	r0, [r1]
4001a180:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a184:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a188:	e0017820 	and	r7, r1, r0, lsr #16
4001a18c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a190:	e1a00007 	mov	r0, r7
4001a194:	eb00209f 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001a198:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a19c:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a734 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a1a0:	e0000001 	and	r0, r0, r1
4001a1a4:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a1a8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a1ac:	e1a00007 	mov	r0, r7
4001a1b0:	eb0020b3 	bl	40022484 <CyU3PDmaDscrSetConfig>
4001a1b4:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a1b8:	e3a02000 	mov	r2, #0
4001a1bc:	e1a01007 	mov	r1, r7
4001a1c0:	ebffeace 	bl	40014d00 <CyU3PDmaSocketSendEvent>
4001a1c4:	ebffe1bf 	bl	400128c8 <CyU3PSysBarrierSync>
4001a1c8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a1cc:	e3500000 	cmp	r0, #0
4001a1d0:	0a000007 	beq	4001a1f4 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a1d4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a1d8:	e3100010 	tst	r0, #16
4001a1dc:	0a000004 	beq	4001a1f4 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a1e0:	e3a02000 	mov	r2, #0
4001a1e4:	e3a01010 	mov	r1, #16
4001a1e8:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a1ec:	e1a0000a 	mov	r0, sl
4001a1f0:	e12fff33 	blx	r3
4001a1f4:	e28a0046 	add	r0, sl, #70	; 0x46
4001a1f8:	e0800088 	add	r0, r0, r8, lsl #1
4001a1fc:	e1d000b0 	ldrh	r0, [r0]
4001a200:	e1500009 	cmp	r0, r9
4001a204:	1affffd4 	bne	4001a15c <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a208:	e59a0000 	ldr	r0, [sl]
4001a20c:	e3500006 	cmp	r0, #6
4001a210:	1a00004c 	bne	4001a348 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a214:	e1da00b8 	ldrh	r0, [sl, #8]
4001a218:	e1da10ba 	ldrh	r1, [sl, #10]
4001a21c:	e0000091 	mul	r0, r1, r0
4001a220:	e1a08800 	lsl	r8, r0, #16
4001a224:	e1a08828 	lsr	r8, r8, #16
4001a228:	e1da71b4 	ldrh	r7, [sl, #20]
4001a22c:	ea00000c 	b	4001a264 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a230:	e28d1028 	add	r1, sp, #40	; 0x28
4001a234:	e1a00007 	mov	r0, r7
4001a238:	eb002076 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001a23c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a240:	e3100008 	tst	r0, #8
4001a244:	0a000000 	beq	4001a24c <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a248:	ea000007 	b	4001a26c <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a24c:	e2480001 	sub	r0, r8, #1
4001a250:	e1a08800 	lsl	r8, r0, #16
4001a254:	e1a08828 	lsr	r8, r8, #16
4001a258:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a25c:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a260:	e0017820 	and	r7, r1, r0, lsr #16
4001a264:	e3580000 	cmp	r8, #0
4001a268:	1afffff0 	bne	4001a230 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a26c:	e1a00000 	nop			; (mov r0, r0)
4001a270:	e3580000 	cmp	r8, #0
4001a274:	1a000033 	bne	4001a348 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a278:	e3a00001 	mov	r0, #1
4001a27c:	e58a0000 	str	r0, [sl]
4001a280:	e3a02000 	mov	r2, #0
4001a284:	e3a01001 	mov	r1, #1
4001a288:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a28c:	ebffbe9c 	bl	40009d04 <_txe_event_flags_set>
4001a290:	ebffe18c 	bl	400128c8 <CyU3PSysBarrierSync>
4001a294:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a298:	e3500000 	cmp	r0, #0
4001a29c:	0a000029 	beq	4001a348 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2a0:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a2a4:	e3100001 	tst	r0, #1
4001a2a8:	0a000026 	beq	4001a348 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2ac:	e3a02000 	mov	r2, #0
4001a2b0:	e3a01001 	mov	r1, #1
4001a2b4:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a2b8:	e1a0000a 	mov	r0, sl
4001a2bc:	e12fff33 	blx	r3
4001a2c0:	ea000020 	b	4001a348 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2c4:	e3a00001 	mov	r0, #1
4001a2c8:	e58a0000 	str	r0, [sl]
4001a2cc:	e1da00b4 	ldrh	r0, [sl, #4]
4001a2d0:	e3500006 	cmp	r0, #6
4001a2d4:	1a00000a 	bne	4001a304 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a2d8:	e28d1004 	add	r1, sp, #4
4001a2dc:	e1a00006 	mov	r0, r6
4001a2e0:	ebffe9ee 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
4001a2e4:	e3a00000 	mov	r0, #0
4001a2e8:	e58d0014 	str	r0, [sp, #20]
4001a2ec:	e59d0018 	ldr	r0, [sp, #24]
4001a2f0:	e3c00002 	bic	r0, r0, #2
4001a2f4:	e58d0018 	str	r0, [sp, #24]
4001a2f8:	e28d1004 	add	r1, sp, #4
4001a2fc:	e1a00006 	mov	r0, r6
4001a300:	ebffea90 	bl	40014d48 <CyU3PDmaSocketSetConfig>
4001a304:	e3a02000 	mov	r2, #0
4001a308:	e3a01002 	mov	r1, #2
4001a30c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a310:	ebffbe7b 	bl	40009d04 <_txe_event_flags_set>
4001a314:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a318:	ebffe16a 	bl	400128c8 <CyU3PSysBarrierSync>
4001a31c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a320:	e3500000 	cmp	r0, #0
4001a324:	0a000007 	beq	4001a348 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a328:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a32c:	e3100002 	tst	r0, #2
4001a330:	0a000004 	beq	4001a348 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a334:	e3a02000 	mov	r2, #0
4001a338:	e3a01002 	mov	r1, #2
4001a33c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a340:	e1a0000a 	mov	r0, sl
4001a344:	e12fff33 	blx	r3
4001a348:	e3150010 	tst	r5, #16
4001a34c:	0a000059 	beq	4001a4b8 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a350:	e28a1046 	add	r1, sl, #70	; 0x46
4001a354:	e0811088 	add	r1, r1, r8, lsl #1
4001a358:	e1d100b0 	ldrh	r0, [r1]
4001a35c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a360:	eb00202c 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001a364:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a368:	e3100001 	tst	r0, #1
4001a36c:	0a000051 	beq	4001a4b8 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a370:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a374:	e0811088 	add	r1, r1, r8, lsl #1
4001a378:	e1d100b0 	ldrh	r0, [r1]
4001a37c:	ebffe9af 	bl	40014a40 <CyU3PDmaSocketDisable>
4001a380:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a384:	e59f13a8 	ldr	r1, [pc, #936]	; 4001a734 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a388:	e0000001 	and	r0, r0, r1
4001a38c:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a390:	e28a1046 	add	r1, sl, #70	; 0x46
4001a394:	e0811088 	add	r1, r1, r8, lsl #1
4001a398:	e1d100b0 	ldrh	r0, [r1]
4001a39c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a3a0:	eb002037 	bl	40022484 <CyU3PDmaDscrSetConfig>
4001a3a4:	e28a1046 	add	r1, sl, #70	; 0x46
4001a3a8:	e0811088 	add	r1, r1, r8, lsl #1
4001a3ac:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3b0:	e1c100b0 	strh	r0, [r1]
4001a3b4:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a3b8:	e0811088 	add	r1, r1, r8, lsl #1
4001a3bc:	e1d100b0 	ldrh	r0, [r1]
4001a3c0:	e28d1004 	add	r1, sp, #4
4001a3c4:	ebffe9b5 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
4001a3c8:	e59d0010 	ldr	r0, [sp, #16]
4001a3cc:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a3d0:	e58d0010 	str	r0, [sp, #16]
4001a3d4:	e59d0010 	ldr	r0, [sp, #16]
4001a3d8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a3dc:	e58d0010 	str	r0, [sp, #16]
4001a3e0:	e3a00000 	mov	r0, #0
4001a3e4:	e58d0014 	str	r0, [sp, #20]
4001a3e8:	e28a0064 	add	r0, sl, #100	; 0x64
4001a3ec:	e0800088 	add	r0, r0, r8, lsl #1
4001a3f0:	e1d000b0 	ldrh	r0, [r0]
4001a3f4:	e2400001 	sub	r0, r0, #1
4001a3f8:	e28a1064 	add	r1, sl, #100	; 0x64
4001a3fc:	e0811088 	add	r1, r1, r8, lsl #1
4001a400:	e1c100b0 	strh	r0, [r1]
4001a404:	e28a0064 	add	r0, sl, #100	; 0x64
4001a408:	e0800088 	add	r0, r0, r8, lsl #1
4001a40c:	e1d000b0 	ldrh	r0, [r0]
4001a410:	e3500000 	cmp	r0, #0
4001a414:	1a000004 	bne	4001a42c <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a418:	e3a00010 	mov	r0, #16
4001a41c:	e58d0014 	str	r0, [sp, #20]
4001a420:	e59d0018 	ldr	r0, [sp, #24]
4001a424:	e3c00010 	bic	r0, r0, #16
4001a428:	e58d0018 	str	r0, [sp, #24]
4001a42c:	e28a0046 	add	r0, sl, #70	; 0x46
4001a430:	e0800088 	add	r0, r0, r8, lsl #1
4001a434:	e1d000b0 	ldrh	r0, [r0]
4001a438:	e58d0004 	str	r0, [sp, #4]
4001a43c:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a440:	e0811088 	add	r1, r1, r8, lsl #1
4001a444:	e1d100b0 	ldrh	r0, [r1]
4001a448:	e28d1004 	add	r1, sp, #4
4001a44c:	ebffea3d 	bl	40014d48 <CyU3PDmaSocketSetConfig>
4001a450:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a454:	e59f12d4 	ldr	r1, [pc, #724]	; 4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a458:	e0017820 	and	r7, r1, r0, lsr #16
4001a45c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a460:	e1a00007 	mov	r0, r7
4001a464:	eb001feb 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001a468:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a46c:	e59f12c0 	ldr	r1, [pc, #704]	; 4001a734 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a470:	e0000001 	and	r0, r0, r1
4001a474:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a478:	e28d1028 	add	r1, sp, #40	; 0x28
4001a47c:	e1a00007 	mov	r0, r7
4001a480:	eb001fff 	bl	40022484 <CyU3PDmaDscrSetConfig>
4001a484:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a488:	e3500000 	cmp	r0, #0
4001a48c:	0a000004 	beq	4001a4a4 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a490:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a494:	e59f3298 	ldr	r3, [pc, #664]	; 4001a734 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a498:	e0021003 	and	r1, r2, r3
4001a49c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a4a0:	ebffdeaf 	bl	40011f64 <CyU3PSysFlushDRegion>
4001a4a4:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a4a8:	e3a02000 	mov	r2, #0
4001a4ac:	e1a01007 	mov	r1, r7
4001a4b0:	ebffea12 	bl	40014d00 <CyU3PDmaSocketSendEvent>
4001a4b4:	ebffe103 	bl	400128c8 <CyU3PSysBarrierSync>
4001a4b8:	e3150020 	tst	r5, #32
4001a4bc:	0a000098 	beq	4001a724 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a4c0:	ebffe100 	bl	400128c8 <CyU3PSysBarrierSync>
4001a4c4:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a4c8:	e3500000 	cmp	r0, #0
4001a4cc:	0a000094 	beq	4001a724 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a4d0:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a4d4:	e3100080 	tst	r0, #128	; 0x80
4001a4d8:	0a000091 	beq	4001a724 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a4dc:	e3a02000 	mov	r2, #0
4001a4e0:	e3a01080 	mov	r1, #128	; 0x80
4001a4e4:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a4e8:	e1a0000a 	mov	r0, sl
4001a4ec:	e12fff33 	blx	r3
4001a4f0:	ea00008b 	b	4001a724 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a4f4:	e594000c 	ldr	r0, [r4, #12]
4001a4f8:	e1a09800 	lsl	r9, r0, #16
4001a4fc:	e1a09829 	lsr	r9, r9, #16
4001a500:	e3150001 	tst	r5, #1
4001a504:	0a00006b 	beq	4001a6b8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a508:	e59a0000 	ldr	r0, [sl]
4001a50c:	e3500004 	cmp	r0, #4
4001a510:	0a000031 	beq	4001a5dc <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a514:	e1a00000 	nop			; (mov r0, r0)
4001a518:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a51c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a520:	eb001fbc 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001a524:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a528:	e58d001c 	str	r0, [sp, #28]
4001a52c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a530:	e59f11f8 	ldr	r1, [pc, #504]	; 4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a534:	e0010820 	and	r0, r1, r0, lsr #16
4001a538:	e1cd02b0 	strh	r0, [sp, #32]
4001a53c:	e241100f 	sub	r1, r1, #15
4001a540:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a544:	e0000001 	and	r0, r0, r1
4001a548:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a54c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a550:	e200000f 	and	r0, r0, #15
4001a554:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a558:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a55c:	e3500000 	cmp	r0, #0
4001a560:	0a000002 	beq	4001a570 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001a564:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a568:	e59d001c 	ldr	r0, [sp, #28]
4001a56c:	ebffde7c 	bl	40011f64 <CyU3PSysFlushDRegion>
4001a570:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a574:	e3100008 	tst	r0, #8
4001a578:	0a000003 	beq	4001a58c <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001a57c:	e3a02000 	mov	r2, #0
4001a580:	e3a01008 	mov	r1, #8
4001a584:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a588:	ebffbddd 	bl	40009d04 <_txe_event_flags_set>
4001a58c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a590:	e59f1198 	ldr	r1, [pc, #408]	; 4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a594:	e0010820 	and	r0, r1, r0, lsr #16
4001a598:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001a59c:	ebffe0c9 	bl	400128c8 <CyU3PSysBarrierSync>
4001a5a0:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a5a4:	e3500000 	cmp	r0, #0
4001a5a8:	0a000007 	beq	4001a5cc <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a5ac:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a5b0:	e3100008 	tst	r0, #8
4001a5b4:	0a000004 	beq	4001a5cc <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a5b8:	e28d201c 	add	r2, sp, #28
4001a5bc:	e3a01008 	mov	r1, #8
4001a5c0:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a5c4:	e1a0000a 	mov	r0, sl
4001a5c8:	e12fff33 	blx	r3
4001a5cc:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a5d0:	e1500009 	cmp	r0, r9
4001a5d4:	1affffcf 	bne	4001a518 <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001a5d8:	ea000036 	b	4001a6b8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a5dc:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001a5e0:	e28d1028 	add	r1, sp, #40	; 0x28
4001a5e4:	eb001f8b 	bl	40022418 <CyU3PDmaDscrGetConfig>
4001a5e8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a5ec:	e58d001c 	str	r0, [sp, #28]
4001a5f0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a5f4:	e59f1134 	ldr	r1, [pc, #308]	; 4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a5f8:	e0010820 	and	r0, r1, r0, lsr #16
4001a5fc:	e1cd02b0 	strh	r0, [sp, #32]
4001a600:	e241100f 	sub	r1, r1, #15
4001a604:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a608:	e0000001 	and	r0, r0, r1
4001a60c:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a610:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a614:	e200000f 	and	r0, r0, #15
4001a618:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a61c:	e3a00001 	mov	r0, #1
4001a620:	e58a0000 	str	r0, [sl]
4001a624:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a628:	e3500000 	cmp	r0, #0
4001a62c:	0a000002 	beq	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001a630:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a634:	e59d001c 	ldr	r0, [sp, #28]
4001a638:	ebffde49 	bl	40011f64 <CyU3PSysFlushDRegion>
4001a63c:	e1da00b4 	ldrh	r0, [sl, #4]
4001a640:	e3500006 	cmp	r0, #6
4001a644:	1a00000a 	bne	4001a674 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001a648:	e28d1004 	add	r1, sp, #4
4001a64c:	e1a00006 	mov	r0, r6
4001a650:	ebffe912 	bl	40014aa0 <CyU3PDmaSocketGetConfig>
4001a654:	e3a00000 	mov	r0, #0
4001a658:	e58d0014 	str	r0, [sp, #20]
4001a65c:	e59d0018 	ldr	r0, [sp, #24]
4001a660:	e3c00001 	bic	r0, r0, #1
4001a664:	e58d0018 	str	r0, [sp, #24]
4001a668:	e28d1004 	add	r1, sp, #4
4001a66c:	e1a00006 	mov	r0, r6
4001a670:	ebffe9b4 	bl	40014d48 <CyU3PDmaSocketSetConfig>
4001a674:	e3a02000 	mov	r2, #0
4001a678:	e3a01004 	mov	r1, #4
4001a67c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a680:	ebffbd9f 	bl	40009d04 <_txe_event_flags_set>
4001a684:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a688:	ebffe08e 	bl	400128c8 <CyU3PSysBarrierSync>
4001a68c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a690:	e3500000 	cmp	r0, #0
4001a694:	0a000007 	beq	4001a6b8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a698:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a69c:	e3100004 	tst	r0, #4
4001a6a0:	0a000004 	beq	4001a6b8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a6a4:	e28d201c 	add	r2, sp, #28
4001a6a8:	e3a01004 	mov	r1, #4
4001a6ac:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a6b0:	e1a0000a 	mov	r0, sl
4001a6b4:	e12fff33 	blx	r3
4001a6b8:	e3150080 	tst	r5, #128	; 0x80
4001a6bc:	0a000018 	beq	4001a724 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a6c0:	e1da00b4 	ldrh	r0, [sl, #4]
4001a6c4:	e3500006 	cmp	r0, #6
4001a6c8:	1a000012 	bne	4001a718 <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001a6cc:	e3a00001 	mov	r0, #1
4001a6d0:	e58a0000 	str	r0, [sl]
4001a6d4:	e3a02000 	mov	r2, #0
4001a6d8:	e3a01001 	mov	r1, #1
4001a6dc:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a6e0:	ebffbd87 	bl	40009d04 <_txe_event_flags_set>
4001a6e4:	ebffe077 	bl	400128c8 <CyU3PSysBarrierSync>
4001a6e8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a6ec:	e3500000 	cmp	r0, #0
4001a6f0:	0a00000b 	beq	4001a724 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a6f4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a6f8:	e3100001 	tst	r0, #1
4001a6fc:	0a000008 	beq	4001a724 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a700:	e3a02000 	mov	r2, #0
4001a704:	e3a01001 	mov	r1, #1
4001a708:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a70c:	e1a0000a 	mov	r0, sl
4001a710:	e12fff33 	blx	r3
4001a714:	ea000002 	b	4001a724 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a718:	e3a00006 	mov	r0, #6
4001a71c:	e58a0000 	str	r0, [sl]
4001a720:	ebffe068 	bl	400128c8 <CyU3PSysBarrierSync>
4001a724:	e28a0078 	add	r0, sl, #120	; 0x78
4001a728:	ebffbe42 	bl	4000a038 <_txe_mutex_put>
4001a72c:	eafffe6b 	b	4001a0e0 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001a730:	0000ffff 	.word	0x0000ffff
4001a734:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001a738 <CyU3PDmaIsSockAvlEnReqd>:
4001a738:	e1a01000 	mov	r1, r0
4001a73c:	e3a0003f 	mov	r0, #63	; 0x3f
4001a740:	e0000441 	and	r0, r0, r1, asr #8
4001a744:	e3500003 	cmp	r0, #3
4001a748:	1a000004 	bne	4001a760 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001a74c:	e3a00001 	mov	r0, #1
4001a750:	e59f203c 	ldr	r2, [pc, #60]	; 4001a794 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001a754:	e1d220b0 	ldrh	r2, [r2]
4001a758:	e1120110 	tst	r2, r0, lsl r1
4001a75c:	1a000008 	bne	4001a784 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001a760:	e3a0003f 	mov	r0, #63	; 0x3f
4001a764:	e0000441 	and	r0, r0, r1, asr #8
4001a768:	e3500004 	cmp	r0, #4
4001a76c:	1a000006 	bne	4001a78c <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a770:	e3a00001 	mov	r0, #1
4001a774:	e59f201c 	ldr	r2, [pc, #28]	; 4001a798 <CyU3PDmaIsSockAvlEnReqd+0x60>
4001a778:	e1d220b0 	ldrh	r2, [r2]
4001a77c:	e1120110 	tst	r2, r0, lsl r1
4001a780:	0a000001 	beq	4001a78c <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a784:	e3a00001 	mov	r0, #1
4001a788:	e12fff1e 	bx	lr
4001a78c:	e3a00000 	mov	r0, #0
4001a790:	eafffffc 	b	4001a788 <CyU3PDmaIsSockAvlEnReqd+0x50>
4001a794:	40030cfc 	.word	0x40030cfc
4001a798:	40030cfe 	.word	0x40030cfe

Disassembly of section i.CyU3PDmaMsgSend:

4001a79c <CyU3PDmaMsgSend>:
4001a79c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001a7a0:	e1a04000 	mov	r4, r0
4001a7a4:	e1a05001 	mov	r5, r1
4001a7a8:	e1a07002 	mov	r7, r2
4001a7ac:	e3570001 	cmp	r7, #1
4001a7b0:	1a000005 	bne	4001a7cc <CyU3PDmaMsgSend+0x30>
4001a7b4:	e1a02005 	mov	r2, r5
4001a7b8:	e1a01004 	mov	r1, r4
4001a7bc:	e59f0024 	ldr	r0, [pc, #36]	; 4001a7e8 <CyU3PDmaMsgSend+0x4c>
4001a7c0:	ebffbeb2 	bl	4000a290 <_txe_queue_front_send>
4001a7c4:	e1a06000 	mov	r6, r0
4001a7c8:	ea000004 	b	4001a7e0 <CyU3PDmaMsgSend+0x44>
4001a7cc:	e1a02005 	mov	r2, r5
4001a7d0:	e1a01004 	mov	r1, r4
4001a7d4:	e59f000c 	ldr	r0, [pc, #12]	; 4001a7e8 <CyU3PDmaMsgSend+0x4c>
4001a7d8:	ebffbefc 	bl	4000a3d0 <_txe_queue_send>
4001a7dc:	e1a06000 	mov	r6, r0
4001a7e0:	e1a00006 	mov	r0, r6
4001a7e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001a7e8:	40031930 	.word	0x40031930

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001a7ec <CyU3PDmaMultiChannelHandleError>:
4001a7ec:	e92d4070 	push	{r4, r5, r6, lr}
4001a7f0:	e1a04000 	mov	r4, r0
4001a7f4:	e3e01000 	mvn	r1, #0
4001a7f8:	e2840078 	add	r0, r4, #120	; 0x78
4001a7fc:	ebffbdd8 	bl	40009f64 <_txe_mutex_get>
4001a800:	e1d400b4 	ldrh	r0, [r4, #4]
4001a804:	e3500005 	cmp	r0, #5
4001a808:	0a000002 	beq	4001a818 <CyU3PDmaMultiChannelHandleError+0x2c>
4001a80c:	e1d400b4 	ldrh	r0, [r4, #4]
4001a810:	e3500007 	cmp	r0, #7
4001a814:	1a00000d 	bne	4001a850 <CyU3PDmaMultiChannelHandleError+0x64>
4001a818:	e3a05000 	mov	r5, #0
4001a81c:	ea000005 	b	4001a838 <CyU3PDmaMultiChannelHandleError+0x4c>
4001a820:	e2841024 	add	r1, r4, #36	; 0x24
4001a824:	e0811085 	add	r1, r1, r5, lsl #1
4001a828:	e1d100b0 	ldrh	r0, [r1]
4001a82c:	ebffe883 	bl	40014a40 <CyU3PDmaSocketDisable>
4001a830:	e2850001 	add	r0, r5, #1
4001a834:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a838:	e1d400ba 	ldrh	r0, [r4, #10]
4001a83c:	e1500005 	cmp	r0, r5
4001a840:	cafffff6 	bgt	4001a820 <CyU3PDmaMultiChannelHandleError+0x34>
4001a844:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001a848:	ebffe87c 	bl	40014a40 <CyU3PDmaSocketDisable>
4001a84c:	ea00000c 	b	4001a884 <CyU3PDmaMultiChannelHandleError+0x98>
4001a850:	e3a05000 	mov	r5, #0
4001a854:	ea000005 	b	4001a870 <CyU3PDmaMultiChannelHandleError+0x84>
4001a858:	e284102c 	add	r1, r4, #44	; 0x2c
4001a85c:	e0811085 	add	r1, r1, r5, lsl #1
4001a860:	e1d100b0 	ldrh	r0, [r1]
4001a864:	ebffe875 	bl	40014a40 <CyU3PDmaSocketDisable>
4001a868:	e2850001 	add	r0, r5, #1
4001a86c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a870:	e1d400ba 	ldrh	r0, [r4, #10]
4001a874:	e1500005 	cmp	r0, r5
4001a878:	cafffff6 	bgt	4001a858 <CyU3PDmaMultiChannelHandleError+0x6c>
4001a87c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001a880:	ebffe86e 	bl	40014a40 <CyU3PDmaSocketDisable>
4001a884:	e3a02002 	mov	r2, #2
4001a888:	e3e01007 	mvn	r1, #7
4001a88c:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a890:	ebffbd1b 	bl	40009d04 <_txe_event_flags_set>
4001a894:	e3a02000 	mov	r2, #0
4001a898:	e3a01040 	mov	r1, #64	; 0x40
4001a89c:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a8a0:	ebffbd17 	bl	40009d04 <_txe_event_flags_set>
4001a8a4:	e3a00005 	mov	r0, #5
4001a8a8:	e5840000 	str	r0, [r4]
4001a8ac:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001a8b0:	e3500000 	cmp	r0, #0
4001a8b4:	0a000007 	beq	4001a8d8 <CyU3PDmaMultiChannelHandleError+0xec>
4001a8b8:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001a8bc:	e3100040 	tst	r0, #64	; 0x40
4001a8c0:	0a000004 	beq	4001a8d8 <CyU3PDmaMultiChannelHandleError+0xec>
4001a8c4:	e3a02000 	mov	r2, #0
4001a8c8:	e3a01040 	mov	r1, #64	; 0x40
4001a8cc:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001a8d0:	e1a00004 	mov	r0, r4
4001a8d4:	e12fff33 	blx	r3
4001a8d8:	e2840078 	add	r0, r4, #120	; 0x78
4001a8dc:	ebffbdd5 	bl	4000a038 <_txe_mutex_put>
4001a8e0:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001a8e4 <CyU3PDmaThreadEntry>:
4001a8e4:	e92d4070 	push	{r4, r5, r6, lr}
4001a8e8:	e24dd040 	sub	sp, sp, #64	; 0x40
4001a8ec:	ea00003f 	b	4001a9f0 <CyU3PDmaThreadEntry+0x10c>
4001a8f0:	e3e02000 	mvn	r2, #0
4001a8f4:	e1a0100d 	mov	r1, sp
4001a8f8:	e59f00f4 	ldr	r0, [pc, #244]	; 4001a9f4 <CyU3PDmaThreadEntry+0x110>
4001a8fc:	ebffbe8b 	bl	4000a330 <_txe_queue_receive>
4001a900:	e1a05000 	mov	r5, r0
4001a904:	e3550000 	cmp	r5, #0
4001a908:	0a000000 	beq	4001a910 <CyU3PDmaThreadEntry+0x2c>
4001a90c:	ea000037 	b	4001a9f0 <CyU3PDmaThreadEntry+0x10c>
4001a910:	e59d0000 	ldr	r0, [sp]
4001a914:	e20040ff 	and	r4, r0, #255	; 0xff
4001a918:	e3540000 	cmp	r4, #0
4001a91c:	0a000000 	beq	4001a924 <CyU3PDmaThreadEntry+0x40>
4001a920:	ea000032 	b	4001a9f0 <CyU3PDmaThreadEntry+0x10c>
4001a924:	e59d6004 	ldr	r6, [sp, #4]
4001a928:	e1d600b4 	ldrh	r0, [r6, #4]
4001a92c:	e350000a 	cmp	r0, #10
4001a930:	308ff100 	addcc	pc, pc, r0, lsl #2
4001a934:	ea000028 	b	4001a9dc <CyU3PDmaThreadEntry+0xf8>
4001a938:	ea000008 	b	4001a960 <CyU3PDmaThreadEntry+0x7c>
4001a93c:	ea000009 	b	4001a968 <CyU3PDmaThreadEntry+0x84>
4001a940:	ea00000e 	b	4001a980 <CyU3PDmaThreadEntry+0x9c>
4001a944:	ea00000a 	b	4001a974 <CyU3PDmaThreadEntry+0x90>
4001a948:	ea00000b 	b	4001a97c <CyU3PDmaThreadEntry+0x98>
4001a94c:	ea00000e 	b	4001a98c <CyU3PDmaThreadEntry+0xa8>
4001a950:	ea000012 	b	4001a9a0 <CyU3PDmaThreadEntry+0xbc>
4001a954:	ea00000e 	b	4001a994 <CyU3PDmaThreadEntry+0xb0>
4001a958:	ea000012 	b	4001a9a8 <CyU3PDmaThreadEntry+0xc4>
4001a95c:	ea000014 	b	4001a9b4 <CyU3PDmaThreadEntry+0xd0>
4001a960:	e1a00000 	nop			; (mov r0, r0)
4001a964:	e1a00000 	nop			; (mov r0, r0)
4001a968:	e1a0000d 	mov	r0, sp
4001a96c:	ebfffa18 	bl	400191d4 <CyU3PDmaIntHandler_TypeAuto>
4001a970:	ea00001b 	b	4001a9e4 <CyU3PDmaThreadEntry+0x100>
4001a974:	e1a00000 	nop			; (mov r0, r0)
4001a978:	e1a00000 	nop			; (mov r0, r0)
4001a97c:	e1a00000 	nop			; (mov r0, r0)
4001a980:	e1a0000d 	mov	r0, sp
4001a984:	ebfffaed 	bl	40019540 <CyU3PDmaIntHandler_TypeManual>
4001a988:	ea000015 	b	4001a9e4 <CyU3PDmaThreadEntry+0x100>
4001a98c:	e1a00000 	nop			; (mov r0, r0)
4001a990:	e1a00000 	nop			; (mov r0, r0)
4001a994:	e1a0000d 	mov	r0, sp
4001a998:	ebfffc4c 	bl	40019ad0 <CyU3PDmaIntHandler_TypeManyToOne>
4001a99c:	ea000010 	b	4001a9e4 <CyU3PDmaThreadEntry+0x100>
4001a9a0:	e1a00000 	nop			; (mov r0, r0)
4001a9a4:	e1a00000 	nop			; (mov r0, r0)
4001a9a8:	e1a0000d 	mov	r0, sp
4001a9ac:	ebfffdbf 	bl	4001a0b0 <CyU3PDmaIntHandler_TypeOneToMany>
4001a9b0:	ea00000b 	b	4001a9e4 <CyU3PDmaThreadEntry+0x100>
4001a9b4:	e1a00000 	nop			; (mov r0, r0)
4001a9b8:	e59f0038 	ldr	r0, [pc, #56]	; 4001a9f8 <CyU3PDmaThreadEntry+0x114>
4001a9bc:	e5900000 	ldr	r0, [r0]
4001a9c0:	e3500000 	cmp	r0, #0
4001a9c4:	0a000003 	beq	4001a9d8 <CyU3PDmaThreadEntry+0xf4>
4001a9c8:	e1a0000d 	mov	r0, sp
4001a9cc:	e59f1024 	ldr	r1, [pc, #36]	; 4001a9f8 <CyU3PDmaThreadEntry+0x114>
4001a9d0:	e5911000 	ldr	r1, [r1]
4001a9d4:	e12fff31 	blx	r1
4001a9d8:	ea000001 	b	4001a9e4 <CyU3PDmaThreadEntry+0x100>
4001a9dc:	e1a00000 	nop			; (mov r0, r0)
4001a9e0:	e1a00000 	nop			; (mov r0, r0)
4001a9e4:	e1a00000 	nop			; (mov r0, r0)
4001a9e8:	ebffbf7e 	bl	4000a7e8 <_txe_thread_relinquish>
4001a9ec:	e1a00000 	nop			; (mov r0, r0)
4001a9f0:	eaffffbe 	b	4001a8f0 <CyU3PDmaThreadEntry+0xc>
4001a9f4:	40031930 	.word	0x40031930
4001a9f8:	40030d14 	.word	0x40030d14

Disassembly of section i.CyU3PGpifInit:

4001a9fc <CyU3PGpifInit>:
4001a9fc:	e92d4010 	push	{r4, lr}
4001aa00:	e1a04000 	mov	r4, r0
4001aa04:	e3540000 	cmp	r4, #0
4001aa08:	0a000006 	beq	4001aa28 <CyU3PGpifInit+0x2c>
4001aa0c:	e59f005c 	ldr	r0, [pc, #92]	; 4001aa70 <CyU3PGpifInit+0x74>
4001aa10:	e5900000 	ldr	r0, [r0]
4001aa14:	e1a00800 	lsl	r0, r0, #16
4001aa18:	e1a00820 	lsr	r0, r0, #16
4001aa1c:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001aa20:	e59f1048 	ldr	r1, [pc, #72]	; 4001aa70 <CyU3PGpifInit+0x74>
4001aa24:	e5810000 	str	r0, [r1]
4001aa28:	e3e00000 	mvn	r0, #0
4001aa2c:	e59f1040 	ldr	r1, [pc, #64]	; 4001aa74 <CyU3PGpifInit+0x78>
4001aa30:	e5810014 	str	r0, [r1, #20]
4001aa34:	e3a00000 	mov	r0, #0
4001aa38:	e5810018 	str	r0, [r1, #24]
4001aa3c:	e3a00e11 	mov	r0, #272	; 0x110
4001aa40:	e1c11300 	bic	r1, r1, r0, lsl #6
4001aa44:	e5810008 	str	r0, [r1, #8]
4001aa48:	ebffdf9e 	bl	400128c8 <CyU3PSysBarrierSync>
4001aa4c:	e59f001c 	ldr	r0, [pc, #28]	; 4001aa70 <CyU3PGpifInit+0x74>
4001aa50:	e5900000 	ldr	r0, [r0]
4001aa54:	e1a00800 	lsl	r0, r0, #16
4001aa58:	e1a00820 	lsr	r0, r0, #16
4001aa5c:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001aa60:	e59f1008 	ldr	r1, [pc, #8]	; 4001aa70 <CyU3PGpifInit+0x74>
4001aa64:	e5810000 	str	r0, [r1]
4001aa68:	e3a00000 	mov	r0, #0
4001aa6c:	e8bd8010 	pop	{r4, pc}
4001aa70:	e0010000 	.word	0xe0010000
4001aa74:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001aa78 <CyU3PPibApplicationDefine>:
4001aa78:	e92d4010 	push	{r4, lr}
4001aa7c:	e24dd020 	sub	sp, sp, #32
4001aa80:	e3a00000 	mov	r0, #0
4001aa84:	e59f10dc 	ldr	r1, [pc, #220]	; 4001ab68 <CyU3PPibApplicationDefine+0xf0>
4001aa88:	e5810000 	str	r0, [r1]
4001aa8c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001ab6c <CyU3PPibApplicationDefine+0xf4>
4001aa90:	e5810000 	str	r0, [r1]
4001aa94:	e59f10d4 	ldr	r1, [pc, #212]	; 4001ab70 <CyU3PPibApplicationDefine+0xf8>
4001aa98:	e5810000 	str	r0, [r1]
4001aa9c:	e59f10d0 	ldr	r1, [pc, #208]	; 4001ab74 <CyU3PPibApplicationDefine+0xfc>
4001aaa0:	e5810000 	str	r0, [r1]
4001aaa4:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ab78 <CyU3PPibApplicationDefine+0x100>
4001aaa8:	e5810000 	str	r0, [r1]
4001aaac:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ab7c <CyU3PPibApplicationDefine+0x104>
4001aab0:	e5810000 	str	r0, [r1]
4001aab4:	e59f10c4 	ldr	r1, [pc, #196]	; 4001ab80 <CyU3PPibApplicationDefine+0x108>
4001aab8:	e5810000 	str	r0, [r1]
4001aabc:	e59f10c0 	ldr	r1, [pc, #192]	; 4001ab84 <CyU3PPibApplicationDefine+0x10c>
4001aac0:	e5810000 	str	r0, [r1]
4001aac4:	e59f10bc 	ldr	r1, [pc, #188]	; 4001ab88 <CyU3PPibApplicationDefine+0x110>
4001aac8:	e5810000 	str	r0, [r1]
4001aacc:	e3a00b01 	mov	r0, #1024	; 0x400
4001aad0:	ebffa2e7 	bl	40003674 <CyU3PMemAlloc>
4001aad4:	e1a04000 	mov	r4, r0
4001aad8:	e3a030a8 	mov	r3, #168	; 0xa8
4001aadc:	e3a02001 	mov	r2, #1
4001aae0:	e3a01000 	mov	r1, #0
4001aae4:	e3a00004 	mov	r0, #4
4001aae8:	e28dc00c 	add	ip, sp, #12
4001aaec:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001aaf0:	e3a02b01 	mov	r2, #1024	; 0x400
4001aaf4:	e1a03001 	mov	r3, r1
4001aaf8:	e58d2004 	str	r2, [sp, #4]
4001aafc:	e59f2088 	ldr	r2, [pc, #136]	; 4001ab8c <CyU3PPibApplicationDefine+0x114>
4001ab00:	e28f1088 	add	r1, pc, #136	; 0x88
4001ab04:	e58d0008 	str	r0, [sp, #8]
4001ab08:	e59f0090 	ldr	r0, [pc, #144]	; 4001aba0 <CyU3PPibApplicationDefine+0x128>
4001ab0c:	e58d4000 	str	r4, [sp]
4001ab10:	ebffbe56 	bl	4000a470 <_txe_thread_create>
4001ab14:	e3a02028 	mov	r2, #40	; 0x28
4001ab18:	e3a01000 	mov	r1, #0
4001ab1c:	e59f0080 	ldr	r0, [pc, #128]	; 4001aba4 <CyU3PPibApplicationDefine+0x12c>
4001ab20:	ebffbbd7 	bl	40009a84 <_txe_event_flags_create>
4001ab24:	e3a02000 	mov	r2, #0
4001ab28:	e3a01010 	mov	r1, #16
4001ab2c:	e59f0070 	ldr	r0, [pc, #112]	; 4001aba4 <CyU3PPibApplicationDefine+0x12c>
4001ab30:	ebffbc73 	bl	40009d04 <_txe_event_flags_set>
4001ab34:	e3a00040 	mov	r0, #64	; 0x40
4001ab38:	ebffa2cd 	bl	40003674 <CyU3PMemAlloc>
4001ab3c:	e1a04000 	mov	r4, r0
4001ab40:	e3a0303c 	mov	r3, #60	; 0x3c
4001ab44:	e3a02040 	mov	r2, #64	; 0x40
4001ab48:	e1cd20f0 	strd	r2, [sp]
4001ab4c:	e1a03004 	mov	r3, r4
4001ab50:	e3a02001 	mov	r2, #1
4001ab54:	e3a01000 	mov	r1, #0
4001ab58:	e59f0048 	ldr	r0, [pc, #72]	; 4001aba8 <CyU3PPibApplicationDefine+0x130>
4001ab5c:	ebffbd5d 	bl	4000a0d8 <_txe_queue_create>
4001ab60:	e28dd020 	add	sp, sp, #32
4001ab64:	e8bd8010 	pop	{r4, pc}
4001ab68:	40030d18 	.word	0x40030d18
4001ab6c:	40030d1c 	.word	0x40030d1c
4001ab70:	40030d24 	.word	0x40030d24
4001ab74:	40030d3c 	.word	0x40030d3c
4001ab78:	40030d30 	.word	0x40030d30
4001ab7c:	40030d34 	.word	0x40030d34
4001ab80:	40030d28 	.word	0x40030d28
4001ab84:	40030d2c 	.word	0x40030d2c
4001ab88:	40030d20 	.word	0x40030d20
4001ab8c:	4001ad60 	.word	0x4001ad60
4001ab90:	505f3330 	.word	0x505f3330
4001ab94:	545f4249 	.word	0x545f4249
4001ab98:	41455248 	.word	0x41455248
4001ab9c:	00000044 	.word	0x00000044
4001aba0:	40031994 	.word	0x40031994
4001aba4:	4003196c 	.word	0x4003196c
4001aba8:	40031a3c 	.word	0x40031a3c

Disassembly of section i.CyU3PPibInit:

4001abac <CyU3PPibInit>:
4001abac:	e92d4070 	push	{r4, r5, r6, lr}
4001abb0:	e1a04000 	mov	r4, r0
4001abb4:	e1a05001 	mov	r5, r1
4001abb8:	e3a06000 	mov	r6, #0
4001abbc:	ebffe724 	bl	40014854 <CyFx3DevIsGpifSupported>
4001abc0:	e3500000 	cmp	r0, #0
4001abc4:	1a000001 	bne	4001abd0 <CyU3PPibInit+0x24>
4001abc8:	e3a00046 	mov	r0, #70	; 0x46
4001abcc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001abd0:	e59f0128 	ldr	r0, [pc, #296]	; 4001ad00 <CyU3PPibInit+0x154>
4001abd4:	e5900000 	ldr	r0, [r0]
4001abd8:	e3500000 	cmp	r0, #0
4001abdc:	0a000001 	beq	4001abe8 <CyU3PPibInit+0x3c>
4001abe0:	e3a00043 	mov	r0, #67	; 0x43
4001abe4:	eafffff8 	b	4001abcc <CyU3PPibInit+0x20>
4001abe8:	e3550000 	cmp	r5, #0
4001abec:	1a000001 	bne	4001abf8 <CyU3PPibInit+0x4c>
4001abf0:	e3a00041 	mov	r0, #65	; 0x41
4001abf4:	eafffff4 	b	4001abcc <CyU3PPibInit+0x20>
4001abf8:	e5d5000c 	ldrb	r0, [r5, #12]
4001abfc:	e3500004 	cmp	r0, #4
4001ac00:	ba000001 	blt	4001ac0c <CyU3PPibInit+0x60>
4001ac04:	e3a00040 	mov	r0, #64	; 0x40
4001ac08:	eaffffef 	b	4001abcc <CyU3PPibInit+0x20>
4001ac0c:	e1d500b0 	ldrh	r0, [r5]
4001ac10:	e3500002 	cmp	r0, #2
4001ac14:	ba000002 	blt	4001ac24 <CyU3PPibInit+0x78>
4001ac18:	e1d500b0 	ldrh	r0, [r5]
4001ac1c:	e3500b01 	cmp	r0, #1024	; 0x400
4001ac20:	da000001 	ble	4001ac2c <CyU3PPibInit+0x80>
4001ac24:	e3a00040 	mov	r0, #64	; 0x40
4001ac28:	eaffffe7 	b	4001abcc <CyU3PPibInit+0x20>
4001ac2c:	e3a00001 	mov	r0, #1
4001ac30:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ad00 <CyU3PPibInit+0x154>
4001ac34:	e5810000 	str	r0, [r1]
4001ac38:	e5d5000c 	ldrb	r0, [r5, #12]
4001ac3c:	e3a01b06 	mov	r1, #6144	; 0x1800
4001ac40:	e0010580 	and	r0, r1, r0, lsl #11
4001ac44:	e1d510b0 	ldrh	r1, [r5]
4001ac48:	e2411001 	sub	r1, r1, #1
4001ac4c:	e1a01b01 	lsl	r1, r1, #22
4001ac50:	e1a01b21 	lsr	r1, r1, #22
4001ac54:	e1800001 	orr	r0, r0, r1
4001ac58:	e59f10a4 	ldr	r1, [pc, #164]	; 4001ad04 <CyU3PPibInit+0x158>
4001ac5c:	e581000c 	str	r0, [r1, #12]
4001ac60:	e5950004 	ldr	r0, [r5, #4]
4001ac64:	e3500000 	cmp	r0, #0
4001ac68:	0a000003 	beq	4001ac7c <CyU3PPibInit+0xd0>
4001ac6c:	e1a00001 	mov	r0, r1
4001ac70:	e590000c 	ldr	r0, [r0, #12]
4001ac74:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001ac78:	e581000c 	str	r0, [r1, #12]
4001ac7c:	e59f0080 	ldr	r0, [pc, #128]	; 4001ad04 <CyU3PPibInit+0x158>
4001ac80:	e590000c 	ldr	r0, [r0, #12]
4001ac84:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ac88:	e59f1074 	ldr	r1, [pc, #116]	; 4001ad04 <CyU3PPibInit+0x158>
4001ac8c:	e581000c 	str	r0, [r1, #12]
4001ac90:	ebffe755 	bl	400149ec <CyFx3PibPowerOn>
4001ac94:	e5950008 	ldr	r0, [r5, #8]
4001ac98:	e3500000 	cmp	r0, #0
4001ac9c:	0a000000 	beq	4001aca4 <CyU3PPibInit+0xf8>
4001aca0:	ebffe732 	bl	40014970 <CyFx3PibDllEnable>
4001aca4:	e59f005c 	ldr	r0, [pc, #92]	; 4001ad08 <CyU3PPibInit+0x15c>
4001aca8:	e5900000 	ldr	r0, [r0]
4001acac:	e3500000 	cmp	r0, #0
4001acb0:	0a000003 	beq	4001acc4 <CyU3PPibInit+0x118>
4001acb4:	e1a00004 	mov	r0, r4
4001acb8:	eb0000d4 	bl	4001b010 <CyU3PPmmcInit>
4001acbc:	e1a06000 	mov	r6, r0
4001acc0:	ea000002 	b	4001acd0 <CyU3PPibInit+0x124>
4001acc4:	e1a00004 	mov	r0, r4
4001acc8:	ebffff4b 	bl	4001a9fc <CyU3PGpifInit>
4001accc:	e1a06000 	mov	r6, r0
4001acd0:	e3e00000 	mvn	r0, #0
4001acd4:	e59f1030 	ldr	r1, [pc, #48]	; 4001ad0c <CyU3PPibInit+0x160>
4001acd8:	e5810024 	str	r0, [r1, #36]	; 0x24
4001acdc:	e3560000 	cmp	r6, #0
4001ace0:	1a000004 	bne	4001acf8 <CyU3PPibInit+0x14c>
4001ace4:	eb000009 	bl	4001ad10 <CyU3PPibSocketInit>
4001ace8:	e3a00007 	mov	r0, #7
4001acec:	eb001c4a 	bl	40021e1c <CyU3PVicEnableInt>
4001acf0:	e3a00006 	mov	r0, #6
4001acf4:	eb001c48 	bl	40021e1c <CyU3PVicEnableInt>
4001acf8:	e1a00006 	mov	r0, r6
4001acfc:	eaffffb2 	b	4001abcc <CyU3PPibInit+0x20>
4001ad00:	40030d18 	.word	0x40030d18
4001ad04:	e0052000 	.word	0xe0052000
4001ad08:	40030d1c 	.word	0x40030d1c
4001ad0c:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001ad10 <CyU3PPibSocketInit>:
4001ad10:	e3a00000 	mov	r0, #0
4001ad14:	ea00000d 	b	4001ad50 <CyU3PPibSocketInit+0x40>
4001ad18:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001ad1c:	e59f2038 	ldr	r2, [pc, #56]	; 4001ad5c <CyU3PPibSocketInit+0x4c>
4001ad20:	e0822380 	add	r2, r2, r0, lsl #7
4001ad24:	e582100c 	str	r1, [r2, #12]
4001ad28:	e3e01000 	mvn	r1, #0
4001ad2c:	e59f2028 	ldr	r2, [pc, #40]	; 4001ad5c <CyU3PPibSocketInit+0x4c>
4001ad30:	e0822380 	add	r2, r2, r0, lsl #7
4001ad34:	e5821010 	str	r1, [r2, #16]
4001ad38:	e3a01000 	mov	r1, #0
4001ad3c:	e59f2018 	ldr	r2, [pc, #24]	; 4001ad5c <CyU3PPibSocketInit+0x4c>
4001ad40:	e0822380 	add	r2, r2, r0, lsl #7
4001ad44:	e5821014 	str	r1, [r2, #20]
4001ad48:	e2801001 	add	r1, r0, #1
4001ad4c:	e20100ff 	and	r0, r1, #255	; 0xff
4001ad50:	e3500020 	cmp	r0, #32
4001ad54:	baffffef 	blt	4001ad18 <CyU3PPibSocketInit+0x8>
4001ad58:	e12fff1e 	bx	lr
4001ad5c:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001ad60 <CyU3PPibThreadEntry>:
4001ad60:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001ad64:	e3a00005 	mov	r0, #5
4001ad68:	ebffe25e 	bl	400136e8 <CyU3PSysModuleInitCompleteEvt>
4001ad6c:	e59f0278 	ldr	r0, [pc, #632]	; 4001afec <CyU3PPibThreadEntry+0x28c>
4001ad70:	e5900000 	ldr	r0, [r0]
4001ad74:	e1a00800 	lsl	r0, r0, #16
4001ad78:	e1a00820 	lsr	r0, r0, #16
4001ad7c:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001ad80:	e59f1264 	ldr	r1, [pc, #612]	; 4001afec <CyU3PPibThreadEntry+0x28c>
4001ad84:	e5810000 	str	r0, [r1]
4001ad88:	e3a000e1 	mov	r0, #225	; 0xe1
4001ad8c:	e59f125c 	ldr	r1, [pc, #604]	; 4001aff0 <CyU3PPibThreadEntry+0x290>
4001ad90:	e5810000 	str	r0, [r1]
4001ad94:	ea000093 	b	4001afe8 <CyU3PPibThreadEntry+0x288>
4001ad98:	e3e03000 	mvn	r3, #0
4001ad9c:	e58d3000 	str	r3, [sp]
4001ada0:	e28d3008 	add	r3, sp, #8
4001ada4:	e3a02001 	mov	r2, #1
4001ada8:	e59f0240 	ldr	r0, [pc, #576]	; 4001aff0 <CyU3PPibThreadEntry+0x290>
4001adac:	e5901000 	ldr	r1, [r0]
4001adb0:	e59f023c 	ldr	r0, [pc, #572]	; 4001aff4 <CyU3PPibThreadEntry+0x294>
4001adb4:	ebffbba2 	bl	40009c44 <_txe_event_flags_get>
4001adb8:	e1a04000 	mov	r4, r0
4001adbc:	e59f122c 	ldr	r1, [pc, #556]	; 4001aff0 <CyU3PPibThreadEntry+0x290>
4001adc0:	e59d0008 	ldr	r0, [sp, #8]
4001adc4:	e5911000 	ldr	r1, [r1]
4001adc8:	e0000001 	and	r0, r0, r1
4001adcc:	e58d0008 	str	r0, [sp, #8]
4001add0:	e3540000 	cmp	r4, #0
4001add4:	0a000000 	beq	4001addc <CyU3PPibThreadEntry+0x7c>
4001add8:	ea000082 	b	4001afe8 <CyU3PPibThreadEntry+0x288>
4001addc:	ea00007d 	b	4001afd8 <CyU3PPibThreadEntry+0x278>
4001ade0:	e59d0008 	ldr	r0, [sp, #8]
4001ade4:	e3100020 	tst	r0, #32
4001ade8:	0a000017 	beq	4001ae4c <CyU3PPibThreadEntry+0xec>
4001adec:	e59f0204 	ldr	r0, [pc, #516]	; 4001aff8 <CyU3PPibThreadEntry+0x298>
4001adf0:	e5900000 	ldr	r0, [r0]
4001adf4:	e3500000 	cmp	r0, #0
4001adf8:	0a00000b 	beq	4001ae2c <CyU3PPibThreadEntry+0xcc>
4001adfc:	e59f01f8 	ldr	r0, [pc, #504]	; 4001affc <CyU3PPibThreadEntry+0x29c>
4001ae00:	e5900000 	ldr	r0, [r0]
4001ae04:	e3100002 	tst	r0, #2
4001ae08:	0a000007 	beq	4001ae2c <CyU3PPibThreadEntry+0xcc>
4001ae0c:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b000 <CyU3PPibThreadEntry+0x2a0>
4001ae10:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001ae14:	e1a01800 	lsl	r1, r0, #16
4001ae18:	e1a01821 	lsr	r1, r1, #16
4001ae1c:	e3a00002 	mov	r0, #2
4001ae20:	e59f21d0 	ldr	r2, [pc, #464]	; 4001aff8 <CyU3PPibThreadEntry+0x298>
4001ae24:	e5922000 	ldr	r2, [r2]
4001ae28:	e12fff32 	blx	r2
4001ae2c:	e59f01b8 	ldr	r0, [pc, #440]	; 4001afec <CyU3PPibThreadEntry+0x28c>
4001ae30:	e5900000 	ldr	r0, [r0]
4001ae34:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001ae38:	e59f11ac 	ldr	r1, [pc, #428]	; 4001afec <CyU3PPibThreadEntry+0x28c>
4001ae3c:	e5810000 	str	r0, [r1]
4001ae40:	e59d0008 	ldr	r0, [sp, #8]
4001ae44:	e3c00020 	bic	r0, r0, #32
4001ae48:	e58d0008 	str	r0, [sp, #8]
4001ae4c:	e59d0008 	ldr	r0, [sp, #8]
4001ae50:	e3100040 	tst	r0, #64	; 0x40
4001ae54:	0a000027 	beq	4001aef8 <CyU3PPibThreadEntry+0x198>
4001ae58:	e59f0198 	ldr	r0, [pc, #408]	; 4001aff8 <CyU3PPibThreadEntry+0x298>
4001ae5c:	e5900000 	ldr	r0, [r0]
4001ae60:	e3500000 	cmp	r0, #0
4001ae64:	0a000017 	beq	4001aec8 <CyU3PPibThreadEntry+0x168>
4001ae68:	e59f018c 	ldr	r0, [pc, #396]	; 4001affc <CyU3PPibThreadEntry+0x29c>
4001ae6c:	e5900000 	ldr	r0, [r0]
4001ae70:	e3100004 	tst	r0, #4
4001ae74:	0a000013 	beq	4001aec8 <CyU3PPibThreadEntry+0x168>
4001ae78:	e59f016c 	ldr	r0, [pc, #364]	; 4001afec <CyU3PPibThreadEntry+0x28c>
4001ae7c:	e5900020 	ldr	r0, [r0, #32]
4001ae80:	e1a05800 	lsl	r5, r0, #16
4001ae84:	e1a05825 	lsr	r5, r5, #16
4001ae88:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001ae8c:	e3500a02 	cmp	r0, #8192	; 0x2000
4001ae90:	1a000000 	bne	4001ae98 <CyU3PPibThreadEntry+0x138>
4001ae94:	e3a05a02 	mov	r5, #8192	; 0x2000
4001ae98:	e59f0164 	ldr	r0, [pc, #356]	; 4001b004 <CyU3PPibThreadEntry+0x2a4>
4001ae9c:	e5900000 	ldr	r0, [r0]
4001aea0:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001aea4:	1a000001 	bne	4001aeb0 <CyU3PPibThreadEntry+0x150>
4001aea8:	e3550004 	cmp	r5, #4
4001aeac:	da000004 	ble	4001aec4 <CyU3PPibThreadEntry+0x164>
4001aeb0:	e1a01005 	mov	r1, r5
4001aeb4:	e3a00004 	mov	r0, #4
4001aeb8:	e59f2138 	ldr	r2, [pc, #312]	; 4001aff8 <CyU3PPibThreadEntry+0x298>
4001aebc:	e5922000 	ldr	r2, [r2]
4001aec0:	e12fff32 	blx	r2
4001aec4:	e1a00000 	nop			; (mov r0, r0)
4001aec8:	e59f012c 	ldr	r0, [pc, #300]	; 4001affc <CyU3PPibThreadEntry+0x29c>
4001aecc:	e5900000 	ldr	r0, [r0]
4001aed0:	e3100004 	tst	r0, #4
4001aed4:	0a000004 	beq	4001aeec <CyU3PPibThreadEntry+0x18c>
4001aed8:	e59f010c 	ldr	r0, [pc, #268]	; 4001afec <CyU3PPibThreadEntry+0x28c>
4001aedc:	e5900008 	ldr	r0, [r0, #8]
4001aee0:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001aee4:	e59f1100 	ldr	r1, [pc, #256]	; 4001afec <CyU3PPibThreadEntry+0x28c>
4001aee8:	e5810008 	str	r0, [r1, #8]
4001aeec:	e59d0008 	ldr	r0, [sp, #8]
4001aef0:	e3c00040 	bic	r0, r0, #64	; 0x40
4001aef4:	e58d0008 	str	r0, [sp, #8]
4001aef8:	e59d0008 	ldr	r0, [sp, #8]
4001aefc:	e3100080 	tst	r0, #128	; 0x80
4001af00:	0a000011 	beq	4001af4c <CyU3PPibThreadEntry+0x1ec>
4001af04:	e59f00ec 	ldr	r0, [pc, #236]	; 4001aff8 <CyU3PPibThreadEntry+0x298>
4001af08:	e5900000 	ldr	r0, [r0]
4001af0c:	e3500000 	cmp	r0, #0
4001af10:	0a00000a 	beq	4001af40 <CyU3PPibThreadEntry+0x1e0>
4001af14:	e59f00e0 	ldr	r0, [pc, #224]	; 4001affc <CyU3PPibThreadEntry+0x29c>
4001af18:	e5900000 	ldr	r0, [r0]
4001af1c:	e3100001 	tst	r0, #1
4001af20:	0a000006 	beq	4001af40 <CyU3PPibThreadEntry+0x1e0>
4001af24:	ebffe6ab 	bl	400149d8 <CyFx3PibGetDllStatus>
4001af28:	e1a05000 	mov	r5, r0
4001af2c:	e1a01000 	mov	r1, r0
4001af30:	e3a00001 	mov	r0, #1
4001af34:	e59f20bc 	ldr	r2, [pc, #188]	; 4001aff8 <CyU3PPibThreadEntry+0x298>
4001af38:	e5922000 	ldr	r2, [r2]
4001af3c:	e12fff32 	blx	r2
4001af40:	e59d0008 	ldr	r0, [sp, #8]
4001af44:	e3c00080 	bic	r0, r0, #128	; 0x80
4001af48:	e58d0008 	str	r0, [sp, #8]
4001af4c:	e59d0008 	ldr	r0, [sp, #8]
4001af50:	e3100001 	tst	r0, #1
4001af54:	0a00001f 	beq	4001afd8 <CyU3PPibThreadEntry+0x278>
4001af58:	e3a02000 	mov	r2, #0
4001af5c:	e28d1004 	add	r1, sp, #4
4001af60:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b008 <CyU3PPibThreadEntry+0x2a8>
4001af64:	ebffbcf1 	bl	4000a330 <_txe_queue_receive>
4001af68:	e1a04000 	mov	r4, r0
4001af6c:	e3540000 	cmp	r4, #0
4001af70:	1a000015 	bne	4001afcc <CyU3PPibThreadEntry+0x26c>
4001af74:	e1dd00b4 	ldrh	r0, [sp, #4]
4001af78:	e2000901 	and	r0, r0, #16384	; 0x4000
4001af7c:	e1b00720 	lsrs	r0, r0, #14
4001af80:	0a000014 	beq	4001afd8 <CyU3PPibThreadEntry+0x278>
4001af84:	e1dd00b4 	ldrh	r0, [sp, #4]
4001af88:	e20000ff 	and	r0, r0, #255	; 0xff
4001af8c:	e3500004 	cmp	r0, #4
4001af90:	1a00000a 	bne	4001afc0 <CyU3PPibThreadEntry+0x260>
4001af94:	e59f0070 	ldr	r0, [pc, #112]	; 4001b00c <CyU3PPibThreadEntry+0x2ac>
4001af98:	e5900000 	ldr	r0, [r0]
4001af9c:	e3500000 	cmp	r0, #0
4001afa0:	0a000005 	beq	4001afbc <CyU3PPibThreadEntry+0x25c>
4001afa4:	e1dd20b6 	ldrh	r2, [sp, #6]
4001afa8:	e1a01442 	asr	r1, r2, #8
4001afac:	e20200ff 	and	r0, r2, #255	; 0xff
4001afb0:	e59f2054 	ldr	r2, [pc, #84]	; 4001b00c <CyU3PPibThreadEntry+0x2ac>
4001afb4:	e5922000 	ldr	r2, [r2]
4001afb8:	e12fff32 	blx	r2
4001afbc:	ea000001 	b	4001afc8 <CyU3PPibThreadEntry+0x268>
4001afc0:	e1a00000 	nop			; (mov r0, r0)
4001afc4:	e1a00000 	nop			; (mov r0, r0)
4001afc8:	ea000002 	b	4001afd8 <CyU3PPibThreadEntry+0x278>
4001afcc:	e59d0008 	ldr	r0, [sp, #8]
4001afd0:	e3c00001 	bic	r0, r0, #1
4001afd4:	e58d0008 	str	r0, [sp, #8]
4001afd8:	e59d0008 	ldr	r0, [sp, #8]
4001afdc:	e3500000 	cmp	r0, #0
4001afe0:	1affff7e 	bne	4001ade0 <CyU3PPibThreadEntry+0x80>
4001afe4:	e1a00000 	nop			; (mov r0, r0)
4001afe8:	eaffff6a 	b	4001ad98 <CyU3PPibThreadEntry+0x38>
4001afec:	e0010000 	.word	0xe0010000
4001aff0:	40030d24 	.word	0x40030d24
4001aff4:	4003196c 	.word	0x4003196c
4001aff8:	40030d28 	.word	0x40030d28
4001affc:	40030d2c 	.word	0x40030d2c
4001b000:	e0017000 	.word	0xe0017000
4001b004:	e0014000 	.word	0xe0014000
4001b008:	40031a3c 	.word	0x40031a3c
4001b00c:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PPmmcInit:

4001b010 <CyU3PPmmcInit>:
4001b010:	e92d4010 	push	{r4, lr}
4001b014:	e1a04000 	mov	r4, r0
4001b018:	e3540000 	cmp	r4, #0
4001b01c:	0a000042 	beq	4001b12c <CyU3PPmmcInit+0x11c>
4001b020:	e3e00000 	mvn	r0, #0
4001b024:	e59f1148 	ldr	r1, [pc, #328]	; 4001b174 <CyU3PPmmcInit+0x164>
4001b028:	e581000c 	str	r0, [r1, #12]
4001b02c:	e3a00000 	mov	r0, #0
4001b030:	e5810010 	str	r0, [r1, #16]
4001b034:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b038:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b03c:	e3a00000 	mov	r0, #0
4001b040:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b044:	e5810008 	str	r0, [r1, #8]
4001b048:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b04c:	e5900000 	ldr	r0, [r0]
4001b050:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b054:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b058:	e5810000 	str	r0, [r1]
4001b05c:	e59f0114 	ldr	r0, [pc, #276]	; 4001b178 <CyU3PPmmcInit+0x168>
4001b060:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b064:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b068:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b06c:	e3a00001 	mov	r0, #1
4001b070:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b074:	e59f0100 	ldr	r0, [pc, #256]	; 4001b17c <CyU3PPmmcInit+0x16c>
4001b078:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b07c:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b180 <CyU3PPmmcInit+0x170>
4001b080:	e5900000 	ldr	r0, [r0]
4001b084:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b088:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b180 <CyU3PPmmcInit+0x170>
4001b08c:	e5900004 	ldr	r0, [r0, #4]
4001b090:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b094:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b180 <CyU3PPmmcInit+0x170>
4001b098:	e5900008 	ldr	r0, [r0, #8]
4001b09c:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b0a0:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b180 <CyU3PPmmcInit+0x170>
4001b0a4:	e590000c 	ldr	r0, [r0, #12]
4001b0a8:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b0ac:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b184 <CyU3PPmmcInit+0x174>
4001b0b0:	e5900000 	ldr	r0, [r0]
4001b0b4:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b0b8:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b184 <CyU3PPmmcInit+0x174>
4001b0bc:	e5900004 	ldr	r0, [r0, #4]
4001b0c0:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b0c4:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b184 <CyU3PPmmcInit+0x174>
4001b0c8:	e5900008 	ldr	r0, [r0, #8]
4001b0cc:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b0d0:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b184 <CyU3PPmmcInit+0x174>
4001b0d4:	e590000c 	ldr	r0, [r0, #12]
4001b0d8:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b0dc:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b184 <CyU3PPmmcInit+0x174>
4001b0e0:	e5900010 	ldr	r0, [r0, #16]
4001b0e4:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b0e8:	e59f0094 	ldr	r0, [pc, #148]	; 4001b184 <CyU3PPmmcInit+0x174>
4001b0ec:	e5900014 	ldr	r0, [r0, #20]
4001b0f0:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b0f4:	e59f008c 	ldr	r0, [pc, #140]	; 4001b188 <CyU3PPmmcInit+0x178>
4001b0f8:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b0fc:	e3a00000 	mov	r0, #0
4001b100:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b104:	e3a00c02 	mov	r0, #512	; 0x200
4001b108:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b10c:	e3a00000 	mov	r0, #0
4001b110:	e5810004 	str	r0, [r1, #4]
4001b114:	e59f0070 	ldr	r0, [pc, #112]	; 4001b18c <CyU3PPmmcInit+0x17c>
4001b118:	e5810010 	str	r0, [r1, #16]
4001b11c:	e3a00008 	mov	r0, #8
4001b120:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b124:	e5810008 	str	r0, [r1, #8]
4001b128:	ea000002 	b	4001b138 <CyU3PPmmcInit+0x128>
4001b12c:	e3a00000 	mov	r0, #0
4001b130:	e59f103c 	ldr	r1, [pc, #60]	; 4001b174 <CyU3PPmmcInit+0x164>
4001b134:	e5810010 	str	r0, [r1, #16]
4001b138:	e59f0034 	ldr	r0, [pc, #52]	; 4001b174 <CyU3PPmmcInit+0x164>
4001b13c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b140:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b144:	e59f1028 	ldr	r1, [pc, #40]	; 4001b174 <CyU3PPmmcInit+0x164>
4001b148:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b14c:	ebffdddd 	bl	400128c8 <CyU3PSysBarrierSync>
4001b150:	e59f0038 	ldr	r0, [pc, #56]	; 4001b190 <CyU3PPmmcInit+0x180>
4001b154:	e5900000 	ldr	r0, [r0]
4001b158:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b15c:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b160:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b164:	e59f1024 	ldr	r1, [pc, #36]	; 4001b190 <CyU3PPmmcInit+0x180>
4001b168:	e5810000 	str	r0, [r1]
4001b16c:	e3a00000 	mov	r0, #0
4001b170:	e8bd8010 	pop	{r4, pc}
4001b174:	e0011000 	.word	0xe0011000
4001b178:	00019201 	.word	0x00019201
4001b17c:	04010302 	.word	0x04010302
4001b180:	40011bf8 	.word	0x40011bf8
4001b184:	40011c08 	.word	0x40011c08
4001b188:	00ff8080 	.word	0x00ff8080
4001b18c:	400a00fb 	.word	0x400a00fb
4001b190:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b194 <CyU3PMboxReset>:
4001b194:	e92d4010 	push	{r4, lr}
4001b198:	e3a00002 	mov	r0, #2
4001b19c:	e59f1028 	ldr	r1, [pc, #40]	; 4001b1cc <CyU3PMboxReset+0x38>
4001b1a0:	e5810004 	str	r0, [r1, #4]
4001b1a4:	e3a02002 	mov	r2, #2
4001b1a8:	e3a01010 	mov	r1, #16
4001b1ac:	e59f001c 	ldr	r0, [pc, #28]	; 4001b1d0 <CyU3PMboxReset+0x3c>
4001b1b0:	ebffbad3 	bl	40009d04 <_txe_event_flags_set>
4001b1b4:	e59f0010 	ldr	r0, [pc, #16]	; 4001b1cc <CyU3PMboxReset+0x38>
4001b1b8:	e5900008 	ldr	r0, [r0, #8]
4001b1bc:	e3800003 	orr	r0, r0, #3
4001b1c0:	e59f1004 	ldr	r1, [pc, #4]	; 4001b1cc <CyU3PMboxReset+0x38>
4001b1c4:	e5810008 	str	r0, [r1, #8]
4001b1c8:	e8bd8010 	pop	{r4, pc}
4001b1cc:	e0010000 	.word	0xe0010000
4001b1d0:	4003196c 	.word	0x4003196c

Disassembly of section i.CyU3PGpifConfigure:

4001b1d4 <CyU3PGpifConfigure>:
4001b1d4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b1d8:	e1a04000 	mov	r4, r0
4001b1dc:	e1a05001 	mov	r5, r1
4001b1e0:	e59f609c 	ldr	r6, [pc, #156]	; 4001b284 <CyU3PGpifConfigure+0xb0>
4001b1e4:	e3540000 	cmp	r4, #0
4001b1e8:	0a000001 	beq	4001b1f4 <CyU3PGpifConfigure+0x20>
4001b1ec:	e3550000 	cmp	r5, #0
4001b1f0:	1a000001 	bne	4001b1fc <CyU3PGpifConfigure+0x28>
4001b1f4:	e3a00040 	mov	r0, #64	; 0x40
4001b1f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b1fc:	ebffe585 	bl	40014818 <CyFx3DevIsGpifConfigurable>
4001b200:	e3500000 	cmp	r0, #0
4001b204:	1a000001 	bne	4001b210 <CyU3PGpifConfigure+0x3c>
4001b208:	e3a00046 	mov	r0, #70	; 0x46
4001b20c:	eafffff9 	b	4001b1f8 <CyU3PGpifConfigure+0x24>
4001b210:	ebffe576 	bl	400147f0 <CyFx3DevIsGpif32Supported>
4001b214:	e3500000 	cmp	r0, #0
4001b218:	1a000007 	bne	4001b23c <CyU3PGpifConfigure+0x68>
4001b21c:	e3540001 	cmp	r4, #1
4001b220:	da000005 	ble	4001b23c <CyU3PGpifConfigure+0x68>
4001b224:	e5950004 	ldr	r0, [r5, #4]
4001b228:	e200000c 	and	r0, r0, #12
4001b22c:	e3500004 	cmp	r0, #4
4001b230:	9a000001 	bls	4001b23c <CyU3PGpifConfigure+0x68>
4001b234:	e3a00046 	mov	r0, #70	; 0x46
4001b238:	eaffffee 	b	4001b1f8 <CyU3PGpifConfigure+0x24>
4001b23c:	e59f0044 	ldr	r0, [pc, #68]	; 4001b288 <CyU3PGpifConfigure+0xb4>
4001b240:	e5900000 	ldr	r0, [r0]
4001b244:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b248:	0a000001 	beq	4001b254 <CyU3PGpifConfigure+0x80>
4001b24c:	e3a00043 	mov	r0, #67	; 0x43
4001b250:	eaffffe8 	b	4001b1f8 <CyU3PGpifConfigure+0x24>
4001b254:	e3a07001 	mov	r7, #1
4001b258:	ea000002 	b	4001b268 <CyU3PGpifConfigure+0x94>
4001b25c:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b260:	e4860004 	str	r0, [r6], #4
4001b264:	e2877001 	add	r7, r7, #1
4001b268:	e1570004 	cmp	r7, r4
4001b26c:	bafffffa 	blt	4001b25c <CyU3PGpifConfigure+0x88>
4001b270:	e5950000 	ldr	r0, [r5]
4001b274:	e59f100c 	ldr	r1, [pc, #12]	; 4001b288 <CyU3PGpifConfigure+0xb4>
4001b278:	e5810000 	str	r0, [r1]
4001b27c:	e3a00000 	mov	r0, #0
4001b280:	eaffffdc 	b	4001b1f8 <CyU3PGpifConfigure+0x24>
4001b284:	e0014004 	.word	0xe0014004
4001b288:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b28c <CyU3PGpifDisable>:
4001b28c:	e92d4070 	push	{r4, r5, r6, lr}
4001b290:	e1a04000 	mov	r4, r0
4001b294:	e59f0070 	ldr	r0, [pc, #112]	; 4001b30c <CyU3PGpifDisable+0x80>
4001b298:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b29c:	e3800002 	orr	r0, r0, #2
4001b2a0:	e59f1064 	ldr	r1, [pc, #100]	; 4001b30c <CyU3PGpifDisable+0x80>
4001b2a4:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b2a8:	e3a0000a 	mov	r0, #10
4001b2ac:	ebffe057 	bl	40013410 <CyU3PBusyWait>
4001b2b0:	e3a00000 	mov	r0, #0
4001b2b4:	e59f1050 	ldr	r1, [pc, #80]	; 4001b30c <CyU3PGpifDisable+0x80>
4001b2b8:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b2bc:	e3540000 	cmp	r4, #0
4001b2c0:	0a000010 	beq	4001b308 <CyU3PGpifDisable+0x7c>
4001b2c4:	e3a00e22 	mov	r0, #544	; 0x220
4001b2c8:	e5810000 	str	r0, [r1]
4001b2cc:	e3a05000 	mov	r5, #0
4001b2d0:	ea000007 	b	4001b2f4 <CyU3PGpifDisable+0x68>
4001b2d4:	e3a00000 	mov	r0, #0
4001b2d8:	e59f1030 	ldr	r1, [pc, #48]	; 4001b310 <CyU3PGpifDisable+0x84>
4001b2dc:	e0811205 	add	r1, r1, r5, lsl #4
4001b2e0:	e5810008 	str	r0, [r1, #8]
4001b2e4:	e59f1028 	ldr	r1, [pc, #40]	; 4001b314 <CyU3PGpifDisable+0x88>
4001b2e8:	e0811205 	add	r1, r1, r5, lsl #4
4001b2ec:	e5810008 	str	r0, [r1, #8]
4001b2f0:	e2855001 	add	r5, r5, #1
4001b2f4:	e3550c01 	cmp	r5, #256	; 0x100
4001b2f8:	3afffff5 	bcc	4001b2d4 <CyU3PGpifDisable+0x48>
4001b2fc:	e59f1014 	ldr	r1, [pc, #20]	; 4001b318 <CyU3PGpifDisable+0x8c>
4001b300:	e3a0004c 	mov	r0, #76	; 0x4c
4001b304:	ebffffb2 	bl	4001b1d4 <CyU3PGpifConfigure>
4001b308:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b30c:	e0014000 	.word	0xe0014000
4001b310:	e0015000 	.word	0xe0015000
4001b314:	e0016000 	.word	0xe0016000
4001b318:	40011c20 	.word	0x40011c20

Disassembly of section i.CyU3PGpifLoad:

4001b31c <CyU3PGpifLoad>:
4001b31c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b320:	e1a04000 	mov	r4, r0
4001b324:	e59f7264 	ldr	r7, [pc, #612]	; 4001b590 <CyU3PGpifLoad+0x274>
4001b328:	e3540000 	cmp	r4, #0
4001b32c:	0a000008 	beq	4001b354 <CyU3PGpifLoad+0x38>
4001b330:	e1d400b0 	ldrh	r0, [r4]
4001b334:	e3500000 	cmp	r0, #0
4001b338:	1a000007 	bne	4001b35c <CyU3PGpifLoad+0x40>
4001b33c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b340:	e3500000 	cmp	r0, #0
4001b344:	1a000004 	bne	4001b35c <CyU3PGpifLoad+0x40>
4001b348:	e1d401b4 	ldrh	r0, [r4, #20]
4001b34c:	e3500000 	cmp	r0, #0
4001b350:	1a000001 	bne	4001b35c <CyU3PGpifLoad+0x40>
4001b354:	e3a00040 	mov	r0, #64	; 0x40
4001b358:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b35c:	e59f0230 	ldr	r0, [pc, #560]	; 4001b594 <CyU3PGpifLoad+0x278>
4001b360:	e5900000 	ldr	r0, [r0]
4001b364:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b368:	1a000003 	bne	4001b37c <CyU3PGpifLoad+0x60>
4001b36c:	e59f0220 	ldr	r0, [pc, #544]	; 4001b594 <CyU3PGpifLoad+0x278>
4001b370:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b374:	e3100001 	tst	r0, #1
4001b378:	0a000001 	beq	4001b384 <CyU3PGpifLoad+0x68>
4001b37c:	e3a00043 	mov	r0, #67	; 0x43
4001b380:	eafffff4 	b	4001b358 <CyU3PGpifLoad+0x3c>
4001b384:	ebffe523 	bl	40014818 <CyFx3DevIsGpifConfigurable>
4001b388:	e3500000 	cmp	r0, #0
4001b38c:	1a000001 	bne	4001b398 <CyU3PGpifLoad+0x7c>
4001b390:	e3a00046 	mov	r0, #70	; 0x46
4001b394:	eaffffef 	b	4001b358 <CyU3PGpifLoad+0x3c>
4001b398:	ebffe514 	bl	400147f0 <CyFx3DevIsGpif32Supported>
4001b39c:	e3500000 	cmp	r0, #0
4001b3a0:	1a00000c 	bne	4001b3d8 <CyU3PGpifLoad+0xbc>
4001b3a4:	e1d401b4 	ldrh	r0, [r4, #20]
4001b3a8:	e3500002 	cmp	r0, #2
4001b3ac:	ba000009 	blt	4001b3d8 <CyU3PGpifLoad+0xbc>
4001b3b0:	e5940018 	ldr	r0, [r4, #24]
4001b3b4:	e3500000 	cmp	r0, #0
4001b3b8:	0a000006 	beq	4001b3d8 <CyU3PGpifLoad+0xbc>
4001b3bc:	e5940018 	ldr	r0, [r4, #24]
4001b3c0:	e5900004 	ldr	r0, [r0, #4]
4001b3c4:	e200000c 	and	r0, r0, #12
4001b3c8:	e3500004 	cmp	r0, #4
4001b3cc:	9a000001 	bls	4001b3d8 <CyU3PGpifLoad+0xbc>
4001b3d0:	e3a00046 	mov	r0, #70	; 0x46
4001b3d4:	eaffffdf 	b	4001b358 <CyU3PGpifLoad+0x3c>
4001b3d8:	e1d400b0 	ldrh	r0, [r4]
4001b3dc:	e3500000 	cmp	r0, #0
4001b3e0:	0a00003b 	beq	4001b4d4 <CyU3PGpifLoad+0x1b8>
4001b3e4:	e5940004 	ldr	r0, [r4, #4]
4001b3e8:	e3500000 	cmp	r0, #0
4001b3ec:	1a000001 	bne	4001b3f8 <CyU3PGpifLoad+0xdc>
4001b3f0:	e3a00040 	mov	r0, #64	; 0x40
4001b3f4:	eaffffd7 	b	4001b358 <CyU3PGpifLoad+0x3c>
4001b3f8:	e3a05000 	mov	r5, #0
4001b3fc:	ea000031 	b	4001b4c8 <CyU3PGpifLoad+0x1ac>
4001b400:	e5940008 	ldr	r0, [r4, #8]
4001b404:	e3500000 	cmp	r0, #0
4001b408:	0a000002 	beq	4001b418 <CyU3PGpifLoad+0xfc>
4001b40c:	e5940008 	ldr	r0, [r4, #8]
4001b410:	e7d00005 	ldrb	r0, [r0, r5]
4001b414:	ea000000 	b	4001b41c <CyU3PGpifLoad+0x100>
4001b418:	e1a00005 	mov	r0, r5
4001b41c:	e1a06800 	lsl	r6, r0, #16
4001b420:	e1a06826 	lsr	r6, r6, #16
4001b424:	e0861086 	add	r1, r6, r6, lsl #1
4001b428:	e5940004 	ldr	r0, [r4, #4]
4001b42c:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b430:	e59f1160 	ldr	r1, [pc, #352]	; 4001b598 <CyU3PGpifLoad+0x27c>
4001b434:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b438:	e0861086 	add	r1, r6, r6, lsl #1
4001b43c:	e5940004 	ldr	r0, [r4, #4]
4001b440:	e0800181 	add	r0, r0, r1, lsl #3
4001b444:	e5900004 	ldr	r0, [r0, #4]
4001b448:	e59f1148 	ldr	r1, [pc, #328]	; 4001b598 <CyU3PGpifLoad+0x27c>
4001b44c:	e0811205 	add	r1, r1, r5, lsl #4
4001b450:	e5810004 	str	r0, [r1, #4]
4001b454:	e0861086 	add	r1, r6, r6, lsl #1
4001b458:	e5940004 	ldr	r0, [r4, #4]
4001b45c:	e0800181 	add	r0, r0, r1, lsl #3
4001b460:	e5900008 	ldr	r0, [r0, #8]
4001b464:	e59f112c 	ldr	r1, [pc, #300]	; 4001b598 <CyU3PGpifLoad+0x27c>
4001b468:	e0811205 	add	r1, r1, r5, lsl #4
4001b46c:	e5810008 	str	r0, [r1, #8]
4001b470:	e0861086 	add	r1, r6, r6, lsl #1
4001b474:	e5940004 	ldr	r0, [r4, #4]
4001b478:	e0800181 	add	r0, r0, r1, lsl #3
4001b47c:	e590000c 	ldr	r0, [r0, #12]
4001b480:	e59f1114 	ldr	r1, [pc, #276]	; 4001b59c <CyU3PGpifLoad+0x280>
4001b484:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b488:	e0861086 	add	r1, r6, r6, lsl #1
4001b48c:	e5940004 	ldr	r0, [r4, #4]
4001b490:	e0800181 	add	r0, r0, r1, lsl #3
4001b494:	e5900010 	ldr	r0, [r0, #16]
4001b498:	e59f10fc 	ldr	r1, [pc, #252]	; 4001b59c <CyU3PGpifLoad+0x280>
4001b49c:	e0811205 	add	r1, r1, r5, lsl #4
4001b4a0:	e5810004 	str	r0, [r1, #4]
4001b4a4:	e0861086 	add	r1, r6, r6, lsl #1
4001b4a8:	e5940004 	ldr	r0, [r4, #4]
4001b4ac:	e0800181 	add	r0, r0, r1, lsl #3
4001b4b0:	e5900014 	ldr	r0, [r0, #20]
4001b4b4:	e59f10e0 	ldr	r1, [pc, #224]	; 4001b59c <CyU3PGpifLoad+0x280>
4001b4b8:	e0811205 	add	r1, r1, r5, lsl #4
4001b4bc:	e5810008 	str	r0, [r1, #8]
4001b4c0:	e2850001 	add	r0, r5, #1
4001b4c4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b4c8:	e1d400b0 	ldrh	r0, [r4]
4001b4cc:	e1500005 	cmp	r0, r5
4001b4d0:	caffffca 	bgt	4001b400 <CyU3PGpifLoad+0xe4>
4001b4d4:	e1d400bc 	ldrh	r0, [r4, #12]
4001b4d8:	e3500000 	cmp	r0, #0
4001b4dc:	0a000013 	beq	4001b530 <CyU3PGpifLoad+0x214>
4001b4e0:	e5940010 	ldr	r0, [r4, #16]
4001b4e4:	e3500000 	cmp	r0, #0
4001b4e8:	0a000002 	beq	4001b4f8 <CyU3PGpifLoad+0x1dc>
4001b4ec:	e1d400bc 	ldrh	r0, [r4, #12]
4001b4f0:	e3500020 	cmp	r0, #32
4001b4f4:	da000001 	ble	4001b500 <CyU3PGpifLoad+0x1e4>
4001b4f8:	e3a00040 	mov	r0, #64	; 0x40
4001b4fc:	eaffff95 	b	4001b358 <CyU3PGpifLoad+0x3c>
4001b500:	e3a05000 	mov	r5, #0
4001b504:	ea000006 	b	4001b524 <CyU3PGpifLoad+0x208>
4001b508:	e5940010 	ldr	r0, [r4, #16]
4001b50c:	e0800085 	add	r0, r0, r5, lsl #1
4001b510:	e1d000b0 	ldrh	r0, [r0]
4001b514:	e59f1084 	ldr	r1, [pc, #132]	; 4001b5a0 <CyU3PGpifLoad+0x284>
4001b518:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b51c:	e2850001 	add	r0, r5, #1
4001b520:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b524:	e1d400bc 	ldrh	r0, [r4, #12]
4001b528:	e1500005 	cmp	r0, r5
4001b52c:	cafffff5 	bgt	4001b508 <CyU3PGpifLoad+0x1ec>
4001b530:	e1d401b4 	ldrh	r0, [r4, #20]
4001b534:	e3500000 	cmp	r0, #0
4001b538:	0a000012 	beq	4001b588 <CyU3PGpifLoad+0x26c>
4001b53c:	e5940018 	ldr	r0, [r4, #24]
4001b540:	e3500000 	cmp	r0, #0
4001b544:	1a000001 	bne	4001b550 <CyU3PGpifLoad+0x234>
4001b548:	e3a00040 	mov	r0, #64	; 0x40
4001b54c:	eaffff81 	b	4001b358 <CyU3PGpifLoad+0x3c>
4001b550:	e3a05001 	mov	r5, #1
4001b554:	ea000004 	b	4001b56c <CyU3PGpifLoad+0x250>
4001b558:	e5940018 	ldr	r0, [r4, #24]
4001b55c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001b560:	e4870004 	str	r0, [r7], #4
4001b564:	e2850001 	add	r0, r5, #1
4001b568:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b56c:	e1d401b4 	ldrh	r0, [r4, #20]
4001b570:	e1500005 	cmp	r0, r5
4001b574:	cafffff7 	bgt	4001b558 <CyU3PGpifLoad+0x23c>
4001b578:	e5940018 	ldr	r0, [r4, #24]
4001b57c:	e5900000 	ldr	r0, [r0]
4001b580:	e59f100c 	ldr	r1, [pc, #12]	; 4001b594 <CyU3PGpifLoad+0x278>
4001b584:	e5810000 	str	r0, [r1]
4001b588:	e3a00000 	mov	r0, #0
4001b58c:	eaffff71 	b	4001b358 <CyU3PGpifLoad+0x3c>
4001b590:	e0014004 	.word	0xe0014004
4001b594:	e0014000 	.word	0xe0014000
4001b598:	e0015000 	.word	0xe0015000
4001b59c:	e0016000 	.word	0xe0016000
4001b5a0:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001b5a4 <CyU3PGpifRegisterCallback>:
4001b5a4:	e59f1004 	ldr	r1, [pc, #4]	; 4001b5b0 <CyU3PGpifRegisterCallback+0xc>
4001b5a8:	e5810000 	str	r0, [r1]
4001b5ac:	e12fff1e 	bx	lr
4001b5b0:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PGpifSMStart:

4001b5b4 <CyU3PGpifSMStart>:
4001b5b4:	e92d4010 	push	{r4, lr}
4001b5b8:	e1a02000 	mov	r2, r0
4001b5bc:	e59f012c 	ldr	r0, [pc, #300]	; 4001b6f0 <CyU3PGpifSMStart+0x13c>
4001b5c0:	e5900000 	ldr	r0, [r0]
4001b5c4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b5c8:	0a000004 	beq	4001b5e0 <CyU3PGpifSMStart+0x2c>
4001b5cc:	e59f0120 	ldr	r0, [pc, #288]	; 4001b6f4 <CyU3PGpifSMStart+0x140>
4001b5d0:	e0800202 	add	r0, r0, r2, lsl #4
4001b5d4:	e5900008 	ldr	r0, [r0, #8]
4001b5d8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b5dc:	1a000001 	bne	4001b5e8 <CyU3PGpifSMStart+0x34>
4001b5e0:	e3a00044 	mov	r0, #68	; 0x44
4001b5e4:	e8bd8010 	pop	{r4, pc}
4001b5e8:	e59f0100 	ldr	r0, [pc, #256]	; 4001b6f0 <CyU3PGpifSMStart+0x13c>
4001b5ec:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b5f0:	e3100001 	tst	r0, #1
4001b5f4:	0a000001 	beq	4001b600 <CyU3PGpifSMStart+0x4c>
4001b5f8:	e3a00043 	mov	r0, #67	; 0x43
4001b5fc:	eafffff8 	b	4001b5e4 <CyU3PGpifSMStart+0x30>
4001b600:	e59f00e8 	ldr	r0, [pc, #232]	; 4001b6f0 <CyU3PGpifSMStart+0x13c>
4001b604:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b608:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b60c:	e1800801 	orr	r0, r0, r1, lsl #16
4001b610:	e3800001 	orr	r0, r0, #1
4001b614:	e59f40d4 	ldr	r4, [pc, #212]	; 4001b6f0 <CyU3PGpifSMStart+0x13c>
4001b618:	e5840118 	str	r0, [r4, #280]	; 0x118
4001b61c:	e1a00004 	mov	r0, r4
4001b620:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001b624:	e59f00cc 	ldr	r0, [pc, #204]	; 4001b6f8 <CyU3PGpifSMStart+0x144>
4001b628:	e000000e 	and	r0, r0, lr
4001b62c:	e180e802 	orr	lr, r0, r2, lsl #16
4001b630:	e1a00004 	mov	r0, r4
4001b634:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001b638:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001b63c:	e3800005 	orr	r0, r0, #5
4001b640:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b644:	e1a00004 	mov	r0, r4
4001b648:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001b64c:	e5900008 	ldr	r0, [r0, #8]
4001b650:	e2003007 	and	r3, r0, #7
4001b654:	e3530001 	cmp	r3, #1
4001b658:	0a000004 	beq	4001b670 <CyU3PGpifSMStart+0xbc>
4001b65c:	e3530002 	cmp	r3, #2
4001b660:	0a00000b 	beq	4001b694 <CyU3PGpifSMStart+0xe0>
4001b664:	e3530003 	cmp	r3, #3
4001b668:	1a00001b 	bne	4001b6dc <CyU3PGpifSMStart+0x128>
4001b66c:	ea000011 	b	4001b6b8 <CyU3PGpifSMStart+0x104>
4001b670:	e1a00000 	nop			; (mov r0, r0)
4001b674:	e59f0080 	ldr	r0, [pc, #128]	; 4001b6fc <CyU3PGpifSMStart+0x148>
4001b678:	e1ce0000 	bic	r0, lr, r0
4001b67c:	e3800005 	orr	r0, r0, #5
4001b680:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001b684:	e1800424 	orr	r0, r0, r4, lsr #8
4001b688:	e59f4060 	ldr	r4, [pc, #96]	; 4001b6f0 <CyU3PGpifSMStart+0x13c>
4001b68c:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b690:	ea000013 	b	4001b6e4 <CyU3PGpifSMStart+0x130>
4001b694:	e1a00000 	nop			; (mov r0, r0)
4001b698:	e59f0060 	ldr	r0, [pc, #96]	; 4001b700 <CyU3PGpifSMStart+0x14c>
4001b69c:	e1ce0000 	bic	r0, lr, r0
4001b6a0:	e3800005 	orr	r0, r0, #5
4001b6a4:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001b6a8:	e1800424 	orr	r0, r0, r4, lsr #8
4001b6ac:	e59f403c 	ldr	r4, [pc, #60]	; 4001b6f0 <CyU3PGpifSMStart+0x13c>
4001b6b0:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b6b4:	ea00000a 	b	4001b6e4 <CyU3PGpifSMStart+0x130>
4001b6b8:	e1a00000 	nop			; (mov r0, r0)
4001b6bc:	e59f0040 	ldr	r0, [pc, #64]	; 4001b704 <CyU3PGpifSMStart+0x150>
4001b6c0:	e1ce0000 	bic	r0, lr, r0
4001b6c4:	e3800005 	orr	r0, r0, #5
4001b6c8:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001b6cc:	e1800424 	orr	r0, r0, r4, lsr #8
4001b6d0:	e59f4018 	ldr	r4, [pc, #24]	; 4001b6f0 <CyU3PGpifSMStart+0x13c>
4001b6d4:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b6d8:	ea000001 	b	4001b6e4 <CyU3PGpifSMStart+0x130>
4001b6dc:	e1a00000 	nop			; (mov r0, r0)
4001b6e0:	e1a00000 	nop			; (mov r0, r0)
4001b6e4:	e1a00000 	nop			; (mov r0, r0)
4001b6e8:	e3a00000 	mov	r0, #0
4001b6ec:	eaffffbc 	b	4001b5e4 <CyU3PGpifSMStart+0x30>
4001b6f0:	e0014000 	.word	0xe0014000
4001b6f4:	e0015000 	.word	0xe0015000
4001b6f8:	ff00003a 	.word	0xff00003a
4001b6fc:	0080ffc5 	.word	0x0080ffc5
4001b700:	00c0ffc5 	.word	0x00c0ffc5
4001b704:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001b708 <CyU3PGpifSMSwitch>:
4001b708:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b70c:	e1a0c000 	mov	ip, r0
4001b710:	e59de018 	ldr	lr, [sp, #24]
4001b714:	e3a04000 	mov	r4, #0
4001b718:	e3510c01 	cmp	r1, #256	; 0x100
4001b71c:	ba000001 	blt	4001b728 <CyU3PGpifSMSwitch+0x20>
4001b720:	e3a00040 	mov	r0, #64	; 0x40
4001b724:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b728:	e59f0150 	ldr	r0, [pc, #336]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b72c:	e5900000 	ldr	r0, [r0]
4001b730:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b734:	1a000001 	bne	4001b740 <CyU3PGpifSMSwitch+0x38>
4001b738:	e3a00044 	mov	r0, #68	; 0x44
4001b73c:	eafffff8 	b	4001b724 <CyU3PGpifSMSwitch+0x1c>
4001b740:	e59f0138 	ldr	r0, [pc, #312]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b744:	e5900008 	ldr	r0, [r0, #8]
4001b748:	e2006007 	and	r6, r0, #7
4001b74c:	e59f012c 	ldr	r0, [pc, #300]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b750:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b754:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b758:	e1800803 	orr	r0, r0, r3, lsl #16
4001b75c:	e3800001 	orr	r0, r0, #1
4001b760:	e59f8118 	ldr	r8, [pc, #280]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b764:	e5880118 	str	r0, [r8, #280]	; 0x118
4001b768:	e3a00001 	mov	r0, #1
4001b76c:	e1804801 	orr	r4, r0, r1, lsl #16
4001b770:	e35c0c01 	cmp	ip, #256	; 0x100
4001b774:	aa000012 	bge	4001b7c4 <CyU3PGpifSMSwitch+0xbc>
4001b778:	e1c80000 	bic	r0, r8, r0
4001b77c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b780:	e1a05c20 	lsr	r5, r0, #24
4001b784:	e59f00f8 	ldr	r0, [pc, #248]	; 4001b884 <CyU3PGpifSMSwitch+0x17c>
4001b788:	e7d00006 	ldrb	r0, [r0, r6]
4001b78c:	e0000005 	and	r0, r0, r5
4001b790:	e59f80ec 	ldr	r8, [pc, #236]	; 4001b884 <CyU3PGpifSMSwitch+0x17c>
4001b794:	e7d88006 	ldrb	r8, [r8, r6]
4001b798:	e008800c 	and	r8, r8, ip
4001b79c:	e1500008 	cmp	r0, r8
4001b7a0:	1a000001 	bne	4001b7ac <CyU3PGpifSMSwitch+0xa4>
4001b7a4:	e3844004 	orr	r4, r4, #4
4001b7a8:	ea000006 	b	4001b7c8 <CyU3PGpifSMSwitch+0xc0>
4001b7ac:	e3a00008 	mov	r0, #8
4001b7b0:	e180040c 	orr	r0, r0, ip, lsl #8
4001b7b4:	e1844000 	orr	r4, r4, r0
4001b7b8:	e59f00c0 	ldr	r0, [pc, #192]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b7bc:	e580e120 	str	lr, [r0, #288]	; 0x120
4001b7c0:	ea000000 	b	4001b7c8 <CyU3PGpifSMSwitch+0xc0>
4001b7c4:	e3844004 	orr	r4, r4, #4
4001b7c8:	e3520c01 	cmp	r2, #256	; 0x100
4001b7cc:	aa000007 	bge	4001b7f0 <CyU3PGpifSMSwitch+0xe8>
4001b7d0:	e3a00002 	mov	r0, #2
4001b7d4:	e1800c02 	orr	r0, r0, r2, lsl #24
4001b7d8:	e1844000 	orr	r4, r4, r0
4001b7dc:	e59f009c 	ldr	r0, [pc, #156]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b7e0:	e5900018 	ldr	r0, [r0, #24]
4001b7e4:	e3800001 	orr	r0, r0, #1
4001b7e8:	e59f8090 	ldr	r8, [pc, #144]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b7ec:	e5880018 	str	r0, [r8, #24]
4001b7f0:	e59f0088 	ldr	r0, [pc, #136]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b7f4:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001b7f8:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001b7fc:	e3560001 	cmp	r6, #1
4001b800:	0a000004 	beq	4001b818 <CyU3PGpifSMSwitch+0x110>
4001b804:	e3560002 	cmp	r6, #2
4001b808:	0a000009 	beq	4001b834 <CyU3PGpifSMSwitch+0x12c>
4001b80c:	e3560003 	cmp	r6, #3
4001b810:	1a000015 	bne	4001b86c <CyU3PGpifSMSwitch+0x164>
4001b814:	ea00000d 	b	4001b850 <CyU3PGpifSMSwitch+0x148>
4001b818:	e1a00000 	nop			; (mov r0, r0)
4001b81c:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001b820:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001b824:	e1800428 	orr	r0, r0, r8, lsr #8
4001b828:	e59f8050 	ldr	r8, [pc, #80]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b82c:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b830:	ea00000f 	b	4001b874 <CyU3PGpifSMSwitch+0x16c>
4001b834:	e1a00000 	nop			; (mov r0, r0)
4001b838:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001b83c:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001b840:	e1800428 	orr	r0, r0, r8, lsr #8
4001b844:	e59f8034 	ldr	r8, [pc, #52]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b848:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b84c:	ea000008 	b	4001b874 <CyU3PGpifSMSwitch+0x16c>
4001b850:	e1a00000 	nop			; (mov r0, r0)
4001b854:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001b858:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001b85c:	e1800428 	orr	r0, r0, r8, lsr #8
4001b860:	e59f8018 	ldr	r8, [pc, #24]	; 4001b880 <CyU3PGpifSMSwitch+0x178>
4001b864:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b868:	ea000001 	b	4001b874 <CyU3PGpifSMSwitch+0x16c>
4001b86c:	e1a00000 	nop			; (mov r0, r0)
4001b870:	e1a00000 	nop			; (mov r0, r0)
4001b874:	e1a00000 	nop			; (mov r0, r0)
4001b878:	e3a00000 	mov	r0, #0
4001b87c:	eaffffa8 	b	4001b724 <CyU3PGpifSMSwitch+0x1c>
4001b880:	e0014000 	.word	0xe0014000
4001b884:	40011d50 	.word	0x40011d50

Disassembly of section i.CyU3PConnectState:

4001b888 <CyU3PConnectState>:
4001b888:	e92d4070 	push	{r4, r5, r6, lr}
4001b88c:	e1a04000 	mov	r4, r0
4001b890:	e1a06001 	mov	r6, r1
4001b894:	e59f0234 	ldr	r0, [pc, #564]	; 4001bad0 <CyU3PConnectState+0x248>
4001b898:	e5d00008 	ldrb	r0, [r0, #8]
4001b89c:	e3500000 	cmp	r0, #0
4001b8a0:	1a000001 	bne	4001b8ac <CyU3PConnectState+0x24>
4001b8a4:	e3a00042 	mov	r0, #66	; 0x42
4001b8a8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b8ac:	ebffe41a 	bl	4001491c <CyFx3DevIsUsb3Supported>
4001b8b0:	e3500000 	cmp	r0, #0
4001b8b4:	1a000000 	bne	4001b8bc <CyU3PConnectState+0x34>
4001b8b8:	e3a06000 	mov	r6, #0
4001b8bc:	e3a05000 	mov	r5, #0
4001b8c0:	e3e01000 	mvn	r1, #0
4001b8c4:	e59f0208 	ldr	r0, [pc, #520]	; 4001bad4 <CyU3PConnectState+0x24c>
4001b8c8:	ebffb9a5 	bl	40009f64 <_txe_mutex_get>
4001b8cc:	e3540000 	cmp	r4, #0
4001b8d0:	1a00001a 	bne	4001b940 <CyU3PConnectState+0xb8>
4001b8d4:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bad0 <CyU3PConnectState+0x248>
4001b8d8:	e5d00008 	ldrb	r0, [r0, #8]
4001b8dc:	e3500004 	cmp	r0, #4
4001b8e0:	ba000012 	blt	4001b930 <CyU3PConnectState+0xa8>
4001b8e4:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bad0 <CyU3PConnectState+0x248>
4001b8e8:	e5d00008 	ldrb	r0, [r0, #8]
4001b8ec:	e3500005 	cmp	r0, #5
4001b8f0:	ba000008 	blt	4001b918 <CyU3PConnectState+0x90>
4001b8f4:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bad0 <CyU3PConnectState+0x248>
4001b8f8:	e5d11009 	ldrb	r1, [r1, #9]
4001b8fc:	e3510003 	cmp	r1, #3
4001b900:	1a000001 	bne	4001b90c <CyU3PConnectState+0x84>
4001b904:	e3a01001 	mov	r1, #1
4001b908:	ea000000 	b	4001b910 <CyU3PConnectState+0x88>
4001b90c:	e3a01000 	mov	r1, #0
4001b910:	e1a00001 	mov	r0, r1
4001b914:	eb00050f 	bl	4001cd58 <CyU3PUsbPhyDisable>
4001b918:	e3a00003 	mov	r0, #3
4001b91c:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bad0 <CyU3PConnectState+0x248>
4001b920:	e5c10008 	strb	r0, [r1, #8]
4001b924:	e3a00000 	mov	r0, #0
4001b928:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001b92c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001b930:	e3a00000 	mov	r0, #0
4001b934:	e59f1194 	ldr	r1, [pc, #404]	; 4001bad0 <CyU3PConnectState+0x248>
4001b938:	e5810044 	str	r0, [r1, #68]	; 0x44
4001b93c:	ea00005f 	b	4001bac0 <CyU3PConnectState+0x238>
4001b940:	e59f0188 	ldr	r0, [pc, #392]	; 4001bad0 <CyU3PConnectState+0x248>
4001b944:	e5d00008 	ldrb	r0, [r0, #8]
4001b948:	e3500003 	cmp	r0, #3
4001b94c:	0a00000b 	beq	4001b980 <CyU3PConnectState+0xf8>
4001b950:	e3500004 	cmp	r0, #4
4001b954:	0a000004 	beq	4001b96c <CyU3PConnectState+0xe4>
4001b958:	e3500005 	cmp	r0, #5
4001b95c:	0a000004 	beq	4001b974 <CyU3PConnectState+0xec>
4001b960:	e3500006 	cmp	r0, #6
4001b964:	1a000051 	bne	4001bab0 <CyU3PConnectState+0x228>
4001b968:	ea000002 	b	4001b978 <CyU3PConnectState+0xf0>
4001b96c:	e1a00000 	nop			; (mov r0, r0)
4001b970:	e1a00000 	nop			; (mov r0, r0)
4001b974:	e1a00000 	nop			; (mov r0, r0)
4001b978:	e3a05043 	mov	r5, #67	; 0x43
4001b97c:	ea00004e 	b	4001babc <CyU3PConnectState+0x234>
4001b980:	e1a00000 	nop			; (mov r0, r0)
4001b984:	e59f0144 	ldr	r0, [pc, #324]	; 4001bad0 <CyU3PConnectState+0x248>
4001b988:	e5d00007 	ldrb	r0, [r0, #7]
4001b98c:	e3500001 	cmp	r0, #1
4001b990:	0a00000f 	beq	4001b9d4 <CyU3PConnectState+0x14c>
4001b994:	e59f013c 	ldr	r0, [pc, #316]	; 4001bad8 <CyU3PConnectState+0x250>
4001b998:	e590001c 	ldr	r0, [r0, #28]
4001b99c:	e3500000 	cmp	r0, #0
4001b9a0:	0a000007 	beq	4001b9c4 <CyU3PConnectState+0x13c>
4001b9a4:	e59f012c 	ldr	r0, [pc, #300]	; 4001bad8 <CyU3PConnectState+0x250>
4001b9a8:	e5900014 	ldr	r0, [r0, #20]
4001b9ac:	e3500000 	cmp	r0, #0
4001b9b0:	0a000003 	beq	4001b9c4 <CyU3PConnectState+0x13c>
4001b9b4:	e59f011c 	ldr	r0, [pc, #284]	; 4001bad8 <CyU3PConnectState+0x250>
4001b9b8:	e5900018 	ldr	r0, [r0, #24]
4001b9bc:	e3500000 	cmp	r0, #0
4001b9c0:	1a000003 	bne	4001b9d4 <CyU3PConnectState+0x14c>
4001b9c4:	e59f0108 	ldr	r0, [pc, #264]	; 4001bad4 <CyU3PConnectState+0x24c>
4001b9c8:	ebffb99a 	bl	4000a038 <_txe_mutex_put>
4001b9cc:	e3a00044 	mov	r0, #68	; 0x44
4001b9d0:	eaffffb4 	b	4001b8a8 <CyU3PConnectState+0x20>
4001b9d4:	e3560000 	cmp	r6, #0
4001b9d8:	0a000007 	beq	4001b9fc <CyU3PConnectState+0x174>
4001b9dc:	e3a00000 	mov	r0, #0
4001b9e0:	e59f10f4 	ldr	r1, [pc, #244]	; 4001badc <CyU3PConnectState+0x254>
4001b9e4:	e5810014 	str	r0, [r1, #20]
4001b9e8:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bae0 <CyU3PConnectState+0x258>
4001b9ec:	e5810000 	str	r0, [r1]
4001b9f0:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bae4 <CyU3PConnectState+0x25c>
4001b9f4:	e5810000 	str	r0, [r1]
4001b9f8:	ea000007 	b	4001ba1c <CyU3PConnectState+0x194>
4001b9fc:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bad0 <CyU3PConnectState+0x248>
4001ba00:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001ba04:	e3500000 	cmp	r0, #0
4001ba08:	0a000003 	beq	4001ba1c <CyU3PConnectState+0x194>
4001ba0c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bad4 <CyU3PConnectState+0x24c>
4001ba10:	ebffb988 	bl	4000a038 <_txe_mutex_put>
4001ba14:	e3a000ff 	mov	r0, #255	; 0xff
4001ba18:	eaffffa2 	b	4001b8a8 <CyU3PConnectState+0x20>
4001ba1c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bad0 <CyU3PConnectState+0x248>
4001ba20:	e5806024 	str	r6, [r0, #36]	; 0x24
4001ba24:	e3a00000 	mov	r0, #0
4001ba28:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bad0 <CyU3PConnectState+0x248>
4001ba2c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001ba30:	e2810000 	add	r0, r1, #0
4001ba34:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001ba38:	e3500000 	cmp	r0, #0
4001ba3c:	0a000004 	beq	4001ba54 <CyU3PConnectState+0x1cc>
4001ba40:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bae8 <CyU3PConnectState+0x260>
4001ba44:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ba48:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001ba4c:	e1100001 	tst	r0, r1
4001ba50:	0a000012 	beq	4001baa0 <CyU3PConnectState+0x218>
4001ba54:	e3560000 	cmp	r6, #0
4001ba58:	0a000007 	beq	4001ba7c <CyU3PConnectState+0x1f4>
4001ba5c:	e3a00000 	mov	r0, #0
4001ba60:	e59f1068 	ldr	r1, [pc, #104]	; 4001bad0 <CyU3PConnectState+0x248>
4001ba64:	e5810054 	str	r0, [r1, #84]	; 0x54
4001ba68:	e3a00001 	mov	r0, #1
4001ba6c:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001ba70:	e3a00000 	mov	r0, #0
4001ba74:	e5810050 	str	r0, [r1, #80]	; 0x50
4001ba78:	ea000002 	b	4001ba88 <CyU3PConnectState+0x200>
4001ba7c:	e3a00000 	mov	r0, #0
4001ba80:	e59f1048 	ldr	r1, [pc, #72]	; 4001bad0 <CyU3PConnectState+0x248>
4001ba84:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001ba88:	e1a00006 	mov	r0, r6
4001ba8c:	eb000527 	bl	4001cf30 <CyU3PUsbPhyEnable>
4001ba90:	e3a00005 	mov	r0, #5
4001ba94:	e59f1034 	ldr	r1, [pc, #52]	; 4001bad0 <CyU3PConnectState+0x248>
4001ba98:	e5c10008 	strb	r0, [r1, #8]
4001ba9c:	ea000002 	b	4001baac <CyU3PConnectState+0x224>
4001baa0:	e3a00004 	mov	r0, #4
4001baa4:	e59f1024 	ldr	r1, [pc, #36]	; 4001bad0 <CyU3PConnectState+0x248>
4001baa8:	e5c10008 	strb	r0, [r1, #8]
4001baac:	ea000002 	b	4001babc <CyU3PConnectState+0x234>
4001bab0:	e1a00000 	nop			; (mov r0, r0)
4001bab4:	e3a05044 	mov	r5, #68	; 0x44
4001bab8:	e1a00000 	nop			; (mov r0, r0)
4001babc:	e1a00000 	nop			; (mov r0, r0)
4001bac0:	e59f000c 	ldr	r0, [pc, #12]	; 4001bad4 <CyU3PConnectState+0x24c>
4001bac4:	ebffb95b 	bl	4000a038 <_txe_mutex_put>
4001bac8:	e1a00005 	mov	r0, r5
4001bacc:	eaffff75 	b	4001b8a8 <CyU3PConnectState+0x20>
4001bad0:	40031d40 	.word	0x40031d40
4001bad4:	40031ee0 	.word	0x40031ee0
4001bad8:	40031f98 	.word	0x40031f98
4001badc:	e0033000 	.word	0xe0033000
4001bae0:	40030d84 	.word	0x40030d84
4001bae4:	40030d88 	.word	0x40030d88
4001bae8:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001baec <CyU3POtgGetMode>:
4001baec:	e59f0004 	ldr	r0, [pc, #4]	; 4001baf8 <CyU3POtgGetMode+0xc>
4001baf0:	e5d00000 	ldrb	r0, [r0]
4001baf4:	e12fff1e 	bx	lr
4001baf8:	40030d54 	.word	0x40030d54

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bafc <CyU3POtgIsDeviceMode>:
4001bafc:	e3a01000 	mov	r1, #0
4001bb00:	e59f00b4 	ldr	r0, [pc, #180]	; 4001bbbc <CyU3POtgIsDeviceMode+0xc0>
4001bb04:	e5d00000 	ldrb	r0, [r0]
4001bb08:	e3500000 	cmp	r0, #0
4001bb0c:	0a000003 	beq	4001bb20 <CyU3POtgIsDeviceMode+0x24>
4001bb10:	e59f00a4 	ldr	r0, [pc, #164]	; 4001bbbc <CyU3POtgIsDeviceMode+0xc0>
4001bb14:	e5d00000 	ldrb	r0, [r0]
4001bb18:	e3500002 	cmp	r0, #2
4001bb1c:	1a000024 	bne	4001bbb4 <CyU3POtgIsDeviceMode+0xb8>
4001bb20:	e59f0098 	ldr	r0, [pc, #152]	; 4001bbc0 <CyU3POtgIsDeviceMode+0xc4>
4001bb24:	e5d00000 	ldrb	r0, [r0]
4001bb28:	e3500000 	cmp	r0, #0
4001bb2c:	0a000006 	beq	4001bb4c <CyU3POtgIsDeviceMode+0x50>
4001bb30:	e3500002 	cmp	r0, #2
4001bb34:	0a00000c 	beq	4001bb6c <CyU3POtgIsDeviceMode+0x70>
4001bb38:	e3500004 	cmp	r0, #4
4001bb3c:	0a00000b 	beq	4001bb70 <CyU3POtgIsDeviceMode+0x74>
4001bb40:	e3500005 	cmp	r0, #5
4001bb44:	1a00000c 	bne	4001bb7c <CyU3POtgIsDeviceMode+0x80>
4001bb48:	ea000009 	b	4001bb74 <CyU3POtgIsDeviceMode+0x78>
4001bb4c:	e1a00000 	nop			; (mov r0, r0)
4001bb50:	e59f0064 	ldr	r0, [pc, #100]	; 4001bbbc <CyU3POtgIsDeviceMode+0xc0>
4001bb54:	e5d00000 	ldrb	r0, [r0]
4001bb58:	e3500002 	cmp	r0, #2
4001bb5c:	1a000001 	bne	4001bb68 <CyU3POtgIsDeviceMode+0x6c>
4001bb60:	e3a00000 	mov	r0, #0
4001bb64:	e12fff1e 	bx	lr
4001bb68:	e1a00000 	nop			; (mov r0, r0)
4001bb6c:	e1a00000 	nop			; (mov r0, r0)
4001bb70:	e1a00000 	nop			; (mov r0, r0)
4001bb74:	e3a01001 	mov	r1, #1
4001bb78:	ea000002 	b	4001bb88 <CyU3POtgIsDeviceMode+0x8c>
4001bb7c:	e1a00000 	nop			; (mov r0, r0)
4001bb80:	e3a01000 	mov	r1, #0
4001bb84:	e1a00000 	nop			; (mov r0, r0)
4001bb88:	e1a00000 	nop			; (mov r0, r0)
4001bb8c:	e59f0030 	ldr	r0, [pc, #48]	; 4001bbc4 <CyU3POtgIsDeviceMode+0xc8>
4001bb90:	e5900000 	ldr	r0, [r0]
4001bb94:	e3500000 	cmp	r0, #0
4001bb98:	0a000005 	beq	4001bbb4 <CyU3POtgIsDeviceMode+0xb8>
4001bb9c:	e3510000 	cmp	r1, #0
4001bba0:	1a000001 	bne	4001bbac <CyU3POtgIsDeviceMode+0xb0>
4001bba4:	e3a00001 	mov	r0, #1
4001bba8:	ea000000 	b	4001bbb0 <CyU3POtgIsDeviceMode+0xb4>
4001bbac:	e3a00000 	mov	r0, #0
4001bbb0:	e1a01000 	mov	r1, r0
4001bbb4:	e1a00001 	mov	r0, r1
4001bbb8:	eaffffe9 	b	4001bb64 <CyU3POtgIsDeviceMode+0x68>
4001bbbc:	40030d54 	.word	0x40030d54
4001bbc0:	40030d50 	.word	0x40030d50
4001bbc4:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3POtgIsHostMode:

4001bbc8 <CyU3POtgIsHostMode>:
4001bbc8:	e3a01000 	mov	r1, #0
4001bbcc:	e59f00a8 	ldr	r0, [pc, #168]	; 4001bc7c <CyU3POtgIsHostMode+0xb4>
4001bbd0:	e5d00000 	ldrb	r0, [r0]
4001bbd4:	e3500001 	cmp	r0, #1
4001bbd8:	0a000003 	beq	4001bbec <CyU3POtgIsHostMode+0x24>
4001bbdc:	e59f0098 	ldr	r0, [pc, #152]	; 4001bc7c <CyU3POtgIsHostMode+0xb4>
4001bbe0:	e5d00000 	ldrb	r0, [r0]
4001bbe4:	e3500002 	cmp	r0, #2
4001bbe8:	1a000021 	bne	4001bc74 <CyU3POtgIsHostMode+0xac>
4001bbec:	e59f008c 	ldr	r0, [pc, #140]	; 4001bc80 <CyU3POtgIsHostMode+0xb8>
4001bbf0:	e5d00000 	ldrb	r0, [r0]
4001bbf4:	e3500000 	cmp	r0, #0
4001bbf8:	0a000004 	beq	4001bc10 <CyU3POtgIsHostMode+0x48>
4001bbfc:	e3500001 	cmp	r0, #1
4001bc00:	0a00000a 	beq	4001bc30 <CyU3POtgIsHostMode+0x68>
4001bc04:	e3500003 	cmp	r0, #3
4001bc08:	1a00000b 	bne	4001bc3c <CyU3POtgIsHostMode+0x74>
4001bc0c:	ea000008 	b	4001bc34 <CyU3POtgIsHostMode+0x6c>
4001bc10:	e1a00000 	nop			; (mov r0, r0)
4001bc14:	e59f0060 	ldr	r0, [pc, #96]	; 4001bc7c <CyU3POtgIsHostMode+0xb4>
4001bc18:	e5d00000 	ldrb	r0, [r0]
4001bc1c:	e3500002 	cmp	r0, #2
4001bc20:	1a000001 	bne	4001bc2c <CyU3POtgIsHostMode+0x64>
4001bc24:	e3a00000 	mov	r0, #0
4001bc28:	e12fff1e 	bx	lr
4001bc2c:	e1a00000 	nop			; (mov r0, r0)
4001bc30:	e1a00000 	nop			; (mov r0, r0)
4001bc34:	e3a01001 	mov	r1, #1
4001bc38:	ea000002 	b	4001bc48 <CyU3POtgIsHostMode+0x80>
4001bc3c:	e1a00000 	nop			; (mov r0, r0)
4001bc40:	e3a01000 	mov	r1, #0
4001bc44:	e1a00000 	nop			; (mov r0, r0)
4001bc48:	e1a00000 	nop			; (mov r0, r0)
4001bc4c:	e59f0030 	ldr	r0, [pc, #48]	; 4001bc84 <CyU3POtgIsHostMode+0xbc>
4001bc50:	e5900000 	ldr	r0, [r0]
4001bc54:	e3500000 	cmp	r0, #0
4001bc58:	0a000005 	beq	4001bc74 <CyU3POtgIsHostMode+0xac>
4001bc5c:	e3510000 	cmp	r1, #0
4001bc60:	1a000001 	bne	4001bc6c <CyU3POtgIsHostMode+0xa4>
4001bc64:	e3a00001 	mov	r0, #1
4001bc68:	ea000000 	b	4001bc70 <CyU3POtgIsHostMode+0xa8>
4001bc6c:	e3a00000 	mov	r0, #0
4001bc70:	e1a01000 	mov	r1, r0
4001bc74:	e1a00001 	mov	r0, r1
4001bc78:	eaffffea 	b	4001bc28 <CyU3POtgIsHostMode+0x60>
4001bc7c:	40030d54 	.word	0x40030d54
4001bc80:	40030d50 	.word	0x40030d50
4001bc84:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3POtgIsStarted:

4001bc88 <CyU3POtgIsStarted>:
4001bc88:	e59f0004 	ldr	r0, [pc, #4]	; 4001bc94 <CyU3POtgIsStarted+0xc>
4001bc8c:	e5900000 	ldr	r0, [r0]
4001bc90:	e12fff1e 	bx	lr
4001bc94:	40030d48 	.word	0x40030d48

Disassembly of section i.CyU3PSetEpConfig:

4001bc98 <CyU3PSetEpConfig>:
4001bc98:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001bc9c:	e1a04000 	mov	r4, r0
4001bca0:	e1a05001 	mov	r5, r1
4001bca4:	e204607f 	and	r6, r4, #127	; 0x7f
4001bca8:	e3a07000 	mov	r7, #0
4001bcac:	e3a08000 	mov	r8, #0
4001bcb0:	e3a09000 	mov	r9, #0
4001bcb4:	e3a0a000 	mov	sl, #0
4001bcb8:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c248 <CyU3PSetEpConfig+0x5b0>
4001bcbc:	e5d00008 	ldrb	r0, [r0, #8]
4001bcc0:	e3500000 	cmp	r0, #0
4001bcc4:	1a000001 	bne	4001bcd0 <CyU3PSetEpConfig+0x38>
4001bcc8:	e3a00042 	mov	r0, #66	; 0x42
4001bccc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001bcd0:	e3550000 	cmp	r5, #0
4001bcd4:	1a000001 	bne	4001bce0 <CyU3PSetEpConfig+0x48>
4001bcd8:	e3a00041 	mov	r0, #65	; 0x41
4001bcdc:	eafffffa 	b	4001bccc <CyU3PSetEpConfig+0x34>
4001bce0:	e5950000 	ldr	r0, [r5]
4001bce4:	e3500000 	cmp	r0, #0
4001bce8:	0a000074 	beq	4001bec0 <CyU3PSetEpConfig+0x228>
4001bcec:	e1d500b8 	ldrh	r0, [r5, #8]
4001bcf0:	e3500b01 	cmp	r0, #1024	; 0x400
4001bcf4:	ca000001 	bgt	4001bd00 <CyU3PSetEpConfig+0x68>
4001bcf8:	e356000f 	cmp	r6, #15
4001bcfc:	da000001 	ble	4001bd08 <CyU3PSetEpConfig+0x70>
4001bd00:	e3a00040 	mov	r0, #64	; 0x40
4001bd04:	eafffff0 	b	4001bccc <CyU3PSetEpConfig+0x34>
4001bd08:	e5d50004 	ldrb	r0, [r5, #4]
4001bd0c:	e3500000 	cmp	r0, #0
4001bd10:	0a000002 	beq	4001bd20 <CyU3PSetEpConfig+0x88>
4001bd14:	e5d50004 	ldrb	r0, [r5, #4]
4001bd18:	e3500003 	cmp	r0, #3
4001bd1c:	da000001 	ble	4001bd28 <CyU3PSetEpConfig+0x90>
4001bd20:	e3a00040 	mov	r0, #64	; 0x40
4001bd24:	eaffffe8 	b	4001bccc <CyU3PSetEpConfig+0x34>
4001bd28:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd2c:	e3500010 	cmp	r0, #16
4001bd30:	ca000008 	bgt	4001bd58 <CyU3PSetEpConfig+0xc0>
4001bd34:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd38:	e3500001 	cmp	r0, #1
4001bd3c:	da000007 	ble	4001bd60 <CyU3PSetEpConfig+0xc8>
4001bd40:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd44:	e3500b01 	cmp	r0, #1024	; 0x400
4001bd48:	aa000004 	bge	4001bd60 <CyU3PSetEpConfig+0xc8>
4001bd4c:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd50:	e3500000 	cmp	r0, #0
4001bd54:	0a000001 	beq	4001bd60 <CyU3PSetEpConfig+0xc8>
4001bd58:	e3a00040 	mov	r0, #64	; 0x40
4001bd5c:	eaffffda 	b	4001bccc <CyU3PSetEpConfig+0x34>
4001bd60:	e5d50004 	ldrb	r0, [r5, #4]
4001bd64:	e1a00f00 	lsl	r0, r0, #30
4001bd68:	e1a08a20 	lsr	r8, r0, #20
4001bd6c:	e5d50004 	ldrb	r0, [r5, #4]
4001bd70:	e2000003 	and	r0, r0, #3
4001bd74:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c24c <CyU3PSetEpConfig+0x5b4>
4001bd78:	e7d1a000 	ldrb	sl, [r1, r0]
4001bd7c:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd80:	e3500000 	cmp	r0, #0
4001bd84:	0a000004 	beq	4001bd9c <CyU3PSetEpConfig+0x104>
4001bd88:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd8c:	e2400001 	sub	r0, r0, #1
4001bd90:	e200000f 	and	r0, r0, #15
4001bd94:	e18aa400 	orr	sl, sl, r0, lsl #8
4001bd98:	ea000001 	b	4001bda4 <CyU3PSetEpConfig+0x10c>
4001bd9c:	e3a00001 	mov	r0, #1
4001bda0:	e5c5000a 	strb	r0, [r5, #10]
4001bda4:	e5d50004 	ldrb	r0, [r5, #4]
4001bda8:	e3500001 	cmp	r0, #1
4001bdac:	1a000013 	bne	4001be00 <CyU3PSetEpConfig+0x168>
4001bdb0:	e5950000 	ldr	r0, [r5]
4001bdb4:	e3500000 	cmp	r0, #0
4001bdb8:	0a000010 	beq	4001be00 <CyU3PSetEpConfig+0x168>
4001bdbc:	e5d5000b 	ldrb	r0, [r5, #11]
4001bdc0:	e2000003 	and	r0, r0, #3
4001bdc4:	e1888600 	orr	r8, r8, r0, lsl #12
4001bdc8:	e5d5000a 	ldrb	r0, [r5, #10]
4001bdcc:	e5d5100b 	ldrb	r1, [r5, #11]
4001bdd0:	e1600180 	smulbb	r0, r0, r1
4001bdd4:	e200003f 	and	r0, r0, #63	; 0x3f
4001bdd8:	e18aa100 	orr	sl, sl, r0, lsl #2
4001bddc:	e5d5000b 	ldrb	r0, [r5, #11]
4001bde0:	e3500001 	cmp	r0, #1
4001bde4:	da000005 	ble	4001be00 <CyU3PSetEpConfig+0x168>
4001bde8:	e3560003 	cmp	r6, #3
4001bdec:	0a000003 	beq	4001be00 <CyU3PSetEpConfig+0x168>
4001bdf0:	e3560007 	cmp	r6, #7
4001bdf4:	0a000001 	beq	4001be00 <CyU3PSetEpConfig+0x168>
4001bdf8:	e3a0004d 	mov	r0, #77	; 0x4d
4001bdfc:	eaffffb2 	b	4001bccc <CyU3PSetEpConfig+0x34>
4001be00:	e1d500b8 	ldrh	r0, [r5, #8]
4001be04:	e3500000 	cmp	r0, #0
4001be08:	0a000004 	beq	4001be20 <CyU3PSetEpConfig+0x188>
4001be0c:	e1d500b8 	ldrh	r0, [r5, #8]
4001be10:	e3500b01 	cmp	r0, #1024	; 0x400
4001be14:	ca000001 	bgt	4001be20 <CyU3PSetEpConfig+0x188>
4001be18:	e1d500b8 	ldrh	r0, [r5, #8]
4001be1c:	ea000000 	b	4001be24 <CyU3PSetEpConfig+0x18c>
4001be20:	e3a00b01 	mov	r0, #1024	; 0x400
4001be24:	e1a07800 	lsl	r7, r0, #16
4001be28:	e1a07827 	lsr	r7, r7, #16
4001be2c:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c248 <CyU3PSetEpConfig+0x5b0>
4001be30:	e5d00008 	ldrb	r0, [r0, #8]
4001be34:	e3500005 	cmp	r0, #5
4001be38:	da00001e 	ble	4001beb8 <CyU3PSetEpConfig+0x220>
4001be3c:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c248 <CyU3PSetEpConfig+0x5b0>
4001be40:	e5d00009 	ldrb	r0, [r0, #9]
4001be44:	e3500001 	cmp	r0, #1
4001be48:	0a000008 	beq	4001be70 <CyU3PSetEpConfig+0x1d8>
4001be4c:	e3500002 	cmp	r0, #2
4001be50:	1a000015 	bne	4001beac <CyU3PSetEpConfig+0x214>
4001be54:	e5d50004 	ldrb	r0, [r5, #4]
4001be58:	e3500002 	cmp	r0, #2
4001be5c:	1a000002 	bne	4001be6c <CyU3PSetEpConfig+0x1d4>
4001be60:	e3570c02 	cmp	r7, #512	; 0x200
4001be64:	da000000 	ble	4001be6c <CyU3PSetEpConfig+0x1d4>
4001be68:	e3a07c02 	mov	r7, #512	; 0x200
4001be6c:	ea000010 	b	4001beb4 <CyU3PSetEpConfig+0x21c>
4001be70:	e1a00000 	nop			; (mov r0, r0)
4001be74:	e5d50004 	ldrb	r0, [r5, #4]
4001be78:	e3500001 	cmp	r0, #1
4001be7c:	1a000003 	bne	4001be90 <CyU3PSetEpConfig+0x1f8>
4001be80:	e3570b01 	cmp	r7, #1024	; 0x400
4001be84:	ba000001 	blt	4001be90 <CyU3PSetEpConfig+0x1f8>
4001be88:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c250 <CyU3PSetEpConfig+0x5b8>
4001be8c:	ea000005 	b	4001bea8 <CyU3PSetEpConfig+0x210>
4001be90:	e5d50004 	ldrb	r0, [r5, #4]
4001be94:	e3500001 	cmp	r0, #1
4001be98:	0a000002 	beq	4001bea8 <CyU3PSetEpConfig+0x210>
4001be9c:	e3570040 	cmp	r7, #64	; 0x40
4001bea0:	da000000 	ble	4001bea8 <CyU3PSetEpConfig+0x210>
4001bea4:	e3a07040 	mov	r7, #64	; 0x40
4001bea8:	ea000001 	b	4001beb4 <CyU3PSetEpConfig+0x21c>
4001beac:	e1a00000 	nop			; (mov r0, r0)
4001beb0:	e1a00000 	nop			; (mov r0, r0)
4001beb4:	e1a00000 	nop			; (mov r0, r0)
4001beb8:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001bebc:	e1888000 	orr	r8, r8, r0
4001bec0:	e3e01000 	mvn	r1, #0
4001bec4:	e59f0388 	ldr	r0, [pc, #904]	; 4001c254 <CyU3PSetEpConfig+0x5bc>
4001bec8:	ebffb825 	bl	40009f64 <_txe_mutex_get>
4001becc:	e3140080 	tst	r4, #128	; 0x80
4001bed0:	0a000062 	beq	4001c060 <CyU3PSetEpConfig+0x3c8>
4001bed4:	e5950000 	ldr	r0, [r5]
4001bed8:	e3500000 	cmp	r0, #0
4001bedc:	1a00001d 	bne	4001bf58 <CyU3PSetEpConfig+0x2c0>
4001bee0:	e59f0370 	ldr	r0, [pc, #880]	; 4001c258 <CyU3PSetEpConfig+0x5c0>
4001bee4:	e59f1370 	ldr	r1, [pc, #880]	; 4001c25c <CyU3PSetEpConfig+0x5c4>
4001bee8:	e7810106 	str	r0, [r1, r6, lsl #2]
4001beec:	e3a00020 	mov	r0, #32
4001bef0:	e59f1368 	ldr	r1, [pc, #872]	; 4001c260 <CyU3PSetEpConfig+0x5c8>
4001bef4:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bef8:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001befc:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001bf00:	e3a01001 	mov	r1, #1
4001bf04:	e1c00611 	bic	r0, r0, r1, lsl r6
4001bf08:	e59f1354 	ldr	r1, [pc, #852]	; 4001c264 <CyU3PSetEpConfig+0x5cc>
4001bf0c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001bf10:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001bf14:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001bf18:	e3a01001 	mov	r1, #1
4001bf1c:	e1c00611 	bic	r0, r0, r1, lsl r6
4001bf20:	e59f1340 	ldr	r1, [pc, #832]	; 4001c268 <CyU3PSetEpConfig+0x5d0>
4001bf24:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001bf28:	e3a00000 	mov	r0, #0
4001bf2c:	e0861086 	add	r1, r6, r6, lsl #1
4001bf30:	e59f2334 	ldr	r2, [pc, #820]	; 4001c26c <CyU3PSetEpConfig+0x5d4>
4001bf34:	e0821101 	add	r1, r2, r1, lsl #2
4001bf38:	e5810004 	str	r0, [r1, #4]
4001bf3c:	e0861086 	add	r1, r6, r6, lsl #1
4001bf40:	e0821101 	add	r1, r2, r1, lsl #2
4001bf44:	e5810008 	str	r0, [r1, #8]
4001bf48:	e59f0304 	ldr	r0, [pc, #772]	; 4001c254 <CyU3PSetEpConfig+0x5bc>
4001bf4c:	ebffb839 	bl	4000a038 <_txe_mutex_put>
4001bf50:	e3a00000 	mov	r0, #0
4001bf54:	eaffff5c 	b	4001bccc <CyU3PSetEpConfig+0x34>
4001bf58:	e3a00001 	mov	r0, #1
4001bf5c:	e0861086 	add	r1, r6, r6, lsl #1
4001bf60:	e59f2304 	ldr	r2, [pc, #772]	; 4001c26c <CyU3PSetEpConfig+0x5d4>
4001bf64:	e0821101 	add	r1, r2, r1, lsl #2
4001bf68:	e5810004 	str	r0, [r1, #4]
4001bf6c:	e0861086 	add	r1, r6, r6, lsl #1
4001bf70:	e0821101 	add	r1, r2, r1, lsl #2
4001bf74:	e5810008 	str	r0, [r1, #8]
4001bf78:	e1d500b8 	ldrh	r0, [r5, #8]
4001bf7c:	e0861086 	add	r1, r6, r6, lsl #1
4001bf80:	e0821101 	add	r1, r2, r1, lsl #2
4001bf84:	e1c100b0 	strh	r0, [r1]
4001bf88:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c270 <CyU3PSetEpConfig+0x5d8>
4001bf8c:	e7807106 	str	r7, [r0, r6, lsl #2]
4001bf90:	e5d50004 	ldrb	r0, [r5, #4]
4001bf94:	e3500002 	cmp	r0, #2
4001bf98:	1a000007 	bne	4001bfbc <CyU3PSetEpConfig+0x324>
4001bf9c:	e1d500b6 	ldrh	r0, [r5, #6]
4001bfa0:	e3500000 	cmp	r0, #0
4001bfa4:	da000004 	ble	4001bfbc <CyU3PSetEpConfig+0x324>
4001bfa8:	e3a02001 	mov	r2, #1
4001bfac:	e1a01006 	mov	r1, r6
4001bfb0:	e1a00004 	mov	r0, r4
4001bfb4:	eb00031b 	bl	4001cc28 <CyU3PUsbMapStream>
4001bfb8:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c274 <CyU3PSetEpConfig+0x5dc>
4001bfbc:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c264 <CyU3PSetEpConfig+0x5cc>
4001bfc0:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001bfc4:	e3a01001 	mov	r1, #1
4001bfc8:	e1800611 	orr	r0, r0, r1, lsl r6
4001bfcc:	e59f1290 	ldr	r1, [pc, #656]	; 4001c264 <CyU3PSetEpConfig+0x5cc>
4001bfd0:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001bfd4:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001bfd8:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001bfdc:	e59f1278 	ldr	r1, [pc, #632]	; 4001c25c <CyU3PSetEpConfig+0x5c4>
4001bfe0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bfe4:	e3890001 	orr	r0, r9, #1
4001bfe8:	e59f1270 	ldr	r1, [pc, #624]	; 4001c260 <CyU3PSetEpConfig+0x5c8>
4001bfec:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bff0:	e2810040 	add	r0, r1, #64	; 0x40
4001bff4:	e780a106 	str	sl, [r0, r6, lsl #2]
4001bff8:	e59f0278 	ldr	r0, [pc, #632]	; 4001c278 <CyU3PSetEpConfig+0x5e0>
4001bffc:	e5900000 	ldr	r0, [r0]
4001c000:	e3500000 	cmp	r0, #0
4001c004:	0a00007f 	beq	4001c208 <CyU3PSetEpConfig+0x570>
4001c008:	e3a00001 	mov	r0, #1
4001c00c:	e59f1268 	ldr	r1, [pc, #616]	; 4001c27c <CyU3PSetEpConfig+0x5e4>
4001c010:	e5911000 	ldr	r1, [r1]
4001c014:	e1110610 	tst	r1, r0, lsl r6
4001c018:	0a00007a 	beq	4001c208 <CyU3PSetEpConfig+0x570>
4001c01c:	e59f0244 	ldr	r0, [pc, #580]	; 4001c268 <CyU3PSetEpConfig+0x5d0>
4001c020:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c024:	e3a01001 	mov	r1, #1
4001c028:	e1800611 	orr	r0, r0, r1, lsl r6
4001c02c:	e59f1234 	ldr	r1, [pc, #564]	; 4001c268 <CyU3PSetEpConfig+0x5d0>
4001c030:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c034:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c038:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c03c:	e3a01001 	mov	r1, #1
4001c040:	e1800611 	orr	r0, r0, r1, lsl r6
4001c044:	e59f1218 	ldr	r1, [pc, #536]	; 4001c264 <CyU3PSetEpConfig+0x5cc>
4001c048:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c04c:	e59f0224 	ldr	r0, [pc, #548]	; 4001c278 <CyU3PSetEpConfig+0x5e0>
4001c050:	e5901000 	ldr	r1, [r0]
4001c054:	e1a00004 	mov	r0, r4
4001c058:	eb0001ba 	bl	4001c748 <CyU3PUsbEnableEpInterrupts>
4001c05c:	ea000069 	b	4001c208 <CyU3PSetEpConfig+0x570>
4001c060:	e5950000 	ldr	r0, [r5]
4001c064:	e3500000 	cmp	r0, #0
4001c068:	1a00001e 	bne	4001c0e8 <CyU3PSetEpConfig+0x450>
4001c06c:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c258 <CyU3PSetEpConfig+0x5c0>
4001c070:	e59f1208 	ldr	r1, [pc, #520]	; 4001c280 <CyU3PSetEpConfig+0x5e8>
4001c074:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c078:	e3a00020 	mov	r0, #32
4001c07c:	e59f1200 	ldr	r1, [pc, #512]	; 4001c284 <CyU3PSetEpConfig+0x5ec>
4001c080:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c084:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c088:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c08c:	e2861010 	add	r1, r6, #16
4001c090:	e3a02001 	mov	r2, #1
4001c094:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c098:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c268 <CyU3PSetEpConfig+0x5d0>
4001c09c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c0a0:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c0a4:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c0a8:	e2861010 	add	r1, r6, #16
4001c0ac:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c0b0:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c264 <CyU3PSetEpConfig+0x5cc>
4001c0b4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c0b8:	e3a00000 	mov	r0, #0
4001c0bc:	e0861086 	add	r1, r6, r6, lsl #1
4001c0c0:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c288 <CyU3PSetEpConfig+0x5f0>
4001c0c4:	e0821101 	add	r1, r2, r1, lsl #2
4001c0c8:	e5810004 	str	r0, [r1, #4]
4001c0cc:	e0861086 	add	r1, r6, r6, lsl #1
4001c0d0:	e0821101 	add	r1, r2, r1, lsl #2
4001c0d4:	e5810008 	str	r0, [r1, #8]
4001c0d8:	e59f0174 	ldr	r0, [pc, #372]	; 4001c254 <CyU3PSetEpConfig+0x5bc>
4001c0dc:	ebffb7d5 	bl	4000a038 <_txe_mutex_put>
4001c0e0:	e3a00000 	mov	r0, #0
4001c0e4:	eafffef8 	b	4001bccc <CyU3PSetEpConfig+0x34>
4001c0e8:	e3a00001 	mov	r0, #1
4001c0ec:	e0861086 	add	r1, r6, r6, lsl #1
4001c0f0:	e59f2190 	ldr	r2, [pc, #400]	; 4001c288 <CyU3PSetEpConfig+0x5f0>
4001c0f4:	e0821101 	add	r1, r2, r1, lsl #2
4001c0f8:	e5810004 	str	r0, [r1, #4]
4001c0fc:	e0861086 	add	r1, r6, r6, lsl #1
4001c100:	e0821101 	add	r1, r2, r1, lsl #2
4001c104:	e5810008 	str	r0, [r1, #8]
4001c108:	e1d500b8 	ldrh	r0, [r5, #8]
4001c10c:	e0861086 	add	r1, r6, r6, lsl #1
4001c110:	e0821101 	add	r1, r2, r1, lsl #2
4001c114:	e1c100b0 	strh	r0, [r1]
4001c118:	e59f016c 	ldr	r0, [pc, #364]	; 4001c28c <CyU3PSetEpConfig+0x5f4>
4001c11c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c120:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c124:	e1800007 	orr	r0, r0, r7
4001c128:	e59f115c 	ldr	r1, [pc, #348]	; 4001c28c <CyU3PSetEpConfig+0x5f4>
4001c12c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c130:	e5d50004 	ldrb	r0, [r5, #4]
4001c134:	e3500002 	cmp	r0, #2
4001c138:	1a00000e 	bne	4001c178 <CyU3PSetEpConfig+0x4e0>
4001c13c:	e1d500b6 	ldrh	r0, [r5, #6]
4001c140:	e3500000 	cmp	r0, #0
4001c144:	da00000b 	ble	4001c178 <CyU3PSetEpConfig+0x4e0>
4001c148:	e3a02001 	mov	r2, #1
4001c14c:	e1a01006 	mov	r1, r6
4001c150:	e1a00004 	mov	r0, r4
4001c154:	eb0002b3 	bl	4001cc28 <CyU3PUsbMapStream>
4001c158:	e59f0104 	ldr	r0, [pc, #260]	; 4001c264 <CyU3PSetEpConfig+0x5cc>
4001c15c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c160:	e2861010 	add	r1, r6, #16
4001c164:	e3a02001 	mov	r2, #1
4001c168:	e1800112 	orr	r0, r0, r2, lsl r1
4001c16c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c264 <CyU3PSetEpConfig+0x5cc>
4001c170:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c174:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c274 <CyU3PSetEpConfig+0x5dc>
4001c178:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c17c:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c280 <CyU3PSetEpConfig+0x5e8>
4001c180:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c184:	e3890001 	orr	r0, r9, #1
4001c188:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c284 <CyU3PSetEpConfig+0x5ec>
4001c18c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c190:	e2810040 	add	r0, r1, #64	; 0x40
4001c194:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c198:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c278 <CyU3PSetEpConfig+0x5e0>
4001c19c:	e5900000 	ldr	r0, [r0]
4001c1a0:	e3500000 	cmp	r0, #0
4001c1a4:	0a000017 	beq	4001c208 <CyU3PSetEpConfig+0x570>
4001c1a8:	e2860010 	add	r0, r6, #16
4001c1ac:	e3a01001 	mov	r1, #1
4001c1b0:	e1a00011 	lsl	r0, r1, r0
4001c1b4:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c27c <CyU3PSetEpConfig+0x5e4>
4001c1b8:	e5911000 	ldr	r1, [r1]
4001c1bc:	e1100001 	tst	r0, r1
4001c1c0:	0a000010 	beq	4001c208 <CyU3PSetEpConfig+0x570>
4001c1c4:	e59f009c 	ldr	r0, [pc, #156]	; 4001c268 <CyU3PSetEpConfig+0x5d0>
4001c1c8:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c1cc:	e2861010 	add	r1, r6, #16
4001c1d0:	e3a02001 	mov	r2, #1
4001c1d4:	e1800112 	orr	r0, r0, r2, lsl r1
4001c1d8:	e59f1088 	ldr	r1, [pc, #136]	; 4001c268 <CyU3PSetEpConfig+0x5d0>
4001c1dc:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c1e0:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c1e4:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c1e8:	e2861010 	add	r1, r6, #16
4001c1ec:	e1800112 	orr	r0, r0, r2, lsl r1
4001c1f0:	e59f106c 	ldr	r1, [pc, #108]	; 4001c264 <CyU3PSetEpConfig+0x5cc>
4001c1f4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c1f8:	e59f0078 	ldr	r0, [pc, #120]	; 4001c278 <CyU3PSetEpConfig+0x5e0>
4001c1fc:	e5901000 	ldr	r1, [r0]
4001c200:	e1a00004 	mov	r0, r4
4001c204:	eb00014f 	bl	4001c748 <CyU3PUsbEnableEpInterrupts>
4001c208:	e59f0038 	ldr	r0, [pc, #56]	; 4001c248 <CyU3PSetEpConfig+0x5b0>
4001c20c:	e5d00008 	ldrb	r0, [r0, #8]
4001c210:	e3500005 	cmp	r0, #5
4001c214:	ba000007 	blt	4001c238 <CyU3PSetEpConfig+0x5a0>
4001c218:	e1a00004 	mov	r0, r4
4001c21c:	eb00040e 	bl	4001d25c <CyU3PUsbResetEp>
4001c220:	e1a00004 	mov	r0, r4
4001c224:	eb0001a4 	bl	4001c8bc <CyU3PUsbFlushEp>
4001c228:	e3a02001 	mov	r2, #1
4001c22c:	e3a01000 	mov	r1, #0
4001c230:	e1a00004 	mov	r0, r4
4001c234:	eb00066c 	bl	4001dbec <CyU3PUsbStall>
4001c238:	e59f0014 	ldr	r0, [pc, #20]	; 4001c254 <CyU3PSetEpConfig+0x5bc>
4001c23c:	ebffb77d 	bl	4000a038 <_txe_mutex_put>
4001c240:	e3a00000 	mov	r0, #0
4001c244:	eafffea0 	b	4001bccc <CyU3PSetEpConfig+0x34>
4001c248:	40031d40 	.word	0x40031d40
4001c24c:	40011d54 	.word	0x40011d54
4001c250:	000003ff 	.word	0x000003ff
4001c254:	40031ee0 	.word	0x40031ee0
4001c258:	00004040 	.word	0x00004040
4001c25c:	e0031418 	.word	0xe0031418
4001c260:	e0033500 	.word	0xe0033500
4001c264:	e0033000 	.word	0xe0033000
4001c268:	e0031000 	.word	0xe0031000
4001c26c:	40031bb8 	.word	0x40031bb8
4001c270:	e0031c40 	.word	0xe0031c40
4001c274:	00400028 	.word	0x00400028
4001c278:	40030d7c 	.word	0x40030d7c
4001c27c:	40030d80 	.word	0x40030d80
4001c280:	e0031498 	.word	0xe0031498
4001c284:	e0033600 	.word	0xe0033600
4001c288:	40031c78 	.word	0x40031c78
4001c28c:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c290 <CyU3PSetUsbCoreClock>:
4001c290:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c294:	e1a04000 	mov	r4, r0
4001c298:	e1a05001 	mov	r5, r1
4001c29c:	eb0016d5 	bl	40021df8 <CyU3PVicDisableAllInterrupts>
4001c2a0:	e1a06000 	mov	r6, r0
4001c2a4:	e59f0064 	ldr	r0, [pc, #100]	; 4001c310 <CyU3PSetUsbCoreClock+0x80>
4001c2a8:	e5900008 	ldr	r0, [r0, #8]
4001c2ac:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c2b0:	e59f1058 	ldr	r1, [pc, #88]	; 4001c310 <CyU3PSetUsbCoreClock+0x80>
4001c2b4:	e5810008 	str	r0, [r1, #8]
4001c2b8:	e3a07014 	mov	r7, #20
4001c2bc:	ea000001 	b	4001c2c8 <CyU3PSetUsbCoreClock+0x38>
4001c2c0:	e1a00000 	nop			; (mov r0, r0)
4001c2c4:	e2477001 	sub	r7, r7, #1
4001c2c8:	e3570000 	cmp	r7, #0
4001c2cc:	1afffffb 	bne	4001c2c0 <CyU3PSetUsbCoreClock+0x30>
4001c2d0:	e1850104 	orr	r0, r5, r4, lsl #2
4001c2d4:	e59f1034 	ldr	r1, [pc, #52]	; 4001c310 <CyU3PSetUsbCoreClock+0x80>
4001c2d8:	e5810008 	str	r0, [r1, #8]
4001c2dc:	e1a00001 	mov	r0, r1
4001c2e0:	e5900008 	ldr	r0, [r0, #8]
4001c2e4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c2e8:	e5810008 	str	r0, [r1, #8]
4001c2ec:	e3a07050 	mov	r7, #80	; 0x50
4001c2f0:	ea000001 	b	4001c2fc <CyU3PSetUsbCoreClock+0x6c>
4001c2f4:	e1a00000 	nop			; (mov r0, r0)
4001c2f8:	e2477001 	sub	r7, r7, #1
4001c2fc:	e3570000 	cmp	r7, #0
4001c300:	1afffffb 	bne	4001c2f4 <CyU3PSetUsbCoreClock+0x64>
4001c304:	e1a00006 	mov	r0, r6
4001c308:	eb0016c8 	bl	40021e30 <CyU3PVicEnableInterrupts>
4001c30c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c310:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c314 <CyU3PUibInit>:
4001c314:	e92d4010 	push	{r4, lr}
4001c318:	e3a04000 	mov	r4, #0
4001c31c:	e3a00000 	mov	r0, #0
4001c320:	e59f117c 	ldr	r1, [pc, #380]	; 4001c4a4 <CyU3PUibInit+0x190>
4001c324:	e5810004 	str	r0, [r1, #4]
4001c328:	e5810008 	str	r0, [r1, #8]
4001c32c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c330:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c334:	e581001c 	str	r0, [r1, #28]
4001c338:	e3e00000 	mvn	r0, #0
4001c33c:	e581000c 	str	r0, [r1, #12]
4001c340:	e5810004 	str	r0, [r1, #4]
4001c344:	e59f015c 	ldr	r0, [pc, #348]	; 4001c4a8 <CyU3PUibInit+0x194>
4001c348:	e5810008 	str	r0, [r1, #8]
4001c34c:	e3a00000 	mov	r0, #0
4001c350:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c354:	e3e00000 	mvn	r0, #0
4001c358:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c35c:	e59f0148 	ldr	r0, [pc, #328]	; 4001c4ac <CyU3PUibInit+0x198>
4001c360:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c364:	eb0016c5 	bl	40021e80 <CyFx3Usb2PhySetup>
4001c368:	e3e00000 	mvn	r0, #0
4001c36c:	e59f113c 	ldr	r1, [pc, #316]	; 4001c4b0 <CyU3PUibInit+0x19c>
4001c370:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c374:	e59f0138 	ldr	r0, [pc, #312]	; 4001c4b4 <CyU3PUibInit+0x1a0>
4001c378:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c37c:	e3e00000 	mvn	r0, #0
4001c380:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c384:	e3a00000 	mov	r0, #0
4001c388:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c38c:	e3a00001 	mov	r0, #1
4001c390:	e1811680 	orr	r1, r1, r0, lsl #13
4001c394:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c398:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c39c:	e3a00043 	mov	r0, #67	; 0x43
4001c3a0:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c3a4:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c3a8:	e59f0108 	ldr	r0, [pc, #264]	; 4001c4b8 <CyU3PUibInit+0x1a4>
4001c3ac:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c3b0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c3b4:	e3a00040 	mov	r0, #64	; 0x40
4001c3b8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c3bc:	e1800400 	orr	r0, r0, r0, lsl #8
4001c3c0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c3c4:	e3a00040 	mov	r0, #64	; 0x40
4001c3c8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c3cc:	e3a04001 	mov	r4, #1
4001c3d0:	ea000015 	b	4001c42c <CyU3PUibInit+0x118>
4001c3d4:	e1a00004 	mov	r0, r4
4001c3d8:	eb000137 	bl	4001c8bc <CyU3PUsbFlushEp>
4001c3dc:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c4bc <CyU3PUibInit+0x1a8>
4001c3e0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c3e4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c3e8:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c4bc <CyU3PUibInit+0x1a8>
4001c3ec:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c3f0:	e3a00000 	mov	r0, #0
4001c3f4:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c4c0 <CyU3PUibInit+0x1ac>
4001c3f8:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c3fc:	e3840080 	orr	r0, r4, #128	; 0x80
4001c400:	eb00012d 	bl	4001c8bc <CyU3PUsbFlushEp>
4001c404:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c4c4 <CyU3PUibInit+0x1b0>
4001c408:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c40c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c410:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c4c4 <CyU3PUibInit+0x1b0>
4001c414:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c418:	e3a00000 	mov	r0, #0
4001c41c:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c4c8 <CyU3PUibInit+0x1b4>
4001c420:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c424:	e2840001 	add	r0, r4, #1
4001c428:	e20040ff 	and	r4, r0, #255	; 0xff
4001c42c:	e3540010 	cmp	r4, #16
4001c430:	baffffe7 	blt	4001c3d4 <CyU3PUibInit+0xc0>
4001c434:	e59f0090 	ldr	r0, [pc, #144]	; 4001c4cc <CyU3PUibInit+0x1b8>
4001c438:	e5900004 	ldr	r0, [r0, #4]
4001c43c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c440:	e59f1084 	ldr	r1, [pc, #132]	; 4001c4cc <CyU3PUibInit+0x1b8>
4001c444:	e5810004 	str	r0, [r1, #4]
4001c448:	e3e00000 	mvn	r0, #0
4001c44c:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c450:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c454:	e3a00b01 	mov	r0, #1024	; 0x400
4001c458:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c45c:	e59f106c 	ldr	r1, [pc, #108]	; 4001c4d0 <CyU3PUibInit+0x1bc>
4001c460:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c464:	e3a00015 	mov	r0, #21
4001c468:	eb00166b 	bl	40021e1c <CyU3PVicEnableInt>
4001c46c:	e59f0060 	ldr	r0, [pc, #96]	; 4001c4d4 <CyU3PUibInit+0x1c0>
4001c470:	e5900000 	ldr	r0, [r0]
4001c474:	e3500000 	cmp	r0, #0
4001c478:	0a000008 	beq	4001c4a0 <CyU3PUibInit+0x18c>
4001c47c:	e59f0054 	ldr	r0, [pc, #84]	; 4001c4d8 <CyU3PUibInit+0x1c4>
4001c480:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c484:	e3100b01 	tst	r0, #1024	; 0x400
4001c488:	0a000004 	beq	4001c4a0 <CyU3PUibInit+0x18c>
4001c48c:	e3a01000 	mov	r1, #0
4001c490:	e3a0000b 	mov	r0, #11
4001c494:	e59f2038 	ldr	r2, [pc, #56]	; 4001c4d4 <CyU3PUibInit+0x1c0>
4001c498:	e5922000 	ldr	r2, [r2]
4001c49c:	e12fff32 	blx	r2
4001c4a0:	e8bd8010 	pop	{r4, pc}
4001c4a4:	e0050000 	.word	0xe0050000
4001c4a8:	00038081 	.word	0x00038081
4001c4ac:	00004a3d 	.word	0x00004a3d
4001c4b0:	e0031000 	.word	0xe0031000
4001c4b4:	0000095c 	.word	0x0000095c
4001c4b8:	00004040 	.word	0x00004040
4001c4bc:	e0031498 	.word	0xe0031498
4001c4c0:	e0033600 	.word	0xe0033600
4001c4c4:	e0031418 	.word	0xe0031418
4001c4c8:	e0033500 	.word	0xe0033500
4001c4cc:	e0030000 	.word	0xe0030000
4001c4d0:	40031d40 	.word	0x40031d40
4001c4d4:	40030d9c 	.word	0x40030d9c
4001c4d8:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c4dc <CyU3PUsbAckSetup>:
4001c4dc:	e92d4010 	push	{r4, lr}
4001c4e0:	e3e01000 	mvn	r1, #0
4001c4e4:	e59f00fc 	ldr	r0, [pc, #252]	; 4001c5e8 <CyU3PUsbAckSetup+0x10c>
4001c4e8:	ebffb69d 	bl	40009f64 <_txe_mutex_get>
4001c4ec:	eb000780 	bl	4001e2f4 <GetUsbLinkActive>
4001c4f0:	eb00019e 	bl	4001cb70 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c4f4:	e3500000 	cmp	r0, #0
4001c4f8:	0a000002 	beq	4001c508 <CyU3PUsbAckSetup+0x2c>
4001c4fc:	e59f00e4 	ldr	r0, [pc, #228]	; 4001c5e8 <CyU3PUsbAckSetup+0x10c>
4001c500:	ebffb6cc 	bl	4000a038 <_txe_mutex_put>
4001c504:	e8bd8010 	pop	{r4, pc}
4001c508:	e3a00000 	mov	r0, #0
4001c50c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001c5ec <CyU3PUsbAckSetup+0x110>
4001c510:	e5810014 	str	r0, [r1, #20]
4001c514:	e2810000 	add	r0, r1, #0
4001c518:	e5d00009 	ldrb	r0, [r0, #9]
4001c51c:	e3500003 	cmp	r0, #3
4001c520:	1a000026 	bne	4001c5c0 <CyU3PUsbAckSetup+0xe4>
4001c524:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c5f0 <CyU3PUsbAckSetup+0x114>
4001c528:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c52c:	e3c00004 	bic	r0, r0, #4
4001c530:	e59f10b8 	ldr	r1, [pc, #184]	; 4001c5f0 <CyU3PUsbAckSetup+0x114>
4001c534:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c538:	e1a00001 	mov	r0, r1
4001c53c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c540:	e3c00004 	bic	r0, r0, #4
4001c544:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c548:	eb00162a 	bl	40021df8 <CyU3PVicDisableAllInterrupts>
4001c54c:	e1a04000 	mov	r4, r0
4001c550:	e3a00001 	mov	r0, #1
4001c554:	ebffdbad 	bl	40013410 <CyU3PBusyWait>
4001c558:	e59f0090 	ldr	r0, [pc, #144]	; 4001c5f0 <CyU3PUsbAckSetup+0x114>
4001c55c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c560:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001c564:	e59f1084 	ldr	r1, [pc, #132]	; 4001c5f0 <CyU3PUsbAckSetup+0x114>
4001c568:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c56c:	e1a00004 	mov	r0, r4
4001c570:	eb00162e 	bl	40021e30 <CyU3PVicEnableInterrupts>
4001c574:	e3a00c02 	mov	r0, #512	; 0x200
4001c578:	e59f1074 	ldr	r1, [pc, #116]	; 4001c5f4 <CyU3PUsbAckSetup+0x118>
4001c57c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c580:	e3a00016 	mov	r0, #22
4001c584:	eb000ced 	bl	4001f940 <CyU3PUsbAddToEventLog>
4001c588:	e59f005c 	ldr	r0, [pc, #92]	; 4001c5ec <CyU3PUsbAckSetup+0x110>
4001c58c:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001c590:	e3500000 	cmp	r0, #0
4001c594:	1a000010 	bne	4001c5dc <CyU3PUsbAckSetup+0x100>
4001c598:	e3a00001 	mov	r0, #1
4001c59c:	e59f1054 	ldr	r1, [pc, #84]	; 4001c5f8 <CyU3PUsbAckSetup+0x11c>
4001c5a0:	e5810000 	str	r0, [r1]
4001c5a4:	e3a02000 	mov	r2, #0
4001c5a8:	e3a01064 	mov	r1, #100	; 0x64
4001c5ac:	e59f0048 	ldr	r0, [pc, #72]	; 4001c5fc <CyU3PUsbAckSetup+0x120>
4001c5b0:	ebffb8b9 	bl	4000a89c <_txe_timer_change>
4001c5b4:	e59f0040 	ldr	r0, [pc, #64]	; 4001c5fc <CyU3PUsbAckSetup+0x120>
4001c5b8:	ebffb8a7 	bl	4000a85c <_txe_timer_activate>
4001c5bc:	ea000006 	b	4001c5dc <CyU3PUsbAckSetup+0x100>
4001c5c0:	e59f002c 	ldr	r0, [pc, #44]	; 4001c5f4 <CyU3PUsbAckSetup+0x118>
4001c5c4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c5c8:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001c5cc:	e59f1020 	ldr	r1, [pc, #32]	; 4001c5f4 <CyU3PUsbAckSetup+0x118>
4001c5d0:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c5d4:	e3a00040 	mov	r0, #64	; 0x40
4001c5d8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c5dc:	e59f0004 	ldr	r0, [pc, #4]	; 4001c5e8 <CyU3PUsbAckSetup+0x10c>
4001c5e0:	ebffb694 	bl	4000a038 <_txe_mutex_put>
4001c5e4:	eaffffc6 	b	4001c504 <CyU3PUsbAckSetup+0x28>
4001c5e8:	40031ee0 	.word	0x40031ee0
4001c5ec:	40031d40 	.word	0x40031d40
4001c5f0:	e0033000 	.word	0xe0033000
4001c5f4:	e0031000 	.word	0xe0031000
4001c5f8:	40030db0 	.word	0x40030db0
4001c5fc:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001c600 <CyU3PUsbCreateDmaChannels>:
4001c600:	e92d4010 	push	{r4, lr}
4001c604:	e24dd020 	sub	sp, sp, #32
4001c608:	e3a00c02 	mov	r0, #512	; 0x200
4001c60c:	e1cd00b4 	strh	r0, [sp, #4]
4001c610:	e3a00001 	mov	r0, #1
4001c614:	e1cd00b6 	strh	r0, [sp, #6]
4001c618:	e3a00000 	mov	r0, #0
4001c61c:	e1cd00bc 	strh	r0, [sp, #12]
4001c620:	e3a00c03 	mov	r0, #768	; 0x300
4001c624:	e1cd00ba 	strh	r0, [sp, #10]
4001c628:	e3a00000 	mov	r0, #0
4001c62c:	e5cd0014 	strb	r0, [sp, #20]
4001c630:	e1cd00be 	strh	r0, [sp, #14]
4001c634:	e1cd01b0 	strh	r0, [sp, #16]
4001c638:	e1cd01b2 	strh	r0, [sp, #18]
4001c63c:	e58d0018 	str	r0, [sp, #24]
4001c640:	e58d001c 	str	r0, [sp, #28]
4001c644:	e59f00ec 	ldr	r0, [pc, #236]	; 4001c738 <CyU3PUsbCreateDmaChannels+0x138>
4001c648:	e1cd00b8 	strh	r0, [sp, #8]
4001c64c:	e28d2004 	add	r2, sp, #4
4001c650:	e3a01004 	mov	r1, #4
4001c654:	e59f00e0 	ldr	r0, [pc, #224]	; 4001c73c <CyU3PUsbCreateDmaChannels+0x13c>
4001c658:	ebffe411 	bl	400156a4 <CyU3PDmaChannelCreate>
4001c65c:	e1a04000 	mov	r4, r0
4001c660:	e3540000 	cmp	r4, #0
4001c664:	0a000002 	beq	4001c674 <CyU3PUsbCreateDmaChannels+0x74>
4001c668:	e3a0004e 	mov	r0, #78	; 0x4e
4001c66c:	e28dd020 	add	sp, sp, #32
4001c670:	e8bd8010 	pop	{r4, pc}
4001c674:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c740 <CyU3PUsbCreateDmaChannels+0x140>
4001c678:	e5900000 	ldr	r0, [r0]
4001c67c:	e3500000 	cmp	r0, #0
4001c680:	0a000009 	beq	4001c6ac <CyU3PUsbCreateDmaChannels+0xac>
4001c684:	e3a01001 	mov	r1, #1
4001c688:	e59f00ac 	ldr	r0, [pc, #172]	; 4001c73c <CyU3PUsbCreateDmaChannels+0x13c>
4001c68c:	ebffe274 	bl	40015064 <CyU3PDmaChannelCacheControl>
4001c690:	e1a04000 	mov	r4, r0
4001c694:	e3540000 	cmp	r4, #0
4001c698:	0a000003 	beq	4001c6ac <CyU3PUsbCreateDmaChannels+0xac>
4001c69c:	e59f0098 	ldr	r0, [pc, #152]	; 4001c73c <CyU3PUsbCreateDmaChannels+0x13c>
4001c6a0:	ebffe4f9 	bl	40015a8c <CyU3PDmaChannelDestroy>
4001c6a4:	e3a0004e 	mov	r0, #78	; 0x4e
4001c6a8:	eaffffef 	b	4001c66c <CyU3PUsbCreateDmaChannels+0x6c>
4001c6ac:	e3a00b01 	mov	r0, #1024	; 0x400
4001c6b0:	e1cd00b8 	strh	r0, [sp, #8]
4001c6b4:	e3a00000 	mov	r0, #0
4001c6b8:	e58d001c 	str	r0, [sp, #28]
4001c6bc:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001c6c0:	e1cd00ba 	strh	r0, [sp, #10]
4001c6c4:	e28d2004 	add	r2, sp, #4
4001c6c8:	e3a01003 	mov	r1, #3
4001c6cc:	e59f0070 	ldr	r0, [pc, #112]	; 4001c744 <CyU3PUsbCreateDmaChannels+0x144>
4001c6d0:	ebffe3f3 	bl	400156a4 <CyU3PDmaChannelCreate>
4001c6d4:	e1a04000 	mov	r4, r0
4001c6d8:	e3540000 	cmp	r4, #0
4001c6dc:	0a000003 	beq	4001c6f0 <CyU3PUsbCreateDmaChannels+0xf0>
4001c6e0:	e59f0054 	ldr	r0, [pc, #84]	; 4001c73c <CyU3PUsbCreateDmaChannels+0x13c>
4001c6e4:	ebffe4e8 	bl	40015a8c <CyU3PDmaChannelDestroy>
4001c6e8:	e3a0004e 	mov	r0, #78	; 0x4e
4001c6ec:	eaffffde 	b	4001c66c <CyU3PUsbCreateDmaChannels+0x6c>
4001c6f0:	e59f0048 	ldr	r0, [pc, #72]	; 4001c740 <CyU3PUsbCreateDmaChannels+0x140>
4001c6f4:	e5900000 	ldr	r0, [r0]
4001c6f8:	e3500000 	cmp	r0, #0
4001c6fc:	0a00000b 	beq	4001c730 <CyU3PUsbCreateDmaChannels+0x130>
4001c700:	e3a01001 	mov	r1, #1
4001c704:	e59f0038 	ldr	r0, [pc, #56]	; 4001c744 <CyU3PUsbCreateDmaChannels+0x144>
4001c708:	ebffe255 	bl	40015064 <CyU3PDmaChannelCacheControl>
4001c70c:	e1a04000 	mov	r4, r0
4001c710:	e3540000 	cmp	r4, #0
4001c714:	0a000005 	beq	4001c730 <CyU3PUsbCreateDmaChannels+0x130>
4001c718:	e59f001c 	ldr	r0, [pc, #28]	; 4001c73c <CyU3PUsbCreateDmaChannels+0x13c>
4001c71c:	ebffe4da 	bl	40015a8c <CyU3PDmaChannelDestroy>
4001c720:	e59f001c 	ldr	r0, [pc, #28]	; 4001c744 <CyU3PUsbCreateDmaChannels+0x144>
4001c724:	ebffe4d8 	bl	40015a8c <CyU3PDmaChannelDestroy>
4001c728:	e3a0004e 	mov	r0, #78	; 0x4e
4001c72c:	eaffffce 	b	4001c66c <CyU3PUsbCreateDmaChannels+0x6c>
4001c730:	e1a00004 	mov	r0, r4
4001c734:	eaffffcc 	b	4001c66c <CyU3PUsbCreateDmaChannels+0x6c>
4001c738:	00003f01 	.word	0x00003f01
4001c73c:	40031a78 	.word	0x40031a78
4001c740:	40030c60 	.word	0x40030c60
4001c744:	40031b18 	.word	0x40031b18

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001c748 <CyU3PUsbEnableEpInterrupts>:
4001c748:	e200300f 	and	r3, r0, #15
4001c74c:	e3100080 	tst	r0, #128	; 0x80
4001c750:	0a00002a 	beq	4001c800 <CyU3PUsbEnableEpInterrupts+0xb8>
4001c754:	e59fc150 	ldr	ip, [pc, #336]	; 4001c8ac <CyU3PUsbEnableEpInterrupts+0x164>
4001c758:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c75c:	e3120901 	tst	r2, #16384	; 0x4000
4001c760:	0a00000d 	beq	4001c79c <CyU3PUsbEnableEpInterrupts+0x54>
4001c764:	e3110001 	tst	r1, #1
4001c768:	0a000000 	beq	4001c770 <CyU3PUsbEnableEpInterrupts+0x28>
4001c76c:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c770:	e3110002 	tst	r1, #2
4001c774:	0a000000 	beq	4001c77c <CyU3PUsbEnableEpInterrupts+0x34>
4001c778:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c77c:	e3110004 	tst	r1, #4
4001c780:	0a000000 	beq	4001c788 <CyU3PUsbEnableEpInterrupts+0x40>
4001c784:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c788:	e3110008 	tst	r1, #8
4001c78c:	0a000000 	beq	4001c794 <CyU3PUsbEnableEpInterrupts+0x4c>
4001c790:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c794:	e59fc110 	ldr	ip, [pc, #272]	; 4001c8ac <CyU3PUsbEnableEpInterrupts+0x164>
4001c798:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c79c:	e59fc10c 	ldr	ip, [pc, #268]	; 4001c8b0 <CyU3PUsbEnableEpInterrupts+0x168>
4001c7a0:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c7a4:	e3120001 	tst	r2, #1
4001c7a8:	0a00003e 	beq	4001c8a8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c7ac:	e3110001 	tst	r1, #1
4001c7b0:	0a000000 	beq	4001c7b8 <CyU3PUsbEnableEpInterrupts+0x70>
4001c7b4:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c7b8:	e3110002 	tst	r1, #2
4001c7bc:	0a000000 	beq	4001c7c4 <CyU3PUsbEnableEpInterrupts+0x7c>
4001c7c0:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c7c4:	e3110004 	tst	r1, #4
4001c7c8:	0a000000 	beq	4001c7d0 <CyU3PUsbEnableEpInterrupts+0x88>
4001c7cc:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c7d0:	e3110010 	tst	r1, #16
4001c7d4:	0a000000 	beq	4001c7dc <CyU3PUsbEnableEpInterrupts+0x94>
4001c7d8:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c7dc:	e3110020 	tst	r1, #32
4001c7e0:	0a000000 	beq	4001c7e8 <CyU3PUsbEnableEpInterrupts+0xa0>
4001c7e4:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c7e8:	e3110040 	tst	r1, #64	; 0x40
4001c7ec:	0a000000 	beq	4001c7f4 <CyU3PUsbEnableEpInterrupts+0xac>
4001c7f0:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c7f4:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001c8b0 <CyU3PUsbEnableEpInterrupts+0x168>
4001c7f8:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c7fc:	ea000029 	b	4001c8a8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c800:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001c8b4 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c804:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c808:	e3120901 	tst	r2, #16384	; 0x4000
4001c80c:	0a00000d 	beq	4001c848 <CyU3PUsbEnableEpInterrupts+0x100>
4001c810:	e3110001 	tst	r1, #1
4001c814:	0a000000 	beq	4001c81c <CyU3PUsbEnableEpInterrupts+0xd4>
4001c818:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c81c:	e3110002 	tst	r1, #2
4001c820:	0a000000 	beq	4001c828 <CyU3PUsbEnableEpInterrupts+0xe0>
4001c824:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c828:	e3110004 	tst	r1, #4
4001c82c:	0a000000 	beq	4001c834 <CyU3PUsbEnableEpInterrupts+0xec>
4001c830:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c834:	e3110008 	tst	r1, #8
4001c838:	0a000000 	beq	4001c840 <CyU3PUsbEnableEpInterrupts+0xf8>
4001c83c:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c840:	e59fc06c 	ldr	ip, [pc, #108]	; 4001c8b4 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c844:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c848:	e59fc068 	ldr	ip, [pc, #104]	; 4001c8b8 <CyU3PUsbEnableEpInterrupts+0x170>
4001c84c:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c850:	e3120001 	tst	r2, #1
4001c854:	0a000013 	beq	4001c8a8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c858:	e3110001 	tst	r1, #1
4001c85c:	0a000000 	beq	4001c864 <CyU3PUsbEnableEpInterrupts+0x11c>
4001c860:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c864:	e3110002 	tst	r1, #2
4001c868:	0a000000 	beq	4001c870 <CyU3PUsbEnableEpInterrupts+0x128>
4001c86c:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c870:	e3110004 	tst	r1, #4
4001c874:	0a000000 	beq	4001c87c <CyU3PUsbEnableEpInterrupts+0x134>
4001c878:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c87c:	e3110010 	tst	r1, #16
4001c880:	0a000000 	beq	4001c888 <CyU3PUsbEnableEpInterrupts+0x140>
4001c884:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c888:	e3110020 	tst	r1, #32
4001c88c:	0a000000 	beq	4001c894 <CyU3PUsbEnableEpInterrupts+0x14c>
4001c890:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c894:	e3110040 	tst	r1, #64	; 0x40
4001c898:	0a000000 	beq	4001c8a0 <CyU3PUsbEnableEpInterrupts+0x158>
4001c89c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c8a0:	e59fc010 	ldr	ip, [pc, #16]	; 4001c8b8 <CyU3PUsbEnableEpInterrupts+0x170>
4001c8a4:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c8a8:	e12fff1e 	bx	lr
4001c8ac:	e0031418 	.word	0xe0031418
4001c8b0:	e0033500 	.word	0xe0033500
4001c8b4:	e0031498 	.word	0xe0031498
4001c8b8:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001c8bc <CyU3PUsbFlushEp>:
4001c8bc:	e92d4070 	push	{r4, r5, r6, lr}
4001c8c0:	e1a04000 	mov	r4, r0
4001c8c4:	e204507f 	and	r5, r4, #127	; 0x7f
4001c8c8:	e59f00a8 	ldr	r0, [pc, #168]	; 4001c978 <CyU3PUsbFlushEp+0xbc>
4001c8cc:	e5d00008 	ldrb	r0, [r0, #8]
4001c8d0:	e3500000 	cmp	r0, #0
4001c8d4:	1a000001 	bne	4001c8e0 <CyU3PUsbFlushEp+0x24>
4001c8d8:	e3a00042 	mov	r0, #66	; 0x42
4001c8dc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001c8e0:	e355000f 	cmp	r5, #15
4001c8e4:	da000001 	ble	4001c8f0 <CyU3PUsbFlushEp+0x34>
4001c8e8:	e3a00040 	mov	r0, #64	; 0x40
4001c8ec:	eafffffa 	b	4001c8dc <CyU3PUsbFlushEp+0x20>
4001c8f0:	e3e01000 	mvn	r1, #0
4001c8f4:	e59f0080 	ldr	r0, [pc, #128]	; 4001c97c <CyU3PUsbFlushEp+0xc0>
4001c8f8:	ebffb599 	bl	40009f64 <_txe_mutex_get>
4001c8fc:	e3140080 	tst	r4, #128	; 0x80
4001c900:	0a00000c 	beq	4001c938 <CyU3PUsbFlushEp+0x7c>
4001c904:	e59f0074 	ldr	r0, [pc, #116]	; 4001c980 <CyU3PUsbFlushEp+0xc4>
4001c908:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c90c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c910:	e59f1068 	ldr	r1, [pc, #104]	; 4001c980 <CyU3PUsbFlushEp+0xc4>
4001c914:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c918:	e3a0000a 	mov	r0, #10
4001c91c:	ebffdabb 	bl	40013410 <CyU3PBusyWait>
4001c920:	e59f0058 	ldr	r0, [pc, #88]	; 4001c980 <CyU3PUsbFlushEp+0xc4>
4001c924:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c928:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c92c:	e59f104c 	ldr	r1, [pc, #76]	; 4001c980 <CyU3PUsbFlushEp+0xc4>
4001c930:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c934:	ea00000b 	b	4001c968 <CyU3PUsbFlushEp+0xac>
4001c938:	e59f0044 	ldr	r0, [pc, #68]	; 4001c984 <CyU3PUsbFlushEp+0xc8>
4001c93c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c940:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c944:	e59f1038 	ldr	r1, [pc, #56]	; 4001c984 <CyU3PUsbFlushEp+0xc8>
4001c948:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c94c:	e3a0000a 	mov	r0, #10
4001c950:	ebffdaae 	bl	40013410 <CyU3PBusyWait>
4001c954:	e59f0028 	ldr	r0, [pc, #40]	; 4001c984 <CyU3PUsbFlushEp+0xc8>
4001c958:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c95c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c960:	e59f101c 	ldr	r1, [pc, #28]	; 4001c984 <CyU3PUsbFlushEp+0xc8>
4001c964:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c968:	e59f000c 	ldr	r0, [pc, #12]	; 4001c97c <CyU3PUsbFlushEp+0xc0>
4001c96c:	ebffb5b1 	bl	4000a038 <_txe_mutex_put>
4001c970:	e3a00000 	mov	r0, #0
4001c974:	eaffffd8 	b	4001c8dc <CyU3PUsbFlushEp+0x20>
4001c978:	40031d40 	.word	0x40031d40
4001c97c:	40031ee0 	.word	0x40031ee0
4001c980:	e0031c40 	.word	0xe0031c40
4001c984:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001c988 <CyU3PUsbGetEP0Data>:
4001c988:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001c98c:	e1a04000 	mov	r4, r0
4001c990:	e1a05001 	mov	r5, r1
4001c994:	e1a06002 	mov	r6, r2
4001c998:	e59f8198 	ldr	r8, [pc, #408]	; 4001cb38 <CyU3PUsbGetEP0Data+0x1b0>
4001c99c:	e59f0198 	ldr	r0, [pc, #408]	; 4001cb3c <CyU3PUsbGetEP0Data+0x1b4>
4001c9a0:	e5d00008 	ldrb	r0, [r0, #8]
4001c9a4:	e3500000 	cmp	r0, #0
4001c9a8:	1a000001 	bne	4001c9b4 <CyU3PUsbGetEP0Data+0x2c>
4001c9ac:	e3a00042 	mov	r0, #66	; 0x42
4001c9b0:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001c9b4:	e3550000 	cmp	r5, #0
4001c9b8:	1a000001 	bne	4001c9c4 <CyU3PUsbGetEP0Data+0x3c>
4001c9bc:	e3a00040 	mov	r0, #64	; 0x40
4001c9c0:	eafffffa 	b	4001c9b0 <CyU3PUsbGetEP0Data+0x28>
4001c9c4:	e3e01000 	mvn	r1, #0
4001c9c8:	e59f0170 	ldr	r0, [pc, #368]	; 4001cb40 <CyU3PUsbGetEP0Data+0x1b8>
4001c9cc:	ebffb564 	bl	40009f64 <_txe_mutex_get>
4001c9d0:	e284000f 	add	r0, r4, #15
4001c9d4:	e59f1168 	ldr	r1, [pc, #360]	; 4001cb44 <CyU3PUsbGetEP0Data+0x1bc>
4001c9d8:	e0004001 	and	r4, r0, r1
4001c9dc:	e59f0164 	ldr	r0, [pc, #356]	; 4001cb48 <CyU3PUsbGetEP0Data+0x1c0>
4001c9e0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001c9e4:	e3c00008 	bic	r0, r0, #8
4001c9e8:	e59f1158 	ldr	r1, [pc, #344]	; 4001cb48 <CyU3PUsbGetEP0Data+0x1c0>
4001c9ec:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c9f0:	e59f0144 	ldr	r0, [pc, #324]	; 4001cb3c <CyU3PUsbGetEP0Data+0x1b4>
4001c9f4:	e5900018 	ldr	r0, [r0, #24]
4001c9f8:	e3500000 	cmp	r0, #0
4001c9fc:	1a000002 	bne	4001ca0c <CyU3PUsbGetEP0Data+0x84>
4001ca00:	eb00005a 	bl	4001cb70 <CyU3PUsbIsNewCtrlRqtRecvd>
4001ca04:	e3500000 	cmp	r0, #0
4001ca08:	0a000008 	beq	4001ca30 <CyU3PUsbGetEP0Data+0xa8>
4001ca0c:	e59f0134 	ldr	r0, [pc, #308]	; 4001cb48 <CyU3PUsbGetEP0Data+0x1c0>
4001ca10:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca14:	e3800008 	orr	r0, r0, #8
4001ca18:	e59f1128 	ldr	r1, [pc, #296]	; 4001cb48 <CyU3PUsbGetEP0Data+0x1c0>
4001ca1c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca20:	e59f0118 	ldr	r0, [pc, #280]	; 4001cb40 <CyU3PUsbGetEP0Data+0x1b8>
4001ca24:	ebffb583 	bl	4000a038 <_txe_mutex_put>
4001ca28:	e3a00051 	mov	r0, #81	; 0x51
4001ca2c:	eaffffdf 	b	4001c9b0 <CyU3PUsbGetEP0Data+0x28>
4001ca30:	e59f0110 	ldr	r0, [pc, #272]	; 4001cb48 <CyU3PUsbGetEP0Data+0x1c0>
4001ca34:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca38:	e3800008 	orr	r0, r0, #8
4001ca3c:	e59f1104 	ldr	r1, [pc, #260]	; 4001cb48 <CyU3PUsbGetEP0Data+0x1c0>
4001ca40:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca44:	eb00062a 	bl	4001e2f4 <GetUsbLinkActive>
4001ca48:	e1cd40b6 	strh	r4, [sp, #6]
4001ca4c:	e58d5000 	str	r5, [sp]
4001ca50:	e3a00000 	mov	r0, #0
4001ca54:	e1cd00b8 	strh	r0, [sp, #8]
4001ca58:	e1a0100d 	mov	r1, sp
4001ca5c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001cb4c <CyU3PUsbGetEP0Data+0x1c4>
4001ca60:	ebffe75f 	bl	400167e4 <CyU3PDmaChannelSetupRecvBuffer>
4001ca64:	e20070ff 	and	r7, r0, #255	; 0xff
4001ca68:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cb40 <CyU3PUsbGetEP0Data+0x1b8>
4001ca6c:	ebffb571 	bl	4000a038 <_txe_mutex_put>
4001ca70:	e3570000 	cmp	r7, #0
4001ca74:	1a00002d 	bne	4001cb30 <CyU3PUsbGetEP0Data+0x1a8>
4001ca78:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cb3c <CyU3PUsbGetEP0Data+0x1b4>
4001ca7c:	e5900014 	ldr	r0, [r0, #20]
4001ca80:	e3500000 	cmp	r0, #0
4001ca84:	0a000000 	beq	4001ca8c <CyU3PUsbGetEP0Data+0x104>
4001ca88:	ebfffe93 	bl	4001c4dc <CyU3PUsbAckSetup>
4001ca8c:	ea00000e 	b	4001cacc <CyU3PUsbGetEP0Data+0x144>
4001ca90:	e3a02064 	mov	r2, #100	; 0x64
4001ca94:	e1a0100d 	mov	r1, sp
4001ca98:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cb4c <CyU3PUsbGetEP0Data+0x1c4>
4001ca9c:	ebffe8b2 	bl	40016d6c <CyU3PDmaChannelWaitForRecvBuffer>
4001caa0:	e20070ff 	and	r7, r0, #255	; 0xff
4001caa4:	e3570045 	cmp	r7, #69	; 0x45
4001caa8:	1a000006 	bne	4001cac8 <CyU3PUsbGetEP0Data+0x140>
4001caac:	eb00002f 	bl	4001cb70 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cab0:	e3500000 	cmp	r0, #0
4001cab4:	0a000001 	beq	4001cac0 <CyU3PUsbGetEP0Data+0x138>
4001cab8:	e3a00051 	mov	r0, #81	; 0x51
4001cabc:	eaffffbb 	b	4001c9b0 <CyU3PUsbGetEP0Data+0x28>
4001cac0:	e2488064 	sub	r8, r8, #100	; 0x64
4001cac4:	ea000000 	b	4001cacc <CyU3PUsbGetEP0Data+0x144>
4001cac8:	ea000001 	b	4001cad4 <CyU3PUsbGetEP0Data+0x14c>
4001cacc:	e3580000 	cmp	r8, #0
4001cad0:	1affffee 	bne	4001ca90 <CyU3PUsbGetEP0Data+0x108>
4001cad4:	e1a00000 	nop			; (mov r0, r0)
4001cad8:	e3570000 	cmp	r7, #0
4001cadc:	0a00000f 	beq	4001cb20 <CyU3PUsbGetEP0Data+0x198>
4001cae0:	e3e01000 	mvn	r1, #0
4001cae4:	e59f0054 	ldr	r0, [pc, #84]	; 4001cb40 <CyU3PUsbGetEP0Data+0x1b8>
4001cae8:	ebffb51d 	bl	40009f64 <_txe_mutex_get>
4001caec:	e3a01001 	mov	r1, #1
4001caf0:	e3a00000 	mov	r0, #0
4001caf4:	eb000376 	bl	4001d8d4 <CyU3PUsbSetEpNak>
4001caf8:	e3a00064 	mov	r0, #100	; 0x64
4001cafc:	ebffda43 	bl	40013410 <CyU3PBusyWait>
4001cb00:	e59f0044 	ldr	r0, [pc, #68]	; 4001cb4c <CyU3PUsbGetEP0Data+0x1c4>
4001cb04:	ebffe57b 	bl	400160f8 <CyU3PDmaChannelReset>
4001cb08:	e3a01000 	mov	r1, #0
4001cb0c:	e1a00001 	mov	r0, r1
4001cb10:	eb00036f 	bl	4001d8d4 <CyU3PUsbSetEpNak>
4001cb14:	e59f0024 	ldr	r0, [pc, #36]	; 4001cb40 <CyU3PUsbGetEP0Data+0x1b8>
4001cb18:	ebffb546 	bl	4000a038 <_txe_mutex_put>
4001cb1c:	ea000003 	b	4001cb30 <CyU3PUsbGetEP0Data+0x1a8>
4001cb20:	e3560000 	cmp	r6, #0
4001cb24:	0a000001 	beq	4001cb30 <CyU3PUsbGetEP0Data+0x1a8>
4001cb28:	e1dd00b4 	ldrh	r0, [sp, #4]
4001cb2c:	e1c600b0 	strh	r0, [r6]
4001cb30:	e1a00007 	mov	r0, r7
4001cb34:	eaffff9d 	b	4001c9b0 <CyU3PUsbGetEP0Data+0x28>
4001cb38:	00001388 	.word	0x00001388
4001cb3c:	40031d40 	.word	0x40031d40
4001cb40:	40031ee0 	.word	0x40031ee0
4001cb44:	0000fff0 	.word	0x0000fff0
4001cb48:	e0031000 	.word	0xe0031000
4001cb4c:	40031b18 	.word	0x40031b18

Disassembly of section i.CyU3PUsbGetSpeed:

4001cb50 <CyU3PUsbGetSpeed>:
4001cb50:	e59f0004 	ldr	r0, [pc, #4]	; 4001cb5c <CyU3PUsbGetSpeed+0xc>
4001cb54:	e5d00009 	ldrb	r0, [r0, #9]
4001cb58:	e12fff1e 	bx	lr
4001cb5c:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHostIsStarted:

4001cb60 <CyU3PUsbHostIsStarted>:
4001cb60:	e59f0004 	ldr	r0, [pc, #4]	; 4001cb6c <CyU3PUsbHostIsStarted+0xc>
4001cb64:	e5900000 	ldr	r0, [r0]
4001cb68:	e12fff1e 	bx	lr
4001cb6c:	40030d5c 	.word	0x40030d5c

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001cb70 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001cb70:	e59f0038 	ldr	r0, [pc, #56]	; 4001cbb0 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001cb74:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001cb78:	e3500000 	cmp	r0, #0
4001cb7c:	1a000007 	bne	4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cb80:	e59f002c 	ldr	r0, [pc, #44]	; 4001cbb4 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001cb84:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001cb88:	e3100040 	tst	r0, #64	; 0x40
4001cb8c:	1a000003 	bne	4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cb90:	e59f0020 	ldr	r0, [pc, #32]	; 4001cbb8 <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001cb94:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001cb98:	e3100c02 	tst	r0, #512	; 0x200
4001cb9c:	0a000001 	beq	4001cba8 <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001cba0:	e3a00001 	mov	r0, #1
4001cba4:	e12fff1e 	bx	lr
4001cba8:	e3a00000 	mov	r0, #0
4001cbac:	eafffffc 	b	4001cba4 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001cbb0:	40031d40 	.word	0x40031d40
4001cbb4:	e0031000 	.word	0xe0031000
4001cbb8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001cbbc <CyU3PUsbLoadBootloaderDescs>:
4001cbbc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001cbc0:	e1a04000 	mov	r4, r0
4001cbc4:	e3a06000 	mov	r6, #0
4001cbc8:	e5940008 	ldr	r0, [r4, #8]
4001cbcc:	e20070ff 	and	r7, r0, #255	; 0xff
4001cbd0:	e1a00000 	nop			; (mov r0, r0)
4001cbd4:	ea00000f 	b	4001cc18 <CyU3PUsbLoadBootloaderDescs+0x5c>
4001cbd8:	e2843010 	add	r3, r4, #16
4001cbdc:	e0833186 	add	r3, r3, r6, lsl #3
4001cbe0:	e5932004 	ldr	r2, [r3, #4]
4001cbe4:	e2843010 	add	r3, r4, #16
4001cbe8:	e0833186 	add	r3, r3, r6, lsl #3
4001cbec:	e5d31001 	ldrb	r1, [r3, #1]
4001cbf0:	e2843010 	add	r3, r4, #16
4001cbf4:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001cbf8:	eb0002bf 	bl	4001d6fc <CyU3PUsbSetDesc>
4001cbfc:	e1a05000 	mov	r5, r0
4001cc00:	e3550000 	cmp	r5, #0
4001cc04:	0a000001 	beq	4001cc10 <CyU3PUsbLoadBootloaderDescs+0x54>
4001cc08:	e1a00005 	mov	r0, r5
4001cc0c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001cc10:	e2860001 	add	r0, r6, #1
4001cc14:	e20060ff 	and	r6, r0, #255	; 0xff
4001cc18:	e1560007 	cmp	r6, r7
4001cc1c:	baffffed 	blt	4001cbd8 <CyU3PUsbLoadBootloaderDescs+0x1c>
4001cc20:	e3a00000 	mov	r0, #0
4001cc24:	eafffff8 	b	4001cc0c <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001cc28 <CyU3PUsbMapStream>:
4001cc28:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001cc2c:	e1a03000 	mov	r3, r0
4001cc30:	e203c07f 	and	ip, r3, #127	; 0x7f
4001cc34:	e59f005c 	ldr	r0, [pc, #92]	; 4001cc98 <CyU3PUsbMapStream+0x70>
4001cc38:	e5d00008 	ldrb	r0, [r0, #8]
4001cc3c:	e3500000 	cmp	r0, #0
4001cc40:	1a000001 	bne	4001cc4c <CyU3PUsbMapStream+0x24>
4001cc44:	e3a00042 	mov	r0, #66	; 0x42
4001cc48:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001cc4c:	e35c000f 	cmp	ip, #15
4001cc50:	da000001 	ble	4001cc5c <CyU3PUsbMapStream+0x34>
4001cc54:	e3a00040 	mov	r0, #64	; 0x40
4001cc58:	eafffffa 	b	4001cc48 <CyU3PUsbMapStream+0x20>
4001cc5c:	e3130080 	tst	r3, #128	; 0x80
4001cc60:	0a000005 	beq	4001cc7c <CyU3PUsbMapStream+0x54>
4001cc64:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cc68:	e180080c 	orr	r0, r0, ip, lsl #16
4001cc6c:	e1800002 	orr	r0, r0, r2
4001cc70:	e59fe024 	ldr	lr, [pc, #36]	; 4001cc9c <CyU3PUsbMapStream+0x74>
4001cc74:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cc78:	ea000004 	b	4001cc90 <CyU3PUsbMapStream+0x68>
4001cc7c:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cc80:	e180080c 	orr	r0, r0, ip, lsl #16
4001cc84:	e1800002 	orr	r0, r0, r2
4001cc88:	e59fe010 	ldr	lr, [pc, #16]	; 4001cca0 <CyU3PUsbMapStream+0x78>
4001cc8c:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cc90:	e3a00000 	mov	r0, #0
4001cc94:	eaffffeb 	b	4001cc48 <CyU3PUsbMapStream+0x20>
4001cc98:	40031d40 	.word	0x40031d40
4001cc9c:	e00335c0 	.word	0xe00335c0
4001cca0:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001cca4 <CyU3PUsbOtgVbusChangeHandler>:
4001cca4:	e92d4010 	push	{r4, lr}
4001cca8:	e3a04000 	mov	r4, #0
4001ccac:	e59f0094 	ldr	r0, [pc, #148]	; 4001cd48 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001ccb0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001ccb4:	e3500000 	cmp	r0, #0
4001ccb8:	0a000005 	beq	4001ccd4 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001ccbc:	e59f0088 	ldr	r0, [pc, #136]	; 4001cd4c <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001ccc0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ccc4:	e59f107c 	ldr	r1, [pc, #124]	; 4001cd48 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001ccc8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001cccc:	e1100001 	tst	r0, r1
4001ccd0:	0a000008 	beq	4001ccf8 <CyU3PUsbOtgVbusChangeHandler+0x54>
4001ccd4:	e3a04001 	mov	r4, #1
4001ccd8:	e3a00018 	mov	r0, #24
4001ccdc:	e59f106c 	ldr	r1, [pc, #108]	; 4001cd50 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001cce0:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001cce4:	e1c10000 	bic	r0, r1, r0
4001cce8:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001ccec:	e3c00018 	bic	r0, r0, #24
4001ccf0:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001ccf4:	ea000009 	b	4001cd20 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001ccf8:	ebfffbb2 	bl	4001bbc8 <CyU3POtgIsHostMode>
4001ccfc:	e3500000 	cmp	r0, #0
4001cd00:	0a000006 	beq	4001cd20 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cd04:	e3a00018 	mov	r0, #24
4001cd08:	e59f1040 	ldr	r1, [pc, #64]	; 4001cd50 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001cd0c:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001cd10:	e1c10000 	bic	r0, r1, r0
4001cd14:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cd18:	e3800018 	orr	r0, r0, #24
4001cd1c:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001cd20:	e59f002c 	ldr	r0, [pc, #44]	; 4001cd54 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cd24:	e5900004 	ldr	r0, [r0, #4]
4001cd28:	e3500000 	cmp	r0, #0
4001cd2c:	0a000004 	beq	4001cd44 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001cd30:	e59f001c 	ldr	r0, [pc, #28]	; 4001cd54 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cd34:	e1a01004 	mov	r1, r4
4001cd38:	e5902004 	ldr	r2, [r0, #4]
4001cd3c:	e3a00002 	mov	r0, #2
4001cd40:	e12fff32 	blx	r2
4001cd44:	e8bd8010 	pop	{r4, pc}
4001cd48:	40031d40 	.word	0x40031d40
4001cd4c:	e0051000 	.word	0xe0051000
4001cd50:	e0031000 	.word	0xe0031000
4001cd54:	40030d54 	.word	0x40030d54

Disassembly of section i.CyU3PUsbPhyDisable:

4001cd58 <CyU3PUsbPhyDisable>:
4001cd58:	e92d4010 	push	{r4, lr}
4001cd5c:	e1a04000 	mov	r4, r0
4001cd60:	e2841003 	add	r1, r4, #3
4001cd64:	e20100ff 	and	r0, r1, #255	; 0xff
4001cd68:	eb000af4 	bl	4001f940 <CyU3PUsbAddToEventLog>
4001cd6c:	e3a00000 	mov	r0, #0
4001cd70:	e59f1184 	ldr	r1, [pc, #388]	; 4001cefc <CyU3PUsbPhyDisable+0x1a4>
4001cd74:	e5810000 	str	r0, [r1]
4001cd78:	e59f0180 	ldr	r0, [pc, #384]	; 4001cf00 <CyU3PUsbPhyDisable+0x1a8>
4001cd7c:	ebffb75a 	bl	4000aaec <_txe_timer_deactivate>
4001cd80:	e3a00008 	mov	r0, #8
4001cd84:	eb00141f 	bl	40021e08 <CyU3PVicDisableInt>
4001cd88:	e59f0174 	ldr	r0, [pc, #372]	; 4001cf04 <CyU3PUsbPhyDisable+0x1ac>
4001cd8c:	e5900004 	ldr	r0, [r0, #4]
4001cd90:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001cd94:	e59f1168 	ldr	r1, [pc, #360]	; 4001cf04 <CyU3PUsbPhyDisable+0x1ac>
4001cd98:	e5810004 	str	r0, [r1, #4]
4001cd9c:	e3e00000 	mvn	r0, #0
4001cda0:	e0411600 	sub	r1, r1, r0, lsl #12
4001cda4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cda8:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cdac:	e59f0154 	ldr	r0, [pc, #340]	; 4001cf08 <CyU3PUsbPhyDisable+0x1b0>
4001cdb0:	ebffe4d0 	bl	400160f8 <CyU3PDmaChannelReset>
4001cdb4:	e59f0150 	ldr	r0, [pc, #336]	; 4001cf0c <CyU3PUsbPhyDisable+0x1b4>
4001cdb8:	ebffe4ce 	bl	400160f8 <CyU3PDmaChannelReset>
4001cdbc:	e3540000 	cmp	r4, #0
4001cdc0:	0a00002b 	beq	4001ce74 <CyU3PUsbPhyDisable+0x11c>
4001cdc4:	e3a00001 	mov	r0, #1
4001cdc8:	e59f1140 	ldr	r1, [pc, #320]	; 4001cf10 <CyU3PUsbPhyDisable+0x1b8>
4001cdcc:	e5810060 	str	r0, [r1, #96]	; 0x60
4001cdd0:	ebffb684 	bl	4000a7e8 <_txe_thread_relinquish>
4001cdd4:	e3e00000 	mvn	r0, #0
4001cdd8:	e59f1134 	ldr	r1, [pc, #308]	; 4001cf14 <CyU3PUsbPhyDisable+0x1bc>
4001cddc:	e5810004 	str	r0, [r1, #4]
4001cde0:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001cde4:	e0010000 	and	r0, r1, r0
4001cde8:	e5900014 	ldr	r0, [r0, #20]
4001cdec:	e59f1124 	ldr	r1, [pc, #292]	; 4001cf18 <CyU3PUsbPhyDisable+0x1c0>
4001cdf0:	e5810000 	str	r0, [r1]
4001cdf4:	e3a00000 	mov	r0, #0
4001cdf8:	e59f111c 	ldr	r1, [pc, #284]	; 4001cf1c <CyU3PUsbPhyDisable+0x1c4>
4001cdfc:	e5810000 	str	r0, [r1]
4001ce00:	e3a01000 	mov	r1, #0
4001ce04:	e59f0114 	ldr	r0, [pc, #276]	; 4001cf20 <CyU3PUsbPhyDisable+0x1c8>
4001ce08:	eb00146e 	bl	40021fc8 <CyFx3UsbWritePhyReg>
4001ce0c:	e3a01002 	mov	r1, #2
4001ce10:	e1a00001 	mov	r0, r1
4001ce14:	ebfffd1d 	bl	4001c290 <CyU3PSetUsbCoreClock>
4001ce18:	e3a00002 	mov	r0, #2
4001ce1c:	ebffd97b 	bl	40013410 <CyU3PBusyWait>
4001ce20:	e59f00fc 	ldr	r0, [pc, #252]	; 4001cf24 <CyU3PUsbPhyDisable+0x1cc>
4001ce24:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ce28:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ce2c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001cf24 <CyU3PUsbPhyDisable+0x1cc>
4001ce30:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ce34:	e3a00002 	mov	r0, #2
4001ce38:	ebffd974 	bl	40013410 <CyU3PBusyWait>
4001ce3c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001cf24 <CyU3PUsbPhyDisable+0x1cc>
4001ce40:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ce44:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001ce48:	e59f10d4 	ldr	r1, [pc, #212]	; 4001cf24 <CyU3PUsbPhyDisable+0x1cc>
4001ce4c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ce50:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001ce54:	e590001c 	ldr	r0, [r0, #28]
4001ce58:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ce5c:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001ce60:	e581001c 	str	r0, [r1, #28]
4001ce64:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cf28 <CyU3PUsbPhyDisable+0x1d0>
4001ce68:	e5900000 	ldr	r0, [r0]
4001ce6c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ce70:	ea00000e 	b	4001ceb0 <CyU3PUsbPhyDisable+0x158>
4001ce74:	e59f00a8 	ldr	r0, [pc, #168]	; 4001cf24 <CyU3PUsbPhyDisable+0x1cc>
4001ce78:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001ce7c:	e3800008 	orr	r0, r0, #8
4001ce80:	e59f109c 	ldr	r1, [pc, #156]	; 4001cf24 <CyU3PUsbPhyDisable+0x1cc>
4001ce84:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001ce88:	e3a01002 	mov	r1, #2
4001ce8c:	e1a00001 	mov	r0, r1
4001ce90:	ebfffcfe 	bl	4001c290 <CyU3PSetUsbCoreClock>
4001ce94:	e3a00002 	mov	r0, #2
4001ce98:	ebffd95c 	bl	40013410 <CyU3PBusyWait>
4001ce9c:	e59f0080 	ldr	r0, [pc, #128]	; 4001cf24 <CyU3PUsbPhyDisable+0x1cc>
4001cea0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cea4:	e2000001 	and	r0, r0, #1
4001cea8:	e59f1074 	ldr	r1, [pc, #116]	; 4001cf24 <CyU3PUsbPhyDisable+0x1cc>
4001ceac:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ceb0:	e59f0074 	ldr	r0, [pc, #116]	; 4001cf2c <CyU3PUsbPhyDisable+0x1d4>
4001ceb4:	e5900000 	ldr	r0, [r0]
4001ceb8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001cebc:	e59f1068 	ldr	r1, [pc, #104]	; 4001cf2c <CyU3PUsbPhyDisable+0x1d4>
4001cec0:	e5810000 	str	r0, [r1]
4001cec4:	e3a00000 	mov	r0, #0
4001cec8:	e59f1040 	ldr	r1, [pc, #64]	; 4001cf10 <CyU3PUsbPhyDisable+0x1b8>
4001cecc:	e5c10009 	strb	r0, [r1, #9]
4001ced0:	ebfffb6c 	bl	4001bc88 <CyU3POtgIsStarted>
4001ced4:	e3500000 	cmp	r0, #0
4001ced8:	0a000006 	beq	4001cef8 <CyU3PUsbPhyDisable+0x1a0>
4001cedc:	e3a00064 	mov	r0, #100	; 0x64
4001cee0:	ebffd94a 	bl	40013410 <CyU3PBusyWait>
4001cee4:	e59f0040 	ldr	r0, [pc, #64]	; 4001cf2c <CyU3PUsbPhyDisable+0x1d4>
4001cee8:	e5900000 	ldr	r0, [r0]
4001ceec:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001cef0:	e59f1034 	ldr	r1, [pc, #52]	; 4001cf2c <CyU3PUsbPhyDisable+0x1d4>
4001cef4:	e5810000 	str	r0, [r1]
4001cef8:	e8bd8010 	pop	{r4, pc}
4001cefc:	40030db0 	.word	0x40030db0
4001cf00:	400326a0 	.word	0x400326a0
4001cf04:	e0030000 	.word	0xe0030000
4001cf08:	40031a78 	.word	0x40031a78
4001cf0c:	40031b18 	.word	0x40031b18
4001cf10:	40031d40 	.word	0x40031d40
4001cf14:	e0033000 	.word	0xe0033000
4001cf18:	40030d84 	.word	0x40030d84
4001cf1c:	40030db4 	.word	0x40030db4
4001cf20:	00001005 	.word	0x00001005
4001cf24:	e0031000 	.word	0xe0031000
4001cf28:	40030c58 	.word	0x40030c58
4001cf2c:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001cf30 <CyU3PUsbPhyEnable>:
4001cf30:	e92d4070 	push	{r4, r5, r6, lr}
4001cf34:	e1a04000 	mov	r4, r0
4001cf38:	e2841005 	add	r1, r4, #5
4001cf3c:	e20100ff 	and	r0, r1, #255	; 0xff
4001cf40:	eb000a7e 	bl	4001f940 <CyU3PUsbAddToEventLog>
4001cf44:	e3e00000 	mvn	r0, #0
4001cf48:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d208 <CyU3PUsbPhyEnable+0x2d8>
4001cf4c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cf50:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cf54:	e3a00008 	mov	r0, #8
4001cf58:	eb0013af 	bl	40021e1c <CyU3PVicEnableInt>
4001cf5c:	e3a00009 	mov	r0, #9
4001cf60:	eb0013ad 	bl	40021e1c <CyU3PVicEnableInt>
4001cf64:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d20c <CyU3PUsbPhyEnable+0x2dc>
4001cf68:	e5900004 	ldr	r0, [r0, #4]
4001cf6c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001cf70:	e59f1294 	ldr	r1, [pc, #660]	; 4001d20c <CyU3PUsbPhyEnable+0x2dc>
4001cf74:	e5810004 	str	r0, [r1, #4]
4001cf78:	e2810802 	add	r0, r1, #131072	; 0x20000
4001cf7c:	e5900000 	ldr	r0, [r0]
4001cf80:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001cf84:	e2811802 	add	r1, r1, #131072	; 0x20000
4001cf88:	e5810000 	str	r0, [r1]
4001cf8c:	e3540000 	cmp	r4, #0
4001cf90:	0a000069 	beq	4001d13c <CyU3PUsbPhyEnable+0x20c>
4001cf94:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001cf98:	e5900014 	ldr	r0, [r0, #20]
4001cf9c:	e59f126c 	ldr	r1, [pc, #620]	; 4001d210 <CyU3PUsbPhyEnable+0x2e0>
4001cfa0:	e5810000 	str	r0, [r1]
4001cfa4:	e3a00000 	mov	r0, #0
4001cfa8:	e59f1264 	ldr	r1, [pc, #612]	; 4001d214 <CyU3PUsbPhyEnable+0x2e4>
4001cfac:	e5810000 	str	r0, [r1]
4001cfb0:	e3e00000 	mvn	r0, #0
4001cfb4:	e59f125c 	ldr	r1, [pc, #604]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001cfb8:	e5810004 	str	r0, [r1, #4]
4001cfbc:	e59f0258 	ldr	r0, [pc, #600]	; 4001d21c <CyU3PUsbPhyEnable+0x2ec>
4001cfc0:	e5810008 	str	r0, [r1, #8]
4001cfc4:	e3e00000 	mvn	r0, #0
4001cfc8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001cfcc:	e59f024c 	ldr	r0, [pc, #588]	; 4001d220 <CyU3PUsbPhyEnable+0x2f0>
4001cfd0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001cfd4:	e59f0248 	ldr	r0, [pc, #584]	; 4001d224 <CyU3PUsbPhyEnable+0x2f4>
4001cfd8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001cfdc:	e3500000 	cmp	r0, #0
4001cfe0:	0a000003 	beq	4001cff4 <CyU3PUsbPhyEnable+0xc4>
4001cfe4:	e1a00001 	mov	r0, r1
4001cfe8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001cfec:	e3800c01 	orr	r0, r0, #256	; 0x100
4001cff0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001cff4:	e3a00000 	mov	r0, #0
4001cff8:	e59f1224 	ldr	r1, [pc, #548]	; 4001d224 <CyU3PUsbPhyEnable+0x2f4>
4001cffc:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d000:	e59f0220 	ldr	r0, [pc, #544]	; 4001d228 <CyU3PUsbPhyEnable+0x2f8>
4001d004:	e5900000 	ldr	r0, [r0]
4001d008:	e3500000 	cmp	r0, #0
4001d00c:	0a000003 	beq	4001d020 <CyU3PUsbPhyEnable+0xf0>
4001d010:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d014:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d018:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d01c:	ea000002 	b	4001d02c <CyU3PUsbPhyEnable+0xfc>
4001d020:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d024:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d028:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d02c:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d22c <CyU3PUsbPhyEnable+0x2fc>
4001d030:	e5900000 	ldr	r0, [r0]
4001d034:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d038:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d03c:	eb00139b 	bl	40021eb0 <CyFx3Usb3LnkSetup>
4001d040:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d230 <CyU3PUsbPhyEnable+0x300>
4001d044:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d048:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d04c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d050:	e1c10000 	bic	r0, r1, r0
4001d054:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d058:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d05c:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d060:	e3a00000 	mov	r0, #0
4001d064:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d224 <CyU3PUsbPhyEnable+0x2f4>
4001d068:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d06c:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d070:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d074:	e581001c 	str	r0, [r1, #28]
4001d078:	e3a01002 	mov	r1, #2
4001d07c:	e1a00001 	mov	r0, r1
4001d080:	ebfffc82 	bl	4001c290 <CyU3PSetUsbCoreClock>
4001d084:	eb00135b 	bl	40021df8 <CyU3PVicDisableAllInterrupts>
4001d088:	e1a05000 	mov	r5, r0
4001d08c:	e3a00000 	mov	r0, #0
4001d090:	e59f119c 	ldr	r1, [pc, #412]	; 4001d234 <CyU3PUsbPhyEnable+0x304>
4001d094:	e5810000 	str	r0, [r1]
4001d098:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d09c:	e59f1174 	ldr	r1, [pc, #372]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d0a0:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d0a4:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d0a8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d0ac:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d0b0:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d0b4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d0b8:	e3a00064 	mov	r0, #100	; 0x64
4001d0bc:	ebffd8d3 	bl	40013410 <CyU3PBusyWait>
4001d0c0:	e59f0150 	ldr	r0, [pc, #336]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d0c4:	e5900000 	ldr	r0, [r0]
4001d0c8:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d0cc:	e59f1144 	ldr	r1, [pc, #324]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d0d0:	e5810000 	str	r0, [r1]
4001d0d4:	e59f015c 	ldr	r0, [pc, #348]	; 4001d238 <CyU3PUsbPhyEnable+0x308>
4001d0d8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d0dc:	e3a01080 	mov	r1, #128	; 0x80
4001d0e0:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d0e4:	eb0013b7 	bl	40021fc8 <CyFx3UsbWritePhyReg>
4001d0e8:	e3a01d06 	mov	r1, #384	; 0x180
4001d0ec:	e59f0148 	ldr	r0, [pc, #328]	; 4001d23c <CyU3PUsbPhyEnable+0x30c>
4001d0f0:	eb0013b4 	bl	40021fc8 <CyFx3UsbWritePhyReg>
4001d0f4:	e3a01080 	mov	r1, #128	; 0x80
4001d0f8:	e59f0140 	ldr	r0, [pc, #320]	; 4001d240 <CyU3PUsbPhyEnable+0x310>
4001d0fc:	eb0013b1 	bl	40021fc8 <CyFx3UsbWritePhyReg>
4001d100:	e1a00005 	mov	r0, r5
4001d104:	eb001349 	bl	40021e30 <CyU3PVicEnableInterrupts>
4001d108:	e59f0108 	ldr	r0, [pc, #264]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d10c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d110:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d114:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d218 <CyU3PUsbPhyEnable+0x2e8>
4001d118:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d11c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d120:	e581001c 	str	r0, [r1, #28]
4001d124:	e3a00064 	mov	r0, #100	; 0x64
4001d128:	ebffd8b8 	bl	40013410 <CyU3PBusyWait>
4001d12c:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d130:	e59f110c 	ldr	r1, [pc, #268]	; 4001d244 <CyU3PUsbPhyEnable+0x314>
4001d134:	e5810008 	str	r0, [r1, #8]
4001d138:	ea000031 	b	4001d204 <CyU3PUsbPhyEnable+0x2d4>
4001d13c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d224 <CyU3PUsbPhyEnable+0x2f4>
4001d140:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d144:	e3500000 	cmp	r0, #0
4001d148:	0a000000 	beq	4001d150 <CyU3PUsbPhyEnable+0x220>
4001d14c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d150:	e3a00001 	mov	r0, #1
4001d154:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d224 <CyU3PUsbPhyEnable+0x2f4>
4001d158:	e5c10009 	strb	r0, [r1, #9]
4001d15c:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d160:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d248 <CyU3PUsbPhyEnable+0x318>
4001d164:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d168:	e3a00000 	mov	r0, #0
4001d16c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d224 <CyU3PUsbPhyEnable+0x2f4>
4001d170:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d174:	e59f008c 	ldr	r0, [pc, #140]	; 4001d208 <CyU3PUsbPhyEnable+0x2d8>
4001d178:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d17c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d180:	e59f1080 	ldr	r1, [pc, #128]	; 4001d208 <CyU3PUsbPhyEnable+0x2d8>
4001d184:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d188:	e1a00001 	mov	r0, r1
4001d18c:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d190:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d194:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d198:	e3a00002 	mov	r0, #2
4001d19c:	ebffd89b 	bl	40013410 <CyU3PBusyWait>
4001d1a0:	e59f0060 	ldr	r0, [pc, #96]	; 4001d208 <CyU3PUsbPhyEnable+0x2d8>
4001d1a4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d1a8:	e2000001 	and	r0, r0, #1
4001d1ac:	e59f1054 	ldr	r1, [pc, #84]	; 4001d208 <CyU3PUsbPhyEnable+0x2d8>
4001d1b0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d1b4:	e1a00001 	mov	r0, r1
4001d1b8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d1bc:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d1c0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d1c4:	e3a00064 	mov	r0, #100	; 0x64
4001d1c8:	ebffd890 	bl	40013410 <CyU3PBusyWait>
4001d1cc:	eb00132b 	bl	40021e80 <CyFx3Usb2PhySetup>
4001d1d0:	e59f0074 	ldr	r0, [pc, #116]	; 4001d24c <CyU3PUsbPhyEnable+0x31c>
4001d1d4:	e59f102c 	ldr	r1, [pc, #44]	; 4001d208 <CyU3PUsbPhyEnable+0x2d8>
4001d1d8:	e5810008 	str	r0, [r1, #8]
4001d1dc:	e3a00050 	mov	r0, #80	; 0x50
4001d1e0:	ebffd88a 	bl	40013410 <CyU3PBusyWait>
4001d1e4:	e3a01000 	mov	r1, #0
4001d1e8:	e3a00002 	mov	r0, #2
4001d1ec:	ebfffc27 	bl	4001c290 <CyU3PSetUsbCoreClock>
4001d1f0:	e59f0010 	ldr	r0, [pc, #16]	; 4001d208 <CyU3PUsbPhyEnable+0x2d8>
4001d1f4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d1f8:	e3c00008 	bic	r0, r0, #8
4001d1fc:	e59f1004 	ldr	r1, [pc, #4]	; 4001d208 <CyU3PUsbPhyEnable+0x2d8>
4001d200:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d204:	eaffffd0 	b	4001d14c <CyU3PUsbPhyEnable+0x21c>
4001d208:	e0031000 	.word	0xe0031000
4001d20c:	e0030000 	.word	0xe0030000
4001d210:	40030d84 	.word	0x40030d84
4001d214:	40030db4 	.word	0x40030db4
4001d218:	e0033000 	.word	0xe0033000
4001d21c:	00038081 	.word	0x00038081
4001d220:	00004a3d 	.word	0x00004a3d
4001d224:	40031d40 	.word	0x40031d40
4001d228:	40030d40 	.word	0x40030d40
4001d22c:	40030d8c 	.word	0x40030d8c
4001d230:	00000908 	.word	0x00000908
4001d234:	40030d74 	.word	0x40030d74
4001d238:	00310418 	.word	0x00310418
4001d23c:	00001006 	.word	0x00001006
4001d240:	00001024 	.word	0x00001024
4001d244:	e0052000 	.word	0xe0052000
4001d248:	e0032000 	.word	0xe0032000
4001d24c:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d250 <CyU3PUsbPowerOn>:
4001d250:	e92d4010 	push	{r4, lr}
4001d254:	eb00133b 	bl	40021f48 <CyFx3UsbPowerOn>
4001d258:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d25c <CyU3PUsbResetEp>:
4001d25c:	e92d4070 	push	{r4, r5, r6, lr}
4001d260:	e1a04000 	mov	r4, r0
4001d264:	e204507f 	and	r5, r4, #127	; 0x7f
4001d268:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d32c <CyU3PUsbResetEp+0xd0>
4001d26c:	e5d00008 	ldrb	r0, [r0, #8]
4001d270:	e3500000 	cmp	r0, #0
4001d274:	1a000001 	bne	4001d280 <CyU3PUsbResetEp+0x24>
4001d278:	e3a00042 	mov	r0, #66	; 0x42
4001d27c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d280:	e355000f 	cmp	r5, #15
4001d284:	da000001 	ble	4001d290 <CyU3PUsbResetEp+0x34>
4001d288:	e3a00040 	mov	r0, #64	; 0x40
4001d28c:	eafffffa 	b	4001d27c <CyU3PUsbResetEp+0x20>
4001d290:	e3e01000 	mvn	r1, #0
4001d294:	e59f0094 	ldr	r0, [pc, #148]	; 4001d330 <CyU3PUsbResetEp+0xd4>
4001d298:	ebffb331 	bl	40009f64 <_txe_mutex_get>
4001d29c:	ebfffe2b 	bl	4001cb50 <CyU3PUsbGetSpeed>
4001d2a0:	e3500003 	cmp	r0, #3
4001d2a4:	1a00001c 	bne	4001d31c <CyU3PUsbResetEp+0xc0>
4001d2a8:	e59f0084 	ldr	r0, [pc, #132]	; 4001d334 <CyU3PUsbResetEp+0xd8>
4001d2ac:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d2b0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d2b4:	e59f1078 	ldr	r1, [pc, #120]	; 4001d334 <CyU3PUsbResetEp+0xd8>
4001d2b8:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d2bc:	e3140080 	tst	r4, #128	; 0x80
4001d2c0:	0a00000a 	beq	4001d2f0 <CyU3PUsbResetEp+0x94>
4001d2c4:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d2c8:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d2cc:	e3866011 	orr	r6, r6, #17
4001d2d0:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d2d4:	e3a00002 	mov	r0, #2
4001d2d8:	ebffd84c 	bl	40013410 <CyU3PBusyWait>
4001d2dc:	e3c60010 	bic	r0, r6, #16
4001d2e0:	e3806001 	orr	r6, r0, #1
4001d2e4:	e59f004c 	ldr	r0, [pc, #76]	; 4001d338 <CyU3PUsbResetEp+0xdc>
4001d2e8:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d2ec:	ea00000a 	b	4001d31c <CyU3PUsbResetEp+0xc0>
4001d2f0:	e59f0044 	ldr	r0, [pc, #68]	; 4001d33c <CyU3PUsbResetEp+0xe0>
4001d2f4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d2f8:	e3806011 	orr	r6, r0, #17
4001d2fc:	e59f0038 	ldr	r0, [pc, #56]	; 4001d33c <CyU3PUsbResetEp+0xe0>
4001d300:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d304:	e3a00002 	mov	r0, #2
4001d308:	ebffd840 	bl	40013410 <CyU3PBusyWait>
4001d30c:	e3c60010 	bic	r0, r6, #16
4001d310:	e3806001 	orr	r6, r0, #1
4001d314:	e59f0020 	ldr	r0, [pc, #32]	; 4001d33c <CyU3PUsbResetEp+0xe0>
4001d318:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d31c:	e59f000c 	ldr	r0, [pc, #12]	; 4001d330 <CyU3PUsbResetEp+0xd4>
4001d320:	ebffb344 	bl	4000a038 <_txe_mutex_put>
4001d324:	e3a00000 	mov	r0, #0
4001d328:	eaffffd3 	b	4001d27c <CyU3PUsbResetEp+0x20>
4001d32c:	40031d40 	.word	0x40031d40
4001d330:	40031ee0 	.word	0x40031ee0
4001d334:	e0033000 	.word	0xe0033000
4001d338:	e0033500 	.word	0xe0033500
4001d33c:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d340 <CyU3PUsbSendEP0Data>:
4001d340:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d344:	e1a04000 	mov	r4, r0
4001d348:	e1a05001 	mov	r5, r1
4001d34c:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d500 <CyU3PUsbSendEP0Data+0x1c0>
4001d350:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d504 <CyU3PUsbSendEP0Data+0x1c4>
4001d354:	e5d00008 	ldrb	r0, [r0, #8]
4001d358:	e3500000 	cmp	r0, #0
4001d35c:	1a000001 	bne	4001d368 <CyU3PUsbSendEP0Data+0x28>
4001d360:	e3a00042 	mov	r0, #66	; 0x42
4001d364:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d368:	e3550000 	cmp	r5, #0
4001d36c:	1a000001 	bne	4001d378 <CyU3PUsbSendEP0Data+0x38>
4001d370:	e3a00040 	mov	r0, #64	; 0x40
4001d374:	eafffffa 	b	4001d364 <CyU3PUsbSendEP0Data+0x24>
4001d378:	e3e01000 	mvn	r1, #0
4001d37c:	e59f0184 	ldr	r0, [pc, #388]	; 4001d508 <CyU3PUsbSendEP0Data+0x1c8>
4001d380:	ebffb2f7 	bl	40009f64 <_txe_mutex_get>
4001d384:	e59f0180 	ldr	r0, [pc, #384]	; 4001d50c <CyU3PUsbSendEP0Data+0x1cc>
4001d388:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d38c:	e3c00008 	bic	r0, r0, #8
4001d390:	e59f1174 	ldr	r1, [pc, #372]	; 4001d50c <CyU3PUsbSendEP0Data+0x1cc>
4001d394:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d398:	e59f0164 	ldr	r0, [pc, #356]	; 4001d504 <CyU3PUsbSendEP0Data+0x1c4>
4001d39c:	e5900018 	ldr	r0, [r0, #24]
4001d3a0:	e3500000 	cmp	r0, #0
4001d3a4:	1a000002 	bne	4001d3b4 <CyU3PUsbSendEP0Data+0x74>
4001d3a8:	ebfffdf0 	bl	4001cb70 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d3ac:	e3500000 	cmp	r0, #0
4001d3b0:	0a000008 	beq	4001d3d8 <CyU3PUsbSendEP0Data+0x98>
4001d3b4:	e59f0150 	ldr	r0, [pc, #336]	; 4001d50c <CyU3PUsbSendEP0Data+0x1cc>
4001d3b8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d3bc:	e3800008 	orr	r0, r0, #8
4001d3c0:	e59f1144 	ldr	r1, [pc, #324]	; 4001d50c <CyU3PUsbSendEP0Data+0x1cc>
4001d3c4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d3c8:	e59f0138 	ldr	r0, [pc, #312]	; 4001d508 <CyU3PUsbSendEP0Data+0x1c8>
4001d3cc:	ebffb319 	bl	4000a038 <_txe_mutex_put>
4001d3d0:	e3a00000 	mov	r0, #0
4001d3d4:	eaffffe2 	b	4001d364 <CyU3PUsbSendEP0Data+0x24>
4001d3d8:	e59f012c 	ldr	r0, [pc, #300]	; 4001d50c <CyU3PUsbSendEP0Data+0x1cc>
4001d3dc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d3e0:	e3800008 	orr	r0, r0, #8
4001d3e4:	e59f1120 	ldr	r1, [pc, #288]	; 4001d50c <CyU3PUsbSendEP0Data+0x1cc>
4001d3e8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d3ec:	e1a00001 	mov	r0, r1
4001d3f0:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d3f4:	e1500004 	cmp	r0, r4
4001d3f8:	2a000003 	bcs	4001d40c <CyU3PUsbSendEP0Data+0xcc>
4001d3fc:	e1a00001 	mov	r0, r1
4001d400:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d404:	e1a04800 	lsl	r4, r0, #16
4001d408:	e1a04824 	lsr	r4, r4, #16
4001d40c:	eb0003b8 	bl	4001e2f4 <GetUsbLinkActive>
4001d410:	e1cd40b4 	strh	r4, [sp, #4]
4001d414:	e284000f 	add	r0, r4, #15
4001d418:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d510 <CyU3PUsbSendEP0Data+0x1d0>
4001d41c:	e0000001 	and	r0, r0, r1
4001d420:	e1cd00b6 	strh	r0, [sp, #6]
4001d424:	e58d5000 	str	r5, [sp]
4001d428:	e3a00000 	mov	r0, #0
4001d42c:	e1cd00b8 	strh	r0, [sp, #8]
4001d430:	e1a0100d 	mov	r1, sp
4001d434:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d514 <CyU3PUsbSendEP0Data+0x1d4>
4001d438:	ebffe571 	bl	40016a04 <CyU3PDmaChannelSetupSendBuffer>
4001d43c:	e20060ff 	and	r6, r0, #255	; 0xff
4001d440:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d508 <CyU3PUsbSendEP0Data+0x1c8>
4001d444:	ebffb2fb 	bl	4000a038 <_txe_mutex_put>
4001d448:	e3560000 	cmp	r6, #0
4001d44c:	1a000029 	bne	4001d4f8 <CyU3PUsbSendEP0Data+0x1b8>
4001d450:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d504 <CyU3PUsbSendEP0Data+0x1c4>
4001d454:	e5900014 	ldr	r0, [r0, #20]
4001d458:	e3500000 	cmp	r0, #0
4001d45c:	0a000000 	beq	4001d464 <CyU3PUsbSendEP0Data+0x124>
4001d460:	ebfffc1d 	bl	4001c4dc <CyU3PUsbAckSetup>
4001d464:	ea00000d 	b	4001d4a0 <CyU3PUsbSendEP0Data+0x160>
4001d468:	e3a01064 	mov	r1, #100	; 0x64
4001d46c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d514 <CyU3PUsbSendEP0Data+0x1d4>
4001d470:	ebffe5f1 	bl	40016c3c <CyU3PDmaChannelWaitForCompletion>
4001d474:	e20060ff 	and	r6, r0, #255	; 0xff
4001d478:	e3560045 	cmp	r6, #69	; 0x45
4001d47c:	1a000006 	bne	4001d49c <CyU3PUsbSendEP0Data+0x15c>
4001d480:	ebfffdba 	bl	4001cb70 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d484:	e3500000 	cmp	r0, #0
4001d488:	0a000001 	beq	4001d494 <CyU3PUsbSendEP0Data+0x154>
4001d48c:	e3a00000 	mov	r0, #0
4001d490:	eaffffb3 	b	4001d364 <CyU3PUsbSendEP0Data+0x24>
4001d494:	e2477064 	sub	r7, r7, #100	; 0x64
4001d498:	ea000000 	b	4001d4a0 <CyU3PUsbSendEP0Data+0x160>
4001d49c:	ea000001 	b	4001d4a8 <CyU3PUsbSendEP0Data+0x168>
4001d4a0:	e3570000 	cmp	r7, #0
4001d4a4:	1affffef 	bne	4001d468 <CyU3PUsbSendEP0Data+0x128>
4001d4a8:	e1a00000 	nop			; (mov r0, r0)
4001d4ac:	e3560000 	cmp	r6, #0
4001d4b0:	0a000010 	beq	4001d4f8 <CyU3PUsbSendEP0Data+0x1b8>
4001d4b4:	e3e01000 	mvn	r1, #0
4001d4b8:	e59f0048 	ldr	r0, [pc, #72]	; 4001d508 <CyU3PUsbSendEP0Data+0x1c8>
4001d4bc:	ebffb2a8 	bl	40009f64 <_txe_mutex_get>
4001d4c0:	e3a01001 	mov	r1, #1
4001d4c4:	e3a00080 	mov	r0, #128	; 0x80
4001d4c8:	eb000101 	bl	4001d8d4 <CyU3PUsbSetEpNak>
4001d4cc:	e3a00064 	mov	r0, #100	; 0x64
4001d4d0:	ebffd7ce 	bl	40013410 <CyU3PBusyWait>
4001d4d4:	e59f0038 	ldr	r0, [pc, #56]	; 4001d514 <CyU3PUsbSendEP0Data+0x1d4>
4001d4d8:	ebffe306 	bl	400160f8 <CyU3PDmaChannelReset>
4001d4dc:	e3a00080 	mov	r0, #128	; 0x80
4001d4e0:	ebfffcf5 	bl	4001c8bc <CyU3PUsbFlushEp>
4001d4e4:	e3a01000 	mov	r1, #0
4001d4e8:	e3a00080 	mov	r0, #128	; 0x80
4001d4ec:	eb0000f8 	bl	4001d8d4 <CyU3PUsbSetEpNak>
4001d4f0:	e59f0010 	ldr	r0, [pc, #16]	; 4001d508 <CyU3PUsbSendEP0Data+0x1c8>
4001d4f4:	ebffb2cf 	bl	4000a038 <_txe_mutex_put>
4001d4f8:	e1a00006 	mov	r0, r6
4001d4fc:	eaffff98 	b	4001d364 <CyU3PUsbSendEP0Data+0x24>
4001d500:	00001388 	.word	0x00001388
4001d504:	40031d40 	.word	0x40031d40
4001d508:	40031ee0 	.word	0x40031ee0
4001d50c:	e0031000 	.word	0xe0031000
4001d510:	0000fff0 	.word	0x0000fff0
4001d514:	40031a78 	.word	0x40031a78

Disassembly of section i.CyU3PUsbSendErdy:

4001d518 <CyU3PUsbSendErdy>:
4001d518:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d51c:	e1a04000 	mov	r4, r0
4001d520:	e1a05001 	mov	r5, r1
4001d524:	e1a0000d 	mov	r0, sp
4001d528:	e3a02000 	mov	r2, #0
4001d52c:	e1a03002 	mov	r3, r2
4001d530:	e1a06002 	mov	r6, r2
4001d534:	e880004c 	stm	r0, {r2, r3, r6}
4001d538:	e204600f 	and	r6, r4, #15
4001d53c:	e2047080 	and	r7, r4, #128	; 0x80
4001d540:	e59f00b4 	ldr	r0, [pc, #180]	; 4001d5fc <CyU3PUsbSendErdy+0xe4>
4001d544:	e5d00008 	ldrb	r0, [r0, #8]
4001d548:	e3500000 	cmp	r0, #0
4001d54c:	1a000001 	bne	4001d558 <CyU3PUsbSendErdy+0x40>
4001d550:	e3a00042 	mov	r0, #66	; 0x42
4001d554:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d558:	ebfffd7c 	bl	4001cb50 <CyU3PUsbGetSpeed>
4001d55c:	e3500003 	cmp	r0, #3
4001d560:	1a000004 	bne	4001d578 <CyU3PUsbSendErdy+0x60>
4001d564:	e59f0094 	ldr	r0, [pc, #148]	; 4001d600 <CyU3PUsbSendErdy+0xe8>
4001d568:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d56c:	e200003f 	and	r0, r0, #63	; 0x3f
4001d570:	e3500010 	cmp	r0, #16
4001d574:	0a000001 	beq	4001d580 <CyU3PUsbSendErdy+0x68>
4001d578:	e3a000ff 	mov	r0, #255	; 0xff
4001d57c:	eafffff4 	b	4001d554 <CyU3PUsbSendErdy+0x3c>
4001d580:	e204007f 	and	r0, r4, #127	; 0x7f
4001d584:	e350000f 	cmp	r0, #15
4001d588:	da000001 	ble	4001d594 <CyU3PUsbSendErdy+0x7c>
4001d58c:	e3a00040 	mov	r0, #64	; 0x40
4001d590:	eaffffef 	b	4001d554 <CyU3PUsbSendErdy+0x3c>
4001d594:	e59f0064 	ldr	r0, [pc, #100]	; 4001d600 <CyU3PUsbSendErdy+0xe8>
4001d598:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d59c:	e3a01004 	mov	r1, #4
4001d5a0:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d5a4:	e58d0000 	str	r0, [sp]
4001d5a8:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001d5ac:	e3800003 	orr	r0, r0, #3
4001d5b0:	e1800406 	orr	r0, r0, r6, lsl #8
4001d5b4:	e58d0004 	str	r0, [sp, #4]
4001d5b8:	e3570000 	cmp	r7, #0
4001d5bc:	0a000005 	beq	4001d5d8 <CyU3PUsbSendErdy+0xc0>
4001d5c0:	e59f003c 	ldr	r0, [pc, #60]	; 4001d604 <CyU3PUsbSendErdy+0xec>
4001d5c4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d5c8:	e3100008 	tst	r0, #8
4001d5cc:	0a000006 	beq	4001d5ec <CyU3PUsbSendErdy+0xd4>
4001d5d0:	e58d5008 	str	r5, [sp, #8]
4001d5d4:	ea000004 	b	4001d5ec <CyU3PUsbSendErdy+0xd4>
4001d5d8:	e59f0028 	ldr	r0, [pc, #40]	; 4001d608 <CyU3PUsbSendErdy+0xf0>
4001d5dc:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d5e0:	e3100008 	tst	r0, #8
4001d5e4:	0a000000 	beq	4001d5ec <CyU3PUsbSendErdy+0xd4>
4001d5e8:	e58d5008 	str	r5, [sp, #8]
4001d5ec:	e1a0000d 	mov	r0, sp
4001d5f0:	eb00123d 	bl	40021eec <CyFx3Usb3SendTP>
4001d5f4:	e3a00000 	mov	r0, #0
4001d5f8:	eaffffd5 	b	4001d554 <CyU3PUsbSendErdy+0x3c>
4001d5fc:	40031d40 	.word	0x40031d40
4001d600:	e0033000 	.word	0xe0033000
4001d604:	e0033500 	.word	0xe0033500
4001d608:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001d60c <CyU3PUsbSendNrdy>:
4001d60c:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d610:	e1a04000 	mov	r4, r0
4001d614:	e1a05001 	mov	r5, r1
4001d618:	e1a0000d 	mov	r0, sp
4001d61c:	e3a02000 	mov	r2, #0
4001d620:	e1a03002 	mov	r3, r2
4001d624:	e1a06002 	mov	r6, r2
4001d628:	e880004c 	stm	r0, {r2, r3, r6}
4001d62c:	e204600f 	and	r6, r4, #15
4001d630:	e2047080 	and	r7, r4, #128	; 0x80
4001d634:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d6ec <CyU3PUsbSendNrdy+0xe0>
4001d638:	e5d00008 	ldrb	r0, [r0, #8]
4001d63c:	e3500000 	cmp	r0, #0
4001d640:	1a000001 	bne	4001d64c <CyU3PUsbSendNrdy+0x40>
4001d644:	e3a00042 	mov	r0, #66	; 0x42
4001d648:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d64c:	ebfffd3f 	bl	4001cb50 <CyU3PUsbGetSpeed>
4001d650:	e3500003 	cmp	r0, #3
4001d654:	1a000004 	bne	4001d66c <CyU3PUsbSendNrdy+0x60>
4001d658:	e59f0090 	ldr	r0, [pc, #144]	; 4001d6f0 <CyU3PUsbSendNrdy+0xe4>
4001d65c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d660:	e200003f 	and	r0, r0, #63	; 0x3f
4001d664:	e3500010 	cmp	r0, #16
4001d668:	0a000001 	beq	4001d674 <CyU3PUsbSendNrdy+0x68>
4001d66c:	e3a000ff 	mov	r0, #255	; 0xff
4001d670:	eafffff4 	b	4001d648 <CyU3PUsbSendNrdy+0x3c>
4001d674:	e204007f 	and	r0, r4, #127	; 0x7f
4001d678:	e350000f 	cmp	r0, #15
4001d67c:	da000001 	ble	4001d688 <CyU3PUsbSendNrdy+0x7c>
4001d680:	e3a00040 	mov	r0, #64	; 0x40
4001d684:	eaffffef 	b	4001d648 <CyU3PUsbSendNrdy+0x3c>
4001d688:	e59f0060 	ldr	r0, [pc, #96]	; 4001d6f0 <CyU3PUsbSendNrdy+0xe4>
4001d68c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d690:	e3a01004 	mov	r1, #4
4001d694:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d698:	e58d0000 	str	r0, [sp]
4001d69c:	e3870002 	orr	r0, r7, #2
4001d6a0:	e1800406 	orr	r0, r0, r6, lsl #8
4001d6a4:	e58d0004 	str	r0, [sp, #4]
4001d6a8:	e3570000 	cmp	r7, #0
4001d6ac:	0a000005 	beq	4001d6c8 <CyU3PUsbSendNrdy+0xbc>
4001d6b0:	e59f003c 	ldr	r0, [pc, #60]	; 4001d6f4 <CyU3PUsbSendNrdy+0xe8>
4001d6b4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d6b8:	e3100008 	tst	r0, #8
4001d6bc:	0a000006 	beq	4001d6dc <CyU3PUsbSendNrdy+0xd0>
4001d6c0:	e58d5008 	str	r5, [sp, #8]
4001d6c4:	ea000004 	b	4001d6dc <CyU3PUsbSendNrdy+0xd0>
4001d6c8:	e59f0028 	ldr	r0, [pc, #40]	; 4001d6f8 <CyU3PUsbSendNrdy+0xec>
4001d6cc:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d6d0:	e3100008 	tst	r0, #8
4001d6d4:	0a000000 	beq	4001d6dc <CyU3PUsbSendNrdy+0xd0>
4001d6d8:	e58d5008 	str	r5, [sp, #8]
4001d6dc:	e1a0000d 	mov	r0, sp
4001d6e0:	eb001201 	bl	40021eec <CyFx3Usb3SendTP>
4001d6e4:	e3a00000 	mov	r0, #0
4001d6e8:	eaffffd6 	b	4001d648 <CyU3PUsbSendNrdy+0x3c>
4001d6ec:	40031d40 	.word	0x40031d40
4001d6f0:	e0033000 	.word	0xe0033000
4001d6f4:	e0033500 	.word	0xe0033500
4001d6f8:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001d6fc <CyU3PUsbSetDesc>:
4001d6fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d700:	e1a03000 	mov	r3, r0
4001d704:	e3a0c000 	mov	ip, #0
4001d708:	e59f01b8 	ldr	r0, [pc, #440]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d70c:	e5d00008 	ldrb	r0, [r0, #8]
4001d710:	e3500000 	cmp	r0, #0
4001d714:	1a000001 	bne	4001d720 <CyU3PUsbSetDesc+0x24>
4001d718:	e3a00042 	mov	r0, #66	; 0x42
4001d71c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d720:	e3520000 	cmp	r2, #0
4001d724:	1a000001 	bne	4001d730 <CyU3PUsbSetDesc+0x34>
4001d728:	e3a00040 	mov	r0, #64	; 0x40
4001d72c:	eafffffa 	b	4001d71c <CyU3PUsbSetDesc+0x20>
4001d730:	e3530009 	cmp	r3, #9
4001d734:	308ff103 	addcc	pc, pc, r3, lsl #2
4001d738:	ea00004d 	b	4001d874 <CyU3PUsbSetDesc+0x178>
4001d73c:	ea000007 	b	4001d760 <CyU3PUsbSetDesc+0x64>
4001d740:	ea00000a 	b	4001d770 <CyU3PUsbSetDesc+0x74>
4001d744:	ea000011 	b	4001d790 <CyU3PUsbSetDesc+0x94>
4001d748:	ea000022 	b	4001d7d8 <CyU3PUsbSetDesc+0xdc>
4001d74c:	ea00002f 	b	4001d810 <CyU3PUsbSetDesc+0x114>
4001d750:	ea00003c 	b	4001d848 <CyU3PUsbSetDesc+0x14c>
4001d754:	ea000011 	b	4001d7a0 <CyU3PUsbSetDesc+0xa4>
4001d758:	ea000008 	b	4001d780 <CyU3PUsbSetDesc+0x84>
4001d75c:	ea000040 	b	4001d864 <CyU3PUsbSetDesc+0x168>
4001d760:	e1a00000 	nop			; (mov r0, r0)
4001d764:	e59f0160 	ldr	r0, [pc, #352]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d768:	e5802004 	str	r2, [r0, #4]
4001d76c:	ea000043 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d770:	e1a00000 	nop			; (mov r0, r0)
4001d774:	e59f0150 	ldr	r0, [pc, #336]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d778:	e5802000 	str	r2, [r0]
4001d77c:	ea00003f 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d780:	e1a00000 	nop			; (mov r0, r0)
4001d784:	e59f0140 	ldr	r0, [pc, #320]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d788:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001d78c:	ea00003b 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d790:	e1a00000 	nop			; (mov r0, r0)
4001d794:	e59f0130 	ldr	r0, [pc, #304]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d798:	e5802008 	str	r2, [r0, #8]
4001d79c:	ea000037 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d7a0:	e1a00000 	nop			; (mov r0, r0)
4001d7a4:	e59f0120 	ldr	r0, [pc, #288]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d7a8:	e580201c 	str	r2, [r0, #28]
4001d7ac:	e5d20007 	ldrb	r0, [r2, #7]
4001d7b0:	e3100040 	tst	r0, #64	; 0x40
4001d7b4:	0a000003 	beq	4001d7c8 <CyU3PUsbSetDesc+0xcc>
4001d7b8:	e3a00001 	mov	r0, #1
4001d7bc:	e59fe104 	ldr	lr, [pc, #260]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d7c0:	e5ce0006 	strb	r0, [lr, #6]
4001d7c4:	ea000002 	b	4001d7d4 <CyU3PUsbSetDesc+0xd8>
4001d7c8:	e3a00000 	mov	r0, #0
4001d7cc:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d7d0:	e5ce0006 	strb	r0, [lr, #6]
4001d7d4:	ea000029 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d7d8:	e1a00000 	nop			; (mov r0, r0)
4001d7dc:	e59f00e8 	ldr	r0, [pc, #232]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d7e0:	e5802018 	str	r2, [r0, #24]
4001d7e4:	e5d20007 	ldrb	r0, [r2, #7]
4001d7e8:	e3100040 	tst	r0, #64	; 0x40
4001d7ec:	0a000003 	beq	4001d800 <CyU3PUsbSetDesc+0x104>
4001d7f0:	e3a00001 	mov	r0, #1
4001d7f4:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d7f8:	e5ce0006 	strb	r0, [lr, #6]
4001d7fc:	ea000002 	b	4001d80c <CyU3PUsbSetDesc+0x110>
4001d800:	e3a00000 	mov	r0, #0
4001d804:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d808:	e5ce0006 	strb	r0, [lr, #6]
4001d80c:	ea00001b 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d810:	e1a00000 	nop			; (mov r0, r0)
4001d814:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d818:	e5802014 	str	r2, [r0, #20]
4001d81c:	e5d20007 	ldrb	r0, [r2, #7]
4001d820:	e3100040 	tst	r0, #64	; 0x40
4001d824:	0a000003 	beq	4001d838 <CyU3PUsbSetDesc+0x13c>
4001d828:	e3a00001 	mov	r0, #1
4001d82c:	e59fe094 	ldr	lr, [pc, #148]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d830:	e5ce0006 	strb	r0, [lr, #6]
4001d834:	ea000002 	b	4001d844 <CyU3PUsbSetDesc+0x148>
4001d838:	e3a00000 	mov	r0, #0
4001d83c:	e59fe084 	ldr	lr, [pc, #132]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d840:	e5ce0006 	strb	r0, [lr, #6]
4001d844:	ea00000d 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d848:	e1a00000 	nop			; (mov r0, r0)
4001d84c:	e3510010 	cmp	r1, #16
4001d850:	da000000 	ble	4001d858 <CyU3PUsbSetDesc+0x15c>
4001d854:	e3a0c04b 	mov	ip, #75	; 0x4b
4001d858:	e59f0070 	ldr	r0, [pc, #112]	; 4001d8d0 <CyU3PUsbSetDesc+0x1d4>
4001d85c:	e7802101 	str	r2, [r0, r1, lsl #2]
4001d860:	ea000006 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d864:	e1a00000 	nop			; (mov r0, r0)
4001d868:	e59f005c 	ldr	r0, [pc, #92]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d86c:	e5802070 	str	r2, [r0, #112]	; 0x70
4001d870:	ea000002 	b	4001d880 <CyU3PUsbSetDesc+0x184>
4001d874:	e1a00000 	nop			; (mov r0, r0)
4001d878:	e3a00050 	mov	r0, #80	; 0x50
4001d87c:	eaffffa6 	b	4001d71c <CyU3PUsbSetDesc+0x20>
4001d880:	e1a00000 	nop			; (mov r0, r0)
4001d884:	e59f0040 	ldr	r0, [pc, #64]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d888:	e5900000 	ldr	r0, [r0]
4001d88c:	e3500000 	cmp	r0, #0
4001d890:	0a00000a 	beq	4001d8c0 <CyU3PUsbSetDesc+0x1c4>
4001d894:	e59f0030 	ldr	r0, [pc, #48]	; 4001d8cc <CyU3PUsbSetDesc+0x1d0>
4001d898:	e5900020 	ldr	r0, [r0, #32]
4001d89c:	e3500000 	cmp	r0, #0
4001d8a0:	0a000006 	beq	4001d8c0 <CyU3PUsbSetDesc+0x1c4>
4001d8a4:	e59f001c 	ldr	r0, [pc, #28]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d8a8:	e5d00008 	ldrb	r0, [r0, #8]
4001d8ac:	e3500003 	cmp	r0, #3
4001d8b0:	aa000002 	bge	4001d8c0 <CyU3PUsbSetDesc+0x1c4>
4001d8b4:	e3a00003 	mov	r0, #3
4001d8b8:	e59fe008 	ldr	lr, [pc, #8]	; 4001d8c8 <CyU3PUsbSetDesc+0x1cc>
4001d8bc:	e5ce0008 	strb	r0, [lr, #8]
4001d8c0:	e1a0000c 	mov	r0, ip
4001d8c4:	eaffff94 	b	4001d71c <CyU3PUsbSetDesc+0x20>
4001d8c8:	40031d40 	.word	0x40031d40
4001d8cc:	40031f98 	.word	0x40031f98
4001d8d0:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbSetEpNak:

4001d8d4 <CyU3PUsbSetEpNak>:
4001d8d4:	e92d4070 	push	{r4, r5, r6, lr}
4001d8d8:	e1a04000 	mov	r4, r0
4001d8dc:	e1a06001 	mov	r6, r1
4001d8e0:	e59f0198 	ldr	r0, [pc, #408]	; 4001da80 <CyU3PUsbSetEpNak+0x1ac>
4001d8e4:	e5d00008 	ldrb	r0, [r0, #8]
4001d8e8:	e3500000 	cmp	r0, #0
4001d8ec:	1a000001 	bne	4001d8f8 <CyU3PUsbSetEpNak+0x24>
4001d8f0:	e3a00042 	mov	r0, #66	; 0x42
4001d8f4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d8f8:	e204007f 	and	r0, r4, #127	; 0x7f
4001d8fc:	e350000f 	cmp	r0, #15
4001d900:	da000001 	ble	4001d90c <CyU3PUsbSetEpNak+0x38>
4001d904:	e3a00040 	mov	r0, #64	; 0x40
4001d908:	eafffff9 	b	4001d8f4 <CyU3PUsbSetEpNak+0x20>
4001d90c:	e3e01000 	mvn	r1, #0
4001d910:	e59f016c 	ldr	r0, [pc, #364]	; 4001da84 <CyU3PUsbSetEpNak+0x1b0>
4001d914:	ebffb192 	bl	40009f64 <_txe_mutex_get>
4001d918:	e3560000 	cmp	r6, #0
4001d91c:	0a000028 	beq	4001d9c4 <CyU3PUsbSetEpNak+0xf0>
4001d920:	e3140080 	tst	r4, #128	; 0x80
4001d924:	0a000012 	beq	4001d974 <CyU3PUsbSetEpNak+0xa0>
4001d928:	e59f0150 	ldr	r0, [pc, #336]	; 4001da80 <CyU3PUsbSetEpNak+0x1ac>
4001d92c:	e5d00009 	ldrb	r0, [r0, #9]
4001d930:	e3500003 	cmp	r0, #3
4001d934:	1a000006 	bne	4001d954 <CyU3PUsbSetEpNak+0x80>
4001d938:	e59f0148 	ldr	r0, [pc, #328]	; 4001da88 <CyU3PUsbSetEpNak+0x1b4>
4001d93c:	e204100f 	and	r1, r4, #15
4001d940:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001d944:	e3855003 	orr	r5, r5, #3
4001d948:	e204100f 	and	r1, r4, #15
4001d94c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001d950:	ea000046 	b	4001da70 <CyU3PUsbSetEpNak+0x19c>
4001d954:	e59f0130 	ldr	r0, [pc, #304]	; 4001da8c <CyU3PUsbSetEpNak+0x1b8>
4001d958:	e204100f 	and	r1, r4, #15
4001d95c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d960:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001d964:	e59f1120 	ldr	r1, [pc, #288]	; 4001da8c <CyU3PUsbSetEpNak+0x1b8>
4001d968:	e204200f 	and	r2, r4, #15
4001d96c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001d970:	ea00003e 	b	4001da70 <CyU3PUsbSetEpNak+0x19c>
4001d974:	e59f0104 	ldr	r0, [pc, #260]	; 4001da80 <CyU3PUsbSetEpNak+0x1ac>
4001d978:	e5d00009 	ldrb	r0, [r0, #9]
4001d97c:	e3500003 	cmp	r0, #3
4001d980:	1a000007 	bne	4001d9a4 <CyU3PUsbSetEpNak+0xd0>
4001d984:	e59f0104 	ldr	r0, [pc, #260]	; 4001da90 <CyU3PUsbSetEpNak+0x1bc>
4001d988:	e204100f 	and	r1, r4, #15
4001d98c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d990:	e3805003 	orr	r5, r0, #3
4001d994:	e59f00f4 	ldr	r0, [pc, #244]	; 4001da90 <CyU3PUsbSetEpNak+0x1bc>
4001d998:	e204100f 	and	r1, r4, #15
4001d99c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001d9a0:	ea000032 	b	4001da70 <CyU3PUsbSetEpNak+0x19c>
4001d9a4:	e59f00e8 	ldr	r0, [pc, #232]	; 4001da94 <CyU3PUsbSetEpNak+0x1c0>
4001d9a8:	e204100f 	and	r1, r4, #15
4001d9ac:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d9b0:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001d9b4:	e59f10d8 	ldr	r1, [pc, #216]	; 4001da94 <CyU3PUsbSetEpNak+0x1c0>
4001d9b8:	e204200f 	and	r2, r4, #15
4001d9bc:	e7810102 	str	r0, [r1, r2, lsl #2]
4001d9c0:	ea00002a 	b	4001da70 <CyU3PUsbSetEpNak+0x19c>
4001d9c4:	e3140080 	tst	r4, #128	; 0x80
4001d9c8:	0a000014 	beq	4001da20 <CyU3PUsbSetEpNak+0x14c>
4001d9cc:	e59f00ac 	ldr	r0, [pc, #172]	; 4001da80 <CyU3PUsbSetEpNak+0x1ac>
4001d9d0:	e5d00009 	ldrb	r0, [r0, #9]
4001d9d4:	e3500003 	cmp	r0, #3
4001d9d8:	1a000008 	bne	4001da00 <CyU3PUsbSetEpNak+0x12c>
4001d9dc:	e59f00a4 	ldr	r0, [pc, #164]	; 4001da88 <CyU3PUsbSetEpNak+0x1b4>
4001d9e0:	e204100f 	and	r1, r4, #15
4001d9e4:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001d9e8:	e3c50002 	bic	r0, r5, #2
4001d9ec:	e3805001 	orr	r5, r0, #1
4001d9f0:	e59f0090 	ldr	r0, [pc, #144]	; 4001da88 <CyU3PUsbSetEpNak+0x1b4>
4001d9f4:	e204100f 	and	r1, r4, #15
4001d9f8:	e7805101 	str	r5, [r0, r1, lsl #2]
4001d9fc:	ea00001b 	b	4001da70 <CyU3PUsbSetEpNak+0x19c>
4001da00:	e59f0084 	ldr	r0, [pc, #132]	; 4001da8c <CyU3PUsbSetEpNak+0x1b8>
4001da04:	e204100f 	and	r1, r4, #15
4001da08:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da0c:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001da10:	e59f1074 	ldr	r1, [pc, #116]	; 4001da8c <CyU3PUsbSetEpNak+0x1b8>
4001da14:	e204200f 	and	r2, r4, #15
4001da18:	e7810102 	str	r0, [r1, r2, lsl #2]
4001da1c:	ea000013 	b	4001da70 <CyU3PUsbSetEpNak+0x19c>
4001da20:	e59f0058 	ldr	r0, [pc, #88]	; 4001da80 <CyU3PUsbSetEpNak+0x1ac>
4001da24:	e5d00009 	ldrb	r0, [r0, #9]
4001da28:	e3500003 	cmp	r0, #3
4001da2c:	1a000008 	bne	4001da54 <CyU3PUsbSetEpNak+0x180>
4001da30:	e59f0058 	ldr	r0, [pc, #88]	; 4001da90 <CyU3PUsbSetEpNak+0x1bc>
4001da34:	e204100f 	and	r1, r4, #15
4001da38:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da3c:	e3c00002 	bic	r0, r0, #2
4001da40:	e3805001 	orr	r5, r0, #1
4001da44:	e59f0044 	ldr	r0, [pc, #68]	; 4001da90 <CyU3PUsbSetEpNak+0x1bc>
4001da48:	e204100f 	and	r1, r4, #15
4001da4c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001da50:	ea000006 	b	4001da70 <CyU3PUsbSetEpNak+0x19c>
4001da54:	e59f0038 	ldr	r0, [pc, #56]	; 4001da94 <CyU3PUsbSetEpNak+0x1c0>
4001da58:	e204100f 	and	r1, r4, #15
4001da5c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da60:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001da64:	e59f1028 	ldr	r1, [pc, #40]	; 4001da94 <CyU3PUsbSetEpNak+0x1c0>
4001da68:	e204200f 	and	r2, r4, #15
4001da6c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001da70:	e59f000c 	ldr	r0, [pc, #12]	; 4001da84 <CyU3PUsbSetEpNak+0x1b0>
4001da74:	ebffb16f 	bl	4000a038 <_txe_mutex_put>
4001da78:	e3a00000 	mov	r0, #0
4001da7c:	eaffff9c 	b	4001d8f4 <CyU3PUsbSetEpNak+0x20>
4001da80:	40031d40 	.word	0x40031d40
4001da84:	40031ee0 	.word	0x40031ee0
4001da88:	e0033500 	.word	0xe0033500
4001da8c:	e0031418 	.word	0xe0031418
4001da90:	e0033600 	.word	0xe0033600
4001da94:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001da98 <CyU3PUsbSetLinkPowerState>:
4001da98:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001da9c:	e1a01000 	mov	r1, r0
4001daa0:	e3a030ff 	mov	r3, #255	; 0xff
4001daa4:	e59f0138 	ldr	r0, [pc, #312]	; 4001dbe4 <CyU3PUsbSetLinkPowerState+0x14c>
4001daa8:	e5d00008 	ldrb	r0, [r0, #8]
4001daac:	e3500000 	cmp	r0, #0
4001dab0:	1a000001 	bne	4001dabc <CyU3PUsbSetLinkPowerState+0x24>
4001dab4:	e3a00042 	mov	r0, #66	; 0x42
4001dab8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001dabc:	e59f0120 	ldr	r0, [pc, #288]	; 4001dbe4 <CyU3PUsbSetLinkPowerState+0x14c>
4001dac0:	e5d00008 	ldrb	r0, [r0, #8]
4001dac4:	e3500005 	cmp	r0, #5
4001dac8:	aa000001 	bge	4001dad4 <CyU3PUsbSetLinkPowerState+0x3c>
4001dacc:	e3a00044 	mov	r0, #68	; 0x44
4001dad0:	eafffff8 	b	4001dab8 <CyU3PUsbSetLinkPowerState+0x20>
4001dad4:	ebfffc1d 	bl	4001cb50 <CyU3PUsbGetSpeed>
4001dad8:	e3500003 	cmp	r0, #3
4001dadc:	0a000001 	beq	4001dae8 <CyU3PUsbSetLinkPowerState+0x50>
4001dae0:	e3a000ff 	mov	r0, #255	; 0xff
4001dae4:	eafffff3 	b	4001dab8 <CyU3PUsbSetLinkPowerState+0x20>
4001dae8:	e59f00f8 	ldr	r0, [pc, #248]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001daec:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001daf0:	e200203f 	and	r2, r0, #63	; 0x3f
4001daf4:	e3510000 	cmp	r1, #0
4001daf8:	0a000004 	beq	4001db10 <CyU3PUsbSetLinkPowerState+0x78>
4001dafc:	e3510001 	cmp	r1, #1
4001db00:	0a000015 	beq	4001db5c <CyU3PUsbSetLinkPowerState+0xc4>
4001db04:	e3510002 	cmp	r1, #2
4001db08:	1a00002f 	bne	4001dbcc <CyU3PUsbSetLinkPowerState+0x134>
4001db0c:	ea000020 	b	4001db94 <CyU3PUsbSetLinkPowerState+0xfc>
4001db10:	e1a00000 	nop			; (mov r0, r0)
4001db14:	e59f00cc 	ldr	r0, [pc, #204]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001db18:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db1c:	e3100c02 	tst	r0, #512	; 0x200
4001db20:	1a00000b 	bne	4001db54 <CyU3PUsbSetLinkPowerState+0xbc>
4001db24:	e59f00bc 	ldr	r0, [pc, #188]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001db28:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001db2c:	e200203f 	and	r2, r0, #63	; 0x3f
4001db30:	e3520011 	cmp	r2, #17
4001db34:	ba000006 	blt	4001db54 <CyU3PUsbSetLinkPowerState+0xbc>
4001db38:	e3520013 	cmp	r2, #19
4001db3c:	ca000004 	bgt	4001db54 <CyU3PUsbSetLinkPowerState+0xbc>
4001db40:	e59f00a0 	ldr	r0, [pc, #160]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001db44:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db48:	e3800c02 	orr	r0, r0, #512	; 0x200
4001db4c:	e59fc094 	ldr	ip, [pc, #148]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001db50:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001db54:	e3a03000 	mov	r3, #0
4001db58:	ea00001e 	b	4001dbd8 <CyU3PUsbSetLinkPowerState+0x140>
4001db5c:	e1a00000 	nop			; (mov r0, r0)
4001db60:	e3520010 	cmp	r2, #16
4001db64:	1a000009 	bne	4001db90 <CyU3PUsbSetLinkPowerState+0xf8>
4001db68:	e59f0074 	ldr	r0, [pc, #116]	; 4001dbe4 <CyU3PUsbSetLinkPowerState+0x14c>
4001db6c:	e5d00006 	ldrb	r0, [r0, #6]
4001db70:	e3100004 	tst	r0, #4
4001db74:	0a000005 	beq	4001db90 <CyU3PUsbSetLinkPowerState+0xf8>
4001db78:	e59f0068 	ldr	r0, [pc, #104]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001db7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db80:	e3800001 	orr	r0, r0, #1
4001db84:	e59fc05c 	ldr	ip, [pc, #92]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001db88:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001db8c:	e3a03000 	mov	r3, #0
4001db90:	ea000010 	b	4001dbd8 <CyU3PUsbSetLinkPowerState+0x140>
4001db94:	e1a00000 	nop			; (mov r0, r0)
4001db98:	e3520010 	cmp	r2, #16
4001db9c:	1a000009 	bne	4001dbc8 <CyU3PUsbSetLinkPowerState+0x130>
4001dba0:	e59f003c 	ldr	r0, [pc, #60]	; 4001dbe4 <CyU3PUsbSetLinkPowerState+0x14c>
4001dba4:	e5d00006 	ldrb	r0, [r0, #6]
4001dba8:	e3100008 	tst	r0, #8
4001dbac:	0a000005 	beq	4001dbc8 <CyU3PUsbSetLinkPowerState+0x130>
4001dbb0:	e59f0030 	ldr	r0, [pc, #48]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001dbb4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dbb8:	e3800002 	orr	r0, r0, #2
4001dbbc:	e59fc024 	ldr	ip, [pc, #36]	; 4001dbe8 <CyU3PUsbSetLinkPowerState+0x150>
4001dbc0:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dbc4:	e3a03000 	mov	r3, #0
4001dbc8:	ea000002 	b	4001dbd8 <CyU3PUsbSetLinkPowerState+0x140>
4001dbcc:	e1a00000 	nop			; (mov r0, r0)
4001dbd0:	e3a03040 	mov	r3, #64	; 0x40
4001dbd4:	e1a00000 	nop			; (mov r0, r0)
4001dbd8:	e1a00000 	nop			; (mov r0, r0)
4001dbdc:	e1a00003 	mov	r0, r3
4001dbe0:	eaffffb4 	b	4001dab8 <CyU3PUsbSetLinkPowerState+0x20>
4001dbe4:	40031d40 	.word	0x40031d40
4001dbe8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001dbec <CyU3PUsbStall>:
4001dbec:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001dbf0:	e1a04000 	mov	r4, r0
4001dbf4:	e1a05001 	mov	r5, r1
4001dbf8:	e1a06002 	mov	r6, r2
4001dbfc:	e204700f 	and	r7, r4, #15
4001dc00:	e3a08000 	mov	r8, #0
4001dc04:	e59f0344 	ldr	r0, [pc, #836]	; 4001df50 <CyU3PUsbStall+0x364>
4001dc08:	e5d00008 	ldrb	r0, [r0, #8]
4001dc0c:	e3500000 	cmp	r0, #0
4001dc10:	1a000001 	bne	4001dc1c <CyU3PUsbStall+0x30>
4001dc14:	e3a00042 	mov	r0, #66	; 0x42
4001dc18:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001dc1c:	e204007f 	and	r0, r4, #127	; 0x7f
4001dc20:	e350000f 	cmp	r0, #15
4001dc24:	da000001 	ble	4001dc30 <CyU3PUsbStall+0x44>
4001dc28:	e3a00040 	mov	r0, #64	; 0x40
4001dc2c:	eafffff9 	b	4001dc18 <CyU3PUsbStall+0x2c>
4001dc30:	e3570000 	cmp	r7, #0
4001dc34:	1a000003 	bne	4001dc48 <CyU3PUsbStall+0x5c>
4001dc38:	e3550000 	cmp	r5, #0
4001dc3c:	1a000001 	bne	4001dc48 <CyU3PUsbStall+0x5c>
4001dc40:	e3a00040 	mov	r0, #64	; 0x40
4001dc44:	eafffff3 	b	4001dc18 <CyU3PUsbStall+0x2c>
4001dc48:	e59f0300 	ldr	r0, [pc, #768]	; 4001df50 <CyU3PUsbStall+0x364>
4001dc4c:	e5d00009 	ldrb	r0, [r0, #9]
4001dc50:	e3500000 	cmp	r0, #0
4001dc54:	1a000001 	bne	4001dc60 <CyU3PUsbStall+0x74>
4001dc58:	e3a00000 	mov	r0, #0
4001dc5c:	eaffffed 	b	4001dc18 <CyU3PUsbStall+0x2c>
4001dc60:	e3e01000 	mvn	r1, #0
4001dc64:	e59f02e8 	ldr	r0, [pc, #744]	; 4001df54 <CyU3PUsbStall+0x368>
4001dc68:	ebffb0bd 	bl	40009f64 <_txe_mutex_get>
4001dc6c:	e3570000 	cmp	r7, #0
4001dc70:	1a000037 	bne	4001dd54 <CyU3PUsbStall+0x168>
4001dc74:	ebfffbbd 	bl	4001cb70 <CyU3PUsbIsNewCtrlRqtRecvd>
4001dc78:	e3500000 	cmp	r0, #0
4001dc7c:	0a000003 	beq	4001dc90 <CyU3PUsbStall+0xa4>
4001dc80:	e59f02cc 	ldr	r0, [pc, #716]	; 4001df54 <CyU3PUsbStall+0x368>
4001dc84:	ebffb0eb 	bl	4000a038 <_txe_mutex_put>
4001dc88:	e3a00000 	mov	r0, #0
4001dc8c:	eaffffe1 	b	4001dc18 <CyU3PUsbStall+0x2c>
4001dc90:	e59f02b8 	ldr	r0, [pc, #696]	; 4001df50 <CyU3PUsbStall+0x364>
4001dc94:	e5d00009 	ldrb	r0, [r0, #9]
4001dc98:	e3500003 	cmp	r0, #3
4001dc9c:	1a00001b 	bne	4001dd10 <CyU3PUsbStall+0x124>
4001dca0:	e59f02b0 	ldr	r0, [pc, #688]	; 4001df58 <CyU3PUsbStall+0x36c>
4001dca4:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001dca8:	e3800004 	orr	r0, r0, #4
4001dcac:	e59f12a4 	ldr	r1, [pc, #676]	; 4001df58 <CyU3PUsbStall+0x36c>
4001dcb0:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001dcb4:	e1a00001 	mov	r0, r1
4001dcb8:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001dcbc:	e3800004 	orr	r0, r0, #4
4001dcc0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001dcc4:	eb00104b 	bl	40021df8 <CyU3PVicDisableAllInterrupts>
4001dcc8:	e1a0a000 	mov	sl, r0
4001dccc:	e3a00001 	mov	r0, #1
4001dcd0:	ebffd5ce 	bl	40013410 <CyU3PBusyWait>
4001dcd4:	e59f027c 	ldr	r0, [pc, #636]	; 4001df58 <CyU3PUsbStall+0x36c>
4001dcd8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dcdc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dce0:	e59f1270 	ldr	r1, [pc, #624]	; 4001df58 <CyU3PUsbStall+0x36c>
4001dce4:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001dce8:	e1a0000a 	mov	r0, sl
4001dcec:	eb00104f 	bl	40021e30 <CyU3PVicEnableInterrupts>
4001dcf0:	e3a00000 	mov	r0, #0
4001dcf4:	e59f1260 	ldr	r1, [pc, #608]	; 4001df5c <CyU3PUsbStall+0x370>
4001dcf8:	e5810000 	str	r0, [r1]
4001dcfc:	e59f125c 	ldr	r1, [pc, #604]	; 4001df60 <CyU3PUsbStall+0x374>
4001dd00:	e5810000 	str	r0, [r1]
4001dd04:	e59f0258 	ldr	r0, [pc, #600]	; 4001df64 <CyU3PUsbStall+0x378>
4001dd08:	ebffb377 	bl	4000aaec <_txe_timer_deactivate>
4001dd0c:	ea00000c 	b	4001dd44 <CyU3PUsbStall+0x158>
4001dd10:	e59f0250 	ldr	r0, [pc, #592]	; 4001df68 <CyU3PUsbStall+0x37c>
4001dd14:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001dd18:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd1c:	e59f1244 	ldr	r1, [pc, #580]	; 4001df68 <CyU3PUsbStall+0x37c>
4001dd20:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001dd24:	e1a00001 	mov	r0, r1
4001dd28:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001dd2c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd30:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001dd34:	e1a00001 	mov	r0, r1
4001dd38:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dd3c:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001dd40:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001dd44:	e59f0208 	ldr	r0, [pc, #520]	; 4001df54 <CyU3PUsbStall+0x368>
4001dd48:	ebffb0ba 	bl	4000a038 <_txe_mutex_put>
4001dd4c:	e3a00000 	mov	r0, #0
4001dd50:	eaffffb0 	b	4001dc18 <CyU3PUsbStall+0x2c>
4001dd54:	e59f01f4 	ldr	r0, [pc, #500]	; 4001df50 <CyU3PUsbStall+0x364>
4001dd58:	e5d00009 	ldrb	r0, [r0, #9]
4001dd5c:	e3500003 	cmp	r0, #3
4001dd60:	1a000033 	bne	4001de34 <CyU3PUsbStall+0x248>
4001dd64:	e3140080 	tst	r4, #128	; 0x80
4001dd68:	0a000017 	beq	4001ddcc <CyU3PUsbStall+0x1e0>
4001dd6c:	e3550000 	cmp	r5, #0
4001dd70:	0a00000a 	beq	4001dda0 <CyU3PUsbStall+0x1b4>
4001dd74:	e59f01f0 	ldr	r0, [pc, #496]	; 4001df6c <CyU3PUsbStall+0x380>
4001dd78:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001dd7c:	e3899005 	orr	r9, r9, #5
4001dd80:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dd84:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001dd88:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dd8c:	e1a01800 	lsl	r1, r0, #16
4001dd90:	e1a01821 	lsr	r1, r1, #16
4001dd94:	e1a00004 	mov	r0, r4
4001dd98:	ebfffdde 	bl	4001d518 <CyU3PUsbSendErdy>
4001dd9c:	ea000041 	b	4001dea8 <CyU3PUsbStall+0x2bc>
4001dda0:	e59f01c4 	ldr	r0, [pc, #452]	; 4001df6c <CyU3PUsbStall+0x380>
4001dda4:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001dda8:	e3899011 	orr	r9, r9, #17
4001ddac:	e7809107 	str	r9, [r0, r7, lsl #2]
4001ddb0:	e3a00001 	mov	r0, #1
4001ddb4:	ebffd595 	bl	40013410 <CyU3PBusyWait>
4001ddb8:	e3c90014 	bic	r0, r9, #20
4001ddbc:	e3809001 	orr	r9, r0, #1
4001ddc0:	e59f01a4 	ldr	r0, [pc, #420]	; 4001df6c <CyU3PUsbStall+0x380>
4001ddc4:	e7809107 	str	r9, [r0, r7, lsl #2]
4001ddc8:	ea000036 	b	4001dea8 <CyU3PUsbStall+0x2bc>
4001ddcc:	e3550000 	cmp	r5, #0
4001ddd0:	0a00000b 	beq	4001de04 <CyU3PUsbStall+0x218>
4001ddd4:	e59f0194 	ldr	r0, [pc, #404]	; 4001df70 <CyU3PUsbStall+0x384>
4001ddd8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dddc:	e3809005 	orr	r9, r0, #5
4001dde0:	e59f0188 	ldr	r0, [pc, #392]	; 4001df70 <CyU3PUsbStall+0x384>
4001dde4:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dde8:	e28000c0 	add	r0, r0, #192	; 0xc0
4001ddec:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001ddf0:	e1a01800 	lsl	r1, r0, #16
4001ddf4:	e1a01821 	lsr	r1, r1, #16
4001ddf8:	e1a00004 	mov	r0, r4
4001ddfc:	ebfffdc5 	bl	4001d518 <CyU3PUsbSendErdy>
4001de00:	ea000028 	b	4001dea8 <CyU3PUsbStall+0x2bc>
4001de04:	e59f0164 	ldr	r0, [pc, #356]	; 4001df70 <CyU3PUsbStall+0x384>
4001de08:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de0c:	e3809011 	orr	r9, r0, #17
4001de10:	e59f0158 	ldr	r0, [pc, #344]	; 4001df70 <CyU3PUsbStall+0x384>
4001de14:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de18:	e3a00001 	mov	r0, #1
4001de1c:	ebffd57b 	bl	40013410 <CyU3PBusyWait>
4001de20:	e3c90014 	bic	r0, r9, #20
4001de24:	e3809001 	orr	r9, r0, #1
4001de28:	e59f0140 	ldr	r0, [pc, #320]	; 4001df70 <CyU3PUsbStall+0x384>
4001de2c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de30:	ea00001c 	b	4001dea8 <CyU3PUsbStall+0x2bc>
4001de34:	e3140080 	tst	r4, #128	; 0x80
4001de38:	0a00000d 	beq	4001de74 <CyU3PUsbStall+0x288>
4001de3c:	e3550000 	cmp	r5, #0
4001de40:	0a000005 	beq	4001de5c <CyU3PUsbStall+0x270>
4001de44:	e59f0128 	ldr	r0, [pc, #296]	; 4001df74 <CyU3PUsbStall+0x388>
4001de48:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de4c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de50:	e59f111c 	ldr	r1, [pc, #284]	; 4001df74 <CyU3PUsbStall+0x388>
4001de54:	e7810107 	str	r0, [r1, r7, lsl #2]
4001de58:	ea000012 	b	4001dea8 <CyU3PUsbStall+0x2bc>
4001de5c:	e59f0110 	ldr	r0, [pc, #272]	; 4001df74 <CyU3PUsbStall+0x388>
4001de60:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de64:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001de68:	e59f1104 	ldr	r1, [pc, #260]	; 4001df74 <CyU3PUsbStall+0x388>
4001de6c:	e7810107 	str	r0, [r1, r7, lsl #2]
4001de70:	ea00000c 	b	4001dea8 <CyU3PUsbStall+0x2bc>
4001de74:	e3550000 	cmp	r5, #0
4001de78:	0a000005 	beq	4001de94 <CyU3PUsbStall+0x2a8>
4001de7c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001df78 <CyU3PUsbStall+0x38c>
4001de80:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de84:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de88:	e59f10e8 	ldr	r1, [pc, #232]	; 4001df78 <CyU3PUsbStall+0x38c>
4001de8c:	e7810107 	str	r0, [r1, r7, lsl #2]
4001de90:	ea000004 	b	4001dea8 <CyU3PUsbStall+0x2bc>
4001de94:	e59f00dc 	ldr	r0, [pc, #220]	; 4001df78 <CyU3PUsbStall+0x38c>
4001de98:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de9c:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001dea0:	e59f10d0 	ldr	r1, [pc, #208]	; 4001df78 <CyU3PUsbStall+0x38c>
4001dea4:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dea8:	e3560000 	cmp	r6, #0
4001deac:	0a000023 	beq	4001df40 <CyU3PUsbStall+0x354>
4001deb0:	e3550000 	cmp	r5, #0
4001deb4:	1a000021 	bne	4001df40 <CyU3PUsbStall+0x354>
4001deb8:	e59f0090 	ldr	r0, [pc, #144]	; 4001df50 <CyU3PUsbStall+0x364>
4001debc:	e5d00009 	ldrb	r0, [r0, #9]
4001dec0:	e3500003 	cmp	r0, #3
4001dec4:	1a00000b 	bne	4001def8 <CyU3PUsbStall+0x30c>
4001dec8:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001decc:	e3140080 	tst	r4, #128	; 0x80
4001ded0:	0a000000 	beq	4001ded8 <CyU3PUsbStall+0x2ec>
4001ded4:	e3888010 	orr	r8, r8, #16
4001ded8:	e59f0078 	ldr	r0, [pc, #120]	; 4001df58 <CyU3PUsbStall+0x36c>
4001dedc:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001dee0:	e1a00000 	nop			; (mov r0, r0)
4001dee4:	e59f006c 	ldr	r0, [pc, #108]	; 4001df58 <CyU3PUsbStall+0x36c>
4001dee8:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001deec:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001def0:	0afffffb 	beq	4001dee4 <CyU3PUsbStall+0x2f8>
4001def4:	ea000011 	b	4001df40 <CyU3PUsbStall+0x354>
4001def8:	e3140080 	tst	r4, #128	; 0x80
4001defc:	0a000000 	beq	4001df04 <CyU3PUsbStall+0x318>
4001df00:	e3877010 	orr	r7, r7, #16
4001df04:	e59f005c 	ldr	r0, [pc, #92]	; 4001df68 <CyU3PUsbStall+0x37c>
4001df08:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001df0c:	e1a00000 	nop			; (mov r0, r0)
4001df10:	e59f0050 	ldr	r0, [pc, #80]	; 4001df68 <CyU3PUsbStall+0x37c>
4001df14:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001df18:	e3100c01 	tst	r0, #256	; 0x100
4001df1c:	0afffffb 	beq	4001df10 <CyU3PUsbStall+0x324>
4001df20:	e3877020 	orr	r7, r7, #32
4001df24:	e59f003c 	ldr	r0, [pc, #60]	; 4001df68 <CyU3PUsbStall+0x37c>
4001df28:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001df2c:	e1a00000 	nop			; (mov r0, r0)
4001df30:	e59f0030 	ldr	r0, [pc, #48]	; 4001df68 <CyU3PUsbStall+0x37c>
4001df34:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001df38:	e3100c01 	tst	r0, #256	; 0x100
4001df3c:	0afffffb 	beq	4001df30 <CyU3PUsbStall+0x344>
4001df40:	e59f000c 	ldr	r0, [pc, #12]	; 4001df54 <CyU3PUsbStall+0x368>
4001df44:	ebffb03b 	bl	4000a038 <_txe_mutex_put>
4001df48:	e3a00000 	mov	r0, #0
4001df4c:	eaffff31 	b	4001dc18 <CyU3PUsbStall+0x2c>
4001df50:	40031d40 	.word	0x40031d40
4001df54:	40031ee0 	.word	0x40031ee0
4001df58:	e0033000 	.word	0xe0033000
4001df5c:	40030db0 	.word	0x40030db0
4001df60:	40030db4 	.word	0x40030db4
4001df64:	400326a0 	.word	0x400326a0
4001df68:	e0031000 	.word	0xe0031000
4001df6c:	e0033500 	.word	0xe0033500
4001df70:	e0033600 	.word	0xe0033600
4001df74:	e0031418 	.word	0xe0031418
4001df78:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001df7c <CyU3PUsbStart>:
4001df7c:	e92d4070 	push	{r4, r5, r6, lr}
4001df80:	e59f0324 	ldr	r0, [pc, #804]	; 4001e2ac <CyU3PUsbStart+0x330>
4001df84:	e5900000 	ldr	r0, [r0]
4001df88:	e3500000 	cmp	r0, #0
4001df8c:	1a000001 	bne	4001df98 <CyU3PUsbStart+0x1c>
4001df90:	e3a00010 	mov	r0, #16
4001df94:	e8bd8070 	pop	{r4, r5, r6, pc}
4001df98:	e59f0310 	ldr	r0, [pc, #784]	; 4001e2b0 <CyU3PUsbStart+0x334>
4001df9c:	e5d00008 	ldrb	r0, [r0, #8]
4001dfa0:	e3500000 	cmp	r0, #0
4001dfa4:	0a000001 	beq	4001dfb0 <CyU3PUsbStart+0x34>
4001dfa8:	e3a00043 	mov	r0, #67	; 0x43
4001dfac:	eafffff8 	b	4001df94 <CyU3PUsbStart+0x18>
4001dfb0:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e2b4 <CyU3PUsbStart+0x338>
4001dfb4:	e5900000 	ldr	r0, [r0]
4001dfb8:	e3500000 	cmp	r0, #0
4001dfbc:	0a00006b 	beq	4001e170 <CyU3PUsbStart+0x1f4>
4001dfc0:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e2b8 <CyU3PUsbStart+0x33c>
4001dfc4:	eb00059e 	bl	4001f644 <CyU3PUibSocketInit>
4001dfc8:	ebfff98c 	bl	4001c600 <CyU3PUsbCreateDmaChannels>
4001dfcc:	e1a04000 	mov	r4, r0
4001dfd0:	e3540000 	cmp	r4, #0
4001dfd4:	0a000001 	beq	4001dfe0 <CyU3PUsbStart+0x64>
4001dfd8:	e1a00004 	mov	r0, r4
4001dfdc:	eaffffec 	b	4001df94 <CyU3PUsbStart+0x18>
4001dfe0:	e3a00001 	mov	r0, #1
4001dfe4:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e2b0 <CyU3PUsbStart+0x334>
4001dfe8:	e5c10008 	strb	r0, [r1, #8]
4001dfec:	e5950004 	ldr	r0, [r5, #4]
4001dff0:	e5c10009 	strb	r0, [r1, #9]
4001dff4:	e1a00005 	mov	r0, r5
4001dff8:	ebfffaef 	bl	4001cbbc <CyU3PUsbLoadBootloaderDescs>
4001dffc:	e1a04000 	mov	r4, r0
4001e000:	e3540000 	cmp	r4, #0
4001e004:	0a000001 	beq	4001e010 <CyU3PUsbStart+0x94>
4001e008:	e1a00004 	mov	r0, r4
4001e00c:	eaffffe0 	b	4001df94 <CyU3PUsbStart+0x18>
4001e010:	e3a00006 	mov	r0, #6
4001e014:	e59f1294 	ldr	r1, [pc, #660]	; 4001e2b0 <CyU3PUsbStart+0x334>
4001e018:	e5c10008 	strb	r0, [r1, #8]
4001e01c:	e2810000 	add	r0, r1, #0
4001e020:	e5d00009 	ldrb	r0, [r0, #9]
4001e024:	e3500003 	cmp	r0, #3
4001e028:	1a000002 	bne	4001e038 <CyU3PUsbStart+0xbc>
4001e02c:	e3a00001 	mov	r0, #1
4001e030:	e59f1284 	ldr	r1, [pc, #644]	; 4001e2bc <CyU3PUsbStart+0x340>
4001e034:	e5810000 	str	r0, [r1]
4001e038:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e03c:	e59f127c 	ldr	r1, [pc, #636]	; 4001e2c0 <CyU3PUsbStart+0x344>
4001e040:	e1500001 	cmp	r0, r1
4001e044:	1a000015 	bne	4001e0a0 <CyU3PUsbStart+0x124>
4001e048:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e04c:	e59f1270 	ldr	r1, [pc, #624]	; 4001e2c4 <CyU3PUsbStart+0x348>
4001e050:	e1500001 	cmp	r0, r1
4001e054:	3a000007 	bcc	4001e078 <CyU3PUsbStart+0xfc>
4001e058:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e05c:	e3500000 	cmp	r0, #0
4001e060:	0a000001 	beq	4001e06c <CyU3PUsbStart+0xf0>
4001e064:	e3a00001 	mov	r0, #1
4001e068:	ea000000 	b	4001e070 <CyU3PUsbStart+0xf4>
4001e06c:	e3a00000 	mov	r0, #0
4001e070:	e59f1238 	ldr	r1, [pc, #568]	; 4001e2b0 <CyU3PUsbStart+0x334>
4001e074:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e078:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e07c:	e59f1244 	ldr	r1, [pc, #580]	; 4001e2c8 <CyU3PUsbStart+0x34c>
4001e080:	e1500001 	cmp	r0, r1
4001e084:	3a000008 	bcc	4001e0ac <CyU3PUsbStart+0x130>
4001e088:	e59f023c 	ldr	r0, [pc, #572]	; 4001e2cc <CyU3PUsbStart+0x350>
4001e08c:	e5900000 	ldr	r0, [r0]
4001e090:	e3800002 	orr	r0, r0, #2
4001e094:	e59f1230 	ldr	r1, [pc, #560]	; 4001e2cc <CyU3PUsbStart+0x350>
4001e098:	e5810000 	str	r0, [r1]
4001e09c:	ea000002 	b	4001e0ac <CyU3PUsbStart+0x130>
4001e0a0:	e3a00001 	mov	r0, #1
4001e0a4:	e59f1204 	ldr	r1, [pc, #516]	; 4001e2b0 <CyU3PUsbStart+0x334>
4001e0a8:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e0ac:	e3e00000 	mvn	r0, #0
4001e0b0:	e59f1218 	ldr	r1, [pc, #536]	; 4001e2d0 <CyU3PUsbStart+0x354>
4001e0b4:	e5810004 	str	r0, [r1, #4]
4001e0b8:	e59f0214 	ldr	r0, [pc, #532]	; 4001e2d4 <CyU3PUsbStart+0x358>
4001e0bc:	e5810008 	str	r0, [r1, #8]
4001e0c0:	e3e00000 	mvn	r0, #0
4001e0c4:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e0c8:	e59f0208 	ldr	r0, [pc, #520]	; 4001e2d8 <CyU3PUsbStart+0x35c>
4001e0cc:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e0d0:	e3a00000 	mov	r0, #0
4001e0d4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e0d8:	e3e00000 	mvn	r0, #0
4001e0dc:	e0811680 	add	r1, r1, r0, lsl #13
4001e0e0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e0e4:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e2dc <CyU3PUsbStart+0x360>
4001e0e8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e0ec:	e3e00000 	mvn	r0, #0
4001e0f0:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e0f4:	e3a00000 	mov	r0, #0
4001e0f8:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e0fc:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e100:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e104:	e5810004 	str	r0, [r1, #4]
4001e108:	e3a00008 	mov	r0, #8
4001e10c:	eb000f42 	bl	40021e1c <CyU3PVicEnableInt>
4001e110:	e3a00009 	mov	r0, #9
4001e114:	eb000f40 	bl	40021e1c <CyU3PVicEnableInt>
4001e118:	ebfffa8c 	bl	4001cb50 <CyU3PUsbGetSpeed>
4001e11c:	e1a06000 	mov	r6, r0
4001e120:	eb0006b5 	bl	4001fbfc <CyU3PUsbEpPrepare>
4001e124:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e2cc <CyU3PUsbStart+0x350>
4001e128:	e5900000 	ldr	r0, [r0]
4001e12c:	e3100002 	tst	r0, #2
4001e130:	1a000003 	bne	4001e144 <CyU3PUsbStart+0x1c8>
4001e134:	e3e00000 	mvn	r0, #0
4001e138:	e5850000 	str	r0, [r5]
4001e13c:	e3a00000 	mov	r0, #0
4001e140:	e585000c 	str	r0, [r5, #12]
4001e144:	e3e00000 	mvn	r0, #0
4001e148:	e59f1190 	ldr	r1, [pc, #400]	; 4001e2e0 <CyU3PUsbStart+0x364>
4001e14c:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e150:	e3a00b01 	mov	r0, #1024	; 0x400
4001e154:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e158:	e59f1150 	ldr	r1, [pc, #336]	; 4001e2b0 <CyU3PUsbStart+0x334>
4001e15c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e160:	e3a00015 	mov	r0, #21
4001e164:	eb000f2c 	bl	40021e1c <CyU3PVicEnableInt>
4001e168:	e3a000fe 	mov	r0, #254	; 0xfe
4001e16c:	eaffff88 	b	4001df94 <CyU3PUsbStart+0x18>
4001e170:	e1a00000 	nop			; (mov r0, r0)
4001e174:	e59f0168 	ldr	r0, [pc, #360]	; 4001e2e4 <CyU3PUsbStart+0x368>
4001e178:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e17c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e180:	e59f115c 	ldr	r1, [pc, #348]	; 4001e2e4 <CyU3PUsbStart+0x368>
4001e184:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e188:	e3a00002 	mov	r0, #2
4001e18c:	ebffd49f 	bl	40013410 <CyU3PBusyWait>
4001e190:	e59f014c 	ldr	r0, [pc, #332]	; 4001e2e4 <CyU3PUsbStart+0x368>
4001e194:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e198:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e19c:	e59f1140 	ldr	r1, [pc, #320]	; 4001e2e4 <CyU3PUsbStart+0x368>
4001e1a0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e1a4:	e1a00001 	mov	r0, r1
4001e1a8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e1ac:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e1b0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e1b4:	e1a00001 	mov	r0, r1
4001e1b8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e1bc:	e3800008 	orr	r0, r0, #8
4001e1c0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e1c4:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e1c8:	e5900008 	ldr	r0, [r0, #8]
4001e1cc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e1d0:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e1d4:	e5810008 	str	r0, [r1, #8]
4001e1d8:	e3a00002 	mov	r0, #2
4001e1dc:	ebffd48b 	bl	40013410 <CyU3PBusyWait>
4001e1e0:	ebfff645 	bl	4001bafc <CyU3POtgIsDeviceMode>
4001e1e4:	e3500000 	cmp	r0, #0
4001e1e8:	0a000002 	beq	4001e1f8 <CyU3PUsbStart+0x27c>
4001e1ec:	ebfffa5b 	bl	4001cb60 <CyU3PUsbHostIsStarted>
4001e1f0:	e3500000 	cmp	r0, #0
4001e1f4:	0a000001 	beq	4001e200 <CyU3PUsbStart+0x284>
4001e1f8:	e3a00047 	mov	r0, #71	; 0x47
4001e1fc:	eaffff64 	b	4001df94 <CyU3PUsbStart+0x18>
4001e200:	e3a01002 	mov	r1, #2
4001e204:	e1a00001 	mov	r0, r1
4001e208:	ebfff820 	bl	4001c290 <CyU3PSetUsbCoreClock>
4001e20c:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e2e8 <CyU3PUsbStart+0x36c>
4001e210:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e2ec <CyU3PUsbStart+0x370>
4001e214:	e5810000 	str	r0, [r1]
4001e218:	ebfff633 	bl	4001baec <CyU3POtgGetMode>
4001e21c:	e3500000 	cmp	r0, #0
4001e220:	1a000003 	bne	4001e234 <CyU3PUsbStart+0x2b8>
4001e224:	ebfffc09 	bl	4001d250 <CyU3PUsbPowerOn>
4001e228:	e3a00000 	mov	r0, #0
4001e22c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e2e4 <CyU3PUsbStart+0x368>
4001e230:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e234:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e2f0 <CyU3PUsbStart+0x374>
4001e238:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e2e4 <CyU3PUsbStart+0x368>
4001e23c:	e5810008 	str	r0, [r1, #8]
4001e240:	e00108c0 	and	r0, r1, r0, asr #17
4001e244:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e248:	e3800008 	orr	r0, r0, #8
4001e24c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e250:	eb000662 	bl	4001fbe0 <CyU3PUsbDescInit>
4001e254:	ebfff8e9 	bl	4001c600 <CyU3PUsbCreateDmaChannels>
4001e258:	e1a04000 	mov	r4, r0
4001e25c:	e3540000 	cmp	r4, #0
4001e260:	0a000001 	beq	4001e26c <CyU3PUsbStart+0x2f0>
4001e264:	e1a00004 	mov	r0, r4
4001e268:	eaffff49 	b	4001df94 <CyU3PUsbStart+0x18>
4001e26c:	e3a00001 	mov	r0, #1
4001e270:	e59f1038 	ldr	r1, [pc, #56]	; 4001e2b0 <CyU3PUsbStart+0x334>
4001e274:	e5c10008 	strb	r0, [r1, #8]
4001e278:	e2810000 	add	r0, r1, #0
4001e27c:	e5d00007 	ldrb	r0, [r0, #7]
4001e280:	e3500001 	cmp	r0, #1
4001e284:	1a000002 	bne	4001e294 <CyU3PUsbStart+0x318>
4001e288:	e3a00003 	mov	r0, #3
4001e28c:	e5c10008 	strb	r0, [r1, #8]
4001e290:	ea000002 	b	4001e2a0 <CyU3PUsbStart+0x324>
4001e294:	e3a00002 	mov	r0, #2
4001e298:	e59f1010 	ldr	r1, [pc, #16]	; 4001e2b0 <CyU3PUsbStart+0x334>
4001e29c:	e5c10008 	strb	r0, [r1, #8]
4001e2a0:	ebfff81b 	bl	4001c314 <CyU3PUibInit>
4001e2a4:	e1a00004 	mov	r0, r4
4001e2a8:	eaffff39 	b	4001df94 <CyU3PUsbStart+0x18>
4001e2ac:	40030d60 	.word	0x40030d60
4001e2b0:	40031d40 	.word	0x40031d40
4001e2b4:	40030c68 	.word	0x40030c68
4001e2b8:	40002000 	.word	0x40002000
4001e2bc:	40030d70 	.word	0x40030d70
4001e2c0:	42335846 	.word	0x42335846
4001e2c4:	00010101 	.word	0x00010101
4001e2c8:	00010200 	.word	0x00010200
4001e2cc:	40030d44 	.word	0x40030d44
4001e2d0:	e0033000 	.word	0xe0033000
4001e2d4:	00038081 	.word	0x00038081
4001e2d8:	00004a3d 	.word	0x00004a3d
4001e2dc:	0000095c 	.word	0x0000095c
4001e2e0:	e0051000 	.word	0xe0051000
4001e2e4:	e0031000 	.word	0xe0031000
4001e2e8:	de001011 	.word	0xde001011
4001e2ec:	e0050000 	.word	0xe0050000
4001e2f0:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e2f4 <GetUsbLinkActive>:
4001e2f4:	e92d4010 	push	{r4, lr}
4001e2f8:	e59f0064 	ldr	r0, [pc, #100]	; 4001e364 <GetUsbLinkActive+0x70>
4001e2fc:	e5d00009 	ldrb	r0, [r0, #9]
4001e300:	e3500003 	cmp	r0, #3
4001e304:	1a000015 	bne	4001e360 <GetUsbLinkActive+0x6c>
4001e308:	e59f0058 	ldr	r0, [pc, #88]	; 4001e368 <GetUsbLinkActive+0x74>
4001e30c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e310:	e3c00004 	bic	r0, r0, #4
4001e314:	e59f104c 	ldr	r1, [pc, #76]	; 4001e368 <GetUsbLinkActive+0x74>
4001e318:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e31c:	e1a00001 	mov	r0, r1
4001e320:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e324:	e3c00004 	bic	r0, r0, #4
4001e328:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e32c:	e59f0030 	ldr	r0, [pc, #48]	; 4001e364 <GetUsbLinkActive+0x70>
4001e330:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e334:	e3500000 	cmp	r0, #0
4001e338:	1a000008 	bne	4001e360 <GetUsbLinkActive+0x6c>
4001e33c:	e1a00001 	mov	r0, r1
4001e340:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e344:	e200403f 	and	r4, r0, #63	; 0x3f
4001e348:	e3540011 	cmp	r4, #17
4001e34c:	0a000001 	beq	4001e358 <GetUsbLinkActive+0x64>
4001e350:	e3540012 	cmp	r4, #18
4001e354:	1a000001 	bne	4001e360 <GetUsbLinkActive+0x6c>
4001e358:	e3a00000 	mov	r0, #0
4001e35c:	ebfffdcd 	bl	4001da98 <CyU3PUsbSetLinkPowerState>
4001e360:	e8bd8010 	pop	{r4, pc}
4001e364:	40031d40 	.word	0x40031d40
4001e368:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e36c <CyU3PHsGrantIntrHandler>:
4001e36c:	e92d4010 	push	{r4, lr}
4001e370:	e59f005c 	ldr	r0, [pc, #92]	; 4001e3d4 <CyU3PHsGrantIntrHandler+0x68>
4001e374:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e378:	e3100080 	tst	r0, #128	; 0x80
4001e37c:	0a000013 	beq	4001e3d0 <CyU3PHsGrantIntrHandler+0x64>
4001e380:	e59f0050 	ldr	r0, [pc, #80]	; 4001e3d8 <CyU3PHsGrantIntrHandler+0x6c>
4001e384:	e5900014 	ldr	r0, [r0, #20]
4001e388:	e59f1048 	ldr	r1, [pc, #72]	; 4001e3d8 <CyU3PHsGrantIntrHandler+0x6c>
4001e38c:	e581000c 	str	r0, [r1, #12]
4001e390:	e2810000 	add	r0, r1, #0
4001e394:	e5900018 	ldr	r0, [r0, #24]
4001e398:	e5810010 	str	r0, [r1, #16]
4001e39c:	e59f0038 	ldr	r0, [pc, #56]	; 4001e3dc <CyU3PHsGrantIntrHandler+0x70>
4001e3a0:	e5900000 	ldr	r0, [r0]
4001e3a4:	e3500000 	cmp	r0, #0
4001e3a8:	0a000004 	beq	4001e3c0 <CyU3PHsGrantIntrHandler+0x54>
4001e3ac:	e3a01001 	mov	r1, #1
4001e3b0:	e3a00006 	mov	r0, #6
4001e3b4:	e59f2020 	ldr	r2, [pc, #32]	; 4001e3dc <CyU3PHsGrantIntrHandler+0x70>
4001e3b8:	e5922000 	ldr	r2, [r2]
4001e3bc:	e12fff32 	blx	r2
4001e3c0:	e3a00002 	mov	r0, #2
4001e3c4:	e59f1014 	ldr	r1, [pc, #20]	; 4001e3e0 <CyU3PHsGrantIntrHandler+0x74>
4001e3c8:	e5c10009 	strb	r0, [r1, #9]
4001e3cc:	eb00060a 	bl	4001fbfc <CyU3PUsbEpPrepare>
4001e3d0:	e8bd8010 	pop	{r4, pc}
4001e3d4:	e0031000 	.word	0xe0031000
4001e3d8:	40031f98 	.word	0x40031f98
4001e3dc:	40030d9c 	.word	0x40030d9c
4001e3e0:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUibApplicationDefine:

4001e3e4 <CyU3PUibApplicationDefine>:
4001e3e4:	e92d4030 	push	{r4, r5, lr}
4001e3e8:	e24dd01c 	sub	sp, sp, #28
4001e3ec:	eb000178 	bl	4001e9d4 <CyU3PUibInitVars>
4001e3f0:	e3a00b01 	mov	r0, #1024	; 0x400
4001e3f4:	ebff949e 	bl	40003674 <CyU3PMemAlloc>
4001e3f8:	e1a05000 	mov	r5, r0
4001e3fc:	e3550000 	cmp	r5, #0
4001e400:	0a00004f 	beq	4001e544 <CyU3PUibApplicationDefine+0x160>
4001e404:	e3a030a8 	mov	r3, #168	; 0xa8
4001e408:	e3a02000 	mov	r2, #0
4001e40c:	e3a00004 	mov	r0, #4
4001e410:	e58d000c 	str	r0, [sp, #12]
4001e414:	e58d2010 	str	r2, [sp, #16]
4001e418:	e58d2014 	str	r2, [sp, #20]
4001e41c:	e58d3018 	str	r3, [sp, #24]
4001e420:	e3a02b01 	mov	r2, #1024	; 0x400
4001e424:	e3a03000 	mov	r3, #0
4001e428:	e58d2004 	str	r2, [sp, #4]
4001e42c:	e59f2118 	ldr	r2, [pc, #280]	; 4001e54c <CyU3PUibApplicationDefine+0x168>
4001e430:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e434:	e58d0008 	str	r0, [sp, #8]
4001e438:	e59f0120 	ldr	r0, [pc, #288]	; 4001e560 <CyU3PUibApplicationDefine+0x17c>
4001e43c:	e58d5000 	str	r5, [sp]
4001e440:	ebffb00a 	bl	4000a470 <_txe_thread_create>
4001e444:	e1a04000 	mov	r4, r0
4001e448:	e3540000 	cmp	r4, #0
4001e44c:	1a00003c 	bne	4001e544 <CyU3PUibApplicationDefine+0x160>
4001e450:	e3a00080 	mov	r0, #128	; 0x80
4001e454:	ebff9486 	bl	40003674 <CyU3PMemAlloc>
4001e458:	e1a05000 	mov	r5, r0
4001e45c:	e3550000 	cmp	r5, #0
4001e460:	0a000009 	beq	4001e48c <CyU3PUibApplicationDefine+0xa8>
4001e464:	e3a0303c 	mov	r3, #60	; 0x3c
4001e468:	e3a02080 	mov	r2, #128	; 0x80
4001e46c:	e1cd20f0 	strd	r2, [sp]
4001e470:	e1a03005 	mov	r3, r5
4001e474:	e3a02004 	mov	r2, #4
4001e478:	e3a01000 	mov	r1, #0
4001e47c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001e564 <CyU3PUibApplicationDefine+0x180>
4001e480:	ebffaf14 	bl	4000a0d8 <_txe_queue_create>
4001e484:	e1a04000 	mov	r4, r0
4001e488:	ea000000 	b	4001e490 <CyU3PUibApplicationDefine+0xac>
4001e48c:	e3a04010 	mov	r4, #16
4001e490:	e3540000 	cmp	r4, #0
4001e494:	1a000004 	bne	4001e4ac <CyU3PUibApplicationDefine+0xc8>
4001e498:	e3a02028 	mov	r2, #40	; 0x28
4001e49c:	e3a01000 	mov	r1, #0
4001e4a0:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e568 <CyU3PUibApplicationDefine+0x184>
4001e4a4:	ebffad76 	bl	40009a84 <_txe_event_flags_create>
4001e4a8:	e1a04000 	mov	r4, r0
4001e4ac:	e3540000 	cmp	r4, #0
4001e4b0:	1a000005 	bne	4001e4cc <CyU3PUibApplicationDefine+0xe8>
4001e4b4:	e3a03038 	mov	r3, #56	; 0x38
4001e4b8:	e3a02000 	mov	r2, #0
4001e4bc:	e1a01002 	mov	r1, r2
4001e4c0:	e59f00a4 	ldr	r0, [pc, #164]	; 4001e56c <CyU3PUibApplicationDefine+0x188>
4001e4c4:	ebffae28 	bl	40009d6c <_txe_mutex_create>
4001e4c8:	e1a04000 	mov	r4, r0
4001e4cc:	e3540000 	cmp	r4, #0
4001e4d0:	1a00000a 	bne	4001e500 <CyU3PUibApplicationDefine+0x11c>
4001e4d4:	e3a0302c 	mov	r3, #44	; 0x2c
4001e4d8:	e3a02000 	mov	r2, #0
4001e4dc:	e3a00064 	mov	r0, #100	; 0x64
4001e4e0:	e88d0005 	stm	sp, {r0, r2}
4001e4e4:	e1cd20f8 	strd	r2, [sp, #8]
4001e4e8:	e1a03002 	mov	r3, r2
4001e4ec:	e59f207c 	ldr	r2, [pc, #124]	; 4001e570 <CyU3PUibApplicationDefine+0x18c>
4001e4f0:	e3a01000 	mov	r1, #0
4001e4f4:	e59f0078 	ldr	r0, [pc, #120]	; 4001e574 <CyU3PUibApplicationDefine+0x190>
4001e4f8:	ebffb109 	bl	4000a924 <_txe_timer_create>
4001e4fc:	e1a04000 	mov	r4, r0
4001e500:	e3540000 	cmp	r4, #0
4001e504:	1a00000a 	bne	4001e534 <CyU3PUibApplicationDefine+0x150>
4001e508:	e3a0302c 	mov	r3, #44	; 0x2c
4001e50c:	e3a02001 	mov	r2, #1
4001e510:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e514:	e58d1000 	str	r1, [sp]
4001e518:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e51c:	e3a03000 	mov	r3, #0
4001e520:	e59f2050 	ldr	r2, [pc, #80]	; 4001e578 <CyU3PUibApplicationDefine+0x194>
4001e524:	e1a01003 	mov	r1, r3
4001e528:	e59f004c 	ldr	r0, [pc, #76]	; 4001e57c <CyU3PUibApplicationDefine+0x198>
4001e52c:	ebffb0fc 	bl	4000a924 <_txe_timer_create>
4001e530:	e1a04000 	mov	r4, r0
4001e534:	e3540000 	cmp	r4, #0
4001e538:	1a000001 	bne	4001e544 <CyU3PUibApplicationDefine+0x160>
4001e53c:	e59f001c 	ldr	r0, [pc, #28]	; 4001e560 <CyU3PUibApplicationDefine+0x17c>
4001e540:	ebffb0b5 	bl	4000a81c <_txe_thread_resume>
4001e544:	e28dd01c 	add	sp, sp, #28
4001e548:	e8bd8030 	pop	{r4, r5, pc}
4001e54c:	4001f750 	.word	0x4001f750
4001e550:	555f3430 	.word	0x555f3430
4001e554:	545f4249 	.word	0x545f4249
4001e558:	41455248 	.word	0x41455248
4001e55c:	00000044 	.word	0x00000044
4001e560:	40031dd4 	.word	0x40031dd4
4001e564:	40031e7c 	.word	0x40031e7c
4001e568:	40031eb8 	.word	0x40031eb8
4001e56c:	40031ee0 	.word	0x40031ee0
4001e570:	4001f6e0 	.word	0x4001f6e0
4001e574:	400326a0 	.word	0x400326a0
4001e578:	4001ea8c 	.word	0x4001ea8c
4001e57c:	400326cc 	.word	0x400326cc

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001e580 <CyU3PUibDevCtrlEvtHandler>:
4001e580:	e92d4010 	push	{r4, lr}
4001e584:	e59f01c8 	ldr	r0, [pc, #456]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e588:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001e58c:	e3140c01 	tst	r4, #256	; 0x100
4001e590:	0a000008 	beq	4001e5b8 <CyU3PUibDevCtrlEvtHandler+0x38>
4001e594:	e3a00c01 	mov	r0, #256	; 0x100
4001e598:	e59f11b4 	ldr	r1, [pc, #436]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e59c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e5a0:	eb000995 	bl	40020bfc <CyU3PUsbResumeHandler>
4001e5a4:	e59f01a8 	ldr	r0, [pc, #424]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5a8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e5ac:	e3800c01 	orr	r0, r0, #256	; 0x100
4001e5b0:	e59f119c 	ldr	r1, [pc, #412]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5b4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e5b8:	e3140004 	tst	r4, #4
4001e5bc:	0a000008 	beq	4001e5e4 <CyU3PUibDevCtrlEvtHandler+0x64>
4001e5c0:	e3a00004 	mov	r0, #4
4001e5c4:	e59f1188 	ldr	r1, [pc, #392]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5c8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e5cc:	eb000d6c 	bl	40021b84 <CyU3PUsbSuspendHandler>
4001e5d0:	e59f017c 	ldr	r0, [pc, #380]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5d4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e5d8:	e3800004 	orr	r0, r0, #4
4001e5dc:	e59f1170 	ldr	r1, [pc, #368]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5e0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e5e4:	e3140008 	tst	r4, #8
4001e5e8:	0a000008 	beq	4001e610 <CyU3PUibDevCtrlEvtHandler+0x90>
4001e5ec:	e3a00008 	mov	r0, #8
4001e5f0:	e59f115c 	ldr	r1, [pc, #348]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5f4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e5f8:	eb00092e 	bl	40020ab8 <CyU3PUsbResetHandler>
4001e5fc:	e59f0150 	ldr	r0, [pc, #336]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e600:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e604:	e3800008 	orr	r0, r0, #8
4001e608:	e59f1144 	ldr	r1, [pc, #324]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e60c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e610:	e3140010 	tst	r4, #16
4001e614:	0a000008 	beq	4001e63c <CyU3PUibDevCtrlEvtHandler+0xbc>
4001e618:	e3a00010 	mov	r0, #16
4001e61c:	e59f1130 	ldr	r1, [pc, #304]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e620:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e624:	ebffff50 	bl	4001e36c <CyU3PHsGrantIntrHandler>
4001e628:	e59f0124 	ldr	r0, [pc, #292]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e62c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e630:	e3800010 	orr	r0, r0, #16
4001e634:	e59f1118 	ldr	r1, [pc, #280]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e638:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e63c:	e3140040 	tst	r4, #64	; 0x40
4001e640:	0a000018 	beq	4001e6a8 <CyU3PUibDevCtrlEvtHandler+0x128>
4001e644:	e59f010c 	ldr	r0, [pc, #268]	; 4001e758 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e648:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001e64c:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001e650:	e59f1100 	ldr	r1, [pc, #256]	; 4001e758 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e654:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e658:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001e65c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e660:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e664:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001e668:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e66c:	e1a00001 	mov	r0, r1
4001e670:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e674:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e678:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e67c:	e3a00040 	mov	r0, #64	; 0x40
4001e680:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e684:	e3a00001 	mov	r0, #1
4001e688:	e59f10cc 	ldr	r1, [pc, #204]	; 4001e75c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e68c:	e5810014 	str	r0, [r1, #20]
4001e690:	eb000b38 	bl	40021378 <CyU3PUsbSetupCommand>
4001e694:	e59f00b8 	ldr	r0, [pc, #184]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e698:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e69c:	e3800040 	orr	r0, r0, #64	; 0x40
4001e6a0:	e59f10ac 	ldr	r1, [pc, #172]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6a4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e6a8:	e3140080 	tst	r4, #128	; 0x80
4001e6ac:	0a000006 	beq	4001e6cc <CyU3PUibDevCtrlEvtHandler+0x14c>
4001e6b0:	e3a00080 	mov	r0, #128	; 0x80
4001e6b4:	e59f1098 	ldr	r1, [pc, #152]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6b8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e6bc:	e1c10000 	bic	r0, r1, r0
4001e6c0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e6c4:	e3800080 	orr	r0, r0, #128	; 0x80
4001e6c8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e6cc:	e3140b02 	tst	r4, #2048	; 0x800
4001e6d0:	0a00001e 	beq	4001e750 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001e6d4:	e59f0080 	ldr	r0, [pc, #128]	; 4001e75c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e6d8:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e6dc:	e3500000 	cmp	r0, #0
4001e6e0:	1a000002 	bne	4001e6f0 <CyU3PUibDevCtrlEvtHandler+0x170>
4001e6e4:	e3a00501 	mov	r0, #4194304	; 0x400000
4001e6e8:	e59f1068 	ldr	r1, [pc, #104]	; 4001e758 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e6ec:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e6f0:	e3a00b02 	mov	r0, #2048	; 0x800
4001e6f4:	e59f1058 	ldr	r1, [pc, #88]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6f8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e6fc:	e59f0058 	ldr	r0, [pc, #88]	; 4001e75c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e700:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001e704:	e3500000 	cmp	r0, #0
4001e708:	0a00000b 	beq	4001e73c <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001e70c:	e59f004c 	ldr	r0, [pc, #76]	; 4001e760 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e710:	e5900000 	ldr	r0, [r0]
4001e714:	e3500000 	cmp	r0, #0
4001e718:	0a000004 	beq	4001e730 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001e71c:	e3a01000 	mov	r1, #0
4001e720:	e3a0000a 	mov	r0, #10
4001e724:	e59f2034 	ldr	r2, [pc, #52]	; 4001e760 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e728:	e5922000 	ldr	r2, [r2]
4001e72c:	e12fff32 	blx	r2
4001e730:	e3a00000 	mov	r0, #0
4001e734:	e59f1020 	ldr	r1, [pc, #32]	; 4001e75c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e738:	e5810040 	str	r0, [r1, #64]	; 0x40
4001e73c:	e59f0010 	ldr	r0, [pc, #16]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e740:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e744:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001e748:	e59f1004 	ldr	r1, [pc, #4]	; 4001e754 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e74c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e750:	e8bd8010 	pop	{r4, pc}
4001e754:	e0031000 	.word	0xe0031000
4001e758:	e0032000 	.word	0xe0032000
4001e75c:	40031d40 	.word	0x40031d40
4001e760:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUibEPEvtHandler:

4001e764 <CyU3PUibEPEvtHandler>:
4001e764:	e92d4070 	push	{r4, r5, r6, lr}
4001e768:	e59f0244 	ldr	r0, [pc, #580]	; 4001e9b4 <CyU3PUibEPEvtHandler+0x250>
4001e76c:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001e770:	e59f123c 	ldr	r1, [pc, #572]	; 4001e9b4 <CyU3PUibEPEvtHandler+0x250>
4001e774:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001e778:	e0004001 	and	r4, r0, r1
4001e77c:	e59f0234 	ldr	r0, [pc, #564]	; 4001e9b8 <CyU3PUibEPEvtHandler+0x254>
4001e780:	e5900000 	ldr	r0, [r0]
4001e784:	e0044000 	and	r4, r4, r0
4001e788:	e3a05001 	mov	r5, #1
4001e78c:	ea000080 	b	4001e994 <CyU3PUibEPEvtHandler+0x230>
4001e790:	e3a00001 	mov	r0, #1
4001e794:	e1140510 	tst	r4, r0, lsl r5
4001e798:	0a00003b 	beq	4001e88c <CyU3PUibEPEvtHandler+0x128>
4001e79c:	e59f0218 	ldr	r0, [pc, #536]	; 4001e9bc <CyU3PUibEPEvtHandler+0x258>
4001e7a0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e7a4:	e59f0214 	ldr	r0, [pc, #532]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e7a8:	e5900000 	ldr	r0, [r0]
4001e7ac:	e3500000 	cmp	r0, #0
4001e7b0:	0a000033 	beq	4001e884 <CyU3PUibEPEvtHandler+0x120>
4001e7b4:	e59f0208 	ldr	r0, [pc, #520]	; 4001e9c4 <CyU3PUibEPEvtHandler+0x260>
4001e7b8:	e5900000 	ldr	r0, [r0]
4001e7bc:	e3100001 	tst	r0, #1
4001e7c0:	0a000008 	beq	4001e7e8 <CyU3PUibEPEvtHandler+0x84>
4001e7c4:	e3160702 	tst	r6, #524288	; 0x80000
4001e7c8:	0a000006 	beq	4001e7e8 <CyU3PUibEPEvtHandler+0x84>
4001e7cc:	e3852080 	orr	r2, r5, #128	; 0x80
4001e7d0:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x264>
4001e7d4:	e5d01009 	ldrb	r1, [r0, #9]
4001e7d8:	e3a00001 	mov	r0, #1
4001e7dc:	e59f31dc 	ldr	r3, [pc, #476]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e7e0:	e5933000 	ldr	r3, [r3]
4001e7e4:	e12fff33 	blx	r3
4001e7e8:	e59f01d4 	ldr	r0, [pc, #468]	; 4001e9c4 <CyU3PUibEPEvtHandler+0x260>
4001e7ec:	e5900000 	ldr	r0, [r0]
4001e7f0:	e3100002 	tst	r0, #2
4001e7f4:	0a000008 	beq	4001e81c <CyU3PUibEPEvtHandler+0xb8>
4001e7f8:	e3160602 	tst	r6, #2097152	; 0x200000
4001e7fc:	0a000006 	beq	4001e81c <CyU3PUibEPEvtHandler+0xb8>
4001e800:	e3852080 	orr	r2, r5, #128	; 0x80
4001e804:	e59f01bc 	ldr	r0, [pc, #444]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x264>
4001e808:	e5d01009 	ldrb	r1, [r0, #9]
4001e80c:	e3a00002 	mov	r0, #2
4001e810:	e59f31a8 	ldr	r3, [pc, #424]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e814:	e5933000 	ldr	r3, [r3]
4001e818:	e12fff33 	blx	r3
4001e81c:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e9c4 <CyU3PUibEPEvtHandler+0x260>
4001e820:	e5900000 	ldr	r0, [r0]
4001e824:	e3100004 	tst	r0, #4
4001e828:	0a000008 	beq	4001e850 <CyU3PUibEPEvtHandler+0xec>
4001e82c:	e3160501 	tst	r6, #4194304	; 0x400000
4001e830:	0a000006 	beq	4001e850 <CyU3PUibEPEvtHandler+0xec>
4001e834:	e3852080 	orr	r2, r5, #128	; 0x80
4001e838:	e59f0188 	ldr	r0, [pc, #392]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x264>
4001e83c:	e5d01009 	ldrb	r1, [r0, #9]
4001e840:	e3a00004 	mov	r0, #4
4001e844:	e59f3174 	ldr	r3, [pc, #372]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e848:	e5933000 	ldr	r3, [r3]
4001e84c:	e12fff33 	blx	r3
4001e850:	e59f016c 	ldr	r0, [pc, #364]	; 4001e9c4 <CyU3PUibEPEvtHandler+0x260>
4001e854:	e5900000 	ldr	r0, [r0]
4001e858:	e3100008 	tst	r0, #8
4001e85c:	0a000008 	beq	4001e884 <CyU3PUibEPEvtHandler+0x120>
4001e860:	e3160502 	tst	r6, #8388608	; 0x800000
4001e864:	0a000006 	beq	4001e884 <CyU3PUibEPEvtHandler+0x120>
4001e868:	e3852080 	orr	r2, r5, #128	; 0x80
4001e86c:	e59f0154 	ldr	r0, [pc, #340]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x264>
4001e870:	e5d01009 	ldrb	r1, [r0, #9]
4001e874:	e3a00008 	mov	r0, #8
4001e878:	e59f3140 	ldr	r3, [pc, #320]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e87c:	e5933000 	ldr	r3, [r3]
4001e880:	e12fff33 	blx	r3
4001e884:	e59f0130 	ldr	r0, [pc, #304]	; 4001e9bc <CyU3PUibEPEvtHandler+0x258>
4001e888:	e7806105 	str	r6, [r0, r5, lsl #2]
4001e88c:	e2850010 	add	r0, r5, #16
4001e890:	e3a01001 	mov	r1, #1
4001e894:	e1140011 	tst	r4, r1, lsl r0
4001e898:	0a00003b 	beq	4001e98c <CyU3PUibEPEvtHandler+0x228>
4001e89c:	e59f0128 	ldr	r0, [pc, #296]	; 4001e9cc <CyU3PUibEPEvtHandler+0x268>
4001e8a0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e8a4:	e59f0114 	ldr	r0, [pc, #276]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e8a8:	e5900000 	ldr	r0, [r0]
4001e8ac:	e3500000 	cmp	r0, #0
4001e8b0:	0a000033 	beq	4001e984 <CyU3PUibEPEvtHandler+0x220>
4001e8b4:	e59f0108 	ldr	r0, [pc, #264]	; 4001e9c4 <CyU3PUibEPEvtHandler+0x260>
4001e8b8:	e5900000 	ldr	r0, [r0]
4001e8bc:	e3100001 	tst	r0, #1
4001e8c0:	0a000008 	beq	4001e8e8 <CyU3PUibEPEvtHandler+0x184>
4001e8c4:	e3160702 	tst	r6, #524288	; 0x80000
4001e8c8:	0a000006 	beq	4001e8e8 <CyU3PUibEPEvtHandler+0x184>
4001e8cc:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x264>
4001e8d0:	e5d01009 	ldrb	r1, [r0, #9]
4001e8d4:	e1a02005 	mov	r2, r5
4001e8d8:	e3a00001 	mov	r0, #1
4001e8dc:	e59f30dc 	ldr	r3, [pc, #220]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e8e0:	e5933000 	ldr	r3, [r3]
4001e8e4:	e12fff33 	blx	r3
4001e8e8:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e9c4 <CyU3PUibEPEvtHandler+0x260>
4001e8ec:	e5900000 	ldr	r0, [r0]
4001e8f0:	e3100002 	tst	r0, #2
4001e8f4:	0a000008 	beq	4001e91c <CyU3PUibEPEvtHandler+0x1b8>
4001e8f8:	e3160602 	tst	r6, #2097152	; 0x200000
4001e8fc:	0a000006 	beq	4001e91c <CyU3PUibEPEvtHandler+0x1b8>
4001e900:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x264>
4001e904:	e5d01009 	ldrb	r1, [r0, #9]
4001e908:	e1a02005 	mov	r2, r5
4001e90c:	e3a00002 	mov	r0, #2
4001e910:	e59f30a8 	ldr	r3, [pc, #168]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e914:	e5933000 	ldr	r3, [r3]
4001e918:	e12fff33 	blx	r3
4001e91c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001e9c4 <CyU3PUibEPEvtHandler+0x260>
4001e920:	e5900000 	ldr	r0, [r0]
4001e924:	e3100004 	tst	r0, #4
4001e928:	0a000008 	beq	4001e950 <CyU3PUibEPEvtHandler+0x1ec>
4001e92c:	e3160501 	tst	r6, #4194304	; 0x400000
4001e930:	0a000006 	beq	4001e950 <CyU3PUibEPEvtHandler+0x1ec>
4001e934:	e59f008c 	ldr	r0, [pc, #140]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x264>
4001e938:	e5d01009 	ldrb	r1, [r0, #9]
4001e93c:	e1a02005 	mov	r2, r5
4001e940:	e3a00004 	mov	r0, #4
4001e944:	e59f3074 	ldr	r3, [pc, #116]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e948:	e5933000 	ldr	r3, [r3]
4001e94c:	e12fff33 	blx	r3
4001e950:	e59f006c 	ldr	r0, [pc, #108]	; 4001e9c4 <CyU3PUibEPEvtHandler+0x260>
4001e954:	e5900000 	ldr	r0, [r0]
4001e958:	e3100008 	tst	r0, #8
4001e95c:	0a000008 	beq	4001e984 <CyU3PUibEPEvtHandler+0x220>
4001e960:	e3160502 	tst	r6, #8388608	; 0x800000
4001e964:	0a000006 	beq	4001e984 <CyU3PUibEPEvtHandler+0x220>
4001e968:	e59f0058 	ldr	r0, [pc, #88]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x264>
4001e96c:	e5d01009 	ldrb	r1, [r0, #9]
4001e970:	e1a02005 	mov	r2, r5
4001e974:	e3a00008 	mov	r0, #8
4001e978:	e59f3040 	ldr	r3, [pc, #64]	; 4001e9c0 <CyU3PUibEPEvtHandler+0x25c>
4001e97c:	e5933000 	ldr	r3, [r3]
4001e980:	e12fff33 	blx	r3
4001e984:	e59f0040 	ldr	r0, [pc, #64]	; 4001e9cc <CyU3PUibEPEvtHandler+0x268>
4001e988:	e7806105 	str	r6, [r0, r5, lsl #2]
4001e98c:	e2850001 	add	r0, r5, #1
4001e990:	e20050ff 	and	r5, r0, #255	; 0xff
4001e994:	e3550010 	cmp	r5, #16
4001e998:	baffff7c 	blt	4001e790 <CyU3PUibEPEvtHandler+0x2c>
4001e99c:	e59f002c 	ldr	r0, [pc, #44]	; 4001e9d0 <CyU3PUibEPEvtHandler+0x26c>
4001e9a0:	e5900004 	ldr	r0, [r0, #4]
4001e9a4:	e3800010 	orr	r0, r0, #16
4001e9a8:	e59f1020 	ldr	r1, [pc, #32]	; 4001e9d0 <CyU3PUibEPEvtHandler+0x26c>
4001e9ac:	e5810004 	str	r0, [r1, #4]
4001e9b0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e9b4:	e0031000 	.word	0xe0031000
4001e9b8:	40030d80 	.word	0x40030d80
4001e9bc:	e0031418 	.word	0xe0031418
4001e9c0:	40030d78 	.word	0x40030d78
4001e9c4:	40030d7c 	.word	0x40030d7c
4001e9c8:	40031d40 	.word	0x40031d40
4001e9cc:	e0031498 	.word	0xe0031498
4001e9d0:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001e9d4 <CyU3PUibInitVars>:
4001e9d4:	e92d4010 	push	{r4, lr}
4001e9d8:	e3a0207c 	mov	r2, #124	; 0x7c
4001e9dc:	e3a01000 	mov	r1, #0
4001e9e0:	e59f0070 	ldr	r0, [pc, #112]	; 4001ea58 <CyU3PUibInitVars+0x84>
4001e9e4:	ebff9333 	bl	400036b8 <CyU3PMemSet>
4001e9e8:	e3a02074 	mov	r2, #116	; 0x74
4001e9ec:	e3a01000 	mov	r1, #0
4001e9f0:	e59f0064 	ldr	r0, [pc, #100]	; 4001ea5c <CyU3PUibInitVars+0x88>
4001e9f4:	ebff932f 	bl	400036b8 <CyU3PMemSet>
4001e9f8:	e3a00000 	mov	r0, #0
4001e9fc:	e59f105c 	ldr	r1, [pc, #92]	; 4001ea60 <CyU3PUibInitVars+0x8c>
4001ea00:	e5810000 	str	r0, [r1]
4001ea04:	e59f1058 	ldr	r1, [pc, #88]	; 4001ea64 <CyU3PUibInitVars+0x90>
4001ea08:	e5810000 	str	r0, [r1]
4001ea0c:	e59f1054 	ldr	r1, [pc, #84]	; 4001ea68 <CyU3PUibInitVars+0x94>
4001ea10:	e5810000 	str	r0, [r1]
4001ea14:	e59f1050 	ldr	r1, [pc, #80]	; 4001ea6c <CyU3PUibInitVars+0x98>
4001ea18:	e5810000 	str	r0, [r1]
4001ea1c:	e59f104c 	ldr	r1, [pc, #76]	; 4001ea70 <CyU3PUibInitVars+0x9c>
4001ea20:	e5810000 	str	r0, [r1]
4001ea24:	e59f1048 	ldr	r1, [pc, #72]	; 4001ea74 <CyU3PUibInitVars+0xa0>
4001ea28:	e5810000 	str	r0, [r1]
4001ea2c:	e59f1044 	ldr	r1, [pc, #68]	; 4001ea78 <CyU3PUibInitVars+0xa4>
4001ea30:	e5810000 	str	r0, [r1]
4001ea34:	e59f1040 	ldr	r1, [pc, #64]	; 4001ea7c <CyU3PUibInitVars+0xa8>
4001ea38:	e5810000 	str	r0, [r1]
4001ea3c:	e59f103c 	ldr	r1, [pc, #60]	; 4001ea80 <CyU3PUibInitVars+0xac>
4001ea40:	e5810000 	str	r0, [r1]
4001ea44:	e59f1038 	ldr	r1, [pc, #56]	; 4001ea84 <CyU3PUibInitVars+0xb0>
4001ea48:	e5810000 	str	r0, [r1]
4001ea4c:	e59f1034 	ldr	r1, [pc, #52]	; 4001ea88 <CyU3PUibInitVars+0xb4>
4001ea50:	e5810000 	str	r0, [r1]
4001ea54:	e8bd8010 	pop	{r4, pc}
4001ea58:	40031d40 	.word	0x40031d40
4001ea5c:	40031f98 	.word	0x40031f98
4001ea60:	40030d60 	.word	0x40030d60
4001ea64:	40030d64 	.word	0x40030d64
4001ea68:	40030d68 	.word	0x40030d68
4001ea6c:	40030db4 	.word	0x40030db4
4001ea70:	40030d9c 	.word	0x40030d9c
4001ea74:	40030da0 	.word	0x40030da0
4001ea78:	40030da4 	.word	0x40030da4
4001ea7c:	40030d78 	.word	0x40030d78
4001ea80:	40030d7c 	.word	0x40030d7c
4001ea84:	40030d80 	.word	0x40030d80
4001ea88:	40030d40 	.word	0x40030d40

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001ea8c <CyU3PUibLnkErrClrTimerCb>:
4001ea8c:	e92d4010 	push	{r4, lr}
4001ea90:	e1a04000 	mov	r4, r0
4001ea94:	ebfff82d 	bl	4001cb50 <CyU3PUsbGetSpeed>
4001ea98:	e3500003 	cmp	r0, #3
4001ea9c:	1a000003 	bne	4001eab0 <CyU3PUibLnkErrClrTimerCb+0x24>
4001eaa0:	e59f000c 	ldr	r0, [pc, #12]	; 4001eab4 <CyU3PUibLnkErrClrTimerCb+0x28>
4001eaa4:	e5900014 	ldr	r0, [r0, #20]
4001eaa8:	e59f1008 	ldr	r1, [pc, #8]	; 4001eab8 <CyU3PUibLnkErrClrTimerCb+0x2c>
4001eaac:	e5810000 	str	r0, [r1]
4001eab0:	e8bd8010 	pop	{r4, pc}
4001eab4:	e0033000 	.word	0xe0033000
4001eab8:	40030d84 	.word	0x40030d84

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001eabc <CyU3PUibLnkIntrEvtHandler>:
4001eabc:	e92d4010 	push	{r4, lr}
4001eac0:	e59f008c 	ldr	r0, [pc, #140]	; 4001eb54 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eac4:	e5904004 	ldr	r4, [r0, #4]
4001eac8:	e3140902 	tst	r4, #32768	; 0x8000
4001eacc:	0a00000b 	beq	4001eb00 <CyU3PUibLnkIntrEvtHandler+0x44>
4001ead0:	e59f0080 	ldr	r0, [pc, #128]	; 4001eb58 <CyU3PUibLnkIntrEvtHandler+0x9c>
4001ead4:	e5900000 	ldr	r0, [r0]
4001ead8:	e59f1074 	ldr	r1, [pc, #116]	; 4001eb54 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eadc:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001eae0:	eb000859 	bl	40020c4c <CyU3PUsbSSConnecthandler>
4001eae4:	e3a00902 	mov	r0, #32768	; 0x8000
4001eae8:	e59f1064 	ldr	r1, [pc, #100]	; 4001eb54 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eaec:	e5810004 	str	r0, [r1, #4]
4001eaf0:	e1c10000 	bic	r0, r1, r0
4001eaf4:	e5900008 	ldr	r0, [r0, #8]
4001eaf8:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001eafc:	e5810008 	str	r0, [r1, #8]
4001eb00:	e3140801 	tst	r4, #65536	; 0x10000
4001eb04:	0a000007 	beq	4001eb28 <CyU3PUibLnkIntrEvtHandler+0x6c>
4001eb08:	eb0008cc 	bl	40020e40 <CyU3PUsbSSDisConnecthandler>
4001eb0c:	e3a00801 	mov	r0, #65536	; 0x10000
4001eb10:	e59f103c 	ldr	r1, [pc, #60]	; 4001eb54 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb14:	e5810004 	str	r0, [r1, #4]
4001eb18:	e1810000 	orr	r0, r1, r0
4001eb1c:	e5900008 	ldr	r0, [r0, #8]
4001eb20:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001eb24:	e5810008 	str	r0, [r1, #8]
4001eb28:	e3140802 	tst	r4, #131072	; 0x20000
4001eb2c:	0a000007 	beq	4001eb50 <CyU3PUibLnkIntrEvtHandler+0x94>
4001eb30:	eb000926 	bl	40020fd0 <CyU3PUsbSSReset>
4001eb34:	e3a00802 	mov	r0, #131072	; 0x20000
4001eb38:	e59f1014 	ldr	r1, [pc, #20]	; 4001eb54 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb3c:	e5810004 	str	r0, [r1, #4]
4001eb40:	e1810000 	orr	r0, r1, r0
4001eb44:	e5900008 	ldr	r0, [r0, #8]
4001eb48:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001eb4c:	e5810008 	str	r0, [r1, #8]
4001eb50:	e8bd8010 	pop	{r4, pc}
4001eb54:	e0033000 	.word	0xe0033000
4001eb58:	40030d8c 	.word	0x40030d8c

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001eb5c <CyU3PUibProtEpIntrEvtHandler>:
4001eb5c:	e92d4070 	push	{r4, r5, r6, lr}
4001eb60:	e59f03b4 	ldr	r0, [pc, #948]	; 4001ef1c <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001eb64:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001eb68:	e59f13ac 	ldr	r1, [pc, #940]	; 4001ef1c <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001eb6c:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001eb70:	e0005001 	and	r5, r0, r1
4001eb74:	e3a04001 	mov	r4, #1
4001eb78:	ea0000df 	b	4001eefc <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001eb7c:	e3a00001 	mov	r0, #1
4001eb80:	e1150410 	tst	r5, r0, lsl r4
4001eb84:	0a000081 	beq	4001ed90 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001eb88:	e59f0390 	ldr	r0, [pc, #912]	; 4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001eb8c:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001eb90:	e3160901 	tst	r6, #16384	; 0x4000
4001eb94:	0a00002a 	beq	4001ec44 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001eb98:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001eb9c:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001eba0:	e3800002 	orr	r0, r0, #2
4001eba4:	e59f1374 	ldr	r1, [pc, #884]	; 4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001eba8:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ebac:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001ebb0:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ebb4:	e1a01802 	lsl	r1, r2, #16
4001ebb8:	e1a01821 	lsr	r1, r1, #16
4001ebbc:	e20420ff 	and	r2, r4, #255	; 0xff
4001ebc0:	e3820080 	orr	r0, r2, #128	; 0x80
4001ebc4:	ebfffa90 	bl	4001d60c <CyU3PUsbSendNrdy>
4001ebc8:	e20410ff 	and	r1, r4, #255	; 0xff
4001ebcc:	e3810080 	orr	r0, r1, #128	; 0x80
4001ebd0:	ebfff9a1 	bl	4001d25c <CyU3PUsbResetEp>
4001ebd4:	e3a0000a 	mov	r0, #10
4001ebd8:	ebffd20c 	bl	40013410 <CyU3PBusyWait>
4001ebdc:	e59f2340 	ldr	r2, [pc, #832]	; 4001ef24 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001ebe0:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ebe4:	e1a01802 	lsl	r1, r2, #16
4001ebe8:	e1a01821 	lsr	r1, r1, #16
4001ebec:	e20420ff 	and	r2, r4, #255	; 0xff
4001ebf0:	e3820080 	orr	r0, r2, #128	; 0x80
4001ebf4:	ebfffa47 	bl	4001d518 <CyU3PUsbSendErdy>
4001ebf8:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001ebfc:	e59f131c 	ldr	r1, [pc, #796]	; 4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec00:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ec04:	e59f031c 	ldr	r0, [pc, #796]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ec08:	e5900000 	ldr	r0, [r0]
4001ec0c:	e3100020 	tst	r0, #32
4001ec10:	0a00000b 	beq	4001ec44 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ec14:	e3a00001 	mov	r0, #1
4001ec18:	e59f130c 	ldr	r1, [pc, #780]	; 4001ef2c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ec1c:	e5911000 	ldr	r1, [r1]
4001ec20:	e1110410 	tst	r1, r0, lsl r4
4001ec24:	0a000006 	beq	4001ec44 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ec28:	e20400ff 	and	r0, r4, #255	; 0xff
4001ec2c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ec30:	e3a01003 	mov	r1, #3
4001ec34:	e3a00020 	mov	r0, #32
4001ec38:	e59f32f0 	ldr	r3, [pc, #752]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ec3c:	e5933000 	ldr	r3, [r3]
4001ec40:	e12fff33 	blx	r3
4001ec44:	e3160801 	tst	r6, #65536	; 0x10000
4001ec48:	0a000004 	beq	4001ec60 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001ec4c:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ec50:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ec54:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ec58:	e59f12c0 	ldr	r1, [pc, #704]	; 4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec5c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ec60:	e3a00001 	mov	r0, #1
4001ec64:	e59f12c0 	ldr	r1, [pc, #704]	; 4001ef2c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ec68:	e5911000 	ldr	r1, [r1]
4001ec6c:	e1110410 	tst	r1, r0, lsl r4
4001ec70:	0a000044 	beq	4001ed88 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ec74:	e59f02b4 	ldr	r0, [pc, #692]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ec78:	e5900000 	ldr	r0, [r0]
4001ec7c:	e3500000 	cmp	r0, #0
4001ec80:	0a000040 	beq	4001ed88 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ec84:	e59f029c 	ldr	r0, [pc, #668]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ec88:	e5900000 	ldr	r0, [r0]
4001ec8c:	e3100001 	tst	r0, #1
4001ec90:	0a000008 	beq	4001ecb8 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ec94:	e3160b01 	tst	r6, #1024	; 0x400
4001ec98:	0a000006 	beq	4001ecb8 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ec9c:	e20400ff 	and	r0, r4, #255	; 0xff
4001eca0:	e3802080 	orr	r2, r0, #128	; 0x80
4001eca4:	e3a01003 	mov	r1, #3
4001eca8:	e3a00001 	mov	r0, #1
4001ecac:	e59f327c 	ldr	r3, [pc, #636]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ecb0:	e5933000 	ldr	r3, [r3]
4001ecb4:	e12fff33 	blx	r3
4001ecb8:	e59f0268 	ldr	r0, [pc, #616]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ecbc:	e5900000 	ldr	r0, [r0]
4001ecc0:	e3100002 	tst	r0, #2
4001ecc4:	0a000008 	beq	4001ecec <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ecc8:	e3160a01 	tst	r6, #4096	; 0x1000
4001eccc:	0a000006 	beq	4001ecec <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ecd0:	e20400ff 	and	r0, r4, #255	; 0xff
4001ecd4:	e3802080 	orr	r2, r0, #128	; 0x80
4001ecd8:	e3a01003 	mov	r1, #3
4001ecdc:	e3a00002 	mov	r0, #2
4001ece0:	e59f3248 	ldr	r3, [pc, #584]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ece4:	e5933000 	ldr	r3, [r3]
4001ece8:	e12fff33 	blx	r3
4001ecec:	e59f0234 	ldr	r0, [pc, #564]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ecf0:	e5900000 	ldr	r0, [r0]
4001ecf4:	e3100004 	tst	r0, #4
4001ecf8:	0a000008 	beq	4001ed20 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ecfc:	e3160a02 	tst	r6, #8192	; 0x2000
4001ed00:	0a000006 	beq	4001ed20 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ed04:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed08:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed0c:	e3a01003 	mov	r1, #3
4001ed10:	e3a00004 	mov	r0, #4
4001ed14:	e59f3214 	ldr	r3, [pc, #532]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed18:	e5933000 	ldr	r3, [r3]
4001ed1c:	e12fff33 	blx	r3
4001ed20:	e59f0200 	ldr	r0, [pc, #512]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed24:	e5900000 	ldr	r0, [r0]
4001ed28:	e3100010 	tst	r0, #16
4001ed2c:	0a000008 	beq	4001ed54 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001ed30:	e3160c02 	tst	r6, #512	; 0x200
4001ed34:	0a000006 	beq	4001ed54 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001ed38:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed3c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed40:	e3a01003 	mov	r1, #3
4001ed44:	e3a00010 	mov	r0, #16
4001ed48:	e59f31e0 	ldr	r3, [pc, #480]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed4c:	e5933000 	ldr	r3, [r3]
4001ed50:	e12fff33 	blx	r3
4001ed54:	e59f01cc 	ldr	r0, [pc, #460]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed58:	e5900000 	ldr	r0, [r0]
4001ed5c:	e3100040 	tst	r0, #64	; 0x40
4001ed60:	0a000008 	beq	4001ed88 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ed64:	e3160802 	tst	r6, #131072	; 0x20000
4001ed68:	0a000006 	beq	4001ed88 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ed6c:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed70:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed74:	e3a01003 	mov	r1, #3
4001ed78:	e3a00040 	mov	r0, #64	; 0x40
4001ed7c:	e59f31ac 	ldr	r3, [pc, #428]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed80:	e5933000 	ldr	r3, [r3]
4001ed84:	e12fff33 	blx	r3
4001ed88:	e59f0190 	ldr	r0, [pc, #400]	; 4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ed8c:	e7806104 	str	r6, [r0, r4, lsl #2]
4001ed90:	e2840010 	add	r0, r4, #16
4001ed94:	e3a01001 	mov	r1, #1
4001ed98:	e1150011 	tst	r5, r1, lsl r0
4001ed9c:	0a000055 	beq	4001eef8 <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001eda0:	e59f018c 	ldr	r0, [pc, #396]	; 4001ef34 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001eda4:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001eda8:	e2840010 	add	r0, r4, #16
4001edac:	e1a00011 	lsl	r0, r1, r0
4001edb0:	e59f1174 	ldr	r1, [pc, #372]	; 4001ef2c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001edb4:	e5911000 	ldr	r1, [r1]
4001edb8:	e1100001 	tst	r0, r1
4001edbc:	0a00004b 	beq	4001eef0 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001edc0:	e59f0168 	ldr	r0, [pc, #360]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edc4:	e5900000 	ldr	r0, [r0]
4001edc8:	e3500000 	cmp	r0, #0
4001edcc:	0a000047 	beq	4001eef0 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001edd0:	e59f0150 	ldr	r0, [pc, #336]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001edd4:	e5900000 	ldr	r0, [r0]
4001edd8:	e3100001 	tst	r0, #1
4001eddc:	0a000007 	beq	4001ee00 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ede0:	e3160b01 	tst	r6, #1024	; 0x400
4001ede4:	0a000005 	beq	4001ee00 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ede8:	e20420ff 	and	r2, r4, #255	; 0xff
4001edec:	e3a01003 	mov	r1, #3
4001edf0:	e3a00001 	mov	r0, #1
4001edf4:	e59f3134 	ldr	r3, [pc, #308]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edf8:	e5933000 	ldr	r3, [r3]
4001edfc:	e12fff33 	blx	r3
4001ee00:	e59f0120 	ldr	r0, [pc, #288]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee04:	e5900000 	ldr	r0, [r0]
4001ee08:	e3100002 	tst	r0, #2
4001ee0c:	0a000007 	beq	4001ee30 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ee10:	e3160a01 	tst	r6, #4096	; 0x1000
4001ee14:	0a000005 	beq	4001ee30 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ee18:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee1c:	e3a01003 	mov	r1, #3
4001ee20:	e3a00002 	mov	r0, #2
4001ee24:	e59f3104 	ldr	r3, [pc, #260]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee28:	e5933000 	ldr	r3, [r3]
4001ee2c:	e12fff33 	blx	r3
4001ee30:	e59f00f0 	ldr	r0, [pc, #240]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee34:	e5900000 	ldr	r0, [r0]
4001ee38:	e3100004 	tst	r0, #4
4001ee3c:	0a000007 	beq	4001ee60 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001ee40:	e3160a02 	tst	r6, #8192	; 0x2000
4001ee44:	0a000005 	beq	4001ee60 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001ee48:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee4c:	e3a01003 	mov	r1, #3
4001ee50:	e3a00004 	mov	r0, #4
4001ee54:	e59f30d4 	ldr	r3, [pc, #212]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee58:	e5933000 	ldr	r3, [r3]
4001ee5c:	e12fff33 	blx	r3
4001ee60:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee64:	e5900000 	ldr	r0, [r0]
4001ee68:	e3100010 	tst	r0, #16
4001ee6c:	0a000007 	beq	4001ee90 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001ee70:	e3160c02 	tst	r6, #512	; 0x200
4001ee74:	0a000005 	beq	4001ee90 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001ee78:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee7c:	e3a01003 	mov	r1, #3
4001ee80:	e3a00010 	mov	r0, #16
4001ee84:	e59f30a4 	ldr	r3, [pc, #164]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee88:	e5933000 	ldr	r3, [r3]
4001ee8c:	e12fff33 	blx	r3
4001ee90:	e59f0090 	ldr	r0, [pc, #144]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee94:	e5900000 	ldr	r0, [r0]
4001ee98:	e3100040 	tst	r0, #64	; 0x40
4001ee9c:	0a000007 	beq	4001eec0 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001eea0:	e3160802 	tst	r6, #131072	; 0x20000
4001eea4:	0a000005 	beq	4001eec0 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001eea8:	e20420ff 	and	r2, r4, #255	; 0xff
4001eeac:	e3a01003 	mov	r1, #3
4001eeb0:	e3a00040 	mov	r0, #64	; 0x40
4001eeb4:	e59f3074 	ldr	r3, [pc, #116]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eeb8:	e5933000 	ldr	r3, [r3]
4001eebc:	e12fff33 	blx	r3
4001eec0:	e59f0060 	ldr	r0, [pc, #96]	; 4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eec4:	e5900000 	ldr	r0, [r0]
4001eec8:	e3100020 	tst	r0, #32
4001eecc:	0a000007 	beq	4001eef0 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001eed0:	e3160901 	tst	r6, #16384	; 0x4000
4001eed4:	0a000005 	beq	4001eef0 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001eed8:	e20420ff 	and	r2, r4, #255	; 0xff
4001eedc:	e3a01003 	mov	r1, #3
4001eee0:	e3a00020 	mov	r0, #32
4001eee4:	e59f3044 	ldr	r3, [pc, #68]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eee8:	e5933000 	ldr	r3, [r3]
4001eeec:	e12fff33 	blx	r3
4001eef0:	e59f003c 	ldr	r0, [pc, #60]	; 4001ef34 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001eef4:	e7806104 	str	r6, [r0, r4, lsl #2]
4001eef8:	e2844001 	add	r4, r4, #1
4001eefc:	e3540010 	cmp	r4, #16
4001ef00:	baffff1d 	blt	4001eb7c <CyU3PUibProtEpIntrEvtHandler+0x20>
4001ef04:	e59f002c 	ldr	r0, [pc, #44]	; 4001ef38 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001ef08:	e5900004 	ldr	r0, [r0, #4]
4001ef0c:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001ef10:	e59f1020 	ldr	r1, [pc, #32]	; 4001ef38 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001ef14:	e5810004 	str	r0, [r1, #4]
4001ef18:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ef1c:	e0033000 	.word	0xe0033000
4001ef20:	e0033500 	.word	0xe0033500
4001ef24:	e00335c0 	.word	0xe00335c0
4001ef28:	40030d7c 	.word	0x40030d7c
4001ef2c:	40030d80 	.word	0x40030d80
4001ef30:	40030d78 	.word	0x40030d78
4001ef34:	e0033600 	.word	0xe0033600
4001ef38:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001ef3c <CyU3PUibProtIntrEvtHandler>:
4001ef3c:	e92d4010 	push	{r4, lr}
4001ef40:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f018 <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef44:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001ef48:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f018 <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef4c:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001ef50:	e0004001 	and	r4, r0, r1
4001ef54:	e3140c02 	tst	r4, #512	; 0x200
4001ef58:	0a000006 	beq	4001ef78 <CyU3PUibProtIntrEvtHandler+0x3c>
4001ef5c:	e3a00c02 	mov	r0, #512	; 0x200
4001ef60:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f018 <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef64:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001ef68:	e3a00001 	mov	r0, #1
4001ef6c:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f01c <CyU3PUibProtIntrEvtHandler+0xe0>
4001ef70:	e5810014 	str	r0, [r1, #20]
4001ef74:	eb0008ff 	bl	40021378 <CyU3PUsbSetupCommand>
4001ef78:	e3140901 	tst	r4, #16384	; 0x4000
4001ef7c:	0a00000a 	beq	4001efac <CyU3PUibProtIntrEvtHandler+0x70>
4001ef80:	e59f0090 	ldr	r0, [pc, #144]	; 4001f018 <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef84:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001ef88:	e3c00004 	bic	r0, r0, #4
4001ef8c:	e59f1084 	ldr	r1, [pc, #132]	; 4001f018 <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef90:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001ef94:	e1a00001 	mov	r0, r1
4001ef98:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001ef9c:	e3c00004 	bic	r0, r0, #4
4001efa0:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001efa4:	e3a00901 	mov	r0, #16384	; 0x4000
4001efa8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001efac:	e3140b02 	tst	r4, #2048	; 0x800
4001efb0:	0a000012 	beq	4001f000 <CyU3PUibProtIntrEvtHandler+0xc4>
4001efb4:	e59f0060 	ldr	r0, [pc, #96]	; 4001f01c <CyU3PUibProtIntrEvtHandler+0xe0>
4001efb8:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001efbc:	e3500000 	cmp	r0, #0
4001efc0:	0a00000b 	beq	4001eff4 <CyU3PUibProtIntrEvtHandler+0xb8>
4001efc4:	e59f0054 	ldr	r0, [pc, #84]	; 4001f020 <CyU3PUibProtIntrEvtHandler+0xe4>
4001efc8:	e5900000 	ldr	r0, [r0]
4001efcc:	e3500000 	cmp	r0, #0
4001efd0:	0a000004 	beq	4001efe8 <CyU3PUibProtIntrEvtHandler+0xac>
4001efd4:	e3a01000 	mov	r1, #0
4001efd8:	e3a0000a 	mov	r0, #10
4001efdc:	e59f203c 	ldr	r2, [pc, #60]	; 4001f020 <CyU3PUibProtIntrEvtHandler+0xe4>
4001efe0:	e5922000 	ldr	r2, [r2]
4001efe4:	e12fff32 	blx	r2
4001efe8:	e3a00000 	mov	r0, #0
4001efec:	e59f1028 	ldr	r1, [pc, #40]	; 4001f01c <CyU3PUibProtIntrEvtHandler+0xe0>
4001eff0:	e5810040 	str	r0, [r1, #64]	; 0x40
4001eff4:	e3a00b02 	mov	r0, #2048	; 0x800
4001eff8:	e59f1018 	ldr	r1, [pc, #24]	; 4001f018 <CyU3PUibProtIntrEvtHandler+0xdc>
4001effc:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f000:	e59f001c 	ldr	r0, [pc, #28]	; 4001f024 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f004:	e5900004 	ldr	r0, [r0, #4]
4001f008:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f00c:	e59f1010 	ldr	r1, [pc, #16]	; 4001f024 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f010:	e5810004 	str	r0, [r1, #4]
4001f014:	e8bd8010 	pop	{r4, pc}
4001f018:	e0033000 	.word	0xe0033000
4001f01c:	40031d40 	.word	0x40031d40
4001f020:	40030d9c 	.word	0x40030d9c
4001f024:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f028 <CyU3PUibSendDescr>:
4001f028:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f02c:	e1a04000 	mov	r4, r0
4001f030:	e1a05001 	mov	r5, r1
4001f034:	e3a06000 	mov	r6, #0
4001f038:	e3a07000 	mov	r7, #0
4001f03c:	e3a08000 	mov	r8, #0
4001f040:	e3a09000 	mov	r9, #0
4001f044:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001f630 <CyU3PUibSendDescr+0x608>
4001f048:	e0000825 	and	r0, r0, r5, lsr #16
4001f04c:	e58d0000 	str	r0, [sp]
4001f050:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f054:	e5d00009 	ldrb	r0, [r0, #9]
4001f058:	e3500003 	cmp	r0, #3
4001f05c:	1a000001 	bne	4001f068 <CyU3PUibSendDescr+0x40>
4001f060:	e3a00c02 	mov	r0, #512	; 0x200
4001f064:	ea000000 	b	4001f06c <CyU3PUibSendDescr+0x44>
4001f068:	e3a00040 	mov	r0, #64	; 0x40
4001f06c:	e1a0a800 	lsl	sl, r0, #16
4001f070:	e1a0a82a 	lsr	sl, sl, #16
4001f074:	e1a00c24 	lsr	r0, r4, #24
4001f078:	e3500006 	cmp	r0, #6
4001f07c:	0a0000b4 	beq	4001f354 <CyU3PUibSendDescr+0x32c>
4001f080:	ca000006 	bgt	4001f0a0 <CyU3PUibSendDescr+0x78>
4001f084:	e3500001 	cmp	r0, #1
4001f088:	0a00000b 	beq	4001f0bc <CyU3PUibSendDescr+0x94>
4001f08c:	e3500002 	cmp	r0, #2
4001f090:	0a000020 	beq	4001f118 <CyU3PUibSendDescr+0xf0>
4001f094:	e3500003 	cmp	r0, #3
4001f098:	1a00013b 	bne	4001f58c <CyU3PUibSendDescr+0x564>
4001f09c:	ea00007b 	b	4001f290 <CyU3PUibSendDescr+0x268>
4001f0a0:	e3500007 	cmp	r0, #7
4001f0a4:	0a0000b8 	beq	4001f38c <CyU3PUibSendDescr+0x364>
4001f0a8:	e3500009 	cmp	r0, #9
4001f0ac:	0a000122 	beq	4001f53c <CyU3PUibSendDescr+0x514>
4001f0b0:	e350000f 	cmp	r0, #15
4001f0b4:	1a000134 	bne	4001f58c <CyU3PUibSendDescr+0x564>
4001f0b8:	ea0000f6 	b	4001f498 <CyU3PUibSendDescr+0x470>
4001f0bc:	e1a00000 	nop			; (mov r0, r0)
4001f0c0:	e59f056c 	ldr	r0, [pc, #1388]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f0c4:	e5d00009 	ldrb	r0, [r0, #9]
4001f0c8:	e3500003 	cmp	r0, #3
4001f0cc:	1a000008 	bne	4001f0f4 <CyU3PUibSendDescr+0xcc>
4001f0d0:	e59f0560 	ldr	r0, [pc, #1376]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f0d4:	e5900004 	ldr	r0, [r0, #4]
4001f0d8:	e3500000 	cmp	r0, #0
4001f0dc:	0a00000c 	beq	4001f114 <CyU3PUibSendDescr+0xec>
4001f0e0:	e3a09001 	mov	r9, #1
4001f0e4:	e3a06012 	mov	r6, #18
4001f0e8:	e59f0548 	ldr	r0, [pc, #1352]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f0ec:	e5908004 	ldr	r8, [r0, #4]
4001f0f0:	ea000007 	b	4001f114 <CyU3PUibSendDescr+0xec>
4001f0f4:	e59f053c 	ldr	r0, [pc, #1340]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f0f8:	e5900000 	ldr	r0, [r0]
4001f0fc:	e3500000 	cmp	r0, #0
4001f100:	0a000003 	beq	4001f114 <CyU3PUibSendDescr+0xec>
4001f104:	e3a09001 	mov	r9, #1
4001f108:	e3a06012 	mov	r6, #18
4001f10c:	e59f0524 	ldr	r0, [pc, #1316]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f110:	e5908000 	ldr	r8, [r0]
4001f114:	ea000128 	b	4001f5bc <CyU3PUibSendDescr+0x594>
4001f118:	e1a00000 	nop			; (mov r0, r0)
4001f11c:	e59f0510 	ldr	r0, [pc, #1296]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f120:	e5d00009 	ldrb	r0, [r0, #9]
4001f124:	e3500002 	cmp	r0, #2
4001f128:	1a00001a 	bne	4001f198 <CyU3PUibSendDescr+0x170>
4001f12c:	e59f0504 	ldr	r0, [pc, #1284]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f130:	e5900014 	ldr	r0, [r0, #20]
4001f134:	e3500000 	cmp	r0, #0
4001f138:	0a00004f 	beq	4001f27c <CyU3PUibSendDescr+0x254>
4001f13c:	e3a09001 	mov	r9, #1
4001f140:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f144:	e5908014 	ldr	r8, [r0, #20]
4001f148:	e5900014 	ldr	r0, [r0, #20]
4001f14c:	e5d00002 	ldrb	r0, [r0, #2]
4001f150:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f154:	e5911014 	ldr	r1, [r1, #20]
4001f158:	e5d11003 	ldrb	r1, [r1, #3]
4001f15c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f160:	e1500825 	cmp	r0, r5, lsr #16
4001f164:	2a000007 	bcs	4001f188 <CyU3PUibSendDescr+0x160>
4001f168:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f16c:	e5900014 	ldr	r0, [r0, #20]
4001f170:	e5d00002 	ldrb	r0, [r0, #2]
4001f174:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f178:	e5911014 	ldr	r1, [r1, #20]
4001f17c:	e5d11003 	ldrb	r1, [r1, #3]
4001f180:	e1800401 	orr	r0, r0, r1, lsl #8
4001f184:	ea000000 	b	4001f18c <CyU3PUibSendDescr+0x164>
4001f188:	e1a00825 	lsr	r0, r5, #16
4001f18c:	e1a06800 	lsl	r6, r0, #16
4001f190:	e1a06826 	lsr	r6, r6, #16
4001f194:	ea000038 	b	4001f27c <CyU3PUibSendDescr+0x254>
4001f198:	e59f0494 	ldr	r0, [pc, #1172]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f19c:	e5d00009 	ldrb	r0, [r0, #9]
4001f1a0:	e3500001 	cmp	r0, #1
4001f1a4:	1a00001a 	bne	4001f214 <CyU3PUibSendDescr+0x1ec>
4001f1a8:	e59f0488 	ldr	r0, [pc, #1160]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f1ac:	e5900018 	ldr	r0, [r0, #24]
4001f1b0:	e3500000 	cmp	r0, #0
4001f1b4:	0a000030 	beq	4001f27c <CyU3PUibSendDescr+0x254>
4001f1b8:	e3a09001 	mov	r9, #1
4001f1bc:	e59f0474 	ldr	r0, [pc, #1140]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f1c0:	e5908018 	ldr	r8, [r0, #24]
4001f1c4:	e5900018 	ldr	r0, [r0, #24]
4001f1c8:	e5d00002 	ldrb	r0, [r0, #2]
4001f1cc:	e59f1464 	ldr	r1, [pc, #1124]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f1d0:	e5911018 	ldr	r1, [r1, #24]
4001f1d4:	e5d11003 	ldrb	r1, [r1, #3]
4001f1d8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f1dc:	e1500825 	cmp	r0, r5, lsr #16
4001f1e0:	2a000007 	bcs	4001f204 <CyU3PUibSendDescr+0x1dc>
4001f1e4:	e59f044c 	ldr	r0, [pc, #1100]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f1e8:	e5900018 	ldr	r0, [r0, #24]
4001f1ec:	e5d00002 	ldrb	r0, [r0, #2]
4001f1f0:	e59f1440 	ldr	r1, [pc, #1088]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f1f4:	e5911018 	ldr	r1, [r1, #24]
4001f1f8:	e5d11003 	ldrb	r1, [r1, #3]
4001f1fc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f200:	ea000000 	b	4001f208 <CyU3PUibSendDescr+0x1e0>
4001f204:	e1a00825 	lsr	r0, r5, #16
4001f208:	e1a06800 	lsl	r6, r0, #16
4001f20c:	e1a06826 	lsr	r6, r6, #16
4001f210:	ea000019 	b	4001f27c <CyU3PUibSendDescr+0x254>
4001f214:	e59f041c 	ldr	r0, [pc, #1052]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f218:	e590001c 	ldr	r0, [r0, #28]
4001f21c:	e3500000 	cmp	r0, #0
4001f220:	0a000015 	beq	4001f27c <CyU3PUibSendDescr+0x254>
4001f224:	e3a09001 	mov	r9, #1
4001f228:	e59f0408 	ldr	r0, [pc, #1032]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f22c:	e590801c 	ldr	r8, [r0, #28]
4001f230:	e590001c 	ldr	r0, [r0, #28]
4001f234:	e5d00002 	ldrb	r0, [r0, #2]
4001f238:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f23c:	e591101c 	ldr	r1, [r1, #28]
4001f240:	e5d11003 	ldrb	r1, [r1, #3]
4001f244:	e1800401 	orr	r0, r0, r1, lsl #8
4001f248:	e1500825 	cmp	r0, r5, lsr #16
4001f24c:	2a000007 	bcs	4001f270 <CyU3PUibSendDescr+0x248>
4001f250:	e59f03e0 	ldr	r0, [pc, #992]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f254:	e590001c 	ldr	r0, [r0, #28]
4001f258:	e5d00002 	ldrb	r0, [r0, #2]
4001f25c:	e59f13d4 	ldr	r1, [pc, #980]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f260:	e591101c 	ldr	r1, [r1, #28]
4001f264:	e5d11003 	ldrb	r1, [r1, #3]
4001f268:	e1800401 	orr	r0, r0, r1, lsl #8
4001f26c:	ea000000 	b	4001f274 <CyU3PUibSendDescr+0x24c>
4001f270:	e1a00825 	lsr	r0, r5, #16
4001f274:	e1a06800 	lsl	r6, r0, #16
4001f278:	e1a06826 	lsr	r6, r6, #16
4001f27c:	e3580000 	cmp	r8, #0
4001f280:	0a000001 	beq	4001f28c <CyU3PUibSendDescr+0x264>
4001f284:	e3a00002 	mov	r0, #2
4001f288:	e5c80001 	strb	r0, [r8, #1]
4001f28c:	ea0000ca 	b	4001f5bc <CyU3PUibSendDescr+0x594>
4001f290:	e1a00000 	nop			; (mov r0, r0)
4001f294:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f298:	e1a0b820 	lsr	fp, r0, #16
4001f29c:	e35b0010 	cmp	fp, #16
4001f2a0:	ca000003 	bgt	4001f2b4 <CyU3PUibSendDescr+0x28c>
4001f2a4:	e59f0390 	ldr	r0, [pc, #912]	; 4001f63c <CyU3PUibSendDescr+0x614>
4001f2a8:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f2ac:	e3500000 	cmp	r0, #0
4001f2b0:	1a000013 	bne	4001f304 <CyU3PUibSendDescr+0x2dc>
4001f2b4:	e59f0378 	ldr	r0, [pc, #888]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f2b8:	e5d00007 	ldrb	r0, [r0, #7]
4001f2bc:	e3500001 	cmp	r0, #1
4001f2c0:	0a000022 	beq	4001f350 <CyU3PUibSendDescr+0x328>
4001f2c4:	e59f0374 	ldr	r0, [pc, #884]	; 4001f640 <CyU3PUibSendDescr+0x618>
4001f2c8:	e5900000 	ldr	r0, [r0]
4001f2cc:	e3500000 	cmp	r0, #0
4001f2d0:	0a00001e 	beq	4001f350 <CyU3PUibSendDescr+0x328>
4001f2d4:	e1a01005 	mov	r1, r5
4001f2d8:	e1a00004 	mov	r0, r4
4001f2dc:	e59f235c 	ldr	r2, [pc, #860]	; 4001f640 <CyU3PUibSendDescr+0x618>
4001f2e0:	e5922000 	ldr	r2, [r2]
4001f2e4:	e12fff32 	blx	r2
4001f2e8:	e1a09000 	mov	r9, r0
4001f2ec:	e3590000 	cmp	r9, #0
4001f2f0:	0a000016 	beq	4001f350 <CyU3PUibSendDescr+0x328>
4001f2f4:	e3a00001 	mov	r0, #1
4001f2f8:	e59f1334 	ldr	r1, [pc, #820]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f2fc:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f300:	ea000012 	b	4001f350 <CyU3PUibSendDescr+0x328>
4001f304:	e59f0330 	ldr	r0, [pc, #816]	; 4001f63c <CyU3PUibSendDescr+0x614>
4001f308:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f30c:	e5d00000 	ldrb	r0, [r0]
4001f310:	e1500825 	cmp	r0, r5, lsr #16
4001f314:	2a000003 	bcs	4001f328 <CyU3PUibSendDescr+0x300>
4001f318:	e59f031c 	ldr	r0, [pc, #796]	; 4001f63c <CyU3PUibSendDescr+0x614>
4001f31c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f320:	e5d00000 	ldrb	r0, [r0]
4001f324:	ea000000 	b	4001f32c <CyU3PUibSendDescr+0x304>
4001f328:	e1a00825 	lsr	r0, r5, #16
4001f32c:	e1a06800 	lsl	r6, r0, #16
4001f330:	e1a06826 	lsr	r6, r6, #16
4001f334:	e59f0300 	ldr	r0, [pc, #768]	; 4001f63c <CyU3PUibSendDescr+0x614>
4001f338:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f33c:	e3500000 	cmp	r0, #0
4001f340:	0a000002 	beq	4001f350 <CyU3PUibSendDescr+0x328>
4001f344:	e3a09001 	mov	r9, #1
4001f348:	e59f02ec 	ldr	r0, [pc, #748]	; 4001f63c <CyU3PUibSendDescr+0x614>
4001f34c:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f350:	ea000099 	b	4001f5bc <CyU3PUibSendDescr+0x594>
4001f354:	e1a00000 	nop			; (mov r0, r0)
4001f358:	e59f02d8 	ldr	r0, [pc, #728]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f35c:	e5900008 	ldr	r0, [r0, #8]
4001f360:	e3500000 	cmp	r0, #0
4001f364:	0a000007 	beq	4001f388 <CyU3PUibSendDescr+0x360>
4001f368:	e59f02c4 	ldr	r0, [pc, #708]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f36c:	e5d00009 	ldrb	r0, [r0, #9]
4001f370:	e3500003 	cmp	r0, #3
4001f374:	0a000003 	beq	4001f388 <CyU3PUibSendDescr+0x360>
4001f378:	e3a09001 	mov	r9, #1
4001f37c:	e3a0600a 	mov	r6, #10
4001f380:	e59f02b0 	ldr	r0, [pc, #688]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f384:	e5908008 	ldr	r8, [r0, #8]
4001f388:	ea00008b 	b	4001f5bc <CyU3PUibSendDescr+0x594>
4001f38c:	e1a00000 	nop			; (mov r0, r0)
4001f390:	e59f029c 	ldr	r0, [pc, #668]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f394:	e5d00009 	ldrb	r0, [r0, #9]
4001f398:	e3500002 	cmp	r0, #2
4001f39c:	1a00001a 	bne	4001f40c <CyU3PUibSendDescr+0x3e4>
4001f3a0:	e59f0290 	ldr	r0, [pc, #656]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f3a4:	e5900018 	ldr	r0, [r0, #24]
4001f3a8:	e3500000 	cmp	r0, #0
4001f3ac:	0a000034 	beq	4001f484 <CyU3PUibSendDescr+0x45c>
4001f3b0:	e3a09001 	mov	r9, #1
4001f3b4:	e59f027c 	ldr	r0, [pc, #636]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f3b8:	e5908018 	ldr	r8, [r0, #24]
4001f3bc:	e5900018 	ldr	r0, [r0, #24]
4001f3c0:	e5d00002 	ldrb	r0, [r0, #2]
4001f3c4:	e59f126c 	ldr	r1, [pc, #620]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f3c8:	e5911018 	ldr	r1, [r1, #24]
4001f3cc:	e5d11003 	ldrb	r1, [r1, #3]
4001f3d0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f3d4:	e1500825 	cmp	r0, r5, lsr #16
4001f3d8:	2a000007 	bcs	4001f3fc <CyU3PUibSendDescr+0x3d4>
4001f3dc:	e59f0254 	ldr	r0, [pc, #596]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f3e0:	e5900018 	ldr	r0, [r0, #24]
4001f3e4:	e5d00002 	ldrb	r0, [r0, #2]
4001f3e8:	e59f1248 	ldr	r1, [pc, #584]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f3ec:	e5911018 	ldr	r1, [r1, #24]
4001f3f0:	e5d11003 	ldrb	r1, [r1, #3]
4001f3f4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f3f8:	ea000000 	b	4001f400 <CyU3PUibSendDescr+0x3d8>
4001f3fc:	e1a00825 	lsr	r0, r5, #16
4001f400:	e1a06800 	lsl	r6, r0, #16
4001f404:	e1a06826 	lsr	r6, r6, #16
4001f408:	ea00001d 	b	4001f484 <CyU3PUibSendDescr+0x45c>
4001f40c:	e59f0220 	ldr	r0, [pc, #544]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f410:	e5d00009 	ldrb	r0, [r0, #9]
4001f414:	e3500001 	cmp	r0, #1
4001f418:	1a000019 	bne	4001f484 <CyU3PUibSendDescr+0x45c>
4001f41c:	e59f0214 	ldr	r0, [pc, #532]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f420:	e5900014 	ldr	r0, [r0, #20]
4001f424:	e3500000 	cmp	r0, #0
4001f428:	0a000015 	beq	4001f484 <CyU3PUibSendDescr+0x45c>
4001f42c:	e3a09001 	mov	r9, #1
4001f430:	e59f0200 	ldr	r0, [pc, #512]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f434:	e5908014 	ldr	r8, [r0, #20]
4001f438:	e5900014 	ldr	r0, [r0, #20]
4001f43c:	e5d00002 	ldrb	r0, [r0, #2]
4001f440:	e59f11f0 	ldr	r1, [pc, #496]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f444:	e5911014 	ldr	r1, [r1, #20]
4001f448:	e5d11003 	ldrb	r1, [r1, #3]
4001f44c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f450:	e1500825 	cmp	r0, r5, lsr #16
4001f454:	2a000007 	bcs	4001f478 <CyU3PUibSendDescr+0x450>
4001f458:	e59f01d8 	ldr	r0, [pc, #472]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f45c:	e5900014 	ldr	r0, [r0, #20]
4001f460:	e5d00002 	ldrb	r0, [r0, #2]
4001f464:	e59f11cc 	ldr	r1, [pc, #460]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f468:	e5911014 	ldr	r1, [r1, #20]
4001f46c:	e5d11003 	ldrb	r1, [r1, #3]
4001f470:	e1800401 	orr	r0, r0, r1, lsl #8
4001f474:	ea000000 	b	4001f47c <CyU3PUibSendDescr+0x454>
4001f478:	e1a00825 	lsr	r0, r5, #16
4001f47c:	e1a06800 	lsl	r6, r0, #16
4001f480:	e1a06826 	lsr	r6, r6, #16
4001f484:	e3580000 	cmp	r8, #0
4001f488:	0a000001 	beq	4001f494 <CyU3PUibSendDescr+0x46c>
4001f48c:	e3a00007 	mov	r0, #7
4001f490:	e5c80001 	strb	r0, [r8, #1]
4001f494:	ea000048 	b	4001f5bc <CyU3PUibSendDescr+0x594>
4001f498:	e1a00000 	nop			; (mov r0, r0)
4001f49c:	e59f0194 	ldr	r0, [pc, #404]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f4a0:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f4a4:	e3500000 	cmp	r0, #0
4001f4a8:	0a000022 	beq	4001f538 <CyU3PUibSendDescr+0x510>
4001f4ac:	e59f0180 	ldr	r0, [pc, #384]	; 4001f634 <CyU3PUibSendDescr+0x60c>
4001f4b0:	e5d00009 	ldrb	r0, [r0, #9]
4001f4b4:	e3500003 	cmp	r0, #3
4001f4b8:	0a000008 	beq	4001f4e0 <CyU3PUibSendDescr+0x4b8>
4001f4bc:	e59f0174 	ldr	r0, [pc, #372]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f4c0:	e5900000 	ldr	r0, [r0]
4001f4c4:	e3500000 	cmp	r0, #0
4001f4c8:	0a00001a 	beq	4001f538 <CyU3PUibSendDescr+0x510>
4001f4cc:	e59f0164 	ldr	r0, [pc, #356]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f4d0:	e5900000 	ldr	r0, [r0]
4001f4d4:	e5d00002 	ldrb	r0, [r0, #2]
4001f4d8:	e3500010 	cmp	r0, #16
4001f4dc:	1a000015 	bne	4001f538 <CyU3PUibSendDescr+0x510>
4001f4e0:	e3a09001 	mov	r9, #1
4001f4e4:	e59f014c 	ldr	r0, [pc, #332]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f4e8:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f4ec:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f4f0:	e5d00002 	ldrb	r0, [r0, #2]
4001f4f4:	e59f113c 	ldr	r1, [pc, #316]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f4f8:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f4fc:	e5d11003 	ldrb	r1, [r1, #3]
4001f500:	e1800401 	orr	r0, r0, r1, lsl #8
4001f504:	e1500825 	cmp	r0, r5, lsr #16
4001f508:	2a000007 	bcs	4001f52c <CyU3PUibSendDescr+0x504>
4001f50c:	e59f0124 	ldr	r0, [pc, #292]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f510:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f514:	e5d00002 	ldrb	r0, [r0, #2]
4001f518:	e59f1118 	ldr	r1, [pc, #280]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f51c:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f520:	e5d11003 	ldrb	r1, [r1, #3]
4001f524:	e1800401 	orr	r0, r0, r1, lsl #8
4001f528:	ea000000 	b	4001f530 <CyU3PUibSendDescr+0x508>
4001f52c:	e1a00825 	lsr	r0, r5, #16
4001f530:	e1a06800 	lsl	r6, r0, #16
4001f534:	e1a06826 	lsr	r6, r6, #16
4001f538:	ea00001f 	b	4001f5bc <CyU3PUibSendDescr+0x594>
4001f53c:	e1a00000 	nop			; (mov r0, r0)
4001f540:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f544:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f548:	e3500000 	cmp	r0, #0
4001f54c:	0a00000d 	beq	4001f588 <CyU3PUibSendDescr+0x560>
4001f550:	e3a09001 	mov	r9, #1
4001f554:	e59f00dc 	ldr	r0, [pc, #220]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f558:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001f55c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f560:	e5d00000 	ldrb	r0, [r0]
4001f564:	e1500825 	cmp	r0, r5, lsr #16
4001f568:	2a000003 	bcs	4001f57c <CyU3PUibSendDescr+0x554>
4001f56c:	e59f00c4 	ldr	r0, [pc, #196]	; 4001f638 <CyU3PUibSendDescr+0x610>
4001f570:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f574:	e5d00000 	ldrb	r0, [r0]
4001f578:	ea000000 	b	4001f580 <CyU3PUibSendDescr+0x558>
4001f57c:	e1a00825 	lsr	r0, r5, #16
4001f580:	e1a06800 	lsl	r6, r0, #16
4001f584:	e1a06826 	lsr	r6, r6, #16
4001f588:	ea00000b 	b	4001f5bc <CyU3PUibSendDescr+0x594>
4001f58c:	e1a00000 	nop			; (mov r0, r0)
4001f590:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f640 <CyU3PUibSendDescr+0x618>
4001f594:	e5900000 	ldr	r0, [r0]
4001f598:	e3500000 	cmp	r0, #0
4001f59c:	0a000005 	beq	4001f5b8 <CyU3PUibSendDescr+0x590>
4001f5a0:	e1a01005 	mov	r1, r5
4001f5a4:	e1a00004 	mov	r0, r4
4001f5a8:	e59f2090 	ldr	r2, [pc, #144]	; 4001f640 <CyU3PUibSendDescr+0x618>
4001f5ac:	e5922000 	ldr	r2, [r2]
4001f5b0:	e12fff32 	blx	r2
4001f5b4:	e1a09000 	mov	r9, r0
4001f5b8:	e1a00000 	nop			; (mov r0, r0)
4001f5bc:	e1a00000 	nop			; (mov r0, r0)
4001f5c0:	e3590001 	cmp	r9, #1
4001f5c4:	1a000017 	bne	4001f628 <CyU3PUibSendDescr+0x600>
4001f5c8:	e3580000 	cmp	r8, #0
4001f5cc:	0a000015 	beq	4001f628 <CyU3PUibSendDescr+0x600>
4001f5d0:	e1a01008 	mov	r1, r8
4001f5d4:	e1a00006 	mov	r0, r6
4001f5d8:	ebfff758 	bl	4001d340 <CyU3PUsbSendEP0Data>
4001f5dc:	e1a07000 	mov	r7, r0
4001f5e0:	e3570000 	cmp	r7, #0
4001f5e4:	1a000009 	bne	4001f610 <CyU3PUibSendDescr+0x5e8>
4001f5e8:	e59d0000 	ldr	r0, [sp]
4001f5ec:	e1560000 	cmp	r6, r0
4001f5f0:	aa000006 	bge	4001f610 <CyU3PUibSendDescr+0x5e8>
4001f5f4:	e24a0001 	sub	r0, sl, #1
4001f5f8:	e1100006 	tst	r0, r6
4001f5fc:	1a000003 	bne	4001f610 <CyU3PUibSendDescr+0x5e8>
4001f600:	e1a01008 	mov	r1, r8
4001f604:	e3a00000 	mov	r0, #0
4001f608:	ebfff74c 	bl	4001d340 <CyU3PUsbSendEP0Data>
4001f60c:	e1a07000 	mov	r7, r0
4001f610:	e3570000 	cmp	r7, #0
4001f614:	0a000003 	beq	4001f628 <CyU3PUibSendDescr+0x600>
4001f618:	e3a02000 	mov	r2, #0
4001f61c:	e3a01001 	mov	r1, #1
4001f620:	e1a00002 	mov	r0, r2
4001f624:	ebfff970 	bl	4001dbec <CyU3PUsbStall>
4001f628:	e1a00009 	mov	r0, r9
4001f62c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001f630:	0000ffff 	.word	0x0000ffff
4001f634:	40031d40 	.word	0x40031d40
4001f638:	40031f98 	.word	0x40031f98
4001f63c:	40031fb8 	.word	0x40031fb8
4001f640:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUibSocketInit:

4001f644 <CyU3PUibSocketInit>:
4001f644:	e3a00000 	mov	r0, #0
4001f648:	ea00000d 	b	4001f684 <CyU3PUibSocketInit+0x40>
4001f64c:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f650:	e59f2080 	ldr	r2, [pc, #128]	; 4001f6d8 <CyU3PUibSocketInit+0x94>
4001f654:	e0822380 	add	r2, r2, r0, lsl #7
4001f658:	e582100c 	str	r1, [r2, #12]
4001f65c:	e3e01000 	mvn	r1, #0
4001f660:	e59f2070 	ldr	r2, [pc, #112]	; 4001f6d8 <CyU3PUibSocketInit+0x94>
4001f664:	e0822380 	add	r2, r2, r0, lsl #7
4001f668:	e5821010 	str	r1, [r2, #16]
4001f66c:	e3a01000 	mov	r1, #0
4001f670:	e59f2060 	ldr	r2, [pc, #96]	; 4001f6d8 <CyU3PUibSocketInit+0x94>
4001f674:	e0822380 	add	r2, r2, r0, lsl #7
4001f678:	e5821014 	str	r1, [r2, #20]
4001f67c:	e2801001 	add	r1, r0, #1
4001f680:	e20100ff 	and	r0, r1, #255	; 0xff
4001f684:	e3500010 	cmp	r0, #16
4001f688:	baffffef 	blt	4001f64c <CyU3PUibSocketInit+0x8>
4001f68c:	e3a00000 	mov	r0, #0
4001f690:	ea00000d 	b	4001f6cc <CyU3PUibSocketInit+0x88>
4001f694:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f698:	e59f203c 	ldr	r2, [pc, #60]	; 4001f6dc <CyU3PUibSocketInit+0x98>
4001f69c:	e0822380 	add	r2, r2, r0, lsl #7
4001f6a0:	e582100c 	str	r1, [r2, #12]
4001f6a4:	e3e01000 	mvn	r1, #0
4001f6a8:	e59f202c 	ldr	r2, [pc, #44]	; 4001f6dc <CyU3PUibSocketInit+0x98>
4001f6ac:	e0822380 	add	r2, r2, r0, lsl #7
4001f6b0:	e5821010 	str	r1, [r2, #16]
4001f6b4:	e3a01000 	mov	r1, #0
4001f6b8:	e59f201c 	ldr	r2, [pc, #28]	; 4001f6dc <CyU3PUibSocketInit+0x98>
4001f6bc:	e0822380 	add	r2, r2, r0, lsl #7
4001f6c0:	e5821014 	str	r1, [r2, #20]
4001f6c4:	e2801001 	add	r1, r0, #1
4001f6c8:	e20100ff 	and	r0, r1, #255	; 0xff
4001f6cc:	e3500010 	cmp	r0, #16
4001f6d0:	baffffef 	blt	4001f694 <CyU3PUibSocketInit+0x50>
4001f6d4:	e12fff1e 	bx	lr
4001f6d8:	e0038000 	.word	0xe0038000
4001f6dc:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001f6e0 <CyU3PUibStatusTimerCb>:
4001f6e0:	e92d4010 	push	{r4, lr}
4001f6e4:	e1a04000 	mov	r4, r0
4001f6e8:	e59f0050 	ldr	r0, [pc, #80]	; 4001f740 <CyU3PUibStatusTimerCb+0x60>
4001f6ec:	e5900000 	ldr	r0, [r0]
4001f6f0:	e3500000 	cmp	r0, #0
4001f6f4:	0a000010 	beq	4001f73c <CyU3PUibStatusTimerCb+0x5c>
4001f6f8:	e59f0044 	ldr	r0, [pc, #68]	; 4001f744 <CyU3PUibStatusTimerCb+0x64>
4001f6fc:	e5d00009 	ldrb	r0, [r0, #9]
4001f700:	e3500003 	cmp	r0, #3
4001f704:	1a00000c 	bne	4001f73c <CyU3PUibStatusTimerCb+0x5c>
4001f708:	e59f0038 	ldr	r0, [pc, #56]	; 4001f748 <CyU3PUibStatusTimerCb+0x68>
4001f70c:	e5900000 	ldr	r0, [r0]
4001f710:	e3500000 	cmp	r0, #0
4001f714:	0a000008 	beq	4001f73c <CyU3PUibStatusTimerCb+0x5c>
4001f718:	e3a01000 	mov	r1, #0
4001f71c:	e1a00001 	mov	r0, r1
4001f720:	ebfff77c 	bl	4001d518 <CyU3PUsbSendErdy>
4001f724:	e3a02000 	mov	r2, #0
4001f728:	e3a01064 	mov	r1, #100	; 0x64
4001f72c:	e59f0018 	ldr	r0, [pc, #24]	; 4001f74c <CyU3PUibStatusTimerCb+0x6c>
4001f730:	ebffac59 	bl	4000a89c <_txe_timer_change>
4001f734:	e59f0010 	ldr	r0, [pc, #16]	; 4001f74c <CyU3PUibStatusTimerCb+0x6c>
4001f738:	ebffac47 	bl	4000a85c <_txe_timer_activate>
4001f73c:	e8bd8010 	pop	{r4, pc}
4001f740:	40030db0 	.word	0x40030db0
4001f744:	40031d40 	.word	0x40031d40
4001f748:	40030db4 	.word	0x40030db4
4001f74c:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUibThreadEntry:

4001f750 <CyU3PUibThreadEntry>:
4001f750:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001f754:	e3a05000 	mov	r5, #0
4001f758:	e59f505c 	ldr	r5, [pc, #92]	; 4001f7bc <CyU3PUibThreadEntry+0x6c>
4001f75c:	e3a00001 	mov	r0, #1
4001f760:	e59f1058 	ldr	r1, [pc, #88]	; 4001f7c0 <CyU3PUibThreadEntry+0x70>
4001f764:	e5810000 	str	r0, [r1]
4001f768:	e3a02020 	mov	r2, #32
4001f76c:	e3a01000 	mov	r1, #0
4001f770:	e59f004c 	ldr	r0, [pc, #76]	; 4001f7c4 <CyU3PUibThreadEntry+0x74>
4001f774:	ebff8fcf 	bl	400036b8 <CyU3PMemSet>
4001f778:	ea00000e 	b	4001f7b8 <CyU3PUibThreadEntry+0x68>
4001f77c:	e3e03000 	mvn	r3, #0
4001f780:	e58d3000 	str	r3, [sp]
4001f784:	e28d3004 	add	r3, sp, #4
4001f788:	e3a02001 	mov	r2, #1
4001f78c:	e1a01005 	mov	r1, r5
4001f790:	e59f0030 	ldr	r0, [pc, #48]	; 4001f7c8 <CyU3PUibThreadEntry+0x78>
4001f794:	ebffa92a 	bl	40009c44 <_txe_event_flags_get>
4001f798:	e1a04000 	mov	r4, r0
4001f79c:	e3540000 	cmp	r4, #0
4001f7a0:	0a000000 	beq	4001f7a8 <CyU3PUibThreadEntry+0x58>
4001f7a4:	ea000003 	b	4001f7b8 <CyU3PUibThreadEntry+0x68>
4001f7a8:	e59d0004 	ldr	r0, [sp, #4]
4001f7ac:	eb0002a1 	bl	40020238 <CyU3PUsbHandleEvents>
4001f7b0:	ebffac0c 	bl	4000a7e8 <_txe_thread_relinquish>
4001f7b4:	e1a00000 	nop			; (mov r0, r0)
4001f7b8:	eaffffef 	b	4001f77c <CyU3PUibThreadEntry+0x2c>
4001f7bc:	073fbfe1 	.word	0x073fbfe1
4001f7c0:	40030d60 	.word	0x40030d60
4001f7c4:	40032680 	.word	0x40032680
4001f7c8:	40031eb8 	.word	0x40031eb8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001f7cc <CyU3PUibVbusChangeHandler>:
4001f7cc:	e92d4010 	push	{r4, lr}
4001f7d0:	e3a00000 	mov	r0, #0
4001f7d4:	e59f114c 	ldr	r1, [pc, #332]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f7d8:	e5810060 	str	r0, [r1, #96]	; 0x60
4001f7dc:	e59f0148 	ldr	r0, [pc, #328]	; 4001f92c <CyU3PUibVbusChangeHandler+0x160>
4001f7e0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f7e4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f7e8:	e1100001 	tst	r0, r1
4001f7ec:	0a00000b 	beq	4001f820 <CyU3PUibVbusChangeHandler+0x54>
4001f7f0:	e3a00002 	mov	r0, #2
4001f7f4:	eb000051 	bl	4001f940 <CyU3PUsbAddToEventLog>
4001f7f8:	e59f0130 	ldr	r0, [pc, #304]	; 4001f930 <CyU3PUibVbusChangeHandler+0x164>
4001f7fc:	e5900000 	ldr	r0, [r0]
4001f800:	e3500000 	cmp	r0, #0
4001f804:	0a000010 	beq	4001f84c <CyU3PUibVbusChangeHandler+0x80>
4001f808:	e3a01000 	mov	r1, #0
4001f80c:	e3a0000b 	mov	r0, #11
4001f810:	e59f2118 	ldr	r2, [pc, #280]	; 4001f930 <CyU3PUibVbusChangeHandler+0x164>
4001f814:	e5922000 	ldr	r2, [r2]
4001f818:	e12fff32 	blx	r2
4001f81c:	ea00000a 	b	4001f84c <CyU3PUibVbusChangeHandler+0x80>
4001f820:	e3a00001 	mov	r0, #1
4001f824:	eb000045 	bl	4001f940 <CyU3PUsbAddToEventLog>
4001f828:	e59f0100 	ldr	r0, [pc, #256]	; 4001f930 <CyU3PUibVbusChangeHandler+0x164>
4001f82c:	e5900000 	ldr	r0, [r0]
4001f830:	e3500000 	cmp	r0, #0
4001f834:	0a000004 	beq	4001f84c <CyU3PUibVbusChangeHandler+0x80>
4001f838:	e3a01000 	mov	r1, #0
4001f83c:	e3a0000c 	mov	r0, #12
4001f840:	e59f20e8 	ldr	r2, [pc, #232]	; 4001f930 <CyU3PUibVbusChangeHandler+0x164>
4001f844:	e5922000 	ldr	r2, [r2]
4001f848:	e12fff32 	blx	r2
4001f84c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001f92c <CyU3PUibVbusChangeHandler+0x160>
4001f850:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f854:	e59f10cc 	ldr	r1, [pc, #204]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f858:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f85c:	e1100001 	tst	r0, r1
4001f860:	0a000022 	beq	4001f8f0 <CyU3PUibVbusChangeHandler+0x124>
4001f864:	e59f00bc 	ldr	r0, [pc, #188]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f868:	e5d00008 	ldrb	r0, [r0, #8]
4001f86c:	e3500005 	cmp	r0, #5
4001f870:	ba000000 	blt	4001f878 <CyU3PUibVbusChangeHandler+0xac>
4001f874:	eb0008d6 	bl	40021bd4 <HandleVbusOffEvent>
4001f878:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f87c:	e5d00008 	ldrb	r0, [r0, #8]
4001f880:	e3500004 	cmp	r0, #4
4001f884:	1a00001e 	bne	4001f904 <CyU3PUibVbusChangeHandler+0x138>
4001f888:	e59f0098 	ldr	r0, [pc, #152]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f88c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f890:	e59f1090 	ldr	r1, [pc, #144]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f894:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001f898:	e2810000 	add	r0, r1, #0
4001f89c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f8a0:	e3500000 	cmp	r0, #0
4001f8a4:	0a00000a 	beq	4001f8d4 <CyU3PUibVbusChangeHandler+0x108>
4001f8a8:	e3a00000 	mov	r0, #0
4001f8ac:	e59f1080 	ldr	r1, [pc, #128]	; 4001f934 <CyU3PUibVbusChangeHandler+0x168>
4001f8b0:	e5810014 	str	r0, [r1, #20]
4001f8b4:	e59f107c 	ldr	r1, [pc, #124]	; 4001f938 <CyU3PUibVbusChangeHandler+0x16c>
4001f8b8:	e5810000 	str	r0, [r1]
4001f8bc:	e59f1078 	ldr	r1, [pc, #120]	; 4001f93c <CyU3PUibVbusChangeHandler+0x170>
4001f8c0:	e5810000 	str	r0, [r1]
4001f8c4:	e59f105c 	ldr	r1, [pc, #92]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f8c8:	e5810054 	str	r0, [r1, #84]	; 0x54
4001f8cc:	e5810050 	str	r0, [r1, #80]	; 0x50
4001f8d0:	e5810058 	str	r0, [r1, #88]	; 0x58
4001f8d4:	e59f104c 	ldr	r1, [pc, #76]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f8d8:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001f8dc:	ebfff593 	bl	4001cf30 <CyU3PUsbPhyEnable>
4001f8e0:	e3a00005 	mov	r0, #5
4001f8e4:	e59f103c 	ldr	r1, [pc, #60]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f8e8:	e5c10008 	strb	r0, [r1, #8]
4001f8ec:	ea000004 	b	4001f904 <CyU3PUibVbusChangeHandler+0x138>
4001f8f0:	e59f0030 	ldr	r0, [pc, #48]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f8f4:	e5d00008 	ldrb	r0, [r0, #8]
4001f8f8:	e3500005 	cmp	r0, #5
4001f8fc:	ba000000 	blt	4001f904 <CyU3PUibVbusChangeHandler+0x138>
4001f900:	eb0008b3 	bl	40021bd4 <HandleVbusOffEvent>
4001f904:	ebfff0df 	bl	4001bc88 <CyU3POtgIsStarted>
4001f908:	e3500000 	cmp	r0, #0
4001f90c:	0a000000 	beq	4001f914 <CyU3PUibVbusChangeHandler+0x148>
4001f910:	ebfff4e3 	bl	4001cca4 <CyU3PUsbOtgVbusChangeHandler>
4001f914:	e59f000c 	ldr	r0, [pc, #12]	; 4001f928 <CyU3PUibVbusChangeHandler+0x15c>
4001f918:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001f91c:	e59f1008 	ldr	r1, [pc, #8]	; 4001f92c <CyU3PUibVbusChangeHandler+0x160>
4001f920:	e5810038 	str	r0, [r1, #56]	; 0x38
4001f924:	e8bd8010 	pop	{r4, pc}
4001f928:	40031d40 	.word	0x40031d40
4001f92c:	e0051000 	.word	0xe0051000
4001f930:	40030d9c 	.word	0x40030d9c
4001f934:	e0033000 	.word	0xe0033000
4001f938:	40030d84 	.word	0x40030d84
4001f93c:	40030d88 	.word	0x40030d88

Disassembly of section i.CyU3PUsbAddToEventLog:

4001f940 <CyU3PUsbAddToEventLog>:
4001f940:	e59f1058 	ldr	r1, [pc, #88]	; 4001f9a0 <CyU3PUsbAddToEventLog+0x60>
4001f944:	e5911000 	ldr	r1, [r1]
4001f948:	e3510000 	cmp	r1, #0
4001f94c:	0a000012 	beq	4001f99c <CyU3PUsbAddToEventLog+0x5c>
4001f950:	e59f104c 	ldr	r1, [pc, #76]	; 4001f9a4 <CyU3PUsbAddToEventLog+0x64>
4001f954:	e5911000 	ldr	r1, [r1]
4001f958:	e59f2044 	ldr	r2, [pc, #68]	; 4001f9a4 <CyU3PUsbAddToEventLog+0x64>
4001f95c:	e5922000 	ldr	r2, [r2]
4001f960:	e2822001 	add	r2, r2, #1
4001f964:	e59f3038 	ldr	r3, [pc, #56]	; 4001f9a4 <CyU3PUsbAddToEventLog+0x64>
4001f968:	e5832000 	str	r2, [r3]
4001f96c:	e59f202c 	ldr	r2, [pc, #44]	; 4001f9a0 <CyU3PUsbAddToEventLog+0x60>
4001f970:	e5922000 	ldr	r2, [r2]
4001f974:	e7c20001 	strb	r0, [r2, r1]
4001f978:	e2831000 	add	r1, r3, #0
4001f97c:	e5911000 	ldr	r1, [r1]
4001f980:	e59f2020 	ldr	r2, [pc, #32]	; 4001f9a8 <CyU3PUsbAddToEventLog+0x68>
4001f984:	e5922000 	ldr	r2, [r2]
4001f988:	e1510002 	cmp	r1, r2
4001f98c:	3a000002 	bcc	4001f99c <CyU3PUsbAddToEventLog+0x5c>
4001f990:	e3a01000 	mov	r1, #0
4001f994:	e2832000 	add	r2, r3, #0
4001f998:	e5821000 	str	r1, [r2]
4001f99c:	e12fff1e 	bx	lr
4001f9a0:	40030d90 	.word	0x40030d90
4001f9a4:	40030d94 	.word	0x40030d94
4001f9a8:	40030d98 	.word	0x40030d98

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001f9ac <CyU3PUsbCheckUsb3Disconnect>:
4001f9ac:	e92d4070 	push	{r4, r5, r6, lr}
4001f9b0:	e3a04e19 	mov	r4, #400	; 0x190
4001f9b4:	e3a06002 	mov	r6, #2
4001f9b8:	e59f01fc 	ldr	r0, [pc, #508]	; 4001fbbc <CyU3PUsbCheckUsb3Disconnect+0x210>
4001f9bc:	e1d000b0 	ldrh	r0, [r0]
4001f9c0:	e3500001 	cmp	r0, #1
4001f9c4:	da000008 	ble	4001f9ec <CyU3PUsbCheckUsb3Disconnect+0x40>
4001f9c8:	e59f01ec 	ldr	r0, [pc, #492]	; 4001fbbc <CyU3PUsbCheckUsb3Disconnect+0x210>
4001f9cc:	e1d010b0 	ldrh	r1, [r0]
4001f9d0:	e1a00004 	mov	r0, r4
4001f9d4:	ebffc410 	bl	40010a1c <__aeabi_idivmod>
4001f9d8:	e1a04800 	lsl	r4, r0, #16
4001f9dc:	e1a04824 	lsr	r4, r4, #16
4001f9e0:	e2840001 	add	r0, r4, #1
4001f9e4:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001f9e8:	e3a06001 	mov	r6, #1
4001f9ec:	e59f01cc 	ldr	r0, [pc, #460]	; 4001fbc0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001f9f0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001f9f4:	e200503f 	and	r5, r0, #63	; 0x3f
4001f9f8:	e3550010 	cmp	r5, #16
4001f9fc:	ba000004 	blt	4001fa14 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fa00:	e3550017 	cmp	r5, #23
4001fa04:	ca000002 	bgt	4001fa14 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fa08:	e3a00000 	mov	r0, #0
4001fa0c:	e59f11b0 	ldr	r1, [pc, #432]	; 4001fbc4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa10:	e5810000 	str	r0, [r1]
4001fa14:	e59f01a8 	ldr	r0, [pc, #424]	; 4001fbc4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa18:	e5900000 	ldr	r0, [r0]
4001fa1c:	e3500000 	cmp	r0, #0
4001fa20:	1a000000 	bne	4001fa28 <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fa24:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fa28:	ea000010 	b	4001fa70 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa2c:	e1a00006 	mov	r0, r6
4001fa30:	ebffa3bb 	bl	40008924 <_tx_thread_sleep>
4001fa34:	e59f0184 	ldr	r0, [pc, #388]	; 4001fbc0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fa38:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fa3c:	e200503f 	and	r5, r0, #63	; 0x3f
4001fa40:	e59f017c 	ldr	r0, [pc, #380]	; 4001fbc4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa44:	e5900000 	ldr	r0, [r0]
4001fa48:	e3500000 	cmp	r0, #0
4001fa4c:	0a000003 	beq	4001fa60 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fa50:	e3550010 	cmp	r5, #16
4001fa54:	ba000005 	blt	4001fa70 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa58:	e3550017 	cmp	r5, #23
4001fa5c:	ca000003 	bgt	4001fa70 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa60:	e3a00000 	mov	r0, #0
4001fa64:	e59f1158 	ldr	r1, [pc, #344]	; 4001fbc4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa68:	e5810000 	str	r0, [r1]
4001fa6c:	ea000004 	b	4001fa84 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001fa70:	e1b00004 	movs	r0, r4
4001fa74:	e2441001 	sub	r1, r4, #1
4001fa78:	e1a04801 	lsl	r4, r1, #16
4001fa7c:	e1a04824 	lsr	r4, r4, #16
4001fa80:	1affffe9 	bne	4001fa2c <CyU3PUsbCheckUsb3Disconnect+0x80>
4001fa84:	e1a00000 	nop			; (mov r0, r0)
4001fa88:	e59f0134 	ldr	r0, [pc, #308]	; 4001fbc4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa8c:	e5900000 	ldr	r0, [r0]
4001fa90:	e3500000 	cmp	r0, #0
4001fa94:	0a000047 	beq	4001fbb8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fa98:	e59f0128 	ldr	r0, [pc, #296]	; 4001fbc8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fa9c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001faa0:	e3100a02 	tst	r0, #8192	; 0x2000
4001faa4:	0a000020 	beq	4001fb2c <CyU3PUsbCheckUsb3Disconnect+0x180>
4001faa8:	e59f0118 	ldr	r0, [pc, #280]	; 4001fbc8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001faac:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fab0:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001fab4:	e59f110c 	ldr	r1, [pc, #268]	; 4001fbc8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fab8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fabc:	e3a00002 	mov	r0, #2
4001fac0:	ebffce52 	bl	40013410 <CyU3PBusyWait>
4001fac4:	e59f0100 	ldr	r0, [pc, #256]	; 4001fbcc <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fac8:	e5900004 	ldr	r0, [r0, #4]
4001facc:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fad0:	e59f10f4 	ldr	r1, [pc, #244]	; 4001fbcc <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fad4:	e5810004 	str	r0, [r1, #4]
4001fad8:	e3a00001 	mov	r0, #1
4001fadc:	ebffce4b 	bl	40013410 <CyU3PBusyWait>
4001fae0:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fbc0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fae4:	e590001c 	ldr	r0, [r0, #28]
4001fae8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001faec:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fbc0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001faf0:	e581001c 	str	r0, [r1, #28]
4001faf4:	e59f00d4 	ldr	r0, [pc, #212]	; 4001fbd0 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001faf8:	e5900000 	ldr	r0, [r0]
4001fafc:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fb00:	e3a00001 	mov	r0, #1
4001fb04:	ebffce41 	bl	40013410 <CyU3PBusyWait>
4001fb08:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fbcc <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb0c:	e5900004 	ldr	r0, [r0, #4]
4001fb10:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001fb14:	e59f10b0 	ldr	r1, [pc, #176]	; 4001fbcc <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb18:	e5810004 	str	r0, [r1, #4]
4001fb1c:	e3a01000 	mov	r1, #0
4001fb20:	e3a00002 	mov	r0, #2
4001fb24:	ebfff1d9 	bl	4001c290 <CyU3PSetUsbCoreClock>
4001fb28:	ea000022 	b	4001fbb8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fb2c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001fbd4 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fb30:	e5900000 	ldr	r0, [r0]
4001fb34:	e3500000 	cmp	r0, #0
4001fb38:	0a000007 	beq	4001fb5c <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001fb3c:	e3a00000 	mov	r0, #0
4001fb40:	e59f108c 	ldr	r1, [pc, #140]	; 4001fbd4 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fb44:	e5810000 	str	r0, [r1]
4001fb48:	e3a00001 	mov	r0, #1
4001fb4c:	ebfff481 	bl	4001cd58 <CyU3PUsbPhyDisable>
4001fb50:	e3a00001 	mov	r0, #1
4001fb54:	ebfff4f5 	bl	4001cf30 <CyU3PUsbPhyEnable>
4001fb58:	eaffffb1 	b	4001fa24 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fb5c:	e59f0074 	ldr	r0, [pc, #116]	; 4001fbd8 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fb60:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001fb64:	e3500000 	cmp	r0, #0
4001fb68:	0a000011 	beq	4001fbb4 <CyU3PUsbCheckUsb3Disconnect+0x208>
4001fb6c:	e3a00001 	mov	r0, #1
4001fb70:	ebfff478 	bl	4001cd58 <CyU3PUsbPhyDisable>
4001fb74:	e3a00003 	mov	r0, #3
4001fb78:	e59f1058 	ldr	r1, [pc, #88]	; 4001fbd8 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fb7c:	e5c10008 	strb	r0, [r1, #8]
4001fb80:	e3a00000 	mov	r0, #0
4001fb84:	e5c10009 	strb	r0, [r1, #9]
4001fb88:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fb8c:	e59f0048 	ldr	r0, [pc, #72]	; 4001fbdc <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fb90:	e5900000 	ldr	r0, [r0]
4001fb94:	e3500000 	cmp	r0, #0
4001fb98:	0a000006 	beq	4001fbb8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fb9c:	e3a01000 	mov	r1, #0
4001fba0:	e3a00014 	mov	r0, #20
4001fba4:	e59f2030 	ldr	r2, [pc, #48]	; 4001fbdc <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fba8:	e5922000 	ldr	r2, [r2]
4001fbac:	e12fff32 	blx	r2
4001fbb0:	ea000000 	b	4001fbb8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fbb4:	eb00008e 	bl	4001fdf4 <CyU3PUsbFallBackToUsb2>
4001fbb8:	eaffff99 	b	4001fa24 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fbbc:	40030db8 	.word	0x40030db8
4001fbc0:	e0033000 	.word	0xe0033000
4001fbc4:	40030d64 	.word	0x40030d64
4001fbc8:	e0031000 	.word	0xe0031000
4001fbcc:	e0030000 	.word	0xe0030000
4001fbd0:	40030c58 	.word	0x40030c58
4001fbd4:	40030d74 	.word	0x40030d74
4001fbd8:	40031d40 	.word	0x40031d40
4001fbdc:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbDescInit:

4001fbe0 <CyU3PUsbDescInit>:
4001fbe0:	e92d4010 	push	{r4, lr}
4001fbe4:	e3a02074 	mov	r2, #116	; 0x74
4001fbe8:	e3a01000 	mov	r1, #0
4001fbec:	e59f0004 	ldr	r0, [pc, #4]	; 4001fbf8 <CyU3PUsbDescInit+0x18>
4001fbf0:	ebff8eb0 	bl	400036b8 <CyU3PMemSet>
4001fbf4:	e8bd8010 	pop	{r4, pc}
4001fbf8:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEpPrepare:

4001fbfc <CyU3PUsbEpPrepare>:
4001fbfc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001fc00:	e1a04000 	mov	r4, r0
4001fc04:	e3a05001 	mov	r5, #1
4001fc08:	ea000061 	b	4001fd94 <CyU3PUsbEpPrepare+0x198>
4001fc0c:	e59f01b8 	ldr	r0, [pc, #440]	; 4001fdcc <CyU3PUsbEpPrepare+0x1d0>
4001fc10:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc14:	e3100901 	tst	r0, #16384	; 0x4000
4001fc18:	0a000029 	beq	4001fcc4 <CyU3PUsbEpPrepare+0xc8>
4001fc1c:	e0850085 	add	r0, r5, r5, lsl #1
4001fc20:	e59f11a8 	ldr	r1, [pc, #424]	; 4001fdd0 <CyU3PUsbEpPrepare+0x1d4>
4001fc24:	e0810100 	add	r0, r1, r0, lsl #2
4001fc28:	e1d070b0 	ldrh	r7, [r0]
4001fc2c:	e59f0198 	ldr	r0, [pc, #408]	; 4001fdcc <CyU3PUsbEpPrepare+0x1d0>
4001fc30:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc34:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fc38:	e1a06520 	lsr	r6, r0, #10
4001fc3c:	e2440001 	sub	r0, r4, #1
4001fc40:	e0800080 	add	r0, r0, r0, lsl #1
4001fc44:	e59f1188 	ldr	r1, [pc, #392]	; 4001fdd4 <CyU3PUsbEpPrepare+0x1d8>
4001fc48:	e0810100 	add	r0, r1, r0, lsl #2
4001fc4c:	e2461001 	sub	r1, r6, #1
4001fc50:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fc54:	e1570008 	cmp	r7, r8
4001fc58:	8a000001 	bhi	4001fc64 <CyU3PUsbEpPrepare+0x68>
4001fc5c:	e3570000 	cmp	r7, #0
4001fc60:	1a000000 	bne	4001fc68 <CyU3PUsbEpPrepare+0x6c>
4001fc64:	e1a07008 	mov	r7, r8
4001fc68:	e3540003 	cmp	r4, #3
4001fc6c:	1a000005 	bne	4001fc88 <CyU3PUsbEpPrepare+0x8c>
4001fc70:	e59f0160 	ldr	r0, [pc, #352]	; 4001fdd8 <CyU3PUsbEpPrepare+0x1dc>
4001fc74:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc78:	e3800001 	orr	r0, r0, #1
4001fc7c:	e59f1154 	ldr	r1, [pc, #340]	; 4001fdd8 <CyU3PUsbEpPrepare+0x1dc>
4001fc80:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fc84:	ea000008 	b	4001fcac <CyU3PUsbEpPrepare+0xb0>
4001fc88:	e59f013c 	ldr	r0, [pc, #316]	; 4001fdcc <CyU3PUsbEpPrepare+0x1d0>
4001fc8c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc90:	e1a00520 	lsr	r0, r0, #10
4001fc94:	e1a00500 	lsl	r0, r0, #10
4001fc98:	e1a01b07 	lsl	r1, r7, #22
4001fc9c:	e1a01b21 	lsr	r1, r1, #22
4001fca0:	e1800001 	orr	r0, r0, r1
4001fca4:	e59f1120 	ldr	r1, [pc, #288]	; 4001fdcc <CyU3PUsbEpPrepare+0x1d0>
4001fca8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fcac:	e59f0128 	ldr	r0, [pc, #296]	; 4001fddc <CyU3PUsbEpPrepare+0x1e0>
4001fcb0:	e7807105 	str	r7, [r0, r5, lsl #2]
4001fcb4:	e3850080 	orr	r0, r5, #128	; 0x80
4001fcb8:	e3a02001 	mov	r2, #1
4001fcbc:	e3a01000 	mov	r1, #0
4001fcc0:	ebfff7c9 	bl	4001dbec <CyU3PUsbStall>
4001fcc4:	e59f0114 	ldr	r0, [pc, #276]	; 4001fde0 <CyU3PUsbEpPrepare+0x1e4>
4001fcc8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fccc:	e3100901 	tst	r0, #16384	; 0x4000
4001fcd0:	0a00002d 	beq	4001fd8c <CyU3PUsbEpPrepare+0x190>
4001fcd4:	e0850085 	add	r0, r5, r5, lsl #1
4001fcd8:	e59f1104 	ldr	r1, [pc, #260]	; 4001fde4 <CyU3PUsbEpPrepare+0x1e8>
4001fcdc:	e0810100 	add	r0, r1, r0, lsl #2
4001fce0:	e1d070b0 	ldrh	r7, [r0]
4001fce4:	e59f00f4 	ldr	r0, [pc, #244]	; 4001fde0 <CyU3PUsbEpPrepare+0x1e4>
4001fce8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fcec:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fcf0:	e1a06520 	lsr	r6, r0, #10
4001fcf4:	e2440001 	sub	r0, r4, #1
4001fcf8:	e0800080 	add	r0, r0, r0, lsl #1
4001fcfc:	e59f10d0 	ldr	r1, [pc, #208]	; 4001fdd4 <CyU3PUsbEpPrepare+0x1d8>
4001fd00:	e0810100 	add	r0, r1, r0, lsl #2
4001fd04:	e2461001 	sub	r1, r6, #1
4001fd08:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fd0c:	e1570008 	cmp	r7, r8
4001fd10:	8a000001 	bhi	4001fd1c <CyU3PUsbEpPrepare+0x120>
4001fd14:	e3570000 	cmp	r7, #0
4001fd18:	1a000000 	bne	4001fd20 <CyU3PUsbEpPrepare+0x124>
4001fd1c:	e1a07008 	mov	r7, r8
4001fd20:	e3540003 	cmp	r4, #3
4001fd24:	1a000005 	bne	4001fd40 <CyU3PUsbEpPrepare+0x144>
4001fd28:	e59f00b8 	ldr	r0, [pc, #184]	; 4001fde8 <CyU3PUsbEpPrepare+0x1ec>
4001fd2c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd30:	e3800001 	orr	r0, r0, #1
4001fd34:	e59f10ac 	ldr	r1, [pc, #172]	; 4001fde8 <CyU3PUsbEpPrepare+0x1ec>
4001fd38:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd3c:	ea000008 	b	4001fd64 <CyU3PUsbEpPrepare+0x168>
4001fd40:	e59f0098 	ldr	r0, [pc, #152]	; 4001fde0 <CyU3PUsbEpPrepare+0x1e4>
4001fd44:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd48:	e1a00520 	lsr	r0, r0, #10
4001fd4c:	e1a00500 	lsl	r0, r0, #10
4001fd50:	e1a01b07 	lsl	r1, r7, #22
4001fd54:	e1a01b21 	lsr	r1, r1, #22
4001fd58:	e1800001 	orr	r0, r0, r1
4001fd5c:	e59f107c 	ldr	r1, [pc, #124]	; 4001fde0 <CyU3PUsbEpPrepare+0x1e4>
4001fd60:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd64:	e59f0080 	ldr	r0, [pc, #128]	; 4001fdec <CyU3PUsbEpPrepare+0x1f0>
4001fd68:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd6c:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001fd70:	e1800007 	orr	r0, r0, r7
4001fd74:	e59f1070 	ldr	r1, [pc, #112]	; 4001fdec <CyU3PUsbEpPrepare+0x1f0>
4001fd78:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd7c:	e3a02001 	mov	r2, #1
4001fd80:	e3a01000 	mov	r1, #0
4001fd84:	e1a00005 	mov	r0, r5
4001fd88:	ebfff797 	bl	4001dbec <CyU3PUsbStall>
4001fd8c:	e2850001 	add	r0, r5, #1
4001fd90:	e20050ff 	and	r5, r0, #255	; 0xff
4001fd94:	e3550010 	cmp	r5, #16
4001fd98:	baffff9b 	blt	4001fc0c <CyU3PUsbEpPrepare+0x10>
4001fd9c:	e3540003 	cmp	r4, #3
4001fda0:	1a000005 	bne	4001fdbc <CyU3PUsbEpPrepare+0x1c0>
4001fda4:	e59f1044 	ldr	r1, [pc, #68]	; 4001fdf0 <CyU3PUsbEpPrepare+0x1f4>
4001fda8:	e5911068 	ldr	r1, [r1, #104]	; 0x68
4001fdac:	e3510000 	cmp	r1, #0
4001fdb0:	0a000001 	beq	4001fdbc <CyU3PUsbEpPrepare+0x1c0>
4001fdb4:	e3a01001 	mov	r1, #1
4001fdb8:	ea000000 	b	4001fdc0 <CyU3PUsbEpPrepare+0x1c4>
4001fdbc:	e3a01000 	mov	r1, #0
4001fdc0:	e1a00001 	mov	r0, r1
4001fdc4:	eb000854 	bl	40021f1c <CyFx3UsbDmaPrefetchEnable>
4001fdc8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001fdcc:	e0031418 	.word	0xe0031418
4001fdd0:	40031bb8 	.word	0x40031bb8
4001fdd4:	40011d58 	.word	0x40011d58
4001fdd8:	e0033500 	.word	0xe0033500
4001fddc:	e0031c40 	.word	0xe0031c40
4001fde0:	e0031498 	.word	0xe0031498
4001fde4:	40031c78 	.word	0x40031c78
4001fde8:	e0033600 	.word	0xe0033600
4001fdec:	e0031c80 	.word	0xe0031c80
4001fdf0:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbFallBackToUsb2:

4001fdf4 <CyU3PUsbFallBackToUsb2>:
4001fdf4:	e92d4010 	push	{r4, lr}
4001fdf8:	e59f0234 	ldr	r0, [pc, #564]	; 40020034 <CyU3PUsbFallBackToUsb2+0x240>
4001fdfc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fe00:	e3500000 	cmp	r0, #0
4001fe04:	0a000006 	beq	4001fe24 <CyU3PUsbFallBackToUsb2+0x30>
4001fe08:	e59f0228 	ldr	r0, [pc, #552]	; 40020038 <CyU3PUsbFallBackToUsb2+0x244>
4001fe0c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fe10:	e59f121c 	ldr	r1, [pc, #540]	; 40020034 <CyU3PUsbFallBackToUsb2+0x240>
4001fe14:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fe18:	e1100001 	tst	r0, r1
4001fe1c:	1a000000 	bne	4001fe24 <CyU3PUsbFallBackToUsb2+0x30>
4001fe20:	e8bd8010 	pop	{r4, pc}
4001fe24:	e3a00050 	mov	r0, #80	; 0x50
4001fe28:	ebfffec4 	bl	4001f940 <CyU3PUsbAddToEventLog>
4001fe2c:	eb0007f1 	bl	40021df8 <CyU3PVicDisableAllInterrupts>
4001fe30:	e1a04000 	mov	r4, r0
4001fe34:	e3a01000 	mov	r1, #0
4001fe38:	e59f01fc 	ldr	r0, [pc, #508]	; 4002003c <CyU3PUsbFallBackToUsb2+0x248>
4001fe3c:	eb000861 	bl	40021fc8 <CyFx3UsbWritePhyReg>
4001fe40:	e1a00004 	mov	r0, r4
4001fe44:	eb0007f9 	bl	40021e30 <CyU3PVicEnableInterrupts>
4001fe48:	e3a00a01 	mov	r0, #4096	; 0x1000
4001fe4c:	e59f11ec 	ldr	r1, [pc, #492]	; 40020040 <CyU3PUsbFallBackToUsb2+0x24c>
4001fe50:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fe54:	e59f01d8 	ldr	r0, [pc, #472]	; 40020034 <CyU3PUsbFallBackToUsb2+0x240>
4001fe58:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4001fe5c:	e2800001 	add	r0, r0, #1
4001fe60:	e59f11cc 	ldr	r1, [pc, #460]	; 40020034 <CyU3PUsbFallBackToUsb2+0x240>
4001fe64:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fe68:	e3a00000 	mov	r0, #0
4001fe6c:	e59f11d0 	ldr	r1, [pc, #464]	; 40020044 <CyU3PUsbFallBackToUsb2+0x250>
4001fe70:	e5810000 	str	r0, [r1]
4001fe74:	e59f01cc 	ldr	r0, [pc, #460]	; 40020048 <CyU3PUsbFallBackToUsb2+0x254>
4001fe78:	ebffab1b 	bl	4000aaec <_txe_timer_deactivate>
4001fe7c:	e3a00002 	mov	r0, #2
4001fe80:	ebffcd62 	bl	40013410 <CyU3PBusyWait>
4001fe84:	e3a01002 	mov	r1, #2
4001fe88:	e1a00001 	mov	r0, r1
4001fe8c:	ebfff0ff 	bl	4001c290 <CyU3PSetUsbCoreClock>
4001fe90:	e3a00002 	mov	r0, #2
4001fe94:	ebffcd5d 	bl	40013410 <CyU3PBusyWait>
4001fe98:	e59f01ac 	ldr	r0, [pc, #428]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
4001fe9c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fea0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001fea4:	e59f11a0 	ldr	r1, [pc, #416]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
4001fea8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001feac:	e3a00002 	mov	r0, #2
4001feb0:	ebffcd56 	bl	40013410 <CyU3PBusyWait>
4001feb4:	e59f0190 	ldr	r0, [pc, #400]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
4001feb8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001febc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001fec0:	e59f1184 	ldr	r1, [pc, #388]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
4001fec4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fec8:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001fecc:	e5900004 	ldr	r0, [r0, #4]
4001fed0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fed4:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001fed8:	e5810004 	str	r0, [r1, #4]
4001fedc:	e2810a03 	add	r0, r1, #12288	; 0x3000
4001fee0:	e590001c 	ldr	r0, [r0, #28]
4001fee4:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001fee8:	e2811a03 	add	r1, r1, #12288	; 0x3000
4001feec:	e581001c 	str	r0, [r1, #28]
4001fef0:	e59f0158 	ldr	r0, [pc, #344]	; 40020050 <CyU3PUsbFallBackToUsb2+0x25c>
4001fef4:	e5900000 	ldr	r0, [r0]
4001fef8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fefc:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
4001ff00:	e5900000 	ldr	r0, [r0]
4001ff04:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001ff08:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
4001ff0c:	e5810000 	str	r0, [r1]
4001ff10:	e3a00005 	mov	r0, #5
4001ff14:	ebffcd3d 	bl	40013410 <CyU3PBusyWait>
4001ff18:	e59f0134 	ldr	r0, [pc, #308]	; 40020054 <CyU3PUsbFallBackToUsb2+0x260>
4001ff1c:	e5900000 	ldr	r0, [r0]
4001ff20:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001ff24:	e59f1128 	ldr	r1, [pc, #296]	; 40020054 <CyU3PUsbFallBackToUsb2+0x260>
4001ff28:	e5810000 	str	r0, [r1]
4001ff2c:	e3a0000a 	mov	r0, #10
4001ff30:	ebffcd36 	bl	40013410 <CyU3PBusyWait>
4001ff34:	e3e00000 	mvn	r0, #0
4001ff38:	e59f110c 	ldr	r1, [pc, #268]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
4001ff3c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ff40:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001ff44:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ff48:	e59f0108 	ldr	r0, [pc, #264]	; 40020058 <CyU3PUsbFallBackToUsb2+0x264>
4001ff4c:	ebffd869 	bl	400160f8 <CyU3PDmaChannelReset>
4001ff50:	e59f0104 	ldr	r0, [pc, #260]	; 4002005c <CyU3PUsbFallBackToUsb2+0x268>
4001ff54:	ebffd867 	bl	400160f8 <CyU3PDmaChannelReset>
4001ff58:	e3a00000 	mov	r0, #0
4001ff5c:	e59f10dc 	ldr	r1, [pc, #220]	; 40020040 <CyU3PUsbFallBackToUsb2+0x24c>
4001ff60:	e5810008 	str	r0, [r1, #8]
4001ff64:	e3e00000 	mvn	r0, #0
4001ff68:	e5810004 	str	r0, [r1, #4]
4001ff6c:	e3a00000 	mov	r0, #0
4001ff70:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001ff74:	e3e00000 	mvn	r0, #0
4001ff78:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001ff7c:	e1c10820 	bic	r0, r1, r0, lsr #16
4001ff80:	e5900004 	ldr	r0, [r0, #4]
4001ff84:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001ff88:	e2411a03 	sub	r1, r1, #12288	; 0x3000
4001ff8c:	e5810004 	str	r0, [r1, #4]
4001ff90:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001ff94:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001ff98:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ff9c:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001ffa0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001ffa4:	e1a00001 	mov	r0, r1
4001ffa8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001ffac:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ffb0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001ffb4:	e3a00001 	mov	r0, #1
4001ffb8:	e59f1074 	ldr	r1, [pc, #116]	; 40020034 <CyU3PUsbFallBackToUsb2+0x240>
4001ffbc:	e5c10009 	strb	r0, [r1, #9]
4001ffc0:	e3a00000 	mov	r0, #0
4001ffc4:	e5810044 	str	r0, [r1, #68]	; 0x44
4001ffc8:	e3a00501 	mov	r0, #4194304	; 0x400000
4001ffcc:	e59f108c 	ldr	r1, [pc, #140]	; 40020060 <CyU3PUsbFallBackToUsb2+0x26c>
4001ffd0:	e5810074 	str	r0, [r1, #116]	; 0x74
4001ffd4:	e3a00002 	mov	r0, #2
4001ffd8:	ebffcd0c 	bl	40013410 <CyU3PBusyWait>
4001ffdc:	e59f0068 	ldr	r0, [pc, #104]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
4001ffe0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ffe4:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001ffe8:	e59f105c 	ldr	r1, [pc, #92]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
4001ffec:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fff0:	e3a00064 	mov	r0, #100	; 0x64
4001fff4:	ebffcd05 	bl	40013410 <CyU3PBusyWait>
4001fff8:	eb0007a0 	bl	40021e80 <CyFx3Usb2PhySetup>
4001fffc:	e59f0060 	ldr	r0, [pc, #96]	; 40020064 <CyU3PUsbFallBackToUsb2+0x270>
40020000:	e59f1044 	ldr	r1, [pc, #68]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
40020004:	e5810008 	str	r0, [r1, #8]
40020008:	e3a00050 	mov	r0, #80	; 0x50
4002000c:	ebffccff 	bl	40013410 <CyU3PBusyWait>
40020010:	e3a01000 	mov	r1, #0
40020014:	e3a00002 	mov	r0, #2
40020018:	ebfff09c 	bl	4001c290 <CyU3PSetUsbCoreClock>
4002001c:	e59f0028 	ldr	r0, [pc, #40]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
40020020:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020024:	e3c00008 	bic	r0, r0, #8
40020028:	e59f101c 	ldr	r1, [pc, #28]	; 4002004c <CyU3PUsbFallBackToUsb2+0x258>
4002002c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020030:	eaffff7a 	b	4001fe20 <CyU3PUsbFallBackToUsb2+0x2c>
40020034:	40031d40 	.word	0x40031d40
40020038:	e0051000 	.word	0xe0051000
4002003c:	00001005 	.word	0x00001005
40020040:	e0033000 	.word	0xe0033000
40020044:	40030db0 	.word	0x40030db0
40020048:	400326a0 	.word	0x400326a0
4002004c:	e0031000 	.word	0xe0031000
40020050:	40030c58 	.word	0x40030c58
40020054:	e0050000 	.word	0xe0050000
40020058:	40031a78 	.word	0x40031a78
4002005c:	40031b18 	.word	0x40031b18
40020060:	e0032000 	.word	0xe0032000
40020064:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

40020068 <CyU3PUsbGetEpStatus>:
40020068:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4002006c:	e1a04000 	mov	r4, r0
40020070:	e204600f 	and	r6, r4, #15
40020074:	e59f0090 	ldr	r0, [pc, #144]	; 4002010c <CyU3PUsbGetEpStatus+0xa4>
40020078:	e5d00009 	ldrb	r0, [r0, #9]
4002007c:	e3500003 	cmp	r0, #3
40020080:	1a00000b 	bne	400200b4 <CyU3PUsbGetEpStatus+0x4c>
40020084:	e3140080 	tst	r4, #128	; 0x80
40020088:	0a000004 	beq	400200a0 <CyU3PUsbGetEpStatus+0x38>
4002008c:	e59f007c 	ldr	r0, [pc, #124]	; 40020110 <CyU3PUsbGetEpStatus+0xa8>
40020090:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020094:	e2000004 	and	r0, r0, #4
40020098:	e58d0000 	str	r0, [sp]
4002009c:	ea00000f 	b	400200e0 <CyU3PUsbGetEpStatus+0x78>
400200a0:	e59f006c 	ldr	r0, [pc, #108]	; 40020114 <CyU3PUsbGetEpStatus+0xac>
400200a4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200a8:	e2000004 	and	r0, r0, #4
400200ac:	e58d0000 	str	r0, [sp]
400200b0:	ea00000a 	b	400200e0 <CyU3PUsbGetEpStatus+0x78>
400200b4:	e3140080 	tst	r4, #128	; 0x80
400200b8:	0a000004 	beq	400200d0 <CyU3PUsbGetEpStatus+0x68>
400200bc:	e59f0054 	ldr	r0, [pc, #84]	; 40020118 <CyU3PUsbGetEpStatus+0xb0>
400200c0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200c4:	e2000801 	and	r0, r0, #65536	; 0x10000
400200c8:	e58d0000 	str	r0, [sp]
400200cc:	ea000003 	b	400200e0 <CyU3PUsbGetEpStatus+0x78>
400200d0:	e59f0044 	ldr	r0, [pc, #68]	; 4002011c <CyU3PUsbGetEpStatus+0xb4>
400200d4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200d8:	e2000801 	and	r0, r0, #65536	; 0x10000
400200dc:	e58d0000 	str	r0, [sp]
400200e0:	e59d0000 	ldr	r0, [sp]
400200e4:	e3500000 	cmp	r0, #0
400200e8:	0a000001 	beq	400200f4 <CyU3PUsbGetEpStatus+0x8c>
400200ec:	e3a00001 	mov	r0, #1
400200f0:	e58d0000 	str	r0, [sp]
400200f4:	e1a0100d 	mov	r1, sp
400200f8:	e3a00002 	mov	r0, #2
400200fc:	ebfff48f 	bl	4001d340 <CyU3PUsbSendEP0Data>
40020100:	e1a05000 	mov	r5, r0
40020104:	e1a00005 	mov	r0, r5
40020108:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4002010c:	40031d40 	.word	0x40031d40
40020110:	e0033500 	.word	0xe0033500
40020114:	e0033600 	.word	0xe0033600
40020118:	e0031418 	.word	0xe0031418
4002011c:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

40020120 <CyU3PUsbHandleClearFeature>:
40020120:	e92d4070 	push	{r4, r5, r6, lr}
40020124:	e1a04000 	mov	r4, r0
40020128:	e3a05000 	mov	r5, #0
4002012c:	e3540001 	cmp	r4, #1
40020130:	0a000006 	beq	40020150 <CyU3PUsbHandleClearFeature+0x30>
40020134:	e3540002 	cmp	r4, #2
40020138:	0a00000b 	beq	4002016c <CyU3PUsbHandleClearFeature+0x4c>
4002013c:	e3540030 	cmp	r4, #48	; 0x30
40020140:	0a00000f 	beq	40020184 <CyU3PUsbHandleClearFeature+0x64>
40020144:	e3540031 	cmp	r4, #49	; 0x31
40020148:	1a00002d 	bne	40020204 <CyU3PUsbHandleClearFeature+0xe4>
4002014c:	ea00001c 	b	400201c4 <CyU3PUsbHandleClearFeature+0xa4>
40020150:	e1a00000 	nop			; (mov r0, r0)
40020154:	e59f00d8 	ldr	r0, [pc, #216]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
40020158:	e5d00006 	ldrb	r0, [r0, #6]
4002015c:	e3c00002 	bic	r0, r0, #2
40020160:	e59f10cc 	ldr	r1, [pc, #204]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
40020164:	e5c10006 	strb	r0, [r1, #6]
40020168:	e1a00000 	nop			; (mov r0, r0)
4002016c:	e59f00c0 	ldr	r0, [pc, #192]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
40020170:	e5d00009 	ldrb	r0, [r0, #9]
40020174:	e3500003 	cmp	r0, #3
40020178:	0a000000 	beq	40020180 <CyU3PUsbHandleClearFeature+0x60>
4002017c:	e3a05001 	mov	r5, #1
40020180:	ea000021 	b	4002020c <CyU3PUsbHandleClearFeature+0xec>
40020184:	e1a00000 	nop			; (mov r0, r0)
40020188:	e59f00a4 	ldr	r0, [pc, #164]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
4002018c:	e5d00009 	ldrb	r0, [r0, #9]
40020190:	e3500003 	cmp	r0, #3
40020194:	1a000009 	bne	400201c0 <CyU3PUsbHandleClearFeature+0xa0>
40020198:	e59f0094 	ldr	r0, [pc, #148]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
4002019c:	e5d00008 	ldrb	r0, [r0, #8]
400201a0:	e3500006 	cmp	r0, #6
400201a4:	1a000005 	bne	400201c0 <CyU3PUsbHandleClearFeature+0xa0>
400201a8:	e59f0084 	ldr	r0, [pc, #132]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
400201ac:	e5d00006 	ldrb	r0, [r0, #6]
400201b0:	e3c00004 	bic	r0, r0, #4
400201b4:	e59f1078 	ldr	r1, [pc, #120]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
400201b8:	e5c10006 	strb	r0, [r1, #6]
400201bc:	e3a05001 	mov	r5, #1
400201c0:	ea000011 	b	4002020c <CyU3PUsbHandleClearFeature+0xec>
400201c4:	e1a00000 	nop			; (mov r0, r0)
400201c8:	e59f0064 	ldr	r0, [pc, #100]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
400201cc:	e5d00009 	ldrb	r0, [r0, #9]
400201d0:	e3500003 	cmp	r0, #3
400201d4:	1a000009 	bne	40020200 <CyU3PUsbHandleClearFeature+0xe0>
400201d8:	e59f0054 	ldr	r0, [pc, #84]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
400201dc:	e5d00008 	ldrb	r0, [r0, #8]
400201e0:	e3500006 	cmp	r0, #6
400201e4:	1a000005 	bne	40020200 <CyU3PUsbHandleClearFeature+0xe0>
400201e8:	e59f0044 	ldr	r0, [pc, #68]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
400201ec:	e5d00006 	ldrb	r0, [r0, #6]
400201f0:	e3c00008 	bic	r0, r0, #8
400201f4:	e59f1038 	ldr	r1, [pc, #56]	; 40020234 <CyU3PUsbHandleClearFeature+0x114>
400201f8:	e5c10006 	strb	r0, [r1, #6]
400201fc:	e3a05001 	mov	r5, #1
40020200:	ea000001 	b	4002020c <CyU3PUsbHandleClearFeature+0xec>
40020204:	e1a00000 	nop			; (mov r0, r0)
40020208:	e1a00000 	nop			; (mov r0, r0)
4002020c:	e1a00000 	nop			; (mov r0, r0)
40020210:	e3550000 	cmp	r5, #0
40020214:	0a000001 	beq	40020220 <CyU3PUsbHandleClearFeature+0x100>
40020218:	ebfff0af 	bl	4001c4dc <CyU3PUsbAckSetup>
4002021c:	ea000003 	b	40020230 <CyU3PUsbHandleClearFeature+0x110>
40020220:	e3a02000 	mov	r2, #0
40020224:	e3a01001 	mov	r1, #1
40020228:	e1a00002 	mov	r0, r2
4002022c:	ebfff66e 	bl	4001dbec <CyU3PUsbStall>
40020230:	e8bd8070 	pop	{r4, r5, r6, pc}
40020234:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleEvents:

40020238 <CyU3PUsbHandleEvents>:
40020238:	e92d4070 	push	{r4, r5, r6, lr}
4002023c:	e1a04000 	mov	r4, r0
40020240:	e3140040 	tst	r4, #64	; 0x40
40020244:	0a000000 	beq	4002024c <CyU3PUsbHandleEvents+0x14>
40020248:	ebfff8cc 	bl	4001e580 <CyU3PUibDevCtrlEvtHandler>
4002024c:	e3140020 	tst	r4, #32
40020250:	0a000000 	beq	40020258 <CyU3PUsbHandleEvents+0x20>
40020254:	ebfff942 	bl	4001e764 <CyU3PUibEPEvtHandler>
40020258:	e3140080 	tst	r4, #128	; 0x80
4002025c:	0a000000 	beq	40020264 <CyU3PUsbHandleEvents+0x2c>
40020260:	ebfffa15 	bl	4001eabc <CyU3PUibLnkIntrEvtHandler>
40020264:	e3140c01 	tst	r4, #256	; 0x100
40020268:	0a000000 	beq	40020270 <CyU3PUsbHandleEvents+0x38>
4002026c:	ebfffb32 	bl	4001ef3c <CyU3PUibProtIntrEvtHandler>
40020270:	e3140c02 	tst	r4, #512	; 0x200
40020274:	0a000000 	beq	4002027c <CyU3PUsbHandleEvents+0x44>
40020278:	ebfffa37 	bl	4001eb5c <CyU3PUibProtEpIntrEvtHandler>
4002027c:	e3140b01 	tst	r4, #1024	; 0x400
40020280:	0a000006 	beq	400202a0 <CyU3PUsbHandleEvents+0x68>
40020284:	e59f0378 	ldr	r0, [pc, #888]	; 40020604 <CyU3PUsbHandleEvents+0x3cc>
40020288:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4002028c:	e3500b02 	cmp	r0, #2048	; 0x800
40020290:	1a000001 	bne	4002029c <CyU3PUsbHandleEvents+0x64>
40020294:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40020298:	ebffa1a1 	bl	40008924 <_tx_thread_sleep>
4002029c:	ebfffd4a 	bl	4001f7cc <CyU3PUibVbusChangeHandler>
400202a0:	e3140b02 	tst	r4, #2048	; 0x800
400202a4:	0a000000 	beq	400202ac <CyU3PUsbHandleEvents+0x74>
400202a8:	eb0003ae 	bl	40021168 <CyU3PUsbSendCompliancePatterns>
400202ac:	e3140a01 	tst	r4, #4096	; 0x1000
400202b0:	0a00000c 	beq	400202e8 <CyU3PUsbHandleEvents+0xb0>
400202b4:	e59f034c 	ldr	r0, [pc, #844]	; 40020608 <CyU3PUsbHandleEvents+0x3d0>
400202b8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400202bc:	e3100902 	tst	r0, #32768	; 0x8000
400202c0:	0a000008 	beq	400202e8 <CyU3PUsbHandleEvents+0xb0>
400202c4:	e3a00001 	mov	r0, #1
400202c8:	e59f133c 	ldr	r1, [pc, #828]	; 4002060c <CyU3PUsbHandleEvents+0x3d4>
400202cc:	e5810000 	str	r0, [r1]
400202d0:	e59f1338 	ldr	r1, [pc, #824]	; 40020610 <CyU3PUsbHandleEvents+0x3d8>
400202d4:	e5810000 	str	r0, [r1]
400202d8:	ebfffdb3 	bl	4001f9ac <CyU3PUsbCheckUsb3Disconnect>
400202dc:	e3a00000 	mov	r0, #0
400202e0:	e59f1328 	ldr	r1, [pc, #808]	; 40020610 <CyU3PUsbHandleEvents+0x3d8>
400202e4:	e5810000 	str	r0, [r1]
400202e8:	e3140301 	tst	r4, #67108864	; 0x4000000
400202ec:	0a000013 	beq	40020340 <CyU3PUsbHandleEvents+0x108>
400202f0:	e59f031c 	ldr	r0, [pc, #796]	; 40020614 <CyU3PUsbHandleEvents+0x3dc>
400202f4:	e5900000 	ldr	r0, [r0]
400202f8:	e3500000 	cmp	r0, #0
400202fc:	0a000008 	beq	40020324 <CyU3PUsbHandleEvents+0xec>
40020300:	e59f0300 	ldr	r0, [pc, #768]	; 40020608 <CyU3PUsbHandleEvents+0x3d0>
40020304:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
40020308:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
4002030c:	e3a02080 	mov	r2, #128	; 0x80
40020310:	e1821920 	orr	r1, r2, r0, lsr #18
40020314:	e3a00012 	mov	r0, #18
40020318:	e59f22f4 	ldr	r2, [pc, #756]	; 40020614 <CyU3PUsbHandleEvents+0x3dc>
4002031c:	e5922000 	ldr	r2, [r2]
40020320:	e12fff32 	blx	r2
40020324:	e3a00b02 	mov	r0, #2048	; 0x800
40020328:	e59f12e8 	ldr	r1, [pc, #744]	; 40020618 <CyU3PUsbHandleEvents+0x3e0>
4002032c:	e5810000 	str	r0, [r1]
40020330:	e1c10000 	bic	r0, r1, r0
40020334:	e5900004 	ldr	r0, [r0, #4]
40020338:	e3800b02 	orr	r0, r0, #2048	; 0x800
4002033c:	e5810004 	str	r0, [r1, #4]
40020340:	e3140901 	tst	r4, #16384	; 0x4000
40020344:	0a000008 	beq	4002036c <CyU3PUsbHandleEvents+0x134>
40020348:	e59f02c4 	ldr	r0, [pc, #708]	; 40020614 <CyU3PUsbHandleEvents+0x3dc>
4002034c:	e5900000 	ldr	r0, [r0]
40020350:	e3500000 	cmp	r0, #0
40020354:	0a000004 	beq	4002036c <CyU3PUsbHandleEvents+0x134>
40020358:	e3a01000 	mov	r1, #0
4002035c:	e3a00003 	mov	r0, #3
40020360:	e59f22ac 	ldr	r2, [pc, #684]	; 40020614 <CyU3PUsbHandleEvents+0x3dc>
40020364:	e5922000 	ldr	r2, [r2]
40020368:	e12fff32 	blx	r2
4002036c:	e3140a02 	tst	r4, #8192	; 0x2000
40020370:	0a000008 	beq	40020398 <CyU3PUsbHandleEvents+0x160>
40020374:	e59f0298 	ldr	r0, [pc, #664]	; 40020614 <CyU3PUsbHandleEvents+0x3dc>
40020378:	e5900000 	ldr	r0, [r0]
4002037c:	e3500000 	cmp	r0, #0
40020380:	0a000004 	beq	40020398 <CyU3PUsbHandleEvents+0x160>
40020384:	e3a01000 	mov	r1, #0
40020388:	e3a00002 	mov	r0, #2
4002038c:	e59f2280 	ldr	r2, [pc, #640]	; 40020614 <CyU3PUsbHandleEvents+0x3dc>
40020390:	e5922000 	ldr	r2, [r2]
40020394:	e12fff32 	blx	r2
40020398:	e3140902 	tst	r4, #32768	; 0x8000
4002039c:	0a000022 	beq	4002042c <CyU3PUsbHandleEvents+0x1f4>
400203a0:	e59f0274 	ldr	r0, [pc, #628]	; 4002061c <CyU3PUsbHandleEvents+0x3e4>
400203a4:	e5900000 	ldr	r0, [r0]
400203a8:	e3500000 	cmp	r0, #0
400203ac:	0a00001e 	beq	4002042c <CyU3PUsbHandleEvents+0x1f4>
400203b0:	eb000690 	bl	40021df8 <CyU3PVicDisableAllInterrupts>
400203b4:	e1a06000 	mov	r6, r0
400203b8:	e3a00001 	mov	r0, #1
400203bc:	ebffcc13 	bl	40013410 <CyU3PBusyWait>
400203c0:	e59f0258 	ldr	r0, [pc, #600]	; 40020620 <CyU3PUsbHandleEvents+0x3e8>
400203c4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400203c8:	e3c00803 	bic	r0, r0, #196608	; 0x30000
400203cc:	e59f124c 	ldr	r1, [pc, #588]	; 40020620 <CyU3PUsbHandleEvents+0x3e8>
400203d0:	e5810400 	str	r0, [r1, #1024]	; 0x400
400203d4:	e1a00006 	mov	r0, r6
400203d8:	eb000694 	bl	40021e30 <CyU3PVicEnableInterrupts>
400203dc:	e3a00001 	mov	r0, #1
400203e0:	ebffa14f 	bl	40008924 <_tx_thread_sleep>
400203e4:	e3a00000 	mov	r0, #0
400203e8:	e59f122c 	ldr	r1, [pc, #556]	; 4002061c <CyU3PUsbHandleEvents+0x3e4>
400203ec:	e5810000 	str	r0, [r1]
400203f0:	e59f0228 	ldr	r0, [pc, #552]	; 40020620 <CyU3PUsbHandleEvents+0x3e8>
400203f4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400203f8:	e3100c02 	tst	r0, #512	; 0x200
400203fc:	1a00000a 	bne	4002042c <CyU3PUsbHandleEvents+0x1f4>
40020400:	e59f01fc 	ldr	r0, [pc, #508]	; 40020604 <CyU3PUsbHandleEvents+0x3cc>
40020404:	e5900044 	ldr	r0, [r0, #68]	; 0x44
40020408:	e3500000 	cmp	r0, #0
4002040c:	1a000006 	bne	4002042c <CyU3PUsbHandleEvents+0x1f4>
40020410:	e59f01ec 	ldr	r0, [pc, #492]	; 40020604 <CyU3PUsbHandleEvents+0x3cc>
40020414:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
40020418:	e3500000 	cmp	r0, #0
4002041c:	1a000002 	bne	4002042c <CyU3PUsbHandleEvents+0x1f4>
40020420:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020424:	e59f11f4 	ldr	r1, [pc, #500]	; 40020620 <CyU3PUsbHandleEvents+0x3e8>
40020428:	e5810050 	str	r0, [r1, #80]	; 0x50
4002042c:	e3140401 	tst	r4, #16777216	; 0x1000000
40020430:	0a000020 	beq	400204b8 <CyU3PUsbHandleEvents+0x280>
40020434:	e59f01e4 	ldr	r0, [pc, #484]	; 40020620 <CyU3PUsbHandleEvents+0x3e8>
40020438:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002043c:	e200503f 	and	r5, r0, #63	; 0x3f
40020440:	e3550011 	cmp	r5, #17
40020444:	0a000001 	beq	40020450 <CyU3PUsbHandleEvents+0x218>
40020448:	e3550012 	cmp	r5, #18
4002044c:	1a000018 	bne	400204b4 <CyU3PUsbHandleEvents+0x27c>
40020450:	e59f01cc 	ldr	r0, [pc, #460]	; 40020624 <CyU3PUsbHandleEvents+0x3ec>
40020454:	e5900000 	ldr	r0, [r0]
40020458:	e3500000 	cmp	r0, #0
4002045c:	0a000014 	beq	400204b4 <CyU3PUsbHandleEvents+0x27c>
40020460:	e3a00005 	mov	r0, #5
40020464:	ebffcbe9 	bl	40013410 <CyU3PBusyWait>
40020468:	e59f01b0 	ldr	r0, [pc, #432]	; 40020620 <CyU3PUsbHandleEvents+0x3e8>
4002046c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020470:	e200503f 	and	r5, r0, #63	; 0x3f
40020474:	e3550011 	cmp	r5, #17
40020478:	0a000001 	beq	40020484 <CyU3PUsbHandleEvents+0x24c>
4002047c:	e3550012 	cmp	r5, #18
40020480:	1a000001 	bne	4002048c <CyU3PUsbHandleEvents+0x254>
40020484:	e3a00000 	mov	r0, #0
40020488:	ebfff582 	bl	4001da98 <CyU3PUsbSetLinkPowerState>
4002048c:	e3a00001 	mov	r0, #1
40020490:	ebffa123 	bl	40008924 <_tx_thread_sleep>
40020494:	e59f0188 	ldr	r0, [pc, #392]	; 40020624 <CyU3PUsbHandleEvents+0x3ec>
40020498:	e5900000 	ldr	r0, [r0]
4002049c:	e3500000 	cmp	r0, #0
400204a0:	0a000003 	beq	400204b4 <CyU3PUsbHandleEvents+0x27c>
400204a4:	e3a02000 	mov	r2, #0
400204a8:	e3a01401 	mov	r1, #16777216	; 0x1000000
400204ac:	e59f0174 	ldr	r0, [pc, #372]	; 40020628 <CyU3PUsbHandleEvents+0x3f0>
400204b0:	ebffa613 	bl	40009d04 <_txe_event_flags_set>
400204b4:	e1a00000 	nop			; (mov r0, r0)
400204b8:	e3140402 	tst	r4, #33554432	; 0x2000000
400204bc:	0a000019 	beq	40020528 <CyU3PUsbHandleEvents+0x2f0>
400204c0:	e3a00052 	mov	r0, #82	; 0x52
400204c4:	ebfffd1d 	bl	4001f940 <CyU3PUsbAddToEventLog>
400204c8:	e59f1134 	ldr	r1, [pc, #308]	; 40020604 <CyU3PUsbHandleEvents+0x3cc>
400204cc:	e5d11009 	ldrb	r1, [r1, #9]
400204d0:	e3510003 	cmp	r1, #3
400204d4:	1a000001 	bne	400204e0 <CyU3PUsbHandleEvents+0x2a8>
400204d8:	e3a01001 	mov	r1, #1
400204dc:	ea000000 	b	400204e4 <CyU3PUsbHandleEvents+0x2ac>
400204e0:	e3a01000 	mov	r1, #0
400204e4:	e1a00001 	mov	r0, r1
400204e8:	ebfff21a 	bl	4001cd58 <CyU3PUsbPhyDisable>
400204ec:	e3a00001 	mov	r0, #1
400204f0:	ebffa10b 	bl	40008924 <_tx_thread_sleep>
400204f4:	e59f0108 	ldr	r0, [pc, #264]	; 40020604 <CyU3PUsbHandleEvents+0x3cc>
400204f8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400204fc:	e3500000 	cmp	r0, #0
40020500:	0a000005 	beq	4002051c <CyU3PUsbHandleEvents+0x2e4>
40020504:	e59f0120 	ldr	r0, [pc, #288]	; 4002062c <CyU3PUsbHandleEvents+0x3f4>
40020508:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4002050c:	e59f10f0 	ldr	r1, [pc, #240]	; 40020604 <CyU3PUsbHandleEvents+0x3cc>
40020510:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020514:	e1100001 	tst	r0, r1
40020518:	0a000002 	beq	40020528 <CyU3PUsbHandleEvents+0x2f0>
4002051c:	e59f10e0 	ldr	r1, [pc, #224]	; 40020604 <CyU3PUsbHandleEvents+0x3cc>
40020520:	e5910024 	ldr	r0, [r1, #36]	; 0x24
40020524:	ebfff281 	bl	4001cf30 <CyU3PUsbPhyEnable>
40020528:	e3140801 	tst	r4, #65536	; 0x10000
4002052c:	0a000006 	beq	4002054c <CyU3PUsbHandleEvents+0x314>
40020530:	e59f00f8 	ldr	r0, [pc, #248]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
40020534:	e5900000 	ldr	r0, [r0]
40020538:	e3500000 	cmp	r0, #0
4002053c:	0a000002 	beq	4002054c <CyU3PUsbHandleEvents+0x314>
40020540:	e59f10e8 	ldr	r1, [pc, #232]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
40020544:	e5910000 	ldr	r0, [r1]
40020548:	e12fff30 	blx	r0
4002054c:	e3140802 	tst	r4, #131072	; 0x20000
40020550:	0a000006 	beq	40020570 <CyU3PUsbHandleEvents+0x338>
40020554:	e59f00d4 	ldr	r0, [pc, #212]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
40020558:	e5900004 	ldr	r0, [r0, #4]
4002055c:	e3500000 	cmp	r0, #0
40020560:	0a000002 	beq	40020570 <CyU3PUsbHandleEvents+0x338>
40020564:	e59f10c4 	ldr	r1, [pc, #196]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
40020568:	e5910004 	ldr	r0, [r1, #4]
4002056c:	e12fff30 	blx	r0
40020570:	e3140701 	tst	r4, #262144	; 0x40000
40020574:	0a000006 	beq	40020594 <CyU3PUsbHandleEvents+0x35c>
40020578:	e59f00b0 	ldr	r0, [pc, #176]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
4002057c:	e5900008 	ldr	r0, [r0, #8]
40020580:	e3500000 	cmp	r0, #0
40020584:	0a000002 	beq	40020594 <CyU3PUsbHandleEvents+0x35c>
40020588:	e59f10a0 	ldr	r1, [pc, #160]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
4002058c:	e5910008 	ldr	r0, [r1, #8]
40020590:	e12fff30 	blx	r0
40020594:	e3140702 	tst	r4, #524288	; 0x80000
40020598:	0a000006 	beq	400205b8 <CyU3PUsbHandleEvents+0x380>
4002059c:	e59f008c 	ldr	r0, [pc, #140]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
400205a0:	e590000c 	ldr	r0, [r0, #12]
400205a4:	e3500000 	cmp	r0, #0
400205a8:	0a000002 	beq	400205b8 <CyU3PUsbHandleEvents+0x380>
400205ac:	e59f107c 	ldr	r1, [pc, #124]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
400205b0:	e591000c 	ldr	r0, [r1, #12]
400205b4:	e12fff30 	blx	r0
400205b8:	e3140601 	tst	r4, #1048576	; 0x100000
400205bc:	0a000006 	beq	400205dc <CyU3PUsbHandleEvents+0x3a4>
400205c0:	e59f0068 	ldr	r0, [pc, #104]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
400205c4:	e5900010 	ldr	r0, [r0, #16]
400205c8:	e3500000 	cmp	r0, #0
400205cc:	0a000002 	beq	400205dc <CyU3PUsbHandleEvents+0x3a4>
400205d0:	e59f1058 	ldr	r1, [pc, #88]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
400205d4:	e5910010 	ldr	r0, [r1, #16]
400205d8:	e12fff30 	blx	r0
400205dc:	e3140602 	tst	r4, #2097152	; 0x200000
400205e0:	0a000006 	beq	40020600 <CyU3PUsbHandleEvents+0x3c8>
400205e4:	e59f0044 	ldr	r0, [pc, #68]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
400205e8:	e5900014 	ldr	r0, [r0, #20]
400205ec:	e3500000 	cmp	r0, #0
400205f0:	0a000002 	beq	40020600 <CyU3PUsbHandleEvents+0x3c8>
400205f4:	e59f1034 	ldr	r1, [pc, #52]	; 40020630 <CyU3PUsbHandleEvents+0x3f8>
400205f8:	e5910014 	ldr	r0, [r1, #20]
400205fc:	e12fff30 	blx	r0
40020600:	e8bd8070 	pop	{r4, r5, r6, pc}
40020604:	40031d40 	.word	0x40031d40
40020608:	e0031000 	.word	0xe0031000
4002060c:	40030d64 	.word	0x40030d64
40020610:	40030d68 	.word	0x40030d68
40020614:	40030d9c 	.word	0x40030d9c
40020618:	e0030000 	.word	0xe0030000
4002061c:	40030d6c 	.word	0x40030d6c
40020620:	e0033000 	.word	0xe0033000
40020624:	40030db4 	.word	0x40030db4
40020628:	40031eb8 	.word	0x40031eb8
4002062c:	e0051000 	.word	0xe0051000
40020630:	40031dbc 	.word	0x40031dbc

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020634 <CyU3PUsbHandleGetStatus>:
40020634:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020638:	e1a04000 	mov	r4, r0
4002063c:	e1a05001 	mov	r5, r1
40020640:	e3a07000 	mov	r7, #0
40020644:	e3a00000 	mov	r0, #0
40020648:	e58d0000 	str	r0, [sp]
4002064c:	e3540000 	cmp	r4, #0
40020650:	0a000004 	beq	40020668 <CyU3PUsbHandleGetStatus+0x34>
40020654:	e3540001 	cmp	r4, #1
40020658:	0a00001e 	beq	400206d8 <CyU3PUsbHandleGetStatus+0xa4>
4002065c:	e3540002 	cmp	r4, #2
40020660:	1a00002b 	bne	40020714 <CyU3PUsbHandleGetStatus+0xe0>
40020664:	ea000023 	b	400206f8 <CyU3PUsbHandleGetStatus+0xc4>
40020668:	e1a00000 	nop			; (mov r0, r0)
4002066c:	e3550a0f 	cmp	r5, #61440	; 0xf000
40020670:	1a00000d 	bne	400206ac <CyU3PUsbHandleGetStatus+0x78>
40020674:	ebffed1c 	bl	4001baec <CyU3POtgGetMode>
40020678:	e3500002 	cmp	r0, #2
4002067c:	1a000008 	bne	400206a4 <CyU3PUsbHandleGetStatus+0x70>
40020680:	e59f00a0 	ldr	r0, [pc, #160]	; 40020728 <CyU3PUsbHandleGetStatus+0xf4>
40020684:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40020688:	e3500000 	cmp	r0, #0
4002068c:	0a000001 	beq	40020698 <CyU3PUsbHandleGetStatus+0x64>
40020690:	e3a00001 	mov	r0, #1
40020694:	ea000000 	b	4002069c <CyU3PUsbHandleGetStatus+0x68>
40020698:	e3a00000 	mov	r0, #0
4002069c:	e5cd0000 	strb	r0, [sp]
400206a0:	ea00000b 	b	400206d4 <CyU3PUsbHandleGetStatus+0xa0>
400206a4:	e3a00000 	mov	r0, #0
400206a8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400206ac:	e59f0074 	ldr	r0, [pc, #116]	; 40020728 <CyU3PUsbHandleGetStatus+0xf4>
400206b0:	e5d00006 	ldrb	r0, [r0, #6]
400206b4:	e5cd0000 	strb	r0, [sp]
400206b8:	e59f0068 	ldr	r0, [pc, #104]	; 40020728 <CyU3PUsbHandleGetStatus+0xf4>
400206bc:	e5d00009 	ldrb	r0, [r0, #9]
400206c0:	e3500003 	cmp	r0, #3
400206c4:	1a000002 	bne	400206d4 <CyU3PUsbHandleGetStatus+0xa0>
400206c8:	e5dd0000 	ldrb	r0, [sp]
400206cc:	e3c00002 	bic	r0, r0, #2
400206d0:	e5cd0000 	strb	r0, [sp]
400206d4:	e1a00000 	nop			; (mov r0, r0)
400206d8:	e1a0100d 	mov	r1, sp
400206dc:	e3a00002 	mov	r0, #2
400206e0:	ebfff316 	bl	4001d340 <CyU3PUsbSendEP0Data>
400206e4:	e1a06000 	mov	r6, r0
400206e8:	e3560000 	cmp	r6, #0
400206ec:	1a000000 	bne	400206f4 <CyU3PUsbHandleGetStatus+0xc0>
400206f0:	e3a07001 	mov	r7, #1
400206f4:	ea000008 	b	4002071c <CyU3PUsbHandleGetStatus+0xe8>
400206f8:	e1a00000 	nop			; (mov r0, r0)
400206fc:	e20500ff 	and	r0, r5, #255	; 0xff
40020700:	ebfffe58 	bl	40020068 <CyU3PUsbGetEpStatus>
40020704:	e3500000 	cmp	r0, #0
40020708:	1a000000 	bne	40020710 <CyU3PUsbHandleGetStatus+0xdc>
4002070c:	e3a07001 	mov	r7, #1
40020710:	ea000001 	b	4002071c <CyU3PUsbHandleGetStatus+0xe8>
40020714:	e1a00000 	nop			; (mov r0, r0)
40020718:	e1a00000 	nop			; (mov r0, r0)
4002071c:	e1a00000 	nop			; (mov r0, r0)
40020720:	e1a00007 	mov	r0, r7
40020724:	eaffffdf 	b	400206a8 <CyU3PUsbHandleGetStatus+0x74>
40020728:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleSetFeature:

4002072c <CyU3PUsbHandleSetFeature>:
4002072c:	e92d4070 	push	{r4, r5, r6, lr}
40020730:	e1a04000 	mov	r4, r0
40020734:	e3a05000 	mov	r5, #0
40020738:	e3540001 	cmp	r4, #1
4002073c:	0a000006 	beq	4002075c <CyU3PUsbHandleSetFeature+0x30>
40020740:	e3540002 	cmp	r4, #2
40020744:	0a00000b 	beq	40020778 <CyU3PUsbHandleSetFeature+0x4c>
40020748:	e3540030 	cmp	r4, #48	; 0x30
4002074c:	0a00000e 	beq	4002078c <CyU3PUsbHandleSetFeature+0x60>
40020750:	e3540031 	cmp	r4, #49	; 0x31
40020754:	1a00002a 	bne	40020804 <CyU3PUsbHandleSetFeature+0xd8>
40020758:	ea00001a 	b	400207c8 <CyU3PUsbHandleSetFeature+0x9c>
4002075c:	e1a00000 	nop			; (mov r0, r0)
40020760:	e59f00cc 	ldr	r0, [pc, #204]	; 40020834 <CyU3PUsbHandleSetFeature+0x108>
40020764:	e5d00006 	ldrb	r0, [r0, #6]
40020768:	e3800002 	orr	r0, r0, #2
4002076c:	e59f10c0 	ldr	r1, [pc, #192]	; 40020834 <CyU3PUsbHandleSetFeature+0x108>
40020770:	e5c10006 	strb	r0, [r1, #6]
40020774:	e1a00000 	nop			; (mov r0, r0)
40020778:	ebfff0f4 	bl	4001cb50 <CyU3PUsbGetSpeed>
4002077c:	e3500003 	cmp	r0, #3
40020780:	0a000000 	beq	40020788 <CyU3PUsbHandleSetFeature+0x5c>
40020784:	e3a05001 	mov	r5, #1
40020788:	ea00001f 	b	4002080c <CyU3PUsbHandleSetFeature+0xe0>
4002078c:	e1a00000 	nop			; (mov r0, r0)
40020790:	ebfff0ee 	bl	4001cb50 <CyU3PUsbGetSpeed>
40020794:	e3500003 	cmp	r0, #3
40020798:	1a000009 	bne	400207c4 <CyU3PUsbHandleSetFeature+0x98>
4002079c:	e59f0090 	ldr	r0, [pc, #144]	; 40020834 <CyU3PUsbHandleSetFeature+0x108>
400207a0:	e5d00008 	ldrb	r0, [r0, #8]
400207a4:	e3500006 	cmp	r0, #6
400207a8:	1a000005 	bne	400207c4 <CyU3PUsbHandleSetFeature+0x98>
400207ac:	e59f0080 	ldr	r0, [pc, #128]	; 40020834 <CyU3PUsbHandleSetFeature+0x108>
400207b0:	e5d00006 	ldrb	r0, [r0, #6]
400207b4:	e3800004 	orr	r0, r0, #4
400207b8:	e59f1074 	ldr	r1, [pc, #116]	; 40020834 <CyU3PUsbHandleSetFeature+0x108>
400207bc:	e5c10006 	strb	r0, [r1, #6]
400207c0:	e3a05001 	mov	r5, #1
400207c4:	ea000010 	b	4002080c <CyU3PUsbHandleSetFeature+0xe0>
400207c8:	e1a00000 	nop			; (mov r0, r0)
400207cc:	ebfff0df 	bl	4001cb50 <CyU3PUsbGetSpeed>
400207d0:	e3500003 	cmp	r0, #3
400207d4:	1a000009 	bne	40020800 <CyU3PUsbHandleSetFeature+0xd4>
400207d8:	e59f0054 	ldr	r0, [pc, #84]	; 40020834 <CyU3PUsbHandleSetFeature+0x108>
400207dc:	e5d00008 	ldrb	r0, [r0, #8]
400207e0:	e3500006 	cmp	r0, #6
400207e4:	1a000005 	bne	40020800 <CyU3PUsbHandleSetFeature+0xd4>
400207e8:	e59f0044 	ldr	r0, [pc, #68]	; 40020834 <CyU3PUsbHandleSetFeature+0x108>
400207ec:	e5d00006 	ldrb	r0, [r0, #6]
400207f0:	e3800008 	orr	r0, r0, #8
400207f4:	e59f1038 	ldr	r1, [pc, #56]	; 40020834 <CyU3PUsbHandleSetFeature+0x108>
400207f8:	e5c10006 	strb	r0, [r1, #6]
400207fc:	e3a05001 	mov	r5, #1
40020800:	ea000001 	b	4002080c <CyU3PUsbHandleSetFeature+0xe0>
40020804:	e1a00000 	nop			; (mov r0, r0)
40020808:	e1a00000 	nop			; (mov r0, r0)
4002080c:	e1a00000 	nop			; (mov r0, r0)
40020810:	e3550000 	cmp	r5, #0
40020814:	0a000001 	beq	40020820 <CyU3PUsbHandleSetFeature+0xf4>
40020818:	ebffef2f 	bl	4001c4dc <CyU3PUsbAckSetup>
4002081c:	ea000003 	b	40020830 <CyU3PUsbHandleSetFeature+0x104>
40020820:	e3a02000 	mov	r2, #0
40020824:	e3a01001 	mov	r1, #1
40020828:	e1a00002 	mov	r0, r2
4002082c:	ebfff4ee 	bl	4001dbec <CyU3PUsbStall>
40020830:	e8bd8070 	pop	{r4, r5, r6, pc}
40020834:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbReEnableUsb3:

40020838 <CyU3PUsbReEnableUsb3>:
40020838:	e92d4010 	push	{r4, lr}
4002083c:	e3a00051 	mov	r0, #81	; 0x51
40020840:	ebfffc3e 	bl	4001f940 <CyU3PUsbAddToEventLog>
40020844:	e59f018c 	ldr	r0, [pc, #396]	; 400209d8 <CyU3PUsbReEnableUsb3+0x1a0>
40020848:	e5900004 	ldr	r0, [r0, #4]
4002084c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020850:	e59f1180 	ldr	r1, [pc, #384]	; 400209d8 <CyU3PUsbReEnableUsb3+0x1a0>
40020854:	e5810004 	str	r0, [r1, #4]
40020858:	e3e00000 	mvn	r0, #0
4002085c:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020860:	e5810004 	str	r0, [r1, #4]
40020864:	e59f0170 	ldr	r0, [pc, #368]	; 400209dc <CyU3PUsbReEnableUsb3+0x1a4>
40020868:	e5810008 	str	r0, [r1, #8]
4002086c:	e3e00000 	mvn	r0, #0
40020870:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020874:	e59f0164 	ldr	r0, [pc, #356]	; 400209e0 <CyU3PUsbReEnableUsb3+0x1a8>
40020878:	e5810408 	str	r0, [r1, #1032]	; 0x408
4002087c:	e59f0160 	ldr	r0, [pc, #352]	; 400209e4 <CyU3PUsbReEnableUsb3+0x1ac>
40020880:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40020884:	e3500000 	cmp	r0, #0
40020888:	0a000003 	beq	4002089c <CyU3PUsbReEnableUsb3+0x64>
4002088c:	e1a00001 	mov	r0, r1
40020890:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020894:	e3800c01 	orr	r0, r0, #256	; 0x100
40020898:	e5810408 	str	r0, [r1, #1032]	; 0x408
4002089c:	e3a00000 	mov	r0, #0
400208a0:	e59f113c 	ldr	r1, [pc, #316]	; 400209e4 <CyU3PUsbReEnableUsb3+0x1ac>
400208a4:	e5810044 	str	r0, [r1, #68]	; 0x44
400208a8:	e59f0138 	ldr	r0, [pc, #312]	; 400209e8 <CyU3PUsbReEnableUsb3+0x1b0>
400208ac:	e5900000 	ldr	r0, [r0]
400208b0:	e3500000 	cmp	r0, #0
400208b4:	0a000003 	beq	400208c8 <CyU3PUsbReEnableUsb3+0x90>
400208b8:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
400208bc:	e59f1128 	ldr	r1, [pc, #296]	; 400209ec <CyU3PUsbReEnableUsb3+0x1b4>
400208c0:	e5810050 	str	r0, [r1, #80]	; 0x50
400208c4:	ea000002 	b	400208d4 <CyU3PUsbReEnableUsb3+0x9c>
400208c8:	e3a00303 	mov	r0, #201326592	; 0xc000000
400208cc:	e59f1118 	ldr	r1, [pc, #280]	; 400209ec <CyU3PUsbReEnableUsb3+0x1b4>
400208d0:	e5810050 	str	r0, [r1, #80]	; 0x50
400208d4:	eb000575 	bl	40021eb0 <CyFx3Usb3LnkSetup>
400208d8:	e59f0110 	ldr	r0, [pc, #272]	; 400209f0 <CyU3PUsbReEnableUsb3+0x1b8>
400208dc:	e59f1108 	ldr	r1, [pc, #264]	; 400209ec <CyU3PUsbReEnableUsb3+0x1b4>
400208e0:	e5810418 	str	r0, [r1, #1048]	; 0x418
400208e4:	e581041c 	str	r0, [r1, #1052]	; 0x41c
400208e8:	e1c10000 	bic	r0, r1, r0
400208ec:	e5900158 	ldr	r0, [r0, #344]	; 0x158
400208f0:	e3800b02 	orr	r0, r0, #2048	; 0x800
400208f4:	e5810158 	str	r0, [r1, #344]	; 0x158
400208f8:	e3a00212 	mov	r0, #536870913	; 0x20000001
400208fc:	e581001c 	str	r0, [r1, #28]
40020900:	e3a01000 	mov	r1, #0
40020904:	e3a00001 	mov	r0, #1
40020908:	ebffee60 	bl	4001c290 <CyU3PSetUsbCoreClock>
4002090c:	e3a0000a 	mov	r0, #10
40020910:	ebffcabe 	bl	40013410 <CyU3PBusyWait>
40020914:	eb000537 	bl	40021df8 <CyU3PVicDisableAllInterrupts>
40020918:	e1a04000 	mov	r4, r0
4002091c:	e3a00000 	mov	r0, #0
40020920:	e59f10cc 	ldr	r1, [pc, #204]	; 400209f4 <CyU3PUsbReEnableUsb3+0x1bc>
40020924:	e5810000 	str	r0, [r1]
40020928:	e3a00a01 	mov	r0, #4096	; 0x1000
4002092c:	e59f10b8 	ldr	r1, [pc, #184]	; 400209ec <CyU3PUsbReEnableUsb3+0x1b4>
40020930:	e5810054 	str	r0, [r1, #84]	; 0x54
40020934:	e1c10080 	bic	r0, r1, r0, lsl #1
40020938:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002093c:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020940:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020944:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020948:	e3a00064 	mov	r0, #100	; 0x64
4002094c:	ebffcaaf 	bl	40013410 <CyU3PBusyWait>
40020950:	e59f0094 	ldr	r0, [pc, #148]	; 400209ec <CyU3PUsbReEnableUsb3+0x1b4>
40020954:	e5900000 	ldr	r0, [r0]
40020958:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
4002095c:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020960:	e59f1084 	ldr	r1, [pc, #132]	; 400209ec <CyU3PUsbReEnableUsb3+0x1b4>
40020964:	e5810000 	str	r0, [r1]
40020968:	e59f0088 	ldr	r0, [pc, #136]	; 400209f8 <CyU3PUsbReEnableUsb3+0x1c0>
4002096c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020970:	e3a01080 	mov	r1, #128	; 0x80
40020974:	e2810ef9 	add	r0, r1, #3984	; 0xf90
40020978:	eb000592 	bl	40021fc8 <CyFx3UsbWritePhyReg>
4002097c:	e3a01d06 	mov	r1, #384	; 0x180
40020980:	e59f0074 	ldr	r0, [pc, #116]	; 400209fc <CyU3PUsbReEnableUsb3+0x1c4>
40020984:	eb00058f 	bl	40021fc8 <CyFx3UsbWritePhyReg>
40020988:	e3a01080 	mov	r1, #128	; 0x80
4002098c:	e59f006c 	ldr	r0, [pc, #108]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1c8>
40020990:	eb00058c 	bl	40021fc8 <CyFx3UsbWritePhyReg>
40020994:	e59f003c 	ldr	r0, [pc, #60]	; 400209d8 <CyU3PUsbReEnableUsb3+0x1a0>
40020998:	e5900004 	ldr	r0, [r0, #4]
4002099c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400209a0:	e59f1030 	ldr	r1, [pc, #48]	; 400209d8 <CyU3PUsbReEnableUsb3+0x1a0>
400209a4:	e5810004 	str	r0, [r1, #4]
400209a8:	e1a00004 	mov	r0, r4
400209ac:	eb00051f 	bl	40021e30 <CyU3PVicEnableInterrupts>
400209b0:	e59f0034 	ldr	r0, [pc, #52]	; 400209ec <CyU3PUsbReEnableUsb3+0x1b4>
400209b4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400209b8:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
400209bc:	e59f1028 	ldr	r1, [pc, #40]	; 400209ec <CyU3PUsbReEnableUsb3+0x1b4>
400209c0:	e5810054 	str	r0, [r1, #84]	; 0x54
400209c4:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
400209c8:	e581001c 	str	r0, [r1, #28]
400209cc:	e3a00064 	mov	r0, #100	; 0x64
400209d0:	ebffca8e 	bl	40013410 <CyU3PBusyWait>
400209d4:	e8bd8010 	pop	{r4, pc}
400209d8:	e0030000 	.word	0xe0030000
400209dc:	00038081 	.word	0x00038081
400209e0:	00004a3d 	.word	0x00004a3d
400209e4:	40031d40 	.word	0x40031d40
400209e8:	40030d40 	.word	0x40030d40
400209ec:	e0033000 	.word	0xe0033000
400209f0:	00000908 	.word	0x00000908
400209f4:	40030d74 	.word	0x40030d74
400209f8:	00310418 	.word	0x00310418
400209fc:	00001006 	.word	0x00001006
40020a00:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020a04 <CyU3PUsbRegisterEventCallback>:
40020a04:	e92d4010 	push	{r4, lr}
40020a08:	e1a04000 	mov	r4, r0
40020a0c:	e59f0038 	ldr	r0, [pc, #56]	; 40020a4c <CyU3PUsbRegisterEventCallback+0x48>
40020a10:	e5804000 	str	r4, [r0]
40020a14:	e59f0034 	ldr	r0, [pc, #52]	; 40020a50 <CyU3PUsbRegisterEventCallback+0x4c>
40020a18:	e5d00008 	ldrb	r0, [r0, #8]
40020a1c:	e3500000 	cmp	r0, #0
40020a20:	0a000008 	beq	40020a48 <CyU3PUsbRegisterEventCallback+0x44>
40020a24:	e59f0028 	ldr	r0, [pc, #40]	; 40020a54 <CyU3PUsbRegisterEventCallback+0x50>
40020a28:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020a2c:	e59f101c 	ldr	r1, [pc, #28]	; 40020a50 <CyU3PUsbRegisterEventCallback+0x4c>
40020a30:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020a34:	e1100001 	tst	r0, r1
40020a38:	0a000002 	beq	40020a48 <CyU3PUsbRegisterEventCallback+0x44>
40020a3c:	e3a01000 	mov	r1, #0
40020a40:	e3a0000b 	mov	r0, #11
40020a44:	e12fff34 	blx	r4
40020a48:	e8bd8010 	pop	{r4, pc}
40020a4c:	40030d9c 	.word	0x40030d9c
40020a50:	40031d40 	.word	0x40031d40
40020a54:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020a58 <CyU3PUsbRegisterSetupCallback>:
40020a58:	e59f2050 	ldr	r2, [pc, #80]	; 40020ab0 <CyU3PUsbRegisterSetupCallback+0x58>
40020a5c:	e5820000 	str	r0, [r2]
40020a60:	e3510001 	cmp	r1, #1
40020a64:	1a000003 	bne	40020a78 <CyU3PUsbRegisterSetupCallback+0x20>
40020a68:	e3a02000 	mov	r2, #0
40020a6c:	e59f3040 	ldr	r3, [pc, #64]	; 40020ab4 <CyU3PUsbRegisterSetupCallback+0x5c>
40020a70:	e5c32007 	strb	r2, [r3, #7]
40020a74:	ea00000c 	b	40020aac <CyU3PUsbRegisterSetupCallback+0x54>
40020a78:	e3a02001 	mov	r2, #1
40020a7c:	e59f3030 	ldr	r3, [pc, #48]	; 40020ab4 <CyU3PUsbRegisterSetupCallback+0x5c>
40020a80:	e5c32007 	strb	r2, [r3, #7]
40020a84:	e2832000 	add	r2, r3, #0
40020a88:	e5d22008 	ldrb	r2, [r2, #8]
40020a8c:	e3520000 	cmp	r2, #0
40020a90:	da000005 	ble	40020aac <CyU3PUsbRegisterSetupCallback+0x54>
40020a94:	e2832000 	add	r2, r3, #0
40020a98:	e5d22008 	ldrb	r2, [r2, #8]
40020a9c:	e3520003 	cmp	r2, #3
40020aa0:	aa000001 	bge	40020aac <CyU3PUsbRegisterSetupCallback+0x54>
40020aa4:	e3a02003 	mov	r2, #3
40020aa8:	e5c32008 	strb	r2, [r3, #8]
40020aac:	e12fff1e 	bx	lr
40020ab0:	40030da0 	.word	0x40030da0
40020ab4:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbResetHandler:

40020ab8 <CyU3PUsbResetHandler>:
40020ab8:	e92d4010 	push	{r4, lr}
40020abc:	e3a00001 	mov	r0, #1
40020ac0:	e59f1124 	ldr	r1, [pc, #292]	; 40020bec <CyU3PUsbResetHandler+0x134>
40020ac4:	e5c10009 	strb	r0, [r1, #9]
40020ac8:	e59f0120 	ldr	r0, [pc, #288]	; 40020bf0 <CyU3PUsbResetHandler+0x138>
40020acc:	e5900018 	ldr	r0, [r0, #24]
40020ad0:	e59f1118 	ldr	r1, [pc, #280]	; 40020bf0 <CyU3PUsbResetHandler+0x138>
40020ad4:	e581000c 	str	r0, [r1, #12]
40020ad8:	e2810000 	add	r0, r1, #0
40020adc:	e5900014 	ldr	r0, [r0, #20]
40020ae0:	e5810010 	str	r0, [r1, #16]
40020ae4:	e59f0108 	ldr	r0, [pc, #264]	; 40020bf4 <CyU3PUsbResetHandler+0x13c>
40020ae8:	e5900000 	ldr	r0, [r0]
40020aec:	e3500000 	cmp	r0, #0
40020af0:	0a000010 	beq	40020b38 <CyU3PUsbResetHandler+0x80>
40020af4:	e59f00f0 	ldr	r0, [pc, #240]	; 40020bec <CyU3PUsbResetHandler+0x134>
40020af8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020afc:	e3500000 	cmp	r0, #0
40020b00:	1a000007 	bne	40020b24 <CyU3PUsbResetHandler+0x6c>
40020b04:	e3a01000 	mov	r1, #0
40020b08:	e1a00001 	mov	r0, r1
40020b0c:	e59f20e0 	ldr	r2, [pc, #224]	; 40020bf4 <CyU3PUsbResetHandler+0x13c>
40020b10:	e5922000 	ldr	r2, [r2]
40020b14:	e12fff32 	blx	r2
40020b18:	e3a00001 	mov	r0, #1
40020b1c:	e59f10c8 	ldr	r1, [pc, #200]	; 40020bec <CyU3PUsbResetHandler+0x134>
40020b20:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020b24:	e3a01000 	mov	r1, #0
40020b28:	e3a00004 	mov	r0, #4
40020b2c:	e59f20c0 	ldr	r2, [pc, #192]	; 40020bf4 <CyU3PUsbResetHandler+0x13c>
40020b30:	e5922000 	ldr	r2, [r2]
40020b34:	e12fff32 	blx	r2
40020b38:	e59f00b8 	ldr	r0, [pc, #184]	; 40020bf8 <CyU3PUsbResetHandler+0x140>
40020b3c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020b40:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020b44:	e59f10ac 	ldr	r1, [pc, #172]	; 40020bf8 <CyU3PUsbResetHandler+0x140>
40020b48:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020b4c:	e3a00001 	mov	r0, #1
40020b50:	ebffca2e 	bl	40013410 <CyU3PBusyWait>
40020b54:	e59f009c 	ldr	r0, [pc, #156]	; 40020bf8 <CyU3PUsbResetHandler+0x140>
40020b58:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020b5c:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020b60:	e59f1090 	ldr	r1, [pc, #144]	; 40020bf8 <CyU3PUsbResetHandler+0x140>
40020b64:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020b68:	e3a00001 	mov	r0, #1
40020b6c:	ebffca27 	bl	40013410 <CyU3PBusyWait>
40020b70:	e3a00040 	mov	r0, #64	; 0x40
40020b74:	e59f107c 	ldr	r1, [pc, #124]	; 40020bf8 <CyU3PUsbResetHandler+0x140>
40020b78:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020b7c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020b80:	e1c10000 	bic	r0, r1, r0
40020b84:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020b88:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020b8c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020b90:	e1a00001 	mov	r0, r1
40020b94:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020b98:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020b9c:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020ba0:	e3a00001 	mov	r0, #1
40020ba4:	ebfffc14 	bl	4001fbfc <CyU3PUsbEpPrepare>
40020ba8:	e59f003c 	ldr	r0, [pc, #60]	; 40020bec <CyU3PUsbResetHandler+0x134>
40020bac:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40020bb0:	e3500000 	cmp	r0, #0
40020bb4:	0a00000b 	beq	40020be8 <CyU3PUsbResetHandler+0x130>
40020bb8:	e59f002c 	ldr	r0, [pc, #44]	; 40020bec <CyU3PUsbResetHandler+0x134>
40020bbc:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020bc0:	e3500003 	cmp	r0, #3
40020bc4:	3a000002 	bcc	40020bd4 <CyU3PUsbResetHandler+0x11c>
40020bc8:	e3a00000 	mov	r0, #0
40020bcc:	e59f1018 	ldr	r1, [pc, #24]	; 40020bec <CyU3PUsbResetHandler+0x134>
40020bd0:	e581004c 	str	r0, [r1, #76]	; 0x4c
40020bd4:	e59f001c 	ldr	r0, [pc, #28]	; 40020bf8 <CyU3PUsbResetHandler+0x140>
40020bd8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020bdc:	e3100901 	tst	r0, #16384	; 0x4000
40020be0:	1a000000 	bne	40020be8 <CyU3PUsbResetHandler+0x130>
40020be4:	ebffff13 	bl	40020838 <CyU3PUsbReEnableUsb3>
40020be8:	e8bd8010 	pop	{r4, pc}
40020bec:	40031d40 	.word	0x40031d40
40020bf0:	40031f98 	.word	0x40031f98
40020bf4:	40030d9c 	.word	0x40030d9c
40020bf8:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

40020bfc <CyU3PUsbResumeHandler>:
40020bfc:	e92d4010 	push	{r4, lr}
40020c00:	e59f003c 	ldr	r0, [pc, #60]	; 40020c44 <CyU3PUsbResumeHandler+0x48>
40020c04:	e5d00008 	ldrb	r0, [r0, #8]
40020c08:	e3500005 	cmp	r0, #5
40020c0c:	ba00000b 	blt	40020c40 <CyU3PUsbResumeHandler+0x44>
40020c10:	e59f0030 	ldr	r0, [pc, #48]	; 40020c48 <CyU3PUsbResumeHandler+0x4c>
40020c14:	e5900000 	ldr	r0, [r0]
40020c18:	e3500000 	cmp	r0, #0
40020c1c:	0a000004 	beq	40020c34 <CyU3PUsbResumeHandler+0x38>
40020c20:	e3a01000 	mov	r1, #0
40020c24:	e3a00003 	mov	r0, #3
40020c28:	e59f2018 	ldr	r2, [pc, #24]	; 40020c48 <CyU3PUsbResumeHandler+0x4c>
40020c2c:	e5922000 	ldr	r2, [r2]
40020c30:	e12fff32 	blx	r2
40020c34:	e3a00006 	mov	r0, #6
40020c38:	e59f1004 	ldr	r1, [pc, #4]	; 40020c44 <CyU3PUsbResumeHandler+0x48>
40020c3c:	e5c10008 	strb	r0, [r1, #8]
40020c40:	e8bd8010 	pop	{r4, pc}
40020c44:	40031d40 	.word	0x40031d40
40020c48:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSConnecthandler:

40020c4c <CyU3PUsbSSConnecthandler>:
40020c4c:	e92d4010 	push	{r4, lr}
40020c50:	e59f01d4 	ldr	r0, [pc, #468]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020c54:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020c58:	e3100a02 	tst	r0, #8192	; 0x2000
40020c5c:	0a00002b 	beq	40020d10 <CyU3PUsbSSConnecthandler+0xc4>
40020c60:	e59f01c8 	ldr	r0, [pc, #456]	; 40020e30 <CyU3PUsbSSConnecthandler+0x1e4>
40020c64:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020c68:	e200403f 	and	r4, r0, #63	; 0x3f
40020c6c:	ea000003 	b	40020c80 <CyU3PUsbSSConnecthandler+0x34>
40020c70:	ebffa6dc 	bl	4000a7e8 <_txe_thread_relinquish>
40020c74:	e59f01b4 	ldr	r0, [pc, #436]	; 40020e30 <CyU3PUsbSSConnecthandler+0x1e4>
40020c78:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020c7c:	e200403f 	and	r4, r0, #63	; 0x3f
40020c80:	e59f01a4 	ldr	r0, [pc, #420]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020c84:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020c88:	e3100901 	tst	r0, #16384	; 0x4000
40020c8c:	0a000001 	beq	40020c98 <CyU3PUsbSSConnecthandler+0x4c>
40020c90:	e3540008 	cmp	r4, #8
40020c94:	0afffff5 	beq	40020c70 <CyU3PUsbSSConnecthandler+0x24>
40020c98:	e3540017 	cmp	r4, #23
40020c9c:	1a00000a 	bne	40020ccc <CyU3PUsbSSConnecthandler+0x80>
40020ca0:	e59f018c 	ldr	r0, [pc, #396]	; 40020e34 <CyU3PUsbSSConnecthandler+0x1e8>
40020ca4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40020ca8:	e3500000 	cmp	r0, #0
40020cac:	1a000002 	bne	40020cbc <CyU3PUsbSSConnecthandler+0x70>
40020cb0:	e3a00010 	mov	r0, #16
40020cb4:	ebfffb21 	bl	4001f940 <CyU3PUsbAddToEventLog>
40020cb8:	eb000060 	bl	40020e40 <CyU3PUsbSSDisConnecthandler>
40020cbc:	e3a00003 	mov	r0, #3
40020cc0:	e59f116c 	ldr	r1, [pc, #364]	; 40020e34 <CyU3PUsbSSConnecthandler+0x1e8>
40020cc4:	e5c10009 	strb	r0, [r1, #9]
40020cc8:	e8bd8010 	pop	{r4, pc}
40020ccc:	e59f0158 	ldr	r0, [pc, #344]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020cd0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020cd4:	e3100901 	tst	r0, #16384	; 0x4000
40020cd8:	1a000000 	bne	40020ce0 <CyU3PUsbSSConnecthandler+0x94>
40020cdc:	eafffff9 	b	40020cc8 <CyU3PUsbSSConnecthandler+0x7c>
40020ce0:	e59f0144 	ldr	r0, [pc, #324]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020ce4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020ce8:	e3800008 	orr	r0, r0, #8
40020cec:	e59f1138 	ldr	r1, [pc, #312]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020cf0:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020cf4:	e1a00001 	mov	r0, r1
40020cf8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020cfc:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
40020d00:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020d04:	e1a00001 	mov	r0, r1
40020d08:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
40020d0c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40020d10:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40020d14:	e59f111c 	ldr	r1, [pc, #284]	; 40020e38 <CyU3PUsbSSConnecthandler+0x1ec>
40020d18:	e5810008 	str	r0, [r1, #8]
40020d1c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020d20:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40020d24:	e581001c 	str	r0, [r1, #28]
40020d28:	e3a00003 	mov	r0, #3
40020d2c:	e59f1100 	ldr	r1, [pc, #256]	; 40020e34 <CyU3PUsbSSConnecthandler+0x1e8>
40020d30:	e5c10009 	strb	r0, [r1, #9]
40020d34:	e59f00f0 	ldr	r0, [pc, #240]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020d38:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d3c:	e3800902 	orr	r0, r0, #32768	; 0x8000
40020d40:	e59f10e4 	ldr	r1, [pc, #228]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020d44:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020d48:	e1a00001 	mov	r0, r1
40020d4c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020d50:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020d54:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020d58:	e3a00001 	mov	r0, #1
40020d5c:	ebffc9ab 	bl	40013410 <CyU3PBusyWait>
40020d60:	e59f00c4 	ldr	r0, [pc, #196]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020d64:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020d68:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020d6c:	e59f10b8 	ldr	r1, [pc, #184]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020d70:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020d74:	e3a00001 	mov	r0, #1
40020d78:	ebffc9a4 	bl	40013410 <CyU3PBusyWait>
40020d7c:	e3a00000 	mov	r0, #0
40020d80:	ebffeecd 	bl	4001c8bc <CyU3PUsbFlushEp>
40020d84:	e3a00080 	mov	r0, #128	; 0x80
40020d88:	ebffeecb 	bl	4001c8bc <CyU3PUsbFlushEp>
40020d8c:	e59f009c 	ldr	r0, [pc, #156]	; 40020e30 <CyU3PUsbSSConnecthandler+0x1e4>
40020d90:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40020d94:	e3800001 	orr	r0, r0, #1
40020d98:	e59f1090 	ldr	r1, [pc, #144]	; 40020e30 <CyU3PUsbSSConnecthandler+0x1e4>
40020d9c:	e5810500 	str	r0, [r1, #1280]	; 0x500
40020da0:	e3a00c02 	mov	r0, #512	; 0x200
40020da4:	e1c11200 	bic	r1, r1, r0, lsl #4
40020da8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020dac:	e1810200 	orr	r0, r1, r0, lsl #4
40020db0:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40020db4:	e3800001 	orr	r0, r0, #1
40020db8:	e2811a02 	add	r1, r1, #8192	; 0x2000
40020dbc:	e5810600 	str	r0, [r1, #1536]	; 0x600
40020dc0:	e3a00c02 	mov	r0, #512	; 0x200
40020dc4:	e1c11200 	bic	r1, r1, r0, lsl #4
40020dc8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020dcc:	e3a00000 	mov	r0, #0
40020dd0:	ebfff121 	bl	4001d25c <CyU3PUsbResetEp>
40020dd4:	e3a00000 	mov	r0, #0
40020dd8:	ebffeeb7 	bl	4001c8bc <CyU3PUsbFlushEp>
40020ddc:	e3a00080 	mov	r0, #128	; 0x80
40020de0:	ebfff11d 	bl	4001d25c <CyU3PUsbResetEp>
40020de4:	e3a00080 	mov	r0, #128	; 0x80
40020de8:	ebffeeb3 	bl	4001c8bc <CyU3PUsbFlushEp>
40020dec:	e3a00c02 	mov	r0, #512	; 0x200
40020df0:	e59f1034 	ldr	r1, [pc, #52]	; 40020e2c <CyU3PUsbSSConnecthandler+0x1e0>
40020df4:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020df8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020dfc:	e59f0038 	ldr	r0, [pc, #56]	; 40020e3c <CyU3PUsbSSConnecthandler+0x1f0>
40020e00:	e5900000 	ldr	r0, [r0]
40020e04:	e3500000 	cmp	r0, #0
40020e08:	0a000004 	beq	40020e20 <CyU3PUsbSSConnecthandler+0x1d4>
40020e0c:	e3a01001 	mov	r1, #1
40020e10:	e3a00000 	mov	r0, #0
40020e14:	e59f2020 	ldr	r2, [pc, #32]	; 40020e3c <CyU3PUsbSSConnecthandler+0x1f0>
40020e18:	e5922000 	ldr	r2, [r2]
40020e1c:	e12fff32 	blx	r2
40020e20:	e3a00003 	mov	r0, #3
40020e24:	ebfffb74 	bl	4001fbfc <CyU3PUsbEpPrepare>
40020e28:	eaffffa6 	b	40020cc8 <CyU3PUsbSSConnecthandler+0x7c>
40020e2c:	e0031000 	.word	0xe0031000
40020e30:	e0033000 	.word	0xe0033000
40020e34:	40031d40 	.word	0x40031d40
40020e38:	e0052000 	.word	0xe0052000
40020e3c:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

40020e40 <CyU3PUsbSSDisConnecthandler>:
40020e40:	e92d4010 	push	{r4, lr}
40020e44:	e59f0164 	ldr	r0, [pc, #356]	; 40020fb0 <CyU3PUsbSSDisConnecthandler+0x170>
40020e48:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020e4c:	e3500000 	cmp	r0, #0
40020e50:	0a000005 	beq	40020e6c <CyU3PUsbSSDisConnecthandler+0x2c>
40020e54:	e59f0158 	ldr	r0, [pc, #344]	; 40020fb4 <CyU3PUsbSSDisConnecthandler+0x174>
40020e58:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020e5c:	e59f114c 	ldr	r1, [pc, #332]	; 40020fb0 <CyU3PUsbSSDisConnecthandler+0x170>
40020e60:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020e64:	e1100001 	tst	r0, r1
40020e68:	0a00004e 	beq	40020fa8 <CyU3PUsbSSDisConnecthandler+0x168>
40020e6c:	e59f013c 	ldr	r0, [pc, #316]	; 40020fb0 <CyU3PUsbSSDisConnecthandler+0x170>
40020e70:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020e74:	e2800001 	add	r0, r0, #1
40020e78:	e59f1130 	ldr	r1, [pc, #304]	; 40020fb0 <CyU3PUsbSSDisConnecthandler+0x170>
40020e7c:	e5810058 	str	r0, [r1, #88]	; 0x58
40020e80:	e59f0130 	ldr	r0, [pc, #304]	; 40020fb8 <CyU3PUsbSSDisConnecthandler+0x178>
40020e84:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e88:	e3100a02 	tst	r0, #8192	; 0x2000
40020e8c:	0a000020 	beq	40020f14 <CyU3PUsbSSDisConnecthandler+0xd4>
40020e90:	e59f0120 	ldr	r0, [pc, #288]	; 40020fb8 <CyU3PUsbSSDisConnecthandler+0x178>
40020e94:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e98:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40020e9c:	e59f1114 	ldr	r1, [pc, #276]	; 40020fb8 <CyU3PUsbSSDisConnecthandler+0x178>
40020ea0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020ea4:	e3a00002 	mov	r0, #2
40020ea8:	ebffc958 	bl	40013410 <CyU3PBusyWait>
40020eac:	e59f0108 	ldr	r0, [pc, #264]	; 40020fbc <CyU3PUsbSSDisConnecthandler+0x17c>
40020eb0:	e5900004 	ldr	r0, [r0, #4]
40020eb4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020eb8:	e59f10fc 	ldr	r1, [pc, #252]	; 40020fbc <CyU3PUsbSSDisConnecthandler+0x17c>
40020ebc:	e5810004 	str	r0, [r1, #4]
40020ec0:	e3a00001 	mov	r0, #1
40020ec4:	ebffc951 	bl	40013410 <CyU3PBusyWait>
40020ec8:	e59f00f0 	ldr	r0, [pc, #240]	; 40020fc0 <CyU3PUsbSSDisConnecthandler+0x180>
40020ecc:	e590001c 	ldr	r0, [r0, #28]
40020ed0:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020ed4:	e59f10e4 	ldr	r1, [pc, #228]	; 40020fc0 <CyU3PUsbSSDisConnecthandler+0x180>
40020ed8:	e581001c 	str	r0, [r1, #28]
40020edc:	e59f00e0 	ldr	r0, [pc, #224]	; 40020fc4 <CyU3PUsbSSDisConnecthandler+0x184>
40020ee0:	e5900000 	ldr	r0, [r0]
40020ee4:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020ee8:	e3a00001 	mov	r0, #1
40020eec:	ebffc947 	bl	40013410 <CyU3PBusyWait>
40020ef0:	e59f00c4 	ldr	r0, [pc, #196]	; 40020fbc <CyU3PUsbSSDisConnecthandler+0x17c>
40020ef4:	e5900004 	ldr	r0, [r0, #4]
40020ef8:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020efc:	e59f10b8 	ldr	r1, [pc, #184]	; 40020fbc <CyU3PUsbSSDisConnecthandler+0x17c>
40020f00:	e5810004 	str	r0, [r1, #4]
40020f04:	e3a01000 	mov	r1, #0
40020f08:	e3a00002 	mov	r0, #2
40020f0c:	ebffecdf 	bl	4001c290 <CyU3PSetUsbCoreClock>
40020f10:	ea000025 	b	40020fac <CyU3PUsbSSDisConnecthandler+0x16c>
40020f14:	e3a00001 	mov	r0, #1
40020f18:	e59f1090 	ldr	r1, [pc, #144]	; 40020fb0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f1c:	e5c10009 	strb	r0, [r1, #9]
40020f20:	ebffef8c 	bl	4001cd58 <CyU3PUsbPhyDisable>
40020f24:	e59f0084 	ldr	r0, [pc, #132]	; 40020fb0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f28:	e5900078 	ldr	r0, [r0, #120]	; 0x78
40020f2c:	e3500000 	cmp	r0, #0
40020f30:	0a000019 	beq	40020f9c <CyU3PUsbSSDisConnecthandler+0x15c>
40020f34:	e59f008c 	ldr	r0, [pc, #140]	; 40020fc8 <CyU3PUsbSSDisConnecthandler+0x188>
40020f38:	e5900000 	ldr	r0, [r0]
40020f3c:	e3500000 	cmp	r0, #0
40020f40:	0a000005 	beq	40020f5c <CyU3PUsbSSDisConnecthandler+0x11c>
40020f44:	e3a00000 	mov	r0, #0
40020f48:	e59f1078 	ldr	r1, [pc, #120]	; 40020fc8 <CyU3PUsbSSDisConnecthandler+0x188>
40020f4c:	e5810000 	str	r0, [r1]
40020f50:	e3a00001 	mov	r0, #1
40020f54:	ebffeff5 	bl	4001cf30 <CyU3PUsbPhyEnable>
40020f58:	ea000013 	b	40020fac <CyU3PUsbSSDisConnecthandler+0x16c>
40020f5c:	e3a00003 	mov	r0, #3
40020f60:	e59f1048 	ldr	r1, [pc, #72]	; 40020fb0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f64:	e5c10008 	strb	r0, [r1, #8]
40020f68:	e3a00000 	mov	r0, #0
40020f6c:	e5c10009 	strb	r0, [r1, #9]
40020f70:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020f74:	e59f0050 	ldr	r0, [pc, #80]	; 40020fcc <CyU3PUsbSSDisConnecthandler+0x18c>
40020f78:	e5900000 	ldr	r0, [r0]
40020f7c:	e3500000 	cmp	r0, #0
40020f80:	0a000009 	beq	40020fac <CyU3PUsbSSDisConnecthandler+0x16c>
40020f84:	e3a01000 	mov	r1, #0
40020f88:	e3a00014 	mov	r0, #20
40020f8c:	e59f2038 	ldr	r2, [pc, #56]	; 40020fcc <CyU3PUsbSSDisConnecthandler+0x18c>
40020f90:	e5922000 	ldr	r2, [r2]
40020f94:	e12fff32 	blx	r2
40020f98:	ea000003 	b	40020fac <CyU3PUsbSSDisConnecthandler+0x16c>
40020f9c:	e3a00000 	mov	r0, #0
40020fa0:	ebffefe2 	bl	4001cf30 <CyU3PUsbPhyEnable>
40020fa4:	ea000000 	b	40020fac <CyU3PUsbSSDisConnecthandler+0x16c>
40020fa8:	ebfffa07 	bl	4001f7cc <CyU3PUibVbusChangeHandler>
40020fac:	e8bd8010 	pop	{r4, pc}
40020fb0:	40031d40 	.word	0x40031d40
40020fb4:	e0051000 	.word	0xe0051000
40020fb8:	e0031000 	.word	0xe0031000
40020fbc:	e0030000 	.word	0xe0030000
40020fc0:	e0033000 	.word	0xe0033000
40020fc4:	40030c58 	.word	0x40030c58
40020fc8:	40030d74 	.word	0x40030d74
40020fcc:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSReset:

40020fd0 <CyU3PUsbSSReset>:
40020fd0:	e92d4010 	push	{r4, lr}
40020fd4:	e3a04000 	mov	r4, #0
40020fd8:	e59f0170 	ldr	r0, [pc, #368]	; 40021150 <CyU3PUsbSSReset+0x180>
40020fdc:	e5d00009 	ldrb	r0, [r0, #9]
40020fe0:	e3500003 	cmp	r0, #3
40020fe4:	0a000000 	beq	40020fec <CyU3PUsbSSReset+0x1c>
40020fe8:	e8bd8010 	pop	{r4, pc}
40020fec:	e59f0160 	ldr	r0, [pc, #352]	; 40021154 <CyU3PUsbSSReset+0x184>
40020ff0:	e5900000 	ldr	r0, [r0]
40020ff4:	e3500000 	cmp	r0, #0
40020ff8:	0a000004 	beq	40021010 <CyU3PUsbSSReset+0x40>
40020ffc:	e3a01001 	mov	r1, #1
40021000:	e3a00004 	mov	r0, #4
40021004:	e59f2148 	ldr	r2, [pc, #328]	; 40021154 <CyU3PUsbSSReset+0x184>
40021008:	e5922000 	ldr	r2, [r2]
4002100c:	e12fff32 	blx	r2
40021010:	e59f0140 	ldr	r0, [pc, #320]	; 40021158 <CyU3PUsbSSReset+0x188>
40021014:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021018:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
4002101c:	e59f1134 	ldr	r1, [pc, #308]	; 40021158 <CyU3PUsbSSReset+0x188>
40021020:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021024:	e3a00001 	mov	r0, #1
40021028:	ebffc8f8 	bl	40013410 <CyU3PBusyWait>
4002102c:	e59f0124 	ldr	r0, [pc, #292]	; 40021158 <CyU3PUsbSSReset+0x188>
40021030:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021034:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40021038:	e59f1118 	ldr	r1, [pc, #280]	; 40021158 <CyU3PUsbSSReset+0x188>
4002103c:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021040:	e3a00001 	mov	r0, #1
40021044:	ebffc8f1 	bl	40013410 <CyU3PBusyWait>
40021048:	e3a00000 	mov	r0, #0
4002104c:	ebffee1a 	bl	4001c8bc <CyU3PUsbFlushEp>
40021050:	e3a00080 	mov	r0, #128	; 0x80
40021054:	ebffee18 	bl	4001c8bc <CyU3PUsbFlushEp>
40021058:	e59f00fc 	ldr	r0, [pc, #252]	; 4002115c <CyU3PUsbSSReset+0x18c>
4002105c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021060:	e3800001 	orr	r0, r0, #1
40021064:	e59f10f0 	ldr	r1, [pc, #240]	; 4002115c <CyU3PUsbSSReset+0x18c>
40021068:	e5810500 	str	r0, [r1, #1280]	; 0x500
4002106c:	e3a00c02 	mov	r0, #512	; 0x200
40021070:	e1c11200 	bic	r1, r1, r0, lsl #4
40021074:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021078:	e1810200 	orr	r0, r1, r0, lsl #4
4002107c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021080:	e3800001 	orr	r0, r0, #1
40021084:	e2811a02 	add	r1, r1, #8192	; 0x2000
40021088:	e5810600 	str	r0, [r1, #1536]	; 0x600
4002108c:	e3a00c02 	mov	r0, #512	; 0x200
40021090:	e1c11200 	bic	r1, r1, r0, lsl #4
40021094:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021098:	e3a00000 	mov	r0, #0
4002109c:	ebfff06e 	bl	4001d25c <CyU3PUsbResetEp>
400210a0:	e3a00000 	mov	r0, #0
400210a4:	ebffee04 	bl	4001c8bc <CyU3PUsbFlushEp>
400210a8:	e3a00080 	mov	r0, #128	; 0x80
400210ac:	ebfff06a 	bl	4001d25c <CyU3PUsbResetEp>
400210b0:	e3a00080 	mov	r0, #128	; 0x80
400210b4:	ebffee00 	bl	4001c8bc <CyU3PUsbFlushEp>
400210b8:	e3a00c02 	mov	r0, #512	; 0x200
400210bc:	e59f1094 	ldr	r1, [pc, #148]	; 40021158 <CyU3PUsbSSReset+0x188>
400210c0:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400210c4:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400210c8:	e3a04001 	mov	r4, #1
400210cc:	ea000019 	b	40021138 <CyU3PUsbSSReset+0x168>
400210d0:	e0840084 	add	r0, r4, r4, lsl #1
400210d4:	e59f1084 	ldr	r1, [pc, #132]	; 40021160 <CyU3PUsbSSReset+0x190>
400210d8:	e0810100 	add	r0, r1, r0, lsl #2
400210dc:	e5900004 	ldr	r0, [r0, #4]
400210e0:	e3500001 	cmp	r0, #1
400210e4:	1a000005 	bne	40021100 <CyU3PUsbSSReset+0x130>
400210e8:	e3840080 	orr	r0, r4, #128	; 0x80
400210ec:	ebffedf2 	bl	4001c8bc <CyU3PUsbFlushEp>
400210f0:	e3840080 	orr	r0, r4, #128	; 0x80
400210f4:	e3a02001 	mov	r2, #1
400210f8:	e3a01000 	mov	r1, #0
400210fc:	ebfff2ba 	bl	4001dbec <CyU3PUsbStall>
40021100:	e0840084 	add	r0, r4, r4, lsl #1
40021104:	e59f1058 	ldr	r1, [pc, #88]	; 40021164 <CyU3PUsbSSReset+0x194>
40021108:	e0810100 	add	r0, r1, r0, lsl #2
4002110c:	e5900004 	ldr	r0, [r0, #4]
40021110:	e3500001 	cmp	r0, #1
40021114:	1a000005 	bne	40021130 <CyU3PUsbSSReset+0x160>
40021118:	e1a00004 	mov	r0, r4
4002111c:	ebffede6 	bl	4001c8bc <CyU3PUsbFlushEp>
40021120:	e3a02001 	mov	r2, #1
40021124:	e3a01000 	mov	r1, #0
40021128:	e1a00004 	mov	r0, r4
4002112c:	ebfff2ae 	bl	4001dbec <CyU3PUsbStall>
40021130:	e2840001 	add	r0, r4, #1
40021134:	e20040ff 	and	r4, r0, #255	; 0xff
40021138:	e3540010 	cmp	r4, #16
4002113c:	baffffe3 	blt	400210d0 <CyU3PUsbSSReset+0x100>
40021140:	e3a00005 	mov	r0, #5
40021144:	e59f1004 	ldr	r1, [pc, #4]	; 40021150 <CyU3PUsbSSReset+0x180>
40021148:	e5c10008 	strb	r0, [r1, #8]
4002114c:	eaffffa5 	b	40020fe8 <CyU3PUsbSSReset+0x18>
40021150:	40031d40 	.word	0x40031d40
40021154:	40030d9c 	.word	0x40030d9c
40021158:	e0031000 	.word	0xe0031000
4002115c:	e0033000 	.word	0xe0033000
40021160:	40031bb8 	.word	0x40031bb8
40021164:	40031c78 	.word	0x40031c78

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

40021168 <CyU3PUsbSendCompliancePatterns>:
40021168:	e92d4070 	push	{r4, r5, r6, lr}
4002116c:	e3a04001 	mov	r4, #1
40021170:	e59f01ec 	ldr	r0, [pc, #492]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021174:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021178:	e200503f 	and	r5, r0, #63	; 0x3f
4002117c:	e3550017 	cmp	r5, #23
40021180:	0a000000 	beq	40021188 <CyU3PUsbSendCompliancePatterns+0x20>
40021184:	e8bd8070 	pop	{r4, r5, r6, pc}
40021188:	e3a00003 	mov	r0, #3
4002118c:	e59f11d4 	ldr	r1, [pc, #468]	; 40021368 <CyU3PUsbSendCompliancePatterns+0x200>
40021190:	e5c10009 	strb	r0, [r1, #9]
40021194:	e3a00001 	mov	r0, #1
40021198:	e5810064 	str	r0, [r1, #100]	; 0x64
4002119c:	e3a00000 	mov	r0, #0
400211a0:	e5810060 	str	r0, [r1, #96]	; 0x60
400211a4:	e3a00d57 	mov	r0, #5568	; 0x15c0
400211a8:	e59f11b4 	ldr	r1, [pc, #436]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
400211ac:	e5810054 	str	r0, [r1, #84]	; 0x54
400211b0:	e59f01b4 	ldr	r0, [pc, #436]	; 4002136c <CyU3PUsbSendCompliancePatterns+0x204>
400211b4:	e5900000 	ldr	r0, [r0]
400211b8:	e3500000 	cmp	r0, #0
400211bc:	0a000004 	beq	400211d4 <CyU3PUsbSendCompliancePatterns+0x6c>
400211c0:	e3a01000 	mov	r1, #0
400211c4:	e3a00015 	mov	r0, #21
400211c8:	e59f219c 	ldr	r2, [pc, #412]	; 4002136c <CyU3PUsbSendCompliancePatterns+0x204>
400211cc:	e5922000 	ldr	r2, [r2]
400211d0:	e12fff32 	blx	r2
400211d4:	e1a00000 	nop			; (mov r0, r0)
400211d8:	e59f0184 	ldr	r0, [pc, #388]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
400211dc:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400211e0:	e3100002 	tst	r0, #2
400211e4:	0a000031 	beq	400212b0 <CyU3PUsbSendCompliancePatterns+0x148>
400211e8:	e59f0180 	ldr	r0, [pc, #384]	; 40021370 <CyU3PUsbSendCompliancePatterns+0x208>
400211ec:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400211f0:	e59f116c 	ldr	r1, [pc, #364]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
400211f4:	e5810138 	str	r0, [r1, #312]	; 0x138
400211f8:	e3a00001 	mov	r0, #1
400211fc:	ebff9dc8 	bl	40008924 <_tx_thread_sleep>
40021200:	e59f015c 	ldr	r0, [pc, #348]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021204:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021208:	e3c00002 	bic	r0, r0, #2
4002120c:	e59f1150 	ldr	r1, [pc, #336]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021210:	e5810064 	str	r0, [r1, #100]	; 0x64
40021214:	e3540004 	cmp	r4, #4
40021218:	1a000020 	bne	400212a0 <CyU3PUsbSendCompliancePatterns+0x138>
4002121c:	ea00000d 	b	40021258 <CyU3PUsbSendCompliancePatterns+0xf0>
40021220:	e59f013c 	ldr	r0, [pc, #316]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021224:	e590001c 	ldr	r0, [r0, #28]
40021228:	e3800008 	orr	r0, r0, #8
4002122c:	e59f1130 	ldr	r1, [pc, #304]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021230:	e581001c 	str	r0, [r1, #28]
40021234:	e3a0000a 	mov	r0, #10
40021238:	ebffc874 	bl	40013410 <CyU3PBusyWait>
4002123c:	e59f0120 	ldr	r0, [pc, #288]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021240:	e590001c 	ldr	r0, [r0, #28]
40021244:	e3c00008 	bic	r0, r0, #8
40021248:	e59f1114 	ldr	r1, [pc, #276]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002124c:	e581001c 	str	r0, [r1, #28]
40021250:	e3a0001e 	mov	r0, #30
40021254:	ebffc86d 	bl	40013410 <CyU3PBusyWait>
40021258:	e59f0104 	ldr	r0, [pc, #260]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002125c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021260:	e3100006 	tst	r0, #6
40021264:	1a00000d 	bne	400212a0 <CyU3PUsbSendCompliancePatterns+0x138>
40021268:	e59f00f8 	ldr	r0, [pc, #248]	; 40021368 <CyU3PUsbSendCompliancePatterns+0x200>
4002126c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021270:	e3500000 	cmp	r0, #0
40021274:	0a000005 	beq	40021290 <CyU3PUsbSendCompliancePatterns+0x128>
40021278:	e59f00f4 	ldr	r0, [pc, #244]	; 40021374 <CyU3PUsbSendCompliancePatterns+0x20c>
4002127c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021280:	e59f10e0 	ldr	r1, [pc, #224]	; 40021368 <CyU3PUsbSendCompliancePatterns+0x200>
40021284:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021288:	e1100001 	tst	r0, r1
4002128c:	0a000003 	beq	400212a0 <CyU3PUsbSendCompliancePatterns+0x138>
40021290:	e59f00d0 	ldr	r0, [pc, #208]	; 40021368 <CyU3PUsbSendCompliancePatterns+0x200>
40021294:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021298:	e3500000 	cmp	r0, #0
4002129c:	0affffdf 	beq	40021220 <CyU3PUsbSendCompliancePatterns+0xb8>
400212a0:	e3a01009 	mov	r1, #9
400212a4:	e2840001 	add	r0, r4, #1
400212a8:	ebffbddb 	bl	40010a1c <__aeabi_idivmod>
400212ac:	e20140ff 	and	r4, r1, #255	; 0xff
400212b0:	e59f00ac 	ldr	r0, [pc, #172]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
400212b4:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400212b8:	e3100004 	tst	r0, #4
400212bc:	1a00000d 	bne	400212f8 <CyU3PUsbSendCompliancePatterns+0x190>
400212c0:	e59f00a0 	ldr	r0, [pc, #160]	; 40021368 <CyU3PUsbSendCompliancePatterns+0x200>
400212c4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400212c8:	e3500000 	cmp	r0, #0
400212cc:	0a000005 	beq	400212e8 <CyU3PUsbSendCompliancePatterns+0x180>
400212d0:	e59f009c 	ldr	r0, [pc, #156]	; 40021374 <CyU3PUsbSendCompliancePatterns+0x20c>
400212d4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400212d8:	e59f1088 	ldr	r1, [pc, #136]	; 40021368 <CyU3PUsbSendCompliancePatterns+0x200>
400212dc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400212e0:	e1100001 	tst	r0, r1
400212e4:	0a000003 	beq	400212f8 <CyU3PUsbSendCompliancePatterns+0x190>
400212e8:	e59f0078 	ldr	r0, [pc, #120]	; 40021368 <CyU3PUsbSendCompliancePatterns+0x200>
400212ec:	e5900060 	ldr	r0, [r0, #96]	; 0x60
400212f0:	e3500001 	cmp	r0, #1
400212f4:	1a000009 	bne	40021320 <CyU3PUsbSendCompliancePatterns+0x1b8>
400212f8:	e59f0064 	ldr	r0, [pc, #100]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
400212fc:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021300:	e3c00004 	bic	r0, r0, #4
40021304:	e59f1058 	ldr	r1, [pc, #88]	; 40021364 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021308:	e5810064 	str	r0, [r1, #100]	; 0x64
4002130c:	e3a00c06 	mov	r0, #1536	; 0x600
40021310:	e5810138 	str	r0, [r1, #312]	; 0x138
40021314:	e3a00000 	mov	r0, #0
40021318:	e5810054 	str	r0, [r1, #84]	; 0x54
4002131c:	ea000002 	b	4002132c <CyU3PUsbSendCompliancePatterns+0x1c4>
40021320:	e3a00001 	mov	r0, #1
40021324:	ebff9d7e 	bl	40008924 <_tx_thread_sleep>
40021328:	eaffffaa 	b	400211d8 <CyU3PUsbSendCompliancePatterns+0x70>
4002132c:	e1a00000 	nop			; (mov r0, r0)
40021330:	e59f0034 	ldr	r0, [pc, #52]	; 4002136c <CyU3PUsbSendCompliancePatterns+0x204>
40021334:	e5900000 	ldr	r0, [r0]
40021338:	e3500000 	cmp	r0, #0
4002133c:	0a000004 	beq	40021354 <CyU3PUsbSendCompliancePatterns+0x1ec>
40021340:	e3a01000 	mov	r1, #0
40021344:	e3a00016 	mov	r0, #22
40021348:	e59f201c 	ldr	r2, [pc, #28]	; 4002136c <CyU3PUsbSendCompliancePatterns+0x204>
4002134c:	e5922000 	ldr	r2, [r2]
40021350:	e12fff32 	blx	r2
40021354:	e3a00000 	mov	r0, #0
40021358:	e59f1008 	ldr	r1, [pc, #8]	; 40021368 <CyU3PUsbSendCompliancePatterns+0x200>
4002135c:	e5810064 	str	r0, [r1, #100]	; 0x64
40021360:	eaffff87 	b	40021184 <CyU3PUsbSendCompliancePatterns+0x1c>
40021364:	e0033000 	.word	0xe0033000
40021368:	40031d40 	.word	0x40031d40
4002136c:	40030d9c 	.word	0x40030d9c
40021370:	40011d7c 	.word	0x40011d7c
40021374:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

40021378 <CyU3PUsbSetupCommand>:
40021378:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4002137c:	e3a06000 	mov	r6, #0
40021380:	e3a07000 	mov	r7, #0
40021384:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021388:	e5d00009 	ldrb	r0, [r0, #9]
4002138c:	e3500003 	cmp	r0, #3
40021390:	1a00001a 	bne	40021400 <CyU3PUsbSetupCommand+0x88>
40021394:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021b50 <CyU3PUsbSetupCommand+0x7d8>
40021398:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
4002139c:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
400213a0:	e3a00001 	mov	r0, #1
400213a4:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
400213a8:	e5810050 	str	r0, [r1, #80]	; 0x50
400213ac:	e3a00000 	mov	r0, #0
400213b0:	e59f179c 	ldr	r1, [pc, #1948]	; 40021b54 <CyU3PUsbSetupCommand+0x7dc>
400213b4:	e5810000 	str	r0, [r1]
400213b8:	e59f0798 	ldr	r0, [pc, #1944]	; 40021b58 <CyU3PUsbSetupCommand+0x7e0>
400213bc:	ebffa5ca 	bl	4000aaec <_txe_timer_deactivate>
400213c0:	e3a00b02 	mov	r0, #2048	; 0x800
400213c4:	e59f1784 	ldr	r1, [pc, #1924]	; 40021b50 <CyU3PUsbSetupCommand+0x7d8>
400213c8:	e5810404 	str	r0, [r1, #1028]	; 0x404
400213cc:	e1c10000 	bic	r0, r1, r0
400213d0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400213d4:	e200603f 	and	r6, r0, #63	; 0x3f
400213d8:	e3560011 	cmp	r6, #17
400213dc:	0a000001 	beq	400213e8 <CyU3PUsbSetupCommand+0x70>
400213e0:	e3560012 	cmp	r6, #18
400213e4:	1a000003 	bne	400213f8 <CyU3PUsbSetupCommand+0x80>
400213e8:	e3a02000 	mov	r2, #0
400213ec:	e3a01401 	mov	r1, #16777216	; 0x1000000
400213f0:	e59f0764 	ldr	r0, [pc, #1892]	; 40021b5c <CyU3PUsbSetupCommand+0x7e4>
400213f4:	ebffa242 	bl	40009d04 <_txe_event_flags_set>
400213f8:	e3a06000 	mov	r6, #0
400213fc:	ea00000d 	b	40021438 <CyU3PUsbSetupCommand+0xc0>
40021400:	e59f0744 	ldr	r0, [pc, #1860]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021404:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40021408:	e3500000 	cmp	r0, #0
4002140c:	0a000006 	beq	4002142c <CyU3PUsbSetupCommand+0xb4>
40021410:	e59f0734 	ldr	r0, [pc, #1844]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021414:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021418:	e3500003 	cmp	r0, #3
4002141c:	2a000002 	bcs	4002142c <CyU3PUsbSetupCommand+0xb4>
40021420:	e3a00001 	mov	r0, #1
40021424:	e59f1720 	ldr	r1, [pc, #1824]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021428:	e581004c 	str	r0, [r1, #76]	; 0x4c
4002142c:	e59f072c 	ldr	r0, [pc, #1836]	; 40021b60 <CyU3PUsbSetupCommand+0x7e8>
40021430:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
40021434:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
40021438:	e3a01064 	mov	r1, #100	; 0x64
4002143c:	e59f0720 	ldr	r0, [pc, #1824]	; 40021b64 <CyU3PUsbSetupCommand+0x7ec>
40021440:	ebffd5fd 	bl	40016c3c <CyU3PDmaChannelWaitForCompletion>
40021444:	e1a06000 	mov	r6, r0
40021448:	e3560000 	cmp	r6, #0
4002144c:	0a00000b 	beq	40021480 <CyU3PUsbSetupCommand+0x108>
40021450:	e3560042 	cmp	r6, #66	; 0x42
40021454:	0a000009 	beq	40021480 <CyU3PUsbSetupCommand+0x108>
40021458:	e3a01001 	mov	r1, #1
4002145c:	e3a00000 	mov	r0, #0
40021460:	ebfff11b 	bl	4001d8d4 <CyU3PUsbSetEpNak>
40021464:	e3a00064 	mov	r0, #100	; 0x64
40021468:	ebffc7e8 	bl	40013410 <CyU3PBusyWait>
4002146c:	e59f06f0 	ldr	r0, [pc, #1776]	; 40021b64 <CyU3PUsbSetupCommand+0x7ec>
40021470:	ebffd320 	bl	400160f8 <CyU3PDmaChannelReset>
40021474:	e3a01000 	mov	r1, #0
40021478:	e1a00001 	mov	r0, r1
4002147c:	ebfff114 	bl	4001d8d4 <CyU3PUsbSetEpNak>
40021480:	e3a01064 	mov	r1, #100	; 0x64
40021484:	e59f06dc 	ldr	r0, [pc, #1756]	; 40021b68 <CyU3PUsbSetupCommand+0x7f0>
40021488:	ebffd5eb 	bl	40016c3c <CyU3PDmaChannelWaitForCompletion>
4002148c:	e1a06000 	mov	r6, r0
40021490:	e3560000 	cmp	r6, #0
40021494:	0a00000d 	beq	400214d0 <CyU3PUsbSetupCommand+0x158>
40021498:	e3560042 	cmp	r6, #66	; 0x42
4002149c:	0a00000b 	beq	400214d0 <CyU3PUsbSetupCommand+0x158>
400214a0:	e3a01001 	mov	r1, #1
400214a4:	e3a00080 	mov	r0, #128	; 0x80
400214a8:	ebfff109 	bl	4001d8d4 <CyU3PUsbSetEpNak>
400214ac:	e3a00064 	mov	r0, #100	; 0x64
400214b0:	ebffc7d6 	bl	40013410 <CyU3PBusyWait>
400214b4:	e59f06ac 	ldr	r0, [pc, #1708]	; 40021b68 <CyU3PUsbSetupCommand+0x7f0>
400214b8:	ebffd30e 	bl	400160f8 <CyU3PDmaChannelReset>
400214bc:	e3a00080 	mov	r0, #128	; 0x80
400214c0:	ebffecfd 	bl	4001c8bc <CyU3PUsbFlushEp>
400214c4:	e3a01000 	mov	r1, #0
400214c8:	e3a00080 	mov	r0, #128	; 0x80
400214cc:	ebfff100 	bl	4001d8d4 <CyU3PUsbSetEpNak>
400214d0:	e3a06000 	mov	r6, #0
400214d4:	e20490ff 	and	r9, r4, #255	; 0xff
400214d8:	e209a060 	and	sl, r9, #96	; 0x60
400214dc:	e2090003 	and	r0, r9, #3
400214e0:	e58d0008 	str	r0, [sp, #8]
400214e4:	e2040cff 	and	r0, r4, #65280	; 0xff00
400214e8:	e1a08420 	lsr	r8, r0, #8
400214ec:	e59f0678 	ldr	r0, [pc, #1656]	; 40021b6c <CyU3PUsbSetupCommand+0x7f4>
400214f0:	e000b824 	and	fp, r0, r4, lsr #16
400214f4:	e0050000 	and	r0, r5, r0
400214f8:	e58d0004 	str	r0, [sp, #4]
400214fc:	e59f0668 	ldr	r0, [pc, #1640]	; 40021b6c <CyU3PUsbSetupCommand+0x7f4>
40021500:	e0000825 	and	r0, r0, r5, lsr #16
40021504:	e58d0000 	str	r0, [sp]
40021508:	e3140080 	tst	r4, #128	; 0x80
4002150c:	0a000003 	beq	40021520 <CyU3PUsbSetupCommand+0x1a8>
40021510:	e59d0000 	ldr	r0, [sp]
40021514:	e59f1644 	ldr	r1, [pc, #1604]	; 40021b60 <CyU3PUsbSetupCommand+0x7e8>
40021518:	e5810458 	str	r0, [r1, #1112]	; 0x458
4002151c:	ea000002 	b	4002152c <CyU3PUsbSetupCommand+0x1b4>
40021520:	e59d0000 	ldr	r0, [sp]
40021524:	e59f1634 	ldr	r1, [pc, #1588]	; 40021b60 <CyU3PUsbSetupCommand+0x7e8>
40021528:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
4002152c:	e3a00000 	mov	r0, #0
40021530:	e59f1614 	ldr	r1, [pc, #1556]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021534:	e5810040 	str	r0, [r1, #64]	; 0x40
40021538:	e59f0620 	ldr	r0, [pc, #1568]	; 40021b60 <CyU3PUsbSetupCommand+0x7e8>
4002153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021540:	e3c00008 	bic	r0, r0, #8
40021544:	e59f1614 	ldr	r1, [pc, #1556]	; 40021b60 <CyU3PUsbSetupCommand+0x7e8>
40021548:	e5810518 	str	r0, [r1, #1304]	; 0x518
4002154c:	e3a00000 	mov	r0, #0
40021550:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021554:	e5810018 	str	r0, [r1, #24]
40021558:	e5810070 	str	r0, [r1, #112]	; 0x70
4002155c:	e59f05fc 	ldr	r0, [pc, #1532]	; 40021b60 <CyU3PUsbSetupCommand+0x7e8>
40021560:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021564:	e3800008 	orr	r0, r0, #8
40021568:	e59f15f0 	ldr	r1, [pc, #1520]	; 40021b60 <CyU3PUsbSetupCommand+0x7e8>
4002156c:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021570:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021574:	e5d00007 	ldrb	r0, [r0, #7]
40021578:	e3500001 	cmp	r0, #1
4002157c:	0a000001 	beq	40021588 <CyU3PUsbSetupCommand+0x210>
40021580:	e35a0000 	cmp	sl, #0
40021584:	0a000024 	beq	4002161c <CyU3PUsbSetupCommand+0x2a4>
40021588:	e35a0000 	cmp	sl, #0
4002158c:	1a000012 	bne	400215dc <CyU3PUsbSetupCommand+0x264>
40021590:	e3580009 	cmp	r8, #9
40021594:	1a000010 	bne	400215dc <CyU3PUsbSetupCommand+0x264>
40021598:	e35b0001 	cmp	fp, #1
4002159c:	1a00000b 	bne	400215d0 <CyU3PUsbSetupCommand+0x258>
400215a0:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
400215a4:	e5d10009 	ldrb	r0, [r1, #9]
400215a8:	ebfff993 	bl	4001fbfc <CyU3PUsbEpPrepare>
400215ac:	e3a00006 	mov	r0, #6
400215b0:	e59f1594 	ldr	r1, [pc, #1428]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
400215b4:	e5c10008 	strb	r0, [r1, #8]
400215b8:	e5c1b00c 	strb	fp, [r1, #12]
400215bc:	e2810000 	add	r0, r1, #0
400215c0:	e5d00006 	ldrb	r0, [r0, #6]
400215c4:	e2000001 	and	r0, r0, #1
400215c8:	e5c10006 	strb	r0, [r1, #6]
400215cc:	ea000002 	b	400215dc <CyU3PUsbSetupCommand+0x264>
400215d0:	e3a00005 	mov	r0, #5
400215d4:	e59f1570 	ldr	r1, [pc, #1392]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
400215d8:	e5c10008 	strb	r0, [r1, #8]
400215dc:	e59f058c 	ldr	r0, [pc, #1420]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
400215e0:	e5900000 	ldr	r0, [r0]
400215e4:	e3500000 	cmp	r0, #0
400215e8:	0a000005 	beq	40021604 <CyU3PUsbSetupCommand+0x28c>
400215ec:	e1a01005 	mov	r1, r5
400215f0:	e1a00004 	mov	r0, r4
400215f4:	e59f2574 	ldr	r2, [pc, #1396]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
400215f8:	e5922000 	ldr	r2, [r2]
400215fc:	e12fff32 	blx	r2
40021600:	e1a07000 	mov	r7, r0
40021604:	e3570001 	cmp	r7, #1
40021608:	1a000003 	bne	4002161c <CyU3PUsbSetupCommand+0x2a4>
4002160c:	e3a00001 	mov	r0, #1
40021610:	e59f1534 	ldr	r1, [pc, #1332]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021614:	e5810040 	str	r0, [r1, #64]	; 0x40
40021618:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4002161c:	e35a0000 	cmp	sl, #0
40021620:	1a000140 	bne	40021b28 <CyU3PUsbSetupCommand+0x7b0>
40021624:	e3580009 	cmp	r8, #9
40021628:	0a0000b1 	beq	400218f4 <CyU3PUsbSetupCommand+0x57c>
4002162c:	ca00000b 	bgt	40021660 <CyU3PUsbSetupCommand+0x2e8>
40021630:	e3580009 	cmp	r8, #9
40021634:	308ff108 	addcc	pc, pc, r8, lsl #2
40021638:	ea000137 	b	40021b1c <CyU3PUsbSetupCommand+0x7a4>
4002163c:	ea000014 	b	40021694 <CyU3PUsbSetupCommand+0x31c>
40021640:	ea000029 	b	400216ec <CyU3PUsbSetupCommand+0x374>
40021644:	ea000134 	b	40021b1c <CyU3PUsbSetupCommand+0x7a4>
40021648:	ea000057 	b	400217ac <CyU3PUsbSetupCommand+0x434>
4002164c:	ea000132 	b	40021b1c <CyU3PUsbSetupCommand+0x7a4>
40021650:	ea000131 	b	40021b1c <CyU3PUsbSetupCommand+0x7a4>
40021654:	ea000099 	b	400218c0 <CyU3PUsbSetupCommand+0x548>
40021658:	ea00012f 	b	40021b1c <CyU3PUsbSetupCommand+0x7a4>
4002165c:	ea00009d 	b	400218d8 <CyU3PUsbSetupCommand+0x560>
40021660:	e358000c 	cmp	r8, #12
40021664:	0a0000fb 	beq	40021a58 <CyU3PUsbSetupCommand+0x6e0>
40021668:	ca000004 	bgt	40021680 <CyU3PUsbSetupCommand+0x308>
4002166c:	e358000a 	cmp	r8, #10
40021670:	0a0000c5 	beq	4002198c <CyU3PUsbSetupCommand+0x614>
40021674:	e358000b 	cmp	r8, #11
40021678:	1a000127 	bne	40021b1c <CyU3PUsbSetupCommand+0x7a4>
4002167c:	ea0000d6 	b	400219dc <CyU3PUsbSetupCommand+0x664>
40021680:	e3580030 	cmp	r8, #48	; 0x30
40021684:	0a0000f7 	beq	40021a68 <CyU3PUsbSetupCommand+0x6f0>
40021688:	e3580031 	cmp	r8, #49	; 0x31
4002168c:	1a000122 	bne	40021b1c <CyU3PUsbSetupCommand+0x7a4>
40021690:	ea000114 	b	40021ae8 <CyU3PUsbSetupCommand+0x770>
40021694:	e1a00000 	nop			; (mov r0, r0)
40021698:	e59d0008 	ldr	r0, [sp, #8]
4002169c:	e3500001 	cmp	r0, #1
400216a0:	1a00000c 	bne	400216d8 <CyU3PUsbSetupCommand+0x360>
400216a4:	e59f04c4 	ldr	r0, [pc, #1220]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
400216a8:	e5900000 	ldr	r0, [r0]
400216ac:	e3500000 	cmp	r0, #0
400216b0:	0a000008 	beq	400216d8 <CyU3PUsbSetupCommand+0x360>
400216b4:	e1a01005 	mov	r1, r5
400216b8:	e1a00004 	mov	r0, r4
400216bc:	e59f24ac 	ldr	r2, [pc, #1196]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
400216c0:	e5922000 	ldr	r2, [r2]
400216c4:	e12fff32 	blx	r2
400216c8:	e1a07000 	mov	r7, r0
400216cc:	e3570000 	cmp	r7, #0
400216d0:	0a000000 	beq	400216d8 <CyU3PUsbSetupCommand+0x360>
400216d4:	ea000112 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400216d8:	e59d0008 	ldr	r0, [sp, #8]
400216dc:	e59d1004 	ldr	r1, [sp, #4]
400216e0:	ebfffbd3 	bl	40020634 <CyU3PUsbHandleGetStatus>
400216e4:	e1a07000 	mov	r7, r0
400216e8:	ea00010d 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400216ec:	e1a00000 	nop			; (mov r0, r0)
400216f0:	e59d0008 	ldr	r0, [sp, #8]
400216f4:	e3500000 	cmp	r0, #0
400216f8:	1a000002 	bne	40021708 <CyU3PUsbSetupCommand+0x390>
400216fc:	e20b00ff 	and	r0, fp, #255	; 0xff
40021700:	ebfffa86 	bl	40020120 <CyU3PUsbHandleClearFeature>
40021704:	eaffffc3 	b	40021618 <CyU3PUsbSetupCommand+0x2a0>
40021708:	e3a07000 	mov	r7, #0
4002170c:	e59f0438 	ldr	r0, [pc, #1080]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021710:	e5d00007 	ldrb	r0, [r0, #7]
40021714:	e3500000 	cmp	r0, #0
40021718:	1a00000e 	bne	40021758 <CyU3PUsbSetupCommand+0x3e0>
4002171c:	e59f044c 	ldr	r0, [pc, #1100]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
40021720:	e5900000 	ldr	r0, [r0]
40021724:	e3500000 	cmp	r0, #0
40021728:	0a00000a 	beq	40021758 <CyU3PUsbSetupCommand+0x3e0>
4002172c:	e1a01005 	mov	r1, r5
40021730:	e1a00004 	mov	r0, r4
40021734:	e59f2434 	ldr	r2, [pc, #1076]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
40021738:	e5922000 	ldr	r2, [r2]
4002173c:	e12fff32 	blx	r2
40021740:	e1a07000 	mov	r7, r0
40021744:	e3570000 	cmp	r7, #0
40021748:	0a000002 	beq	40021758 <CyU3PUsbSetupCommand+0x3e0>
4002174c:	e3a00001 	mov	r0, #1
40021750:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021754:	e5810040 	str	r0, [r1, #64]	; 0x40
40021758:	e3570000 	cmp	r7, #0
4002175c:	1a000011 	bne	400217a8 <CyU3PUsbSetupCommand+0x430>
40021760:	e59d0008 	ldr	r0, [sp, #8]
40021764:	e3500002 	cmp	r0, #2
40021768:	1a00000e 	bne	400217a8 <CyU3PUsbSetupCommand+0x430>
4002176c:	e35b0000 	cmp	fp, #0
40021770:	1a00000c 	bne	400217a8 <CyU3PUsbSetupCommand+0x430>
40021774:	e59d1004 	ldr	r1, [sp, #4]
40021778:	e20100ff 	and	r0, r1, #255	; 0xff
4002177c:	e3a02001 	mov	r2, #1
40021780:	e3a01000 	mov	r1, #0
40021784:	ebfff118 	bl	4001dbec <CyU3PUsbStall>
40021788:	e3500000 	cmp	r0, #0
4002178c:	1a000005 	bne	400217a8 <CyU3PUsbSetupCommand+0x430>
40021790:	e59d1004 	ldr	r1, [sp, #4]
40021794:	e20100ff 	and	r0, r1, #255	; 0xff
40021798:	ebffeeaf 	bl	4001d25c <CyU3PUsbResetEp>
4002179c:	ebffeb4e 	bl	4001c4dc <CyU3PUsbAckSetup>
400217a0:	e3a07001 	mov	r7, #1
400217a4:	ea0000de 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400217a8:	ea0000dd 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400217ac:	e1a00000 	nop			; (mov r0, r0)
400217b0:	e59d0008 	ldr	r0, [sp, #8]
400217b4:	e3500000 	cmp	r0, #0
400217b8:	1a00001b 	bne	4002182c <CyU3PUsbSetupCommand+0x4b4>
400217bc:	e35b0003 	cmp	fp, #3
400217c0:	0a000004 	beq	400217d8 <CyU3PUsbSetupCommand+0x460>
400217c4:	e35b0004 	cmp	fp, #4
400217c8:	0a000002 	beq	400217d8 <CyU3PUsbSetupCommand+0x460>
400217cc:	e20b00ff 	and	r0, fp, #255	; 0xff
400217d0:	ebfffbd5 	bl	4002072c <CyU3PUsbHandleSetFeature>
400217d4:	eaffff8f 	b	40021618 <CyU3PUsbSetupCommand+0x2a0>
400217d8:	e59f036c 	ldr	r0, [pc, #876]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
400217dc:	e5d00007 	ldrb	r0, [r0, #7]
400217e0:	e3500000 	cmp	r0, #0
400217e4:	1a00000f 	bne	40021828 <CyU3PUsbSetupCommand+0x4b0>
400217e8:	e59f0380 	ldr	r0, [pc, #896]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
400217ec:	e5900000 	ldr	r0, [r0]
400217f0:	e3500000 	cmp	r0, #0
400217f4:	0a00000b 	beq	40021828 <CyU3PUsbSetupCommand+0x4b0>
400217f8:	e1a01005 	mov	r1, r5
400217fc:	e1a00004 	mov	r0, r4
40021800:	e59f2368 	ldr	r2, [pc, #872]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
40021804:	e5922000 	ldr	r2, [r2]
40021808:	e12fff32 	blx	r2
4002180c:	e1a07000 	mov	r7, r0
40021810:	e3570000 	cmp	r7, #0
40021814:	0a000003 	beq	40021828 <CyU3PUsbSetupCommand+0x4b0>
40021818:	e3a00001 	mov	r0, #1
4002181c:	e59f1328 	ldr	r1, [pc, #808]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021820:	e5810040 	str	r0, [r1, #64]	; 0x40
40021824:	eaffff7b 	b	40021618 <CyU3PUsbSetupCommand+0x2a0>
40021828:	ea0000bd 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
4002182c:	e3a07000 	mov	r7, #0
40021830:	e59f0314 	ldr	r0, [pc, #788]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021834:	e5d00007 	ldrb	r0, [r0, #7]
40021838:	e3500000 	cmp	r0, #0
4002183c:	1a00000e 	bne	4002187c <CyU3PUsbSetupCommand+0x504>
40021840:	e59f0328 	ldr	r0, [pc, #808]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
40021844:	e5900000 	ldr	r0, [r0]
40021848:	e3500000 	cmp	r0, #0
4002184c:	0a00000a 	beq	4002187c <CyU3PUsbSetupCommand+0x504>
40021850:	e1a01005 	mov	r1, r5
40021854:	e1a00004 	mov	r0, r4
40021858:	e59f2310 	ldr	r2, [pc, #784]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
4002185c:	e5922000 	ldr	r2, [r2]
40021860:	e12fff32 	blx	r2
40021864:	e1a07000 	mov	r7, r0
40021868:	e3570000 	cmp	r7, #0
4002186c:	0a000002 	beq	4002187c <CyU3PUsbSetupCommand+0x504>
40021870:	e3a00001 	mov	r0, #1
40021874:	e59f12d0 	ldr	r1, [pc, #720]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021878:	e5810040 	str	r0, [r1, #64]	; 0x40
4002187c:	e3570000 	cmp	r7, #0
40021880:	1a00000d 	bne	400218bc <CyU3PUsbSetupCommand+0x544>
40021884:	e59d0008 	ldr	r0, [sp, #8]
40021888:	e3500002 	cmp	r0, #2
4002188c:	1a00000a 	bne	400218bc <CyU3PUsbSetupCommand+0x544>
40021890:	e35b0000 	cmp	fp, #0
40021894:	1a000008 	bne	400218bc <CyU3PUsbSetupCommand+0x544>
40021898:	e59d1004 	ldr	r1, [sp, #4]
4002189c:	e20100ff 	and	r0, r1, #255	; 0xff
400218a0:	e3a02000 	mov	r2, #0
400218a4:	e3a01001 	mov	r1, #1
400218a8:	ebfff0cf 	bl	4001dbec <CyU3PUsbStall>
400218ac:	e3500000 	cmp	r0, #0
400218b0:	1a000001 	bne	400218bc <CyU3PUsbSetupCommand+0x544>
400218b4:	ebffeb08 	bl	4001c4dc <CyU3PUsbAckSetup>
400218b8:	e3a07001 	mov	r7, #1
400218bc:	ea000098 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400218c0:	e1a00000 	nop			; (mov r0, r0)
400218c4:	e1a01005 	mov	r1, r5
400218c8:	e1a00004 	mov	r0, r4
400218cc:	ebfff5d5 	bl	4001f028 <CyU3PUibSendDescr>
400218d0:	e1a07000 	mov	r7, r0
400218d4:	ea000092 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400218d8:	e1a00000 	nop			; (mov r0, r0)
400218dc:	e3a07001 	mov	r7, #1
400218e0:	e59f128c 	ldr	r1, [pc, #652]	; 40021b74 <CyU3PUsbSetupCommand+0x7fc>
400218e4:	e3a00001 	mov	r0, #1
400218e8:	ebffee94 	bl	4001d340 <CyU3PUsbSendEP0Data>
400218ec:	e1a06000 	mov	r6, r0
400218f0:	ea00008b 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400218f4:	e1a00000 	nop			; (mov r0, r0)
400218f8:	e3a07001 	mov	r7, #1
400218fc:	e35b0000 	cmp	fp, #0
40021900:	0a000005 	beq	4002191c <CyU3PUsbSetupCommand+0x5a4>
40021904:	e35b0001 	cmp	fp, #1
40021908:	1a00001a 	bne	40021978 <CyU3PUsbSetupCommand+0x600>
4002190c:	e59f1238 	ldr	r1, [pc, #568]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021910:	e5d10009 	ldrb	r0, [r1, #9]
40021914:	ebfff8b8 	bl	4001fbfc <CyU3PUsbEpPrepare>
40021918:	e1a00000 	nop			; (mov r0, r0)
4002191c:	e35b0000 	cmp	fp, #0
40021920:	1a000001 	bne	4002192c <CyU3PUsbSetupCommand+0x5b4>
40021924:	e3a00005 	mov	r0, #5
40021928:	ea000000 	b	40021930 <CyU3PUsbSetupCommand+0x5b8>
4002192c:	e3a00006 	mov	r0, #6
40021930:	e59f1214 	ldr	r1, [pc, #532]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021934:	e5c10008 	strb	r0, [r1, #8]
40021938:	e5c1b00c 	strb	fp, [r1, #12]
4002193c:	e2810000 	add	r0, r1, #0
40021940:	e5d00006 	ldrb	r0, [r0, #6]
40021944:	e2000001 	and	r0, r0, #1
40021948:	e5c10006 	strb	r0, [r1, #6]
4002194c:	e59f0224 	ldr	r0, [pc, #548]	; 40021b78 <CyU3PUsbSetupCommand+0x800>
40021950:	e5900000 	ldr	r0, [r0]
40021954:	e3500000 	cmp	r0, #0
40021958:	0a000004 	beq	40021970 <CyU3PUsbSetupCommand+0x5f8>
4002195c:	e1a0100b 	mov	r1, fp
40021960:	e3a00005 	mov	r0, #5
40021964:	e59f220c 	ldr	r2, [pc, #524]	; 40021b78 <CyU3PUsbSetupCommand+0x800>
40021968:	e5922000 	ldr	r2, [r2]
4002196c:	e12fff32 	blx	r2
40021970:	ebffead9 	bl	4001c4dc <CyU3PUsbAckSetup>
40021974:	ea000002 	b	40021984 <CyU3PUsbSetupCommand+0x60c>
40021978:	e1a00000 	nop			; (mov r0, r0)
4002197c:	e3a06040 	mov	r6, #64	; 0x40
40021980:	e1a00000 	nop			; (mov r0, r0)
40021984:	e1a00000 	nop			; (mov r0, r0)
40021988:	ea000065 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
4002198c:	e1a00000 	nop			; (mov r0, r0)
40021990:	e59f01d8 	ldr	r0, [pc, #472]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
40021994:	e5900000 	ldr	r0, [r0]
40021998:	e3500000 	cmp	r0, #0
4002199c:	0a000008 	beq	400219c4 <CyU3PUsbSetupCommand+0x64c>
400219a0:	e1a01005 	mov	r1, r5
400219a4:	e1a00004 	mov	r0, r4
400219a8:	e59f21c0 	ldr	r2, [pc, #448]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
400219ac:	e5922000 	ldr	r2, [r2]
400219b0:	e12fff32 	blx	r2
400219b4:	e1a07000 	mov	r7, r0
400219b8:	e3570000 	cmp	r7, #0
400219bc:	0a000000 	beq	400219c4 <CyU3PUsbSetupCommand+0x64c>
400219c0:	ea000057 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400219c4:	e3a07001 	mov	r7, #1
400219c8:	e59f11ac 	ldr	r1, [pc, #428]	; 40021b7c <CyU3PUsbSetupCommand+0x804>
400219cc:	e3a00001 	mov	r0, #1
400219d0:	ebffee5a 	bl	4001d340 <CyU3PUsbSendEP0Data>
400219d4:	e1a06000 	mov	r6, r0
400219d8:	ea000051 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
400219dc:	e1a00000 	nop			; (mov r0, r0)
400219e0:	e59f0188 	ldr	r0, [pc, #392]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
400219e4:	e5900000 	ldr	r0, [r0]
400219e8:	e3500000 	cmp	r0, #0
400219ec:	0a000008 	beq	40021a14 <CyU3PUsbSetupCommand+0x69c>
400219f0:	e1a01005 	mov	r1, r5
400219f4:	e1a00004 	mov	r0, r4
400219f8:	e59f2170 	ldr	r2, [pc, #368]	; 40021b70 <CyU3PUsbSetupCommand+0x7f8>
400219fc:	e5922000 	ldr	r2, [r2]
40021a00:	e12fff32 	blx	r2
40021a04:	e1a07000 	mov	r7, r0
40021a08:	e3570000 	cmp	r7, #0
40021a0c:	0a000000 	beq	40021a14 <CyU3PUsbSetupCommand+0x69c>
40021a10:	ea000043 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
40021a14:	e59f1130 	ldr	r1, [pc, #304]	; 40021b4c <CyU3PUsbSetupCommand+0x7d4>
40021a18:	e5c1b00d 	strb	fp, [r1, #13]
40021a1c:	e59f0154 	ldr	r0, [pc, #340]	; 40021b78 <CyU3PUsbSetupCommand+0x800>
40021a20:	e5900000 	ldr	r0, [r0]
40021a24:	e3500000 	cmp	r0, #0
40021a28:	0a000007 	beq	40021a4c <CyU3PUsbSetupCommand+0x6d4>
40021a2c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021a30:	e59d2004 	ldr	r2, [sp, #4]
40021a34:	e1800402 	orr	r0, r0, r2, lsl #8
40021a38:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021a3c:	e3a00007 	mov	r0, #7
40021a40:	e59f2130 	ldr	r2, [pc, #304]	; 40021b78 <CyU3PUsbSetupCommand+0x800>
40021a44:	e5922000 	ldr	r2, [r2]
40021a48:	e12fff32 	blx	r2
40021a4c:	e3a07001 	mov	r7, #1
40021a50:	ebffeaa1 	bl	4001c4dc <CyU3PUsbAckSetup>
40021a54:	ea000032 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
40021a58:	e1a00000 	nop			; (mov r0, r0)
40021a5c:	e3a07001 	mov	r7, #1
40021a60:	ebffea9d 	bl	4001c4dc <CyU3PUsbAckSetup>
40021a64:	ea00002e 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
40021a68:	e1a00000 	nop			; (mov r0, r0)
40021a6c:	ebffec37 	bl	4001cb50 <CyU3PUsbGetSpeed>
40021a70:	e3500003 	cmp	r0, #3
40021a74:	1a000019 	bne	40021ae0 <CyU3PUsbSetupCommand+0x768>
40021a78:	e35b0000 	cmp	fp, #0
40021a7c:	1a000017 	bne	40021ae0 <CyU3PUsbSetupCommand+0x768>
40021a80:	e59d0004 	ldr	r0, [sp, #4]
40021a84:	e3500000 	cmp	r0, #0
40021a88:	1a000014 	bne	40021ae0 <CyU3PUsbSetupCommand+0x768>
40021a8c:	e59d0000 	ldr	r0, [sp]
40021a90:	e3500006 	cmp	r0, #6
40021a94:	1a000011 	bne	40021ae0 <CyU3PUsbSetupCommand+0x768>
40021a98:	e3a07001 	mov	r7, #1
40021a9c:	e3a02000 	mov	r2, #0
40021aa0:	e59f10d8 	ldr	r1, [pc, #216]	; 40021b80 <CyU3PUsbSetupCommand+0x808>
40021aa4:	e3a00020 	mov	r0, #32
40021aa8:	ebffebb6 	bl	4001c988 <CyU3PUsbGetEP0Data>
40021aac:	e1a06000 	mov	r6, r0
40021ab0:	e59f00c0 	ldr	r0, [pc, #192]	; 40021b78 <CyU3PUsbSetupCommand+0x800>
40021ab4:	e5900000 	ldr	r0, [r0]
40021ab8:	e3500000 	cmp	r0, #0
40021abc:	0a000008 	beq	40021ae4 <CyU3PUsbSetupCommand+0x76c>
40021ac0:	e3560000 	cmp	r6, #0
40021ac4:	1a000006 	bne	40021ae4 <CyU3PUsbSetupCommand+0x76c>
40021ac8:	e3a01000 	mov	r1, #0
40021acc:	e3a00008 	mov	r0, #8
40021ad0:	e59f20a0 	ldr	r2, [pc, #160]	; 40021b78 <CyU3PUsbSetupCommand+0x800>
40021ad4:	e5922000 	ldr	r2, [r2]
40021ad8:	e12fff32 	blx	r2
40021adc:	ea000000 	b	40021ae4 <CyU3PUsbSetupCommand+0x76c>
40021ae0:	e3a07000 	mov	r7, #0
40021ae4:	ea00000e 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
40021ae8:	e1a00000 	nop			; (mov r0, r0)
40021aec:	ebffec17 	bl	4001cb50 <CyU3PUsbGetSpeed>
40021af0:	e3500003 	cmp	r0, #3
40021af4:	1a000007 	bne	40021b18 <CyU3PUsbSetupCommand+0x7a0>
40021af8:	e59d0004 	ldr	r0, [sp, #4]
40021afc:	e3500000 	cmp	r0, #0
40021b00:	1a000004 	bne	40021b18 <CyU3PUsbSetupCommand+0x7a0>
40021b04:	e59d0000 	ldr	r0, [sp]
40021b08:	e3500000 	cmp	r0, #0
40021b0c:	1a000001 	bne	40021b18 <CyU3PUsbSetupCommand+0x7a0>
40021b10:	e3a07001 	mov	r7, #1
40021b14:	ebffea70 	bl	4001c4dc <CyU3PUsbAckSetup>
40021b18:	ea000001 	b	40021b24 <CyU3PUsbSetupCommand+0x7ac>
40021b1c:	e1a00000 	nop			; (mov r0, r0)
40021b20:	e1a00000 	nop			; (mov r0, r0)
40021b24:	e1a00000 	nop			; (mov r0, r0)
40021b28:	e3570001 	cmp	r7, #1
40021b2c:	1a000001 	bne	40021b38 <CyU3PUsbSetupCommand+0x7c0>
40021b30:	e3560000 	cmp	r6, #0
40021b34:	0a000003 	beq	40021b48 <CyU3PUsbSetupCommand+0x7d0>
40021b38:	e3a02000 	mov	r2, #0
40021b3c:	e3a01001 	mov	r1, #1
40021b40:	e1a00002 	mov	r0, r2
40021b44:	ebfff028 	bl	4001dbec <CyU3PUsbStall>
40021b48:	eafffeb2 	b	40021618 <CyU3PUsbSetupCommand+0x2a0>
40021b4c:	40031d40 	.word	0x40031d40
40021b50:	e0033000 	.word	0xe0033000
40021b54:	40030db0 	.word	0x40030db0
40021b58:	400326a0 	.word	0x400326a0
40021b5c:	40031eb8 	.word	0x40031eb8
40021b60:	e0031000 	.word	0xe0031000
40021b64:	40031b18 	.word	0x40031b18
40021b68:	40031a78 	.word	0x40031a78
40021b6c:	0000ffff 	.word	0x0000ffff
40021b70:	40030da0 	.word	0x40030da0
40021b74:	40031d4c 	.word	0x40031d4c
40021b78:	40030d9c 	.word	0x40030d9c
40021b7c:	40031d4d 	.word	0x40031d4d
40021b80:	40032680 	.word	0x40032680

Disassembly of section i.CyU3PUsbSuspendHandler:

40021b84 <CyU3PUsbSuspendHandler>:
40021b84:	e92d4010 	push	{r4, lr}
40021b88:	e59f003c 	ldr	r0, [pc, #60]	; 40021bcc <CyU3PUsbSuspendHandler+0x48>
40021b8c:	e5d00008 	ldrb	r0, [r0, #8]
40021b90:	e3500005 	cmp	r0, #5
40021b94:	ba00000b 	blt	40021bc8 <CyU3PUsbSuspendHandler+0x44>
40021b98:	e59f0030 	ldr	r0, [pc, #48]	; 40021bd0 <CyU3PUsbSuspendHandler+0x4c>
40021b9c:	e5900000 	ldr	r0, [r0]
40021ba0:	e3500000 	cmp	r0, #0
40021ba4:	0a000004 	beq	40021bbc <CyU3PUsbSuspendHandler+0x38>
40021ba8:	e3a01000 	mov	r1, #0
40021bac:	e3a00002 	mov	r0, #2
40021bb0:	e59f2018 	ldr	r2, [pc, #24]	; 40021bd0 <CyU3PUsbSuspendHandler+0x4c>
40021bb4:	e5922000 	ldr	r2, [r2]
40021bb8:	e12fff32 	blx	r2
40021bbc:	e3a00005 	mov	r0, #5
40021bc0:	e59f1004 	ldr	r1, [pc, #4]	; 40021bcc <CyU3PUsbSuspendHandler+0x48>
40021bc4:	e5c10008 	strb	r0, [r1, #8]
40021bc8:	e8bd8010 	pop	{r4, pc}
40021bcc:	40031d40 	.word	0x40031d40
40021bd0:	40030d9c 	.word	0x40030d9c

Disassembly of section i.HandleVbusOffEvent:

40021bd4 <HandleVbusOffEvent>:
40021bd4:	e92d4010 	push	{r4, lr}
40021bd8:	e59f00e0 	ldr	r0, [pc, #224]	; 40021cc0 <HandleVbusOffEvent+0xec>
40021bdc:	e5d00009 	ldrb	r0, [r0, #9]
40021be0:	e3500003 	cmp	r0, #3
40021be4:	1a000002 	bne	40021bf4 <HandleVbusOffEvent+0x20>
40021be8:	e3a00001 	mov	r0, #1
40021bec:	ebffec59 	bl	4001cd58 <CyU3PUsbPhyDisable>
40021bf0:	ea000022 	b	40021c80 <HandleVbusOffEvent+0xac>
40021bf4:	e59f00c8 	ldr	r0, [pc, #200]	; 40021cc4 <HandleVbusOffEvent+0xf0>
40021bf8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021bfc:	e3100901 	tst	r0, #16384	; 0x4000
40021c00:	0a00001c 	beq	40021c78 <HandleVbusOffEvent+0xa4>
40021c04:	e59f00b8 	ldr	r0, [pc, #184]	; 40021cc4 <HandleVbusOffEvent+0xf0>
40021c08:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021c0c:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021c10:	e59f10ac 	ldr	r1, [pc, #172]	; 40021cc4 <HandleVbusOffEvent+0xf0>
40021c14:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021c18:	e3a00002 	mov	r0, #2
40021c1c:	ebffc5fb 	bl	40013410 <CyU3PBusyWait>
40021c20:	e59f00a0 	ldr	r0, [pc, #160]	; 40021cc8 <HandleVbusOffEvent+0xf4>
40021c24:	e5900004 	ldr	r0, [r0, #4]
40021c28:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021c2c:	e59f1094 	ldr	r1, [pc, #148]	; 40021cc8 <HandleVbusOffEvent+0xf4>
40021c30:	e5810004 	str	r0, [r1, #4]
40021c34:	e3a00001 	mov	r0, #1
40021c38:	ebffc5f4 	bl	40013410 <CyU3PBusyWait>
40021c3c:	e59f0088 	ldr	r0, [pc, #136]	; 40021ccc <HandleVbusOffEvent+0xf8>
40021c40:	e590001c 	ldr	r0, [r0, #28]
40021c44:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021c48:	e59f107c 	ldr	r1, [pc, #124]	; 40021ccc <HandleVbusOffEvent+0xf8>
40021c4c:	e581001c 	str	r0, [r1, #28]
40021c50:	e59f0078 	ldr	r0, [pc, #120]	; 40021cd0 <HandleVbusOffEvent+0xfc>
40021c54:	e5900000 	ldr	r0, [r0]
40021c58:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021c5c:	e3a00001 	mov	r0, #1
40021c60:	ebffc5ea 	bl	40013410 <CyU3PBusyWait>
40021c64:	e59f005c 	ldr	r0, [pc, #92]	; 40021cc8 <HandleVbusOffEvent+0xf4>
40021c68:	e5900004 	ldr	r0, [r0, #4]
40021c6c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021c70:	e59f1050 	ldr	r1, [pc, #80]	; 40021cc8 <HandleVbusOffEvent+0xf4>
40021c74:	e5810004 	str	r0, [r1, #4]
40021c78:	e3a00000 	mov	r0, #0
40021c7c:	ebffec35 	bl	4001cd58 <CyU3PUsbPhyDisable>
40021c80:	e3a01000 	mov	r1, #0
40021c84:	e3a00001 	mov	r0, #1
40021c88:	e59f2044 	ldr	r2, [pc, #68]	; 40021cd4 <HandleVbusOffEvent+0x100>
40021c8c:	e5922000 	ldr	r2, [r2]
40021c90:	e12fff32 	blx	r2
40021c94:	e3a00000 	mov	r0, #0
40021c98:	e59f1020 	ldr	r1, [pc, #32]	; 40021cc0 <HandleVbusOffEvent+0xec>
40021c9c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021ca0:	e3a00004 	mov	r0, #4
40021ca4:	e5c10008 	strb	r0, [r1, #8]
40021ca8:	e3a00000 	mov	r0, #0
40021cac:	e5c10009 	strb	r0, [r1, #9]
40021cb0:	e5810054 	str	r0, [r1, #84]	; 0x54
40021cb4:	e5810058 	str	r0, [r1, #88]	; 0x58
40021cb8:	e5810048 	str	r0, [r1, #72]	; 0x48
40021cbc:	e8bd8010 	pop	{r4, pc}
40021cc0:	40031d40 	.word	0x40031d40
40021cc4:	e0031000 	.word	0xe0031000
40021cc8:	e0030000 	.word	0xe0030000
40021ccc:	e0033000 	.word	0xe0033000
40021cd0:	40030c58 	.word	0x40030c58
40021cd4:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3POsTimerInit:

40021cd8 <CyU3POsTimerInit>:
40021cd8:	e92d4070 	push	{r4, r5, r6, lr}
40021cdc:	e1a04000 	mov	r4, r0
40021ce0:	e3a00004 	mov	r0, #4
40021ce4:	eb000047 	bl	40021e08 <CyU3PVicDisableInt>
40021ce8:	e59f00f0 	ldr	r0, [pc, #240]	; 40021de0 <CyU3POsTimerInit+0x108>
40021cec:	e5905014 	ldr	r5, [r0, #20]
40021cf0:	e3a00064 	mov	r0, #100	; 0x64
40021cf4:	ebffc5c5 	bl	40013410 <CyU3PBusyWait>
40021cf8:	e3850c03 	orr	r0, r5, #768	; 0x300
40021cfc:	e59f10dc 	ldr	r1, [pc, #220]	; 40021de0 <CyU3POsTimerInit+0x108>
40021d00:	e5810014 	str	r0, [r1, #20]
40021d04:	e3a00064 	mov	r0, #100	; 0x64
40021d08:	ebffc5c0 	bl	40013410 <CyU3PBusyWait>
40021d0c:	e59f00cc 	ldr	r0, [pc, #204]	; 40021de0 <CyU3POsTimerInit+0x108>
40021d10:	e5905014 	ldr	r5, [r0, #20]
40021d14:	e3540000 	cmp	r4, #0
40021d18:	0a000001 	beq	40021d24 <CyU3POsTimerInit+0x4c>
40021d1c:	e3540ffa 	cmp	r4, #1000	; 0x3e8
40021d20:	da000006 	ble	40021d40 <CyU3POsTimerInit+0x68>
40021d24:	e3a00001 	mov	r0, #1
40021d28:	e59f10b4 	ldr	r1, [pc, #180]	; 40021de4 <CyU3POsTimerInit+0x10c>
40021d2c:	e1c100b0 	strh	r0, [r1]
40021d30:	e3a00020 	mov	r0, #32
40021d34:	e59f10ac 	ldr	r1, [pc, #172]	; 40021de8 <CyU3POsTimerInit+0x110>
40021d38:	e5810000 	str	r0, [r1]
40021d3c:	ea000004 	b	40021d54 <CyU3POsTimerInit+0x7c>
40021d40:	e59f009c 	ldr	r0, [pc, #156]	; 40021de4 <CyU3POsTimerInit+0x10c>
40021d44:	e1c040b0 	strh	r4, [r0]
40021d48:	e1a00284 	lsl	r0, r4, #5
40021d4c:	e59f1094 	ldr	r1, [pc, #148]	; 40021de8 <CyU3POsTimerInit+0x110>
40021d50:	e5810000 	str	r0, [r1]
40021d54:	e59f008c 	ldr	r0, [pc, #140]	; 40021de8 <CyU3POsTimerInit+0x110>
40021d58:	e5900000 	ldr	r0, [r0]
40021d5c:	e2400007 	sub	r0, r0, #7
40021d60:	e59f1080 	ldr	r1, [pc, #128]	; 40021de8 <CyU3POsTimerInit+0x110>
40021d64:	e5810000 	str	r0, [r1]
40021d68:	e3a06000 	mov	r6, #0
40021d6c:	ea000001 	b	40021d78 <CyU3POsTimerInit+0xa0>
40021d70:	e2860001 	add	r0, r6, #1
40021d74:	e20060ff 	and	r6, r0, #255	; 0xff
40021d78:	e3a00001 	mov	r0, #1
40021d7c:	e1a00610 	lsl	r0, r0, r6
40021d80:	e59f1060 	ldr	r1, [pc, #96]	; 40021de8 <CyU3POsTimerInit+0x110>
40021d84:	e5911000 	ldr	r1, [r1]
40021d88:	e1500001 	cmp	r0, r1
40021d8c:	9afffff7 	bls	40021d70 <CyU3POsTimerInit+0x98>
40021d90:	e59f0050 	ldr	r0, [pc, #80]	; 40021de8 <CyU3POsTimerInit+0x110>
40021d94:	e5900000 	ldr	r0, [r0]
40021d98:	e59f1040 	ldr	r1, [pc, #64]	; 40021de0 <CyU3POsTimerInit+0x108>
40021d9c:	e581001c 	str	r0, [r1, #28]
40021da0:	e3a00064 	mov	r0, #100	; 0x64
40021da4:	ebffc599 	bl	40013410 <CyU3PBusyWait>
40021da8:	e3a00004 	mov	r0, #4
40021dac:	eb00001a 	bl	40021e1c <CyU3PVicEnableInt>
40021db0:	e59f0028 	ldr	r0, [pc, #40]	; 40021de0 <CyU3POsTimerInit+0x108>
40021db4:	e5900014 	ldr	r0, [r0, #20]
40021db8:	e3c05c03 	bic	r5, r0, #768	; 0x300
40021dbc:	e3a00b01 	mov	r0, #1024	; 0x400
40021dc0:	e1800586 	orr	r0, r0, r6, lsl #11
40021dc4:	e1855000 	orr	r5, r5, r0
40021dc8:	e3855c01 	orr	r5, r5, #256	; 0x100
40021dcc:	e3a00064 	mov	r0, #100	; 0x64
40021dd0:	ebffc58e 	bl	40013410 <CyU3PBusyWait>
40021dd4:	e59f0004 	ldr	r0, [pc, #4]	; 40021de0 <CyU3POsTimerInit+0x108>
40021dd8:	e5805014 	str	r5, [r0, #20]
40021ddc:	e8bd8070 	pop	{r4, r5, r6, pc}
40021de0:	e0050000 	.word	0xe0050000
40021de4:	40030db8 	.word	0x40030db8
40021de8:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PVicClearInt:

40021dec <CyU3PVicClearInt>:
40021dec:	e3a00000 	mov	r0, #0
40021df0:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40021df4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

40021df8 <CyU3PVicDisableAllInterrupts>:
40021df8:	e3a01000 	mov	r1, #0
40021dfc:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
40021e00:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021e04:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

40021e08 <CyU3PVicDisableInt>:
40021e08:	e3a01001 	mov	r1, #1
40021e0c:	e1a01011 	lsl	r1, r1, r0
40021e10:	e3a02000 	mov	r2, #0
40021e14:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
40021e18:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

40021e1c <CyU3PVicEnableInt>:
40021e1c:	e3a01001 	mov	r1, #1
40021e20:	e1a01011 	lsl	r1, r1, r0
40021e24:	e3a02000 	mov	r2, #0
40021e28:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
40021e2c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

40021e30 <CyU3PVicEnableInterrupts>:
40021e30:	e3a01000 	mov	r1, #0
40021e34:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
40021e38:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

40021e40 <CyU3PVicInit>:
40021e40:	e92d4010 	push	{r4, lr}
40021e44:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
40021e48:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
40021e4c:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
40021e50:	e3e00000 	mvn	r0, #0
40021e54:	e3a01000 	mov	r1, #0
40021e58:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021e5c:	e3a00000 	mov	r0, #0
40021e60:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40021e64:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40021e68:	ebffffdf 	bl	40021dec <CyU3PVicClearInt>
40021e6c:	eb000001 	bl	40021e78 <__CyU3PVicSetupIntVectors_veneer>
40021e70:	e8bd8010 	pop	{r4, pc}
40021e74:	00000000 	andeq	r0, r0, r0

40021e78 <__CyU3PVicSetupIntVectors_veneer>:
40021e78:	e51ff004 	ldr	pc, [pc, #-4]	; 40021e7c <__CyU3PVicSetupIntVectors_veneer+0x4>
40021e7c:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40021e80 <CyFx3Usb2PhySetup>:
40021e80:	e59f0008 	ldr	r0, [pc, #8]	; 40021e90 <CyFx3Usb2PhySetup+0x10>
40021e84:	e59f1008 	ldr	r1, [pc, #8]	; 40021e94 <CyFx3Usb2PhySetup+0x14>
40021e88:	e581000c 	str	r0, [r1, #12]
40021e8c:	e12fff1e 	bx	lr
40021e90:	00d4a480 	.word	0x00d4a480
40021e94:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40021e98 <CyFx3Usb3LnkRelaxHpTimeout>:
40021e98:	e59f0008 	ldr	r0, [pc, #8]	; 40021ea8 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
40021e9c:	e59f1008 	ldr	r1, [pc, #8]	; 40021eac <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40021ea0:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40021ea4:	e12fff1e 	bx	lr
40021ea8:	000009c4 	.word	0x000009c4
40021eac:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40021eb0 <CyFx3Usb3LnkSetup>:
40021eb0:	e59f1024 	ldr	r1, [pc, #36]	; 40021edc <CyFx3Usb3LnkSetup+0x2c>
40021eb4:	e59f0024 	ldr	r0, [pc, #36]	; 40021ee0 <CyFx3Usb3LnkSetup+0x30>
40021eb8:	e580109c 	str	r1, [r0, #156]	; 0x9c
40021ebc:	e5801080 	str	r1, [r0, #128]	; 0x80
40021ec0:	e59f101c 	ldr	r1, [pc, #28]	; 40021ee4 <CyFx3Usb3LnkSetup+0x34>
40021ec4:	e5801084 	str	r1, [r0, #132]	; 0x84
40021ec8:	e59f1018 	ldr	r1, [pc, #24]	; 40021ee8 <CyFx3Usb3LnkSetup+0x38>
40021ecc:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40021ed0:	e3a0107d 	mov	r1, #125	; 0x7d
40021ed4:	e5801078 	str	r1, [r0, #120]	; 0x78
40021ed8:	e12fff1e 	bx	lr
40021edc:	00002710 	.word	0x00002710
40021ee0:	e0033000 	.word	0xe0033000
40021ee4:	00fa004b 	.word	0x00fa004b
40021ee8:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

40021eec <CyFx3Usb3SendTP>:
40021eec:	e5902000 	ldr	r2, [r0]
40021ef0:	e59f1020 	ldr	r1, [pc, #32]	; 40021f18 <CyFx3Usb3SendTP+0x2c>
40021ef4:	e5812450 	str	r2, [r1, #1104]	; 0x450
40021ef8:	e5902004 	ldr	r2, [r0, #4]
40021efc:	e5812454 	str	r2, [r1, #1108]	; 0x454
40021f00:	e5900008 	ldr	r0, [r0, #8]
40021f04:	e5810458 	str	r0, [r1, #1112]	; 0x458
40021f08:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
40021f0c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40021f10:	e5810460 	str	r0, [r1, #1120]	; 0x460
40021f14:	e12fff1e 	bx	lr
40021f18:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

40021f1c <CyFx3UsbDmaPrefetchEnable>:
40021f1c:	e3500000 	cmp	r0, #0
40021f20:	e59f001c 	ldr	r0, [pc, #28]	; 40021f44 <CyFx3UsbDmaPrefetchEnable+0x28>
40021f24:	e3a01206 	mov	r1, #1610612736	; 0x60000000
40021f28:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
40021f2c:	12811a09 	addne	r1, r1, #36864	; 0x9000
40021f30:	e3c22903 	bic	r2, r2, #49152	; 0xc000
40021f34:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
40021f38:	e1811002 	orr	r1, r1, r2
40021f3c:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
40021f40:	e12fff1e 	bx	lr
40021f44:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

40021f48 <CyFx3UsbPowerOn>:
40021f48:	e92d4010 	push	{r4, lr}
40021f4c:	e59f406c 	ldr	r4, [pc, #108]	; 40021fc0 <CyFx3UsbPowerOn+0x78>
40021f50:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021f54:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40021f58:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40021f5c:	e3a0000a 	mov	r0, #10
40021f60:	ebffca77 	bl	40014944 <CyFx3BusyWait>
40021f64:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021f68:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40021f6c:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40021f70:	e3a00064 	mov	r0, #100	; 0x64
40021f74:	ebffca72 	bl	40014944 <CyFx3BusyWait>
40021f78:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021f7c:	e3100001 	tst	r0, #1
40021f80:	0afffffc 	beq	40021f78 <CyFx3UsbPowerOn+0x30>
40021f84:	ebffca64 	bl	4001491c <CyFx3DevIsUsb3Supported>
40021f88:	e59f4034 	ldr	r4, [pc, #52]	; 40021fc4 <CyFx3UsbPowerOn+0x7c>
40021f8c:	e3500000 	cmp	r0, #0
40021f90:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
40021f94:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40021f98:	03a0000a 	moveq	r0, #10
40021f9c:	0bffca68 	bleq	40014944 <CyFx3BusyWait>
40021fa0:	ebffca3f 	bl	400148a4 <CyFx3DevIsOtgSupported>
40021fa4:	e3500000 	cmp	r0, #0
40021fa8:	18bd8010 	popne	{r4, pc}
40021fac:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40021fb0:	e584080c 	str	r0, [r4, #2060]	; 0x80c
40021fb4:	e8bd4010 	pop	{r4, lr}
40021fb8:	e3a0000a 	mov	r0, #10
40021fbc:	eaffca60 	b	40014944 <CyFx3BusyWait>
40021fc0:	e0037000 	.word	0xe0037000
40021fc4:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40021fc8 <CyFx3UsbWritePhyReg>:
40021fc8:	e59f2084 	ldr	r2, [pc, #132]	; 40022054 <CyFx3UsbWritePhyReg+0x8c>
40021fcc:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40021fd0:	e3120901 	tst	r2, #16384	; 0x4000
40021fd4:	012fff1e 	bxeq	lr
40021fd8:	e59f2078 	ldr	r2, [pc, #120]	; 40022058 <CyFx3UsbWritePhyReg+0x90>
40021fdc:	e5820024 	str	r0, [r2, #36]	; 0x24
40021fe0:	e3803801 	orr	r3, r0, #65536	; 0x10000
40021fe4:	e5823024 	str	r3, [r2, #36]	; 0x24
40021fe8:	e5923028 	ldr	r3, [r2, #40]	; 0x28
40021fec:	e3130801 	tst	r3, #65536	; 0x10000
40021ff0:	0afffffc 	beq	40021fe8 <CyFx3UsbWritePhyReg+0x20>
40021ff4:	e5820024 	str	r0, [r2, #36]	; 0x24
40021ff8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40021ffc:	e3100801 	tst	r0, #65536	; 0x10000
40022000:	1afffffc 	bne	40021ff8 <CyFx3UsbWritePhyReg+0x30>
40022004:	e5821024 	str	r1, [r2, #36]	; 0x24
40022008:	e3810802 	orr	r0, r1, #131072	; 0x20000
4002200c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022010:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022014:	e3100801 	tst	r0, #65536	; 0x10000
40022018:	0afffffc 	beq	40022010 <CyFx3UsbWritePhyReg+0x48>
4002201c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022020:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022024:	e3100801 	tst	r0, #65536	; 0x10000
40022028:	1afffffc 	bne	40022020 <CyFx3UsbWritePhyReg+0x58>
4002202c:	e3810702 	orr	r0, r1, #524288	; 0x80000
40022030:	e5820024 	str	r0, [r2, #36]	; 0x24
40022034:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022038:	e3100801 	tst	r0, #65536	; 0x10000
4002203c:	0afffffc 	beq	40022034 <CyFx3UsbWritePhyReg+0x6c>
40022040:	e5821024 	str	r1, [r2, #36]	; 0x24
40022044:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022048:	e3100801 	tst	r0, #65536	; 0x10000
4002204c:	1afffffc 	bne	40022044 <CyFx3UsbWritePhyReg+0x7c>
40022050:	e12fff1e 	bx	lr
40022054:	e0031000 	.word	0xe0031000
40022058:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

4002205c <CyU3PDmaDscrChainCreate>:
4002205c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40022060:	e24dd018 	sub	sp, sp, #24
40022064:	e1a04000 	mov	r4, r0
40022068:	e1a05001 	mov	r5, r1
4002206c:	e1a06002 	mov	r6, r2
40022070:	e1a07003 	mov	r7, r3
40022074:	e3a0a000 	mov	sl, #0
40022078:	eb0000a6 	bl	40022318 <CyU3PDmaDscrGetFreeCount>
4002207c:	e1500005 	cmp	r0, r5
40022080:	aa000002 	bge	40022090 <CyU3PDmaDscrChainCreate+0x34>
40022084:	e3a00010 	mov	r0, #16
40022088:	e28dd018 	add	sp, sp, #24
4002208c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40022090:	e3540000 	cmp	r4, #0
40022094:	1a000001 	bne	400220a0 <CyU3PDmaDscrChainCreate+0x44>
40022098:	e3a00040 	mov	r0, #64	; 0x40
4002209c:	eafffff9 	b	40022088 <CyU3PDmaDscrChainCreate+0x2c>
400220a0:	e3550000 	cmp	r5, #0
400220a4:	1a000001 	bne	400220b0 <CyU3PDmaDscrChainCreate+0x54>
400220a8:	e3a00040 	mov	r0, #64	; 0x40
400220ac:	eafffff5 	b	40022088 <CyU3PDmaDscrChainCreate+0x2c>
400220b0:	e1a09005 	mov	r9, r5
400220b4:	e1a00004 	mov	r0, r4
400220b8:	eb00005e 	bl	40022238 <CyU3PDmaDscrGet>
400220bc:	e1d480b0 	ldrh	r8, [r4]
400220c0:	ea000029 	b	4002216c <CyU3PDmaDscrChainCreate+0x110>
400220c4:	e3590000 	cmp	r9, #0
400220c8:	0a000002 	beq	400220d8 <CyU3PDmaDscrChainCreate+0x7c>
400220cc:	e28d0014 	add	r0, sp, #20
400220d0:	eb000058 	bl	40022238 <CyU3PDmaDscrGet>
400220d4:	ea000001 	b	400220e0 <CyU3PDmaDscrChainCreate+0x84>
400220d8:	e1d400b0 	ldrh	r0, [r4]
400220dc:	e58d0014 	str	r0, [sp, #20]
400220e0:	e3560000 	cmp	r6, #0
400220e4:	0a000015 	beq	40022140 <CyU3PDmaDscrChainCreate+0xe4>
400220e8:	e35a0000 	cmp	sl, #0
400220ec:	1a000013 	bne	40022140 <CyU3PDmaDscrChainCreate+0xe4>
400220f0:	e1a00006 	mov	r0, r6
400220f4:	ebff871b 	bl	40003d68 <CyU3PDmaBufferAlloc>
400220f8:	e58d0004 	str	r0, [sp, #4]
400220fc:	e59f00a0 	ldr	r0, [pc, #160]	; 400221a4 <CyU3PDmaDscrChainCreate+0x148>
40022100:	e0000006 	and	r0, r0, r6
40022104:	e58d0010 	str	r0, [sp, #16]
40022108:	e59d0004 	ldr	r0, [sp, #4]
4002210c:	e3500000 	cmp	r0, #0
40022110:	1a000000 	bne	40022118 <CyU3PDmaDscrChainCreate+0xbc>
40022114:	e3a0a010 	mov	sl, #16
40022118:	e59d0004 	ldr	r0, [sp, #4]
4002211c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40022120:	3a000004 	bcc	40022138 <CyU3PDmaDscrChainCreate+0xdc>
40022124:	e59d0004 	ldr	r0, [sp, #4]
40022128:	e0800006 	add	r0, r0, r6
4002212c:	e59f1074 	ldr	r1, [pc, #116]	; 400221a8 <CyU3PDmaDscrChainCreate+0x14c>
40022130:	e1500001 	cmp	r0, r1
40022134:	3a000004 	bcc	4002214c <CyU3PDmaDscrChainCreate+0xf0>
40022138:	e3a0a010 	mov	sl, #16
4002213c:	ea000002 	b	4002214c <CyU3PDmaDscrChainCreate+0xf0>
40022140:	e3a00000 	mov	r0, #0
40022144:	e58d0004 	str	r0, [sp, #4]
40022148:	e58d0010 	str	r0, [sp, #16]
4002214c:	e58d7008 	str	r7, [sp, #8]
40022150:	e1dd01b4 	ldrh	r0, [sp, #20]
40022154:	e1800800 	orr	r0, r0, r0, lsl #16
40022158:	e58d000c 	str	r0, [sp, #12]
4002215c:	e28d1004 	add	r1, sp, #4
40022160:	e1a00008 	mov	r0, r8
40022164:	eb0000c6 	bl	40022484 <CyU3PDmaDscrSetConfig>
40022168:	e1dd81b4 	ldrh	r8, [sp, #20]
4002216c:	e1b00009 	movs	r0, r9
40022170:	e2491001 	sub	r1, r9, #1
40022174:	e1a09801 	lsl	r9, r1, #16
40022178:	e1a09829 	lsr	r9, r9, #16
4002217c:	1affffd0 	bne	400220c4 <CyU3PDmaDscrChainCreate+0x68>
40022180:	e35a0000 	cmp	sl, #0
40022184:	0a000004 	beq	4002219c <CyU3PDmaDscrChainCreate+0x140>
40022188:	e1d400b0 	ldrh	r0, [r4]
4002218c:	e3a03001 	mov	r3, #1
40022190:	e1a02003 	mov	r2, r3
40022194:	e1a01005 	mov	r1, r5
40022198:	eb000003 	bl	400221ac <CyU3PDmaDscrChainDestroy>
4002219c:	e1a0000a 	mov	r0, sl
400221a0:	eaffffb8 	b	40022088 <CyU3PDmaDscrChainCreate+0x2c>
400221a4:	0000fff0 	.word	0x0000fff0
400221a8:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

400221ac <CyU3PDmaDscrChainDestroy>:
400221ac:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400221b0:	e1a04000 	mov	r4, r0
400221b4:	e1a05001 	mov	r5, r1
400221b8:	e1a06002 	mov	r6, r2
400221bc:	e1a07003 	mov	r7, r3
400221c0:	ea000015 	b	4002221c <CyU3PDmaDscrChainDestroy+0x70>
400221c4:	e1a0100d 	mov	r1, sp
400221c8:	e1a00004 	mov	r0, r4
400221cc:	eb000091 	bl	40022418 <CyU3PDmaDscrGetConfig>
400221d0:	e3570000 	cmp	r7, #0
400221d4:	0a000004 	beq	400221ec <CyU3PDmaDscrChainDestroy+0x40>
400221d8:	e59d0000 	ldr	r0, [sp]
400221dc:	e3500000 	cmp	r0, #0
400221e0:	0a000001 	beq	400221ec <CyU3PDmaDscrChainDestroy+0x40>
400221e4:	e59d0000 	ldr	r0, [sp]
400221e8:	ebff8741 	bl	40003ef4 <CyU3PDmaBufferFree>
400221ec:	e3560000 	cmp	r6, #0
400221f0:	0a000003 	beq	40022204 <CyU3PDmaDscrChainDestroy+0x58>
400221f4:	e59d0008 	ldr	r0, [sp, #8]
400221f8:	e59f1034 	ldr	r1, [pc, #52]	; 40022234 <CyU3PDmaDscrChainDestroy+0x88>
400221fc:	e0018820 	and	r8, r1, r0, lsr #16
40022200:	ea000002 	b	40022210 <CyU3PDmaDscrChainDestroy+0x64>
40022204:	e59d0008 	ldr	r0, [sp, #8]
40022208:	e1a08800 	lsl	r8, r0, #16
4002220c:	e1a08828 	lsr	r8, r8, #16
40022210:	e1a00004 	mov	r0, r4
40022214:	eb000058 	bl	4002237c <CyU3PDmaDscrPut>
40022218:	e1a04008 	mov	r4, r8
4002221c:	e1b00005 	movs	r0, r5
40022220:	e2451001 	sub	r1, r5, #1
40022224:	e1a05801 	lsl	r5, r1, #16
40022228:	e1a05825 	lsr	r5, r5, #16
4002222c:	1affffe4 	bne	400221c4 <CyU3PDmaDscrChainDestroy+0x18>
40022230:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40022234:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

40022238 <CyU3PDmaDscrGet>:
40022238:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002223c:	e1a04000 	mov	r4, r0
40022240:	e3a08000 	mov	r8, #0
40022244:	e3540000 	cmp	r4, #0
40022248:	1a000001 	bne	40022254 <CyU3PDmaDscrGet+0x1c>
4002224c:	e3a00040 	mov	r0, #64	; 0x40
40022250:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022254:	e3e01000 	mvn	r1, #0
40022258:	e59f00ac 	ldr	r0, [pc, #172]	; 4002230c <CyU3PDmaDscrGet+0xd4>
4002225c:	ebff9f40 	bl	40009f64 <_txe_mutex_get>
40022260:	e59f00a8 	ldr	r0, [pc, #168]	; 40022310 <CyU3PDmaDscrGet+0xd8>
40022264:	e1d000b0 	ldrh	r0, [r0]
40022268:	e3500000 	cmp	r0, #0
4002226c:	0a000022 	beq	400222fc <CyU3PDmaDscrGet+0xc4>
40022270:	e3a06000 	mov	r6, #0
40022274:	ea00001e 	b	400222f4 <CyU3PDmaDscrGet+0xbc>
40022278:	e59f0094 	ldr	r0, [pc, #148]	; 40022314 <CyU3PDmaDscrGet+0xdc>
4002227c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022280:	e3750001 	cmn	r5, #1
40022284:	0a000017 	beq	400222e8 <CyU3PDmaDscrGet+0xb0>
40022288:	e3a07001 	mov	r7, #1
4002228c:	ea000012 	b	400222dc <CyU3PDmaDscrGet+0xa4>
40022290:	e1150007 	tst	r5, r7
40022294:	1a00000d 	bne	400222d0 <CyU3PDmaDscrGet+0x98>
40022298:	e1850007 	orr	r0, r5, r7
4002229c:	e59f1070 	ldr	r1, [pc, #112]	; 40022314 <CyU3PDmaDscrGet+0xdc>
400222a0:	e7810106 	str	r0, [r1, r6, lsl #2]
400222a4:	e2410004 	sub	r0, r1, #4
400222a8:	e1c080b2 	strh	r8, [r0, #2]
400222ac:	e1d000b0 	ldrh	r0, [r0]
400222b0:	e2400001 	sub	r0, r0, #1
400222b4:	e2411004 	sub	r1, r1, #4
400222b8:	e1c100b0 	strh	r0, [r1]
400222bc:	e1c480b0 	strh	r8, [r4]
400222c0:	e2810044 	add	r0, r1, #68	; 0x44
400222c4:	ebff9f5b 	bl	4000a038 <_txe_mutex_put>
400222c8:	e3a00000 	mov	r0, #0
400222cc:	eaffffdf 	b	40022250 <CyU3PDmaDscrGet+0x18>
400222d0:	e1a07087 	lsl	r7, r7, #1
400222d4:	e2880001 	add	r0, r8, #1
400222d8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400222dc:	e3570000 	cmp	r7, #0
400222e0:	1affffea 	bne	40022290 <CyU3PDmaDscrGet+0x58>
400222e4:	ea000001 	b	400222f0 <CyU3PDmaDscrGet+0xb8>
400222e8:	e2880020 	add	r0, r8, #32
400222ec:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400222f0:	e2866001 	add	r6, r6, #1
400222f4:	e3560010 	cmp	r6, #16
400222f8:	3affffde 	bcc	40022278 <CyU3PDmaDscrGet+0x40>
400222fc:	e59f0008 	ldr	r0, [pc, #8]	; 4002230c <CyU3PDmaDscrGet+0xd4>
40022300:	ebff9f4c 	bl	4000a038 <_txe_mutex_put>
40022304:	e3a0004a 	mov	r0, #74	; 0x4a
40022308:	eaffffd0 	b	40022250 <CyU3PDmaDscrGet+0x18>
4002230c:	4003273c 	.word	0x4003273c
40022310:	400326f8 	.word	0x400326f8
40022314:	400326fc 	.word	0x400326fc

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

40022318 <CyU3PDmaDscrGetFreeCount>:
40022318:	e59f0004 	ldr	r0, [pc, #4]	; 40022324 <CyU3PDmaDscrGetFreeCount+0xc>
4002231c:	e1d000b0 	ldrh	r0, [r0]
40022320:	e12fff1e 	bx	lr
40022324:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrListCreate:

40022328 <CyU3PDmaDscrListCreate>:
40022328:	e92d4010 	push	{r4, lr}
4002232c:	e3a02040 	mov	r2, #64	; 0x40
40022330:	e3a01000 	mov	r1, #0
40022334:	e59f0034 	ldr	r0, [pc, #52]	; 40022370 <CyU3PDmaDscrListCreate+0x48>
40022338:	ebff84de 	bl	400036b8 <CyU3PMemSet>
4002233c:	e3a00001 	mov	r0, #1
40022340:	e59f102c 	ldr	r1, [pc, #44]	; 40022374 <CyU3PDmaDscrListCreate+0x4c>
40022344:	e5810004 	str	r0, [r1, #4]
40022348:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
4002234c:	e1c100b0 	strh	r0, [r1]
40022350:	e3a00001 	mov	r0, #1
40022354:	e1c100b2 	strh	r0, [r1, #2]
40022358:	e3a03038 	mov	r3, #56	; 0x38
4002235c:	e3a02000 	mov	r2, #0
40022360:	e1a01002 	mov	r1, r2
40022364:	e59f000c 	ldr	r0, [pc, #12]	; 40022378 <CyU3PDmaDscrListCreate+0x50>
40022368:	ebff9e7f 	bl	40009d6c <_txe_mutex_create>
4002236c:	e8bd8010 	pop	{r4, pc}
40022370:	400326fc 	.word	0x400326fc
40022374:	400326f8 	.word	0x400326f8
40022378:	4003273c 	.word	0x4003273c

Disassembly of section i.CyU3PDmaDscrPut:

4002237c <CyU3PDmaDscrPut>:
4002237c:	e92d4070 	push	{r4, r5, r6, lr}
40022380:	e1a04000 	mov	r4, r0
40022384:	e3540c02 	cmp	r4, #512	; 0x200
40022388:	aa000001 	bge	40022394 <CyU3PDmaDscrPut+0x18>
4002238c:	e3540000 	cmp	r4, #0
40022390:	1a000001 	bne	4002239c <CyU3PDmaDscrPut+0x20>
40022394:	e3a00040 	mov	r0, #64	; 0x40
40022398:	e8bd8070 	pop	{r4, r5, r6, pc}
4002239c:	e3e01000 	mvn	r1, #0
400223a0:	e59f0064 	ldr	r0, [pc, #100]	; 4002240c <CyU3PDmaDscrPut+0x90>
400223a4:	ebff9eee 	bl	40009f64 <_txe_mutex_get>
400223a8:	e1a00004 	mov	r0, r4
400223ac:	e1a01fc4 	asr	r1, r4, #31
400223b0:	e0841da1 	add	r1, r4, r1, lsr #27
400223b4:	e1a062c1 	asr	r6, r1, #5
400223b8:	e59f0050 	ldr	r0, [pc, #80]	; 40022410 <CyU3PDmaDscrPut+0x94>
400223bc:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400223c0:	e1a00004 	mov	r0, r4
400223c4:	e1a01fc4 	asr	r1, r4, #31
400223c8:	e0841da1 	add	r1, r4, r1, lsr #27
400223cc:	e1a012c1 	asr	r1, r1, #5
400223d0:	e0441281 	sub	r1, r4, r1, lsl #5
400223d4:	e3a02001 	mov	r2, #1
400223d8:	e1c55112 	bic	r5, r5, r2, lsl r1
400223dc:	e59f002c 	ldr	r0, [pc, #44]	; 40022410 <CyU3PDmaDscrPut+0x94>
400223e0:	e7805106 	str	r5, [r0, r6, lsl #2]
400223e4:	e2400004 	sub	r0, r0, #4
400223e8:	e1d000b0 	ldrh	r0, [r0]
400223ec:	e2800001 	add	r0, r0, #1
400223f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
400223f4:	e59f1018 	ldr	r1, [pc, #24]	; 40022414 <CyU3PDmaDscrPut+0x98>
400223f8:	e1c100b0 	strh	r0, [r1]
400223fc:	e2810044 	add	r0, r1, #68	; 0x44
40022400:	ebff9f0c 	bl	4000a038 <_txe_mutex_put>
40022404:	e3a00000 	mov	r0, #0
40022408:	eaffffe2 	b	40022398 <CyU3PDmaDscrPut+0x1c>
4002240c:	4003273c 	.word	0x4003273c
40022410:	400326fc 	.word	0x400326fc
40022414:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrGetConfig:

40022418 <CyU3PDmaDscrGetConfig>:
40022418:	e92d4070 	push	{r4, r5, r6, lr}
4002241c:	e1a05000 	mov	r5, r0
40022420:	e1a04001 	mov	r4, r1
40022424:	e3550c02 	cmp	r5, #512	; 0x200
40022428:	aa000001 	bge	40022434 <CyU3PDmaDscrGetConfig+0x1c>
4002242c:	e3550000 	cmp	r5, #0
40022430:	1a000001 	bne	4002243c <CyU3PDmaDscrGetConfig+0x24>
40022434:	e3a00040 	mov	r0, #64	; 0x40
40022438:	e8bd8070 	pop	{r4, r5, r6, pc}
4002243c:	e3540000 	cmp	r4, #0
40022440:	1a000001 	bne	4002244c <CyU3PDmaDscrGetConfig+0x34>
40022444:	e3a00040 	mov	r0, #64	; 0x40
40022448:	eafffffa 	b	40022438 <CyU3PDmaDscrGetConfig+0x20>
4002244c:	e59f102c 	ldr	r1, [pc, #44]	; 40022480 <CyU3PDmaDscrGetConfig+0x68>
40022450:	e5911000 	ldr	r1, [r1]
40022454:	e0810205 	add	r0, r1, r5, lsl #4
40022458:	e3a01010 	mov	r1, #16
4002245c:	ebffbea4 	bl	40011ef4 <CyU3PSysClearDRegion>
40022460:	ebffc118 	bl	400128c8 <CyU3PSysBarrierSync>
40022464:	e59f0014 	ldr	r0, [pc, #20]	; 40022480 <CyU3PDmaDscrGetConfig+0x68>
40022468:	e5900000 	ldr	r0, [r0]
4002246c:	e0800205 	add	r0, r0, r5, lsl #4
40022470:	e890004e 	ldm	r0, {r1, r2, r3, r6}
40022474:	e884004e 	stm	r4, {r1, r2, r3, r6}
40022478:	e3a00000 	mov	r0, #0
4002247c:	eaffffed 	b	40022438 <CyU3PDmaDscrGetConfig+0x20>
40022480:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PDmaDscrSetConfig:

40022484 <CyU3PDmaDscrSetConfig>:
40022484:	e92d4070 	push	{r4, r5, r6, lr}
40022488:	e1a04000 	mov	r4, r0
4002248c:	e1a05001 	mov	r5, r1
40022490:	e3540c02 	cmp	r4, #512	; 0x200
40022494:	aa000001 	bge	400224a0 <CyU3PDmaDscrSetConfig+0x1c>
40022498:	e3540000 	cmp	r4, #0
4002249c:	1a000001 	bne	400224a8 <CyU3PDmaDscrSetConfig+0x24>
400224a0:	e3a00040 	mov	r0, #64	; 0x40
400224a4:	e8bd8070 	pop	{r4, r5, r6, pc}
400224a8:	e3550000 	cmp	r5, #0
400224ac:	1a000001 	bne	400224b8 <CyU3PDmaDscrSetConfig+0x34>
400224b0:	e3a00040 	mov	r0, #64	; 0x40
400224b4:	eafffffa 	b	400224a4 <CyU3PDmaDscrSetConfig+0x20>
400224b8:	e59f002c 	ldr	r0, [pc, #44]	; 400224ec <CyU3PDmaDscrSetConfig+0x68>
400224bc:	e5900000 	ldr	r0, [r0]
400224c0:	e0800204 	add	r0, r0, r4, lsl #4
400224c4:	e895004e 	ldm	r5, {r1, r2, r3, r6}
400224c8:	e880004e 	stm	r0, {r1, r2, r3, r6}
400224cc:	e59f1018 	ldr	r1, [pc, #24]	; 400224ec <CyU3PDmaDscrSetConfig+0x68>
400224d0:	e5911000 	ldr	r1, [r1]
400224d4:	e0810204 	add	r0, r1, r4, lsl #4
400224d8:	e3a01010 	mov	r1, #16
400224dc:	ebffbe84 	bl	40011ef4 <CyU3PSysClearDRegion>
400224e0:	ebffc0f8 	bl	400128c8 <CyU3PSysBarrierSync>
400224e4:	e3a00000 	mov	r0, #0
400224e8:	eaffffed 	b	400224a4 <CyU3PDmaDscrSetConfig+0x20>
400224ec:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PDmaIntHandler:

400224f0 <CyU3PDmaIntHandler>:
400224f0:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
400224f4:	e1a04000 	mov	r4, r0
400224f8:	e1a05001 	mov	r5, r1
400224fc:	e204003f 	and	r0, r4, #63	; 0x3f
40022500:	e1857400 	orr	r7, r5, r0, lsl #8
40022504:	e59f0150 	ldr	r0, [pc, #336]	; 4002265c <CyU3PDmaIntHandler+0x16c>
40022508:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002250c:	e0800385 	add	r0, r0, r5, lsl #7
40022510:	e5900010 	ldr	r0, [r0, #16]
40022514:	e59f1140 	ldr	r1, [pc, #320]	; 4002265c <CyU3PDmaIntHandler+0x16c>
40022518:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002251c:	e0811385 	add	r1, r1, r5, lsl #7
40022520:	e5911014 	ldr	r1, [r1, #20]
40022524:	e0009001 	and	r9, r0, r1
40022528:	e59f0130 	ldr	r0, [pc, #304]	; 40022660 <CyU3PDmaIntHandler+0x170>
4002252c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022530:	e7906105 	ldr	r6, [r0, r5, lsl #2]
40022534:	e3560000 	cmp	r6, #0
40022538:	0a000038 	beq	40022620 <CyU3PDmaIntHandler+0x130>
4002253c:	e1a00000 	nop			; (mov r0, r0)
40022540:	e59f0114 	ldr	r0, [pc, #276]	; 4002265c <CyU3PDmaIntHandler+0x16c>
40022544:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022548:	e0800385 	add	r0, r0, r5, lsl #7
4002254c:	e5900010 	ldr	r0, [r0, #16]
40022550:	e59f1104 	ldr	r1, [pc, #260]	; 4002265c <CyU3PDmaIntHandler+0x16c>
40022554:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022558:	e0811385 	add	r1, r1, r5, lsl #7
4002255c:	e5911014 	ldr	r1, [r1, #20]
40022560:	e0000001 	and	r0, r0, r1
40022564:	e1899000 	orr	r9, r9, r0
40022568:	e2098e12 	and	r8, r9, #288	; 0x120
4002256c:	e59f00e8 	ldr	r0, [pc, #232]	; 4002265c <CyU3PDmaIntHandler+0x16c>
40022570:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022574:	e0800385 	add	r0, r0, r5, lsl #7
40022578:	e5900014 	ldr	r0, [r0, #20]
4002257c:	e1c00008 	bic	r0, r0, r8
40022580:	e59f10d4 	ldr	r1, [pc, #212]	; 4002265c <CyU3PDmaIntHandler+0x16c>
40022584:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022588:	e0811385 	add	r1, r1, r5, lsl #7
4002258c:	e5810014 	str	r0, [r1, #20]
40022590:	e1c90008 	bic	r0, r9, r8
40022594:	e59f10c0 	ldr	r1, [pc, #192]	; 4002265c <CyU3PDmaIntHandler+0x16c>
40022598:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002259c:	e0811385 	add	r1, r1, r5, lsl #7
400225a0:	e5810010 	str	r0, [r1, #16]
400225a4:	e59f00b0 	ldr	r0, [pc, #176]	; 4002265c <CyU3PDmaIntHandler+0x16c>
400225a8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225ac:	e7900385 	ldr	r0, [r0, r5, lsl #7]
400225b0:	e1a00800 	lsl	r0, r0, #16
400225b4:	e1a00820 	lsr	r0, r0, #16
400225b8:	e58d000c 	str	r0, [sp, #12]
400225bc:	e59f0098 	ldr	r0, [pc, #152]	; 4002265c <CyU3PDmaIntHandler+0x16c>
400225c0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225c4:	e0800385 	add	r0, r0, r5, lsl #7
400225c8:	e5900010 	ldr	r0, [r0, #16]
400225cc:	e59f1088 	ldr	r1, [pc, #136]	; 4002265c <CyU3PDmaIntHandler+0x16c>
400225d0:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400225d4:	e0811385 	add	r1, r1, r5, lsl #7
400225d8:	e5911014 	ldr	r1, [r1, #20]
400225dc:	e0008001 	and	r8, r0, r1
400225e0:	e3580000 	cmp	r8, #0
400225e4:	1affffd5 	bne	40022540 <CyU3PDmaIntHandler+0x50>
400225e8:	e3a00901 	mov	r0, #16384	; 0x4000
400225ec:	e58d0000 	str	r0, [sp]
400225f0:	e59d0000 	ldr	r0, [sp]
400225f4:	e58d0000 	str	r0, [sp]
400225f8:	e59d0000 	ldr	r0, [sp]
400225fc:	e1800807 	orr	r0, r0, r7, lsl #16
40022600:	e58d0000 	str	r0, [sp]
40022604:	e58d6004 	str	r6, [sp, #4]
40022608:	e58d9008 	str	r9, [sp, #8]
4002260c:	e3a02000 	mov	r2, #0
40022610:	e1a01002 	mov	r1, r2
40022614:	e1a0000d 	mov	r0, sp
40022618:	ebffe05f 	bl	4001a79c <CyU3PDmaMsgSend>
4002261c:	ea00000d 	b	40022658 <CyU3PDmaIntHandler+0x168>
40022620:	e59f003c 	ldr	r0, [pc, #60]	; 40022664 <CyU3PDmaIntHandler+0x174>
40022624:	e5900000 	ldr	r0, [r0]
40022628:	e3500000 	cmp	r0, #0
4002262c:	0a000005 	beq	40022648 <CyU3PDmaIntHandler+0x158>
40022630:	e1a01009 	mov	r1, r9
40022634:	e1a00007 	mov	r0, r7
40022638:	e59f2024 	ldr	r2, [pc, #36]	; 40022664 <CyU3PDmaIntHandler+0x174>
4002263c:	e5922000 	ldr	r2, [r2]
40022640:	e12fff32 	blx	r2
40022644:	ea000003 	b	40022658 <CyU3PDmaIntHandler+0x168>
40022648:	e59f000c 	ldr	r0, [pc, #12]	; 4002265c <CyU3PDmaIntHandler+0x16c>
4002264c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022650:	e0800385 	add	r0, r0, r5, lsl #7
40022654:	e5809010 	str	r9, [r0, #16]
40022658:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4002265c:	40030cd8 	.word	0x40030cd8
40022660:	40030d00 	.word	0x40030d00
40022664:	40030cd4 	.word	0x40030cd4

Disassembly of section i.CyU3PGpioInit:

40022668 <CyU3PGpioInit>:
40022668:	e92d4070 	push	{r4, r5, r6, lr}
4002266c:	e1a04000 	mov	r4, r0
40022670:	e1a06001 	mov	r6, r1
40022674:	e59f00fc 	ldr	r0, [pc, #252]	; 40022778 <CyU3PGpioInit+0x110>
40022678:	e5900000 	ldr	r0, [r0]
4002267c:	e3500000 	cmp	r0, #0
40022680:	0a000001 	beq	4002268c <CyU3PGpioInit+0x24>
40022684:	e3a00043 	mov	r0, #67	; 0x43
40022688:	e8bd8070 	pop	{r4, r5, r6, pc}
4002268c:	e3540000 	cmp	r4, #0
40022690:	1a000001 	bne	4002269c <CyU3PGpioInit+0x34>
40022694:	e3a00041 	mov	r0, #65	; 0x41
40022698:	eafffffa 	b	40022688 <CyU3PGpioInit+0x20>
4002269c:	e1a00006 	mov	r0, r6
400226a0:	eb00013b 	bl	40022b94 <CyU3PRegisterGpioCallBack>
400226a4:	ebffc551 	bl	40013bf0 <CyU3PLppGpioBlockIsOn>
400226a8:	e3500000 	cmp	r0, #0
400226ac:	0a000003 	beq	400226c0 <CyU3PGpioInit+0x58>
400226b0:	e59f00c4 	ldr	r0, [pc, #196]	; 4002277c <CyU3PGpioInit+0x114>
400226b4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400226b8:	e3100001 	tst	r0, #1
400226bc:	1a000020 	bne	40022744 <CyU3PGpioInit+0xdc>
400226c0:	e1a00004 	mov	r0, r4
400226c4:	ebffc4a7 	bl	40013968 <CyU3PGpioSetClock>
400226c8:	e1a05000 	mov	r5, r0
400226cc:	e3550000 	cmp	r5, #0
400226d0:	0a000001 	beq	400226dc <CyU3PGpioInit+0x74>
400226d4:	e1a00005 	mov	r0, r5
400226d8:	eaffffea 	b	40022688 <CyU3PGpioInit+0x20>
400226dc:	e59f109c 	ldr	r1, [pc, #156]	; 40022780 <CyU3PGpioInit+0x118>
400226e0:	e3a00004 	mov	r0, #4
400226e4:	ebffc545 	bl	40013c00 <CyU3PLppInit>
400226e8:	e1a05000 	mov	r5, r0
400226ec:	e3550000 	cmp	r5, #0
400226f0:	0a000001 	beq	400226fc <CyU3PGpioInit+0x94>
400226f4:	e1a00005 	mov	r0, r5
400226f8:	eaffffe2 	b	40022688 <CyU3PGpioInit+0x20>
400226fc:	e59f0078 	ldr	r0, [pc, #120]	; 4002277c <CyU3PGpioInit+0x114>
40022700:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022704:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022708:	e59f106c 	ldr	r1, [pc, #108]	; 4002277c <CyU3PGpioInit+0x114>
4002270c:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022710:	e3a0000a 	mov	r0, #10
40022714:	ebffc33d 	bl	40013410 <CyU3PBusyWait>
40022718:	e59f005c 	ldr	r0, [pc, #92]	; 4002277c <CyU3PGpioInit+0x114>
4002271c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022720:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022724:	e59f1050 	ldr	r1, [pc, #80]	; 4002277c <CyU3PGpioInit+0x114>
40022728:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
4002272c:	e1a00000 	nop			; (mov r0, r0)
40022730:	e59f0044 	ldr	r0, [pc, #68]	; 4002277c <CyU3PGpioInit+0x114>
40022734:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022738:	e3100001 	tst	r0, #1
4002273c:	0afffffb 	beq	40022730 <CyU3PGpioInit+0xc8>
40022740:	ea000007 	b	40022764 <CyU3PGpioInit+0xfc>
40022744:	e59f1034 	ldr	r1, [pc, #52]	; 40022780 <CyU3PGpioInit+0x118>
40022748:	e3a00004 	mov	r0, #4
4002274c:	ebffc52b 	bl	40013c00 <CyU3PLppInit>
40022750:	e1a05000 	mov	r5, r0
40022754:	e3550000 	cmp	r5, #0
40022758:	0a000001 	beq	40022764 <CyU3PGpioInit+0xfc>
4002275c:	e1a00005 	mov	r0, r5
40022760:	eaffffc8 	b	40022688 <CyU3PGpioInit+0x20>
40022764:	e3a00001 	mov	r0, #1
40022768:	e59f1008 	ldr	r1, [pc, #8]	; 40022778 <CyU3PGpioInit+0x110>
4002276c:	e5810000 	str	r0, [r1]
40022770:	e3a00000 	mov	r0, #0
40022774:	eaffffc3 	b	40022688 <CyU3PGpioInit+0x20>
40022778:	40030ed8 	.word	0x40030ed8
4002277c:	e0001000 	.word	0xe0001000
40022780:	40022784 	.word	0x40022784

Disassembly of section i.CyU3PGpioInt_Handler:

40022784 <CyU3PGpioInt_Handler>:
40022784:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022788:	e3a06000 	mov	r6, #0
4002278c:	e3a05000 	mov	r5, #0
40022790:	e3a04001 	mov	r4, #1
40022794:	ea000029 	b	40022840 <CyU3PGpioInt_Handler+0xbc>
40022798:	e59f0198 	ldr	r0, [pc, #408]	; 40022938 <CyU3PGpioInt_Handler+0x1b4>
4002279c:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
400227a0:	e1100004 	tst	r0, r4
400227a4:	0a000021 	beq	40022830 <CyU3PGpioInt_Handler+0xac>
400227a8:	e59f0188 	ldr	r0, [pc, #392]	; 40022938 <CyU3PGpioInt_Handler+0x1b4>
400227ac:	e7900205 	ldr	r0, [r0, r5, lsl #4]
400227b0:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400227b4:	e59f117c 	ldr	r1, [pc, #380]	; 40022938 <CyU3PGpioInt_Handler+0x1b4>
400227b8:	e7810205 	str	r0, [r1, r5, lsl #4]
400227bc:	e59f0178 	ldr	r0, [pc, #376]	; 4002293c <CyU3PGpioInt_Handler+0x1b8>
400227c0:	e5900000 	ldr	r0, [r0]
400227c4:	e3500000 	cmp	r0, #0
400227c8:	0a000018 	beq	40022830 <CyU3PGpioInt_Handler+0xac>
400227cc:	e1a06005 	mov	r6, r5
400227d0:	e1a07005 	mov	r7, r5
400227d4:	ea00000e 	b	40022814 <CyU3PGpioInt_Handler+0x90>
400227d8:	e1a00007 	mov	r0, r7
400227dc:	ebffc097 	bl	40012a40 <CyU3PIsGpioComplexIOConfigured>
400227e0:	e3500000 	cmp	r0, #0
400227e4:	0a000001 	beq	400227f0 <CyU3PGpioInt_Handler+0x6c>
400227e8:	e1a06007 	mov	r6, r7
400227ec:	ea00000a 	b	4002281c <CyU3PGpioInt_Handler+0x98>
400227f0:	e2870020 	add	r0, r7, #32
400227f4:	ebffc091 	bl	40012a40 <CyU3PIsGpioComplexIOConfigured>
400227f8:	e3500000 	cmp	r0, #0
400227fc:	0a000002 	beq	4002280c <CyU3PGpioInt_Handler+0x88>
40022800:	e2870020 	add	r0, r7, #32
40022804:	e20060ff 	and	r6, r0, #255	; 0xff
40022808:	ea000003 	b	4002281c <CyU3PGpioInt_Handler+0x98>
4002280c:	e2870008 	add	r0, r7, #8
40022810:	e20070ff 	and	r7, r0, #255	; 0xff
40022814:	e3570020 	cmp	r7, #32
40022818:	baffffee 	blt	400227d8 <CyU3PGpioInt_Handler+0x54>
4002281c:	e1a00000 	nop			; (mov r0, r0)
40022820:	e1a00006 	mov	r0, r6
40022824:	e59f1110 	ldr	r1, [pc, #272]	; 4002293c <CyU3PGpioInt_Handler+0x1b8>
40022828:	e5911000 	ldr	r1, [r1]
4002282c:	e12fff31 	blx	r1
40022830:	e59f0108 	ldr	r0, [pc, #264]	; 40022940 <CyU3PGpioInt_Handler+0x1bc>
40022834:	e0004084 	and	r4, r0, r4, lsl #1
40022838:	e2850001 	add	r0, r5, #1
4002283c:	e20050ff 	and	r5, r0, #255	; 0xff
40022840:	e3540080 	cmp	r4, #128	; 0x80
40022844:	9affffd3 	bls	40022798 <CyU3PGpioInt_Handler+0x14>
40022848:	e59f00e8 	ldr	r0, [pc, #232]	; 40022938 <CyU3PGpioInt_Handler+0x1b4>
4002284c:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022850:	e3500000 	cmp	r0, #0
40022854:	0a000017 	beq	400228b8 <CyU3PGpioInt_Handler+0x134>
40022858:	e3a05000 	mov	r5, #0
4002285c:	ea000013 	b	400228b0 <CyU3PGpioInt_Handler+0x12c>
40022860:	e59f00d0 	ldr	r0, [pc, #208]	; 40022938 <CyU3PGpioInt_Handler+0x1b4>
40022864:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022868:	e3a01001 	mov	r1, #1
4002286c:	e1100511 	tst	r0, r1, lsl r5
40022870:	0a00000c 	beq	400228a8 <CyU3PGpioInt_Handler+0x124>
40022874:	e59f00c8 	ldr	r0, [pc, #200]	; 40022944 <CyU3PGpioInt_Handler+0x1c0>
40022878:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002287c:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022880:	e59f10bc 	ldr	r1, [pc, #188]	; 40022944 <CyU3PGpioInt_Handler+0x1c0>
40022884:	e7810105 	str	r0, [r1, r5, lsl #2]
40022888:	e59f00ac 	ldr	r0, [pc, #172]	; 4002293c <CyU3PGpioInt_Handler+0x1b8>
4002288c:	e5900000 	ldr	r0, [r0]
40022890:	e3500000 	cmp	r0, #0
40022894:	0a000003 	beq	400228a8 <CyU3PGpioInt_Handler+0x124>
40022898:	e1a00005 	mov	r0, r5
4002289c:	e59f1098 	ldr	r1, [pc, #152]	; 4002293c <CyU3PGpioInt_Handler+0x1b8>
400228a0:	e5911000 	ldr	r1, [r1]
400228a4:	e12fff31 	blx	r1
400228a8:	e2850001 	add	r0, r5, #1
400228ac:	e20050ff 	and	r5, r0, #255	; 0xff
400228b0:	e3550020 	cmp	r5, #32
400228b4:	baffffe9 	blt	40022860 <CyU3PGpioInt_Handler+0xdc>
400228b8:	e59f0078 	ldr	r0, [pc, #120]	; 40022938 <CyU3PGpioInt_Handler+0x1b4>
400228bc:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
400228c0:	e3500000 	cmp	r0, #0
400228c4:	0a00001a 	beq	40022934 <CyU3PGpioInt_Handler+0x1b0>
400228c8:	e3a05000 	mov	r5, #0
400228cc:	ea000016 	b	4002292c <CyU3PGpioInt_Handler+0x1a8>
400228d0:	e59f0060 	ldr	r0, [pc, #96]	; 40022938 <CyU3PGpioInt_Handler+0x1b4>
400228d4:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
400228d8:	e3a01001 	mov	r1, #1
400228dc:	e1100511 	tst	r0, r1, lsl r5
400228e0:	0a00000f 	beq	40022924 <CyU3PGpioInt_Handler+0x1a0>
400228e4:	e59f0058 	ldr	r0, [pc, #88]	; 40022944 <CyU3PGpioInt_Handler+0x1c0>
400228e8:	e2851020 	add	r1, r5, #32
400228ec:	e7900101 	ldr	r0, [r0, r1, lsl #2]
400228f0:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
400228f4:	e59f0048 	ldr	r0, [pc, #72]	; 40022944 <CyU3PGpioInt_Handler+0x1c0>
400228f8:	e2852020 	add	r2, r5, #32
400228fc:	e7801102 	str	r1, [r0, r2, lsl #2]
40022900:	e59f0034 	ldr	r0, [pc, #52]	; 4002293c <CyU3PGpioInt_Handler+0x1b8>
40022904:	e5900000 	ldr	r0, [r0]
40022908:	e3500000 	cmp	r0, #0
4002290c:	0a000004 	beq	40022924 <CyU3PGpioInt_Handler+0x1a0>
40022910:	e2851020 	add	r1, r5, #32
40022914:	e20100ff 	and	r0, r1, #255	; 0xff
40022918:	e59f101c 	ldr	r1, [pc, #28]	; 4002293c <CyU3PGpioInt_Handler+0x1b8>
4002291c:	e5911000 	ldr	r1, [r1]
40022920:	e12fff31 	blx	r1
40022924:	e2850001 	add	r0, r5, #1
40022928:	e20050ff 	and	r5, r0, #255	; 0xff
4002292c:	e3550020 	cmp	r5, #32
40022930:	baffffe6 	blt	400228d0 <CyU3PGpioInt_Handler+0x14c>
40022934:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022938:	e0001000 	.word	0xe0001000
4002293c:	40030edc 	.word	0x40030edc
40022940:	0000ffff 	.word	0x0000ffff
40022944:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022948 <CyU3PGpioSetSimpleConfig>:
40022948:	e92d4070 	push	{r4, r5, r6, lr}
4002294c:	e1a04000 	mov	r4, r0
40022950:	e1a05001 	mov	r5, r1
40022954:	e3a06000 	mov	r6, #0
40022958:	e59f00d0 	ldr	r0, [pc, #208]	; 40022a30 <CyU3PGpioSetSimpleConfig+0xe8>
4002295c:	e5900000 	ldr	r0, [r0]
40022960:	e3500000 	cmp	r0, #0
40022964:	1a000001 	bne	40022970 <CyU3PGpioSetSimpleConfig+0x28>
40022968:	e3a00042 	mov	r0, #66	; 0x42
4002296c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022970:	e1a00004 	mov	r0, r4
40022974:	ebffc03d 	bl	40012a70 <CyU3PIsGpioValid>
40022978:	e3500000 	cmp	r0, #0
4002297c:	1a000001 	bne	40022988 <CyU3PGpioSetSimpleConfig+0x40>
40022980:	e3a00040 	mov	r0, #64	; 0x40
40022984:	eafffff8 	b	4002296c <CyU3PGpioSetSimpleConfig+0x24>
40022988:	e3550000 	cmp	r5, #0
4002298c:	1a000001 	bne	40022998 <CyU3PGpioSetSimpleConfig+0x50>
40022990:	e3a00041 	mov	r0, #65	; 0x41
40022994:	eafffff4 	b	4002296c <CyU3PGpioSetSimpleConfig+0x24>
40022998:	e5d50010 	ldrb	r0, [r5, #16]
4002299c:	e3500005 	cmp	r0, #5
400229a0:	da000001 	ble	400229ac <CyU3PGpioSetSimpleConfig+0x64>
400229a4:	e3a00040 	mov	r0, #64	; 0x40
400229a8:	eaffffef 	b	4002296c <CyU3PGpioSetSimpleConfig+0x24>
400229ac:	e1a00004 	mov	r0, r4
400229b0:	ebffc028 	bl	40012a58 <CyU3PIsGpioSimpleIOConfigured>
400229b4:	e3500000 	cmp	r0, #0
400229b8:	1a000001 	bne	400229c4 <CyU3PGpioSetSimpleConfig+0x7c>
400229bc:	e3a00044 	mov	r0, #68	; 0x44
400229c0:	eaffffe9 	b	4002296c <CyU3PGpioSetSimpleConfig+0x24>
400229c4:	e595000c 	ldr	r0, [r5, #12]
400229c8:	e3500000 	cmp	r0, #0
400229cc:	0a000000 	beq	400229d4 <CyU3PGpioSetSimpleConfig+0x8c>
400229d0:	e3866040 	orr	r6, r6, #64	; 0x40
400229d4:	e5950004 	ldr	r0, [r5, #4]
400229d8:	e3500000 	cmp	r0, #0
400229dc:	0a000000 	beq	400229e4 <CyU3PGpioSetSimpleConfig+0x9c>
400229e0:	e3866010 	orr	r6, r6, #16
400229e4:	e5950008 	ldr	r0, [r5, #8]
400229e8:	e3500000 	cmp	r0, #0
400229ec:	0a000000 	beq	400229f4 <CyU3PGpioSetSimpleConfig+0xac>
400229f0:	e3866020 	orr	r6, r6, #32
400229f4:	e5950000 	ldr	r0, [r5]
400229f8:	e3500000 	cmp	r0, #0
400229fc:	0a000000 	beq	40022a04 <CyU3PGpioSetSimpleConfig+0xbc>
40022a00:	e3866001 	orr	r6, r6, #1
40022a04:	e5d50010 	ldrb	r0, [r5, #16]
40022a08:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022a0c:	e0010c00 	and	r0, r1, r0, lsl #24
40022a10:	e1866000 	orr	r6, r6, r0
40022a14:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022a18:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022a1c:	e59f0010 	ldr	r0, [pc, #16]	; 40022a34 <CyU3PGpioSetSimpleConfig+0xec>
40022a20:	e7806104 	str	r6, [r0, r4, lsl #2]
40022a24:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022a28:	e3a00000 	mov	r0, #0
40022a2c:	eaffffce 	b	4002296c <CyU3PGpioSetSimpleConfig+0x24>
40022a30:	40030ed8 	.word	0x40030ed8
40022a34:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022a38 <CyU3PGpioSetValue>:
40022a38:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022a3c:	e1a04000 	mov	r4, r0
40022a40:	e1a05001 	mov	r5, r1
40022a44:	e59f00b8 	ldr	r0, [pc, #184]	; 40022b04 <CyU3PGpioSetValue+0xcc>
40022a48:	e5900000 	ldr	r0, [r0]
40022a4c:	e3500000 	cmp	r0, #0
40022a50:	1a000001 	bne	40022a5c <CyU3PGpioSetValue+0x24>
40022a54:	e3a00042 	mov	r0, #66	; 0x42
40022a58:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022a5c:	e1a00004 	mov	r0, r4
40022a60:	ebffc002 	bl	40012a70 <CyU3PIsGpioValid>
40022a64:	e3500000 	cmp	r0, #0
40022a68:	1a000001 	bne	40022a74 <CyU3PGpioSetValue+0x3c>
40022a6c:	e3a00040 	mov	r0, #64	; 0x40
40022a70:	eafffff8 	b	40022a58 <CyU3PGpioSetValue+0x20>
40022a74:	e1a00004 	mov	r0, r4
40022a78:	ebffbff6 	bl	40012a58 <CyU3PIsGpioSimpleIOConfigured>
40022a7c:	e3500000 	cmp	r0, #0
40022a80:	0a000002 	beq	40022a90 <CyU3PGpioSetValue+0x58>
40022a84:	e59f007c 	ldr	r0, [pc, #124]	; 40022b08 <CyU3PGpioSetValue+0xd0>
40022a88:	e0807104 	add	r7, r0, r4, lsl #2
40022a8c:	ea00000d 	b	40022ac8 <CyU3PGpioSetValue+0x90>
40022a90:	e1a00004 	mov	r0, r4
40022a94:	ebffbfe9 	bl	40012a40 <CyU3PIsGpioComplexIOConfigured>
40022a98:	e3500000 	cmp	r0, #0
40022a9c:	0a000007 	beq	40022ac0 <CyU3PGpioSetValue+0x88>
40022aa0:	e1a00004 	mov	r0, r4
40022aa4:	e1a01fc4 	asr	r1, r4, #31
40022aa8:	e0841ea1 	add	r1, r4, r1, lsr #29
40022aac:	e1a011c1 	asr	r1, r1, #3
40022ab0:	e0441181 	sub	r1, r4, r1, lsl #3
40022ab4:	e59f2050 	ldr	r2, [pc, #80]	; 40022b0c <CyU3PGpioSetValue+0xd4>
40022ab8:	e0827201 	add	r7, r2, r1, lsl #4
40022abc:	ea000001 	b	40022ac8 <CyU3PGpioSetValue+0x90>
40022ac0:	e3a00044 	mov	r0, #68	; 0x44
40022ac4:	eaffffe3 	b	40022a58 <CyU3PGpioSetValue+0x20>
40022ac8:	e5970000 	ldr	r0, [r7]
40022acc:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022ad0:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022ad4:	1a000001 	bne	40022ae0 <CyU3PGpioSetValue+0xa8>
40022ad8:	e3a00044 	mov	r0, #68	; 0x44
40022adc:	eaffffdd 	b	40022a58 <CyU3PGpioSetValue+0x20>
40022ae0:	e3550000 	cmp	r5, #0
40022ae4:	0a000001 	beq	40022af0 <CyU3PGpioSetValue+0xb8>
40022ae8:	e3866001 	orr	r6, r6, #1
40022aec:	ea000000 	b	40022af4 <CyU3PGpioSetValue+0xbc>
40022af0:	e3c66001 	bic	r6, r6, #1
40022af4:	e5876000 	str	r6, [r7]
40022af8:	e5976000 	ldr	r6, [r7]
40022afc:	e3a00000 	mov	r0, #0
40022b00:	eaffffd4 	b	40022a58 <CyU3PGpioSetValue+0x20>
40022b04:	40030ed8 	.word	0x40030ed8
40022b08:	e0001100 	.word	0xe0001100
40022b0c:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022b10 <CyU3PGpioSimpleGetValue>:
40022b10:	e92d4070 	push	{r4, r5, r6, lr}
40022b14:	e1a04000 	mov	r4, r0
40022b18:	e1a06001 	mov	r6, r1
40022b1c:	e59f0068 	ldr	r0, [pc, #104]	; 40022b8c <CyU3PGpioSimpleGetValue+0x7c>
40022b20:	e5900000 	ldr	r0, [r0]
40022b24:	e3500000 	cmp	r0, #0
40022b28:	1a000001 	bne	40022b34 <CyU3PGpioSimpleGetValue+0x24>
40022b2c:	e3a00042 	mov	r0, #66	; 0x42
40022b30:	e8bd8070 	pop	{r4, r5, r6, pc}
40022b34:	e1a00004 	mov	r0, r4
40022b38:	ebffbfcc 	bl	40012a70 <CyU3PIsGpioValid>
40022b3c:	e3500000 	cmp	r0, #0
40022b40:	1a000001 	bne	40022b4c <CyU3PGpioSimpleGetValue+0x3c>
40022b44:	e3a00040 	mov	r0, #64	; 0x40
40022b48:	eafffff8 	b	40022b30 <CyU3PGpioSimpleGetValue+0x20>
40022b4c:	e3560000 	cmp	r6, #0
40022b50:	1a000001 	bne	40022b5c <CyU3PGpioSimpleGetValue+0x4c>
40022b54:	e3a00041 	mov	r0, #65	; 0x41
40022b58:	eafffff4 	b	40022b30 <CyU3PGpioSimpleGetValue+0x20>
40022b5c:	e59f002c 	ldr	r0, [pc, #44]	; 40022b90 <CyU3PGpioSimpleGetValue+0x80>
40022b60:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40022b64:	e3150040 	tst	r5, #64	; 0x40
40022b68:	0a000003 	beq	40022b7c <CyU3PGpioSimpleGetValue+0x6c>
40022b6c:	e2050002 	and	r0, r5, #2
40022b70:	e1a000a0 	lsr	r0, r0, #1
40022b74:	e5860000 	str	r0, [r6]
40022b78:	ea000001 	b	40022b84 <CyU3PGpioSimpleGetValue+0x74>
40022b7c:	e2050001 	and	r0, r5, #1
40022b80:	e5860000 	str	r0, [r6]
40022b84:	e3a00000 	mov	r0, #0
40022b88:	eaffffe8 	b	40022b30 <CyU3PGpioSimpleGetValue+0x20>
40022b8c:	40030ed8 	.word	0x40030ed8
40022b90:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40022b94 <CyU3PRegisterGpioCallBack>:
40022b94:	e59f1004 	ldr	r1, [pc, #4]	; 40022ba0 <CyU3PRegisterGpioCallBack+0xc>
40022b98:	e5810000 	str	r0, [r1]
40022b9c:	e12fff1e 	bx	lr
40022ba0:	40030edc 	.word	0x40030edc

Disassembly of section i.CyU3PRegisterUartCallBack:

40022ba4 <CyU3PRegisterUartCallBack>:
40022ba4:	e59f1004 	ldr	r1, [pc, #4]	; 40022bb0 <CyU3PRegisterUartCallBack+0xc>
40022ba8:	e5810000 	str	r0, [r1]
40022bac:	e12fff1e 	bx	lr
40022bb0:	40030eec 	.word	0x40030eec

Disassembly of section i.CyU3PUartGetLock:

40022bb4 <CyU3PUartGetLock>:
40022bb4:	e92d4010 	push	{r4, lr}
40022bb8:	e3a04000 	mov	r4, #0
40022bbc:	e59f0044 	ldr	r0, [pc, #68]	; 40022c08 <CyU3PUartGetLock+0x54>
40022bc0:	e5900000 	ldr	r0, [r0]
40022bc4:	e3500000 	cmp	r0, #0
40022bc8:	1a000001 	bne	40022bd4 <CyU3PUartGetLock+0x20>
40022bcc:	e3a00044 	mov	r0, #68	; 0x44
40022bd0:	e8bd8010 	pop	{r4, pc}
40022bd4:	ebff96cd 	bl	40008710 <_tx_thread_identify>
40022bd8:	e3500000 	cmp	r0, #0
40022bdc:	0a000000 	beq	40022be4 <CyU3PUartGetLock+0x30>
40022be0:	e3e04000 	mvn	r4, #0
40022be4:	e1a01004 	mov	r1, r4
40022be8:	e59f001c 	ldr	r0, [pc, #28]	; 40022c0c <CyU3PUartGetLock+0x58>
40022bec:	ebff9cdc 	bl	40009f64 <_txe_mutex_get>
40022bf0:	e3500000 	cmp	r0, #0
40022bf4:	0a000001 	beq	40022c00 <CyU3PUartGetLock+0x4c>
40022bf8:	e3a0001d 	mov	r0, #29
40022bfc:	eafffff3 	b	40022bd0 <CyU3PUartGetLock+0x1c>
40022c00:	e3a00000 	mov	r0, #0
40022c04:	eafffff1 	b	40022bd0 <CyU3PUartGetLock+0x1c>
40022c08:	40030ee8 	.word	0x40030ee8
40022c0c:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartInit:

40022c10 <CyU3PUartInit>:
40022c10:	e92d4010 	push	{r4, lr}
40022c14:	e3a00003 	mov	r0, #3
40022c18:	ebffbf9b 	bl	40012a8c <CyU3PIsLppIOConfigured>
40022c1c:	e3500000 	cmp	r0, #0
40022c20:	1a000001 	bne	40022c2c <CyU3PUartInit+0x1c>
40022c24:	e3a00044 	mov	r0, #68	; 0x44
40022c28:	e8bd8010 	pop	{r4, pc}
40022c2c:	e59f00b8 	ldr	r0, [pc, #184]	; 40022cec <CyU3PUartInit+0xdc>
40022c30:	e5900000 	ldr	r0, [r0]
40022c34:	e3500000 	cmp	r0, #0
40022c38:	0a000001 	beq	40022c44 <CyU3PUartInit+0x34>
40022c3c:	e3a00043 	mov	r0, #67	; 0x43
40022c40:	eafffff8 	b	40022c28 <CyU3PUartInit+0x18>
40022c44:	e3a03038 	mov	r3, #56	; 0x38
40022c48:	e3a02000 	mov	r2, #0
40022c4c:	e1a01002 	mov	r1, r2
40022c50:	e59f0098 	ldr	r0, [pc, #152]	; 40022cf0 <CyU3PUartInit+0xe0>
40022c54:	ebff9c44 	bl	40009d6c <_txe_mutex_create>
40022c58:	e3a00d96 	mov	r0, #9600	; 0x2580
40022c5c:	ebffc505 	bl	40014078 <CyU3PUartSetClock>
40022c60:	e1a04000 	mov	r4, r0
40022c64:	e3540000 	cmp	r4, #0
40022c68:	0a000001 	beq	40022c74 <CyU3PUartInit+0x64>
40022c6c:	e1a00004 	mov	r0, r4
40022c70:	eaffffec 	b	40022c28 <CyU3PUartInit+0x18>
40022c74:	e59f1078 	ldr	r1, [pc, #120]	; 40022cf4 <CyU3PUartInit+0xe4>
40022c78:	e3a00003 	mov	r0, #3
40022c7c:	ebffc3df 	bl	40013c00 <CyU3PLppInit>
40022c80:	e1a04000 	mov	r4, r0
40022c84:	e3540000 	cmp	r4, #0
40022c88:	0a000001 	beq	40022c94 <CyU3PUartInit+0x84>
40022c8c:	e1a00004 	mov	r0, r4
40022c90:	eaffffe4 	b	40022c28 <CyU3PUartInit+0x18>
40022c94:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022c98:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022c9c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022ca0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022ca4:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022ca8:	e3a0000a 	mov	r0, #10
40022cac:	ebffc1d7 	bl	40013410 <CyU3PBusyWait>
40022cb0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022cb4:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022cb8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022cbc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022cc0:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022cc4:	e1a00000 	nop			; (mov r0, r0)
40022cc8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022ccc:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022cd0:	e3100001 	tst	r0, #1
40022cd4:	0afffffb 	beq	40022cc8 <CyU3PUartInit+0xb8>
40022cd8:	e3a00001 	mov	r0, #1
40022cdc:	e59f1008 	ldr	r1, [pc, #8]	; 40022cec <CyU3PUartInit+0xdc>
40022ce0:	e5810000 	str	r0, [r1]
40022ce4:	e3a00000 	mov	r0, #0
40022ce8:	eaffffce 	b	40022c28 <CyU3PUartInit+0x18>
40022cec:	40030ee8 	.word	0x40030ee8
40022cf0:	40032e1c 	.word	0x40032e1c
40022cf4:	40022cf8 	.word	0x40022cf8

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40022cf8 <CyU3PUartInt_ThreadHandler>:
40022cf8:	e92d4070 	push	{r4, r5, r6, lr}
40022cfc:	ebffffac 	bl	40022bb4 <CyU3PUartGetLock>
40022d00:	e1a05000 	mov	r5, r0
40022d04:	e3550000 	cmp	r5, #0
40022d08:	0a000000 	beq	40022d10 <CyU3PUartInt_ThreadHandler+0x18>
40022d0c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022d10:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d14:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40022d18:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022d1c:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40022d20:	e0004001 	and	r4, r0, r1
40022d24:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d28:	e5804808 	str	r4, [r0, #2056]	; 0x808
40022d2c:	e59f0078 	ldr	r0, [pc, #120]	; 40022dac <CyU3PUartInt_ThreadHandler+0xb4>
40022d30:	e5900000 	ldr	r0, [r0]
40022d34:	e3500000 	cmp	r0, #0
40022d38:	1a000001 	bne	40022d44 <CyU3PUartInt_ThreadHandler+0x4c>
40022d3c:	eb00001b 	bl	40022db0 <CyU3PUartReleaseLock>
40022d40:	eafffff1 	b	40022d0c <CyU3PUartInt_ThreadHandler+0x14>
40022d44:	e3140001 	tst	r4, #1
40022d48:	0a000004 	beq	40022d60 <CyU3PUartInt_ThreadHandler+0x68>
40022d4c:	e3a01000 	mov	r1, #0
40022d50:	e1a00001 	mov	r0, r1
40022d54:	e59f2050 	ldr	r2, [pc, #80]	; 40022dac <CyU3PUartInt_ThreadHandler+0xb4>
40022d58:	e5922000 	ldr	r2, [r2]
40022d5c:	e12fff32 	blx	r2
40022d60:	e3140008 	tst	r4, #8
40022d64:	0a000004 	beq	40022d7c <CyU3PUartInt_ThreadHandler+0x84>
40022d68:	e3a01000 	mov	r1, #0
40022d6c:	e3a00001 	mov	r0, #1
40022d70:	e59f2034 	ldr	r2, [pc, #52]	; 40022dac <CyU3PUartInt_ThreadHandler+0xb4>
40022d74:	e5922000 	ldr	r2, [r2]
40022d78:	e12fff32 	blx	r2
40022d7c:	e3140c02 	tst	r4, #512	; 0x200
40022d80:	0a000007 	beq	40022da4 <CyU3PUartInt_ThreadHandler+0xac>
40022d84:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d88:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
40022d8c:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40022d90:	e1a01c20 	lsr	r1, r0, #24
40022d94:	e3a00002 	mov	r0, #2
40022d98:	e59f200c 	ldr	r2, [pc, #12]	; 40022dac <CyU3PUartInt_ThreadHandler+0xb4>
40022d9c:	e5922000 	ldr	r2, [r2]
40022da0:	e12fff32 	blx	r2
40022da4:	eb000001 	bl	40022db0 <CyU3PUartReleaseLock>
40022da8:	eaffffd7 	b	40022d0c <CyU3PUartInt_ThreadHandler+0x14>
40022dac:	40030eec 	.word	0x40030eec

Disassembly of section i.CyU3PUartReleaseLock:

40022db0 <CyU3PUartReleaseLock>:
40022db0:	e92d4010 	push	{r4, lr}
40022db4:	e59f0030 	ldr	r0, [pc, #48]	; 40022dec <CyU3PUartReleaseLock+0x3c>
40022db8:	e5900000 	ldr	r0, [r0]
40022dbc:	e3500000 	cmp	r0, #0
40022dc0:	1a000001 	bne	40022dcc <CyU3PUartReleaseLock+0x1c>
40022dc4:	e3a00044 	mov	r0, #68	; 0x44
40022dc8:	e8bd8010 	pop	{r4, pc}
40022dcc:	e59f001c 	ldr	r0, [pc, #28]	; 40022df0 <CyU3PUartReleaseLock+0x40>
40022dd0:	ebff9c98 	bl	4000a038 <_txe_mutex_put>
40022dd4:	e3500000 	cmp	r0, #0
40022dd8:	0a000001 	beq	40022de4 <CyU3PUartReleaseLock+0x34>
40022ddc:	e3a0001d 	mov	r0, #29
40022de0:	eafffff8 	b	40022dc8 <CyU3PUartReleaseLock+0x18>
40022de4:	e3a00000 	mov	r0, #0
40022de8:	eafffff6 	b	40022dc8 <CyU3PUartReleaseLock+0x18>
40022dec:	40030ee8 	.word	0x40030ee8
40022df0:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartSetConfig:

40022df4 <CyU3PUartSetConfig>:
40022df4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022df8:	e1a04000 	mov	r4, r0
40022dfc:	e1a05001 	mov	r5, r1
40022e00:	e3a07000 	mov	r7, #0
40022e04:	e59f01f0 	ldr	r0, [pc, #496]	; 40022ffc <CyU3PUartSetConfig+0x208>
40022e08:	e5900000 	ldr	r0, [r0]
40022e0c:	e3500000 	cmp	r0, #0
40022e10:	1a000001 	bne	40022e1c <CyU3PUartSetConfig+0x28>
40022e14:	e3a00042 	mov	r0, #66	; 0x42
40022e18:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022e1c:	e3540000 	cmp	r4, #0
40022e20:	1a000001 	bne	40022e2c <CyU3PUartSetConfig+0x38>
40022e24:	e3a00041 	mov	r0, #65	; 0x41
40022e28:	eafffffa 	b	40022e18 <CyU3PUartSetConfig+0x24>
40022e2c:	e5940004 	ldr	r0, [r4, #4]
40022e30:	e5941000 	ldr	r1, [r4]
40022e34:	e1900001 	orrs	r0, r0, r1
40022e38:	1a000001 	bne	40022e44 <CyU3PUartSetConfig+0x50>
40022e3c:	e3a00040 	mov	r0, #64	; 0x40
40022e40:	eafffff4 	b	40022e18 <CyU3PUartSetConfig+0x24>
40022e44:	e5d40015 	ldrb	r0, [r4, #21]
40022e48:	e3500003 	cmp	r0, #3
40022e4c:	ba000001 	blt	40022e58 <CyU3PUartSetConfig+0x64>
40022e50:	e3a00040 	mov	r0, #64	; 0x40
40022e54:	eaffffef 	b	40022e18 <CyU3PUartSetConfig+0x24>
40022e58:	e5d40014 	ldrb	r0, [r4, #20]
40022e5c:	e3500001 	cmp	r0, #1
40022e60:	0a000004 	beq	40022e78 <CyU3PUartSetConfig+0x84>
40022e64:	e5d40014 	ldrb	r0, [r4, #20]
40022e68:	e3500002 	cmp	r0, #2
40022e6c:	0a000001 	beq	40022e78 <CyU3PUartSetConfig+0x84>
40022e70:	e3a00040 	mov	r0, #64	; 0x40
40022e74:	eaffffe7 	b	40022e18 <CyU3PUartSetConfig+0x24>
40022e78:	e594000c 	ldr	r0, [r4, #12]
40022e7c:	e3500000 	cmp	r0, #0
40022e80:	1a000003 	bne	40022e94 <CyU3PUartSetConfig+0xa0>
40022e84:	e3550000 	cmp	r5, #0
40022e88:	0a000001 	beq	40022e94 <CyU3PUartSetConfig+0xa0>
40022e8c:	e3a00040 	mov	r0, #64	; 0x40
40022e90:	eaffffe0 	b	40022e18 <CyU3PUartSetConfig+0x24>
40022e94:	ebffff46 	bl	40022bb4 <CyU3PUartGetLock>
40022e98:	e1a06000 	mov	r6, r0
40022e9c:	e3560000 	cmp	r6, #0
40022ea0:	0a000001 	beq	40022eac <CyU3PUartSetConfig+0xb8>
40022ea4:	e3a0001d 	mov	r0, #29
40022ea8:	eaffffda 	b	40022e18 <CyU3PUartSetConfig+0x24>
40022eac:	e5940010 	ldr	r0, [r4, #16]
40022eb0:	ebffc470 	bl	40014078 <CyU3PUartSetClock>
40022eb4:	e1a06000 	mov	r6, r0
40022eb8:	e3560000 	cmp	r6, #0
40022ebc:	0a000002 	beq	40022ecc <CyU3PUartSetConfig+0xd8>
40022ec0:	ebffffba 	bl	40022db0 <CyU3PUartReleaseLock>
40022ec4:	e1a00006 	mov	r0, r6
40022ec8:	eaffffd2 	b	40022e18 <CyU3PUartSetConfig+0x24>
40022ecc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022ed0:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40022ed4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022ed8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022edc:	e5810800 	str	r0, [r1, #2048]	; 0x800
40022ee0:	e5940004 	ldr	r0, [r4, #4]
40022ee4:	e3500000 	cmp	r0, #0
40022ee8:	0a000001 	beq	40022ef4 <CyU3PUartSetConfig+0x100>
40022eec:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40022ef0:	e3877001 	orr	r7, r7, #1
40022ef4:	e5940000 	ldr	r0, [r4]
40022ef8:	e3500000 	cmp	r0, #0
40022efc:	0a000000 	beq	40022f04 <CyU3PUartSetConfig+0x110>
40022f00:	e3877002 	orr	r7, r7, #2
40022f04:	e5940008 	ldr	r0, [r4, #8]
40022f08:	e3500000 	cmp	r0, #0
40022f0c:	0a000000 	beq	40022f14 <CyU3PUartSetConfig+0x120>
40022f10:	e3877a06 	orr	r7, r7, #24576	; 0x6000
40022f14:	e594000c 	ldr	r0, [r4, #12]
40022f18:	e3500000 	cmp	r0, #0
40022f1c:	0a000004 	beq	40022f34 <CyU3PUartSetConfig+0x140>
40022f20:	e3877b01 	orr	r7, r7, #1024	; 0x400
40022f24:	e3a00001 	mov	r0, #1
40022f28:	e59f10d0 	ldr	r1, [pc, #208]	; 40023000 <CyU3PUartSetConfig+0x20c>
40022f2c:	e5810000 	str	r0, [r1]
40022f30:	ea000002 	b	40022f40 <CyU3PUartSetConfig+0x14c>
40022f34:	e3a00000 	mov	r0, #0
40022f38:	e59f10c0 	ldr	r1, [pc, #192]	; 40023000 <CyU3PUartSetConfig+0x20c>
40022f3c:	e5810000 	str	r0, [r1]
40022f40:	e5d40014 	ldrb	r0, [r4, #20]
40022f44:	e3a01c03 	mov	r1, #768	; 0x300
40022f48:	e0010400 	and	r0, r1, r0, lsl #8
40022f4c:	e1877000 	orr	r7, r7, r0
40022f50:	e5d40015 	ldrb	r0, [r4, #21]
40022f54:	e3500001 	cmp	r0, #1
40022f58:	0a000002 	beq	40022f68 <CyU3PUartSetConfig+0x174>
40022f5c:	e3500002 	cmp	r0, #2
40022f60:	1a000006 	bne	40022f80 <CyU3PUartSetConfig+0x18c>
40022f64:	ea000002 	b	40022f74 <CyU3PUartSetConfig+0x180>
40022f68:	e1a00000 	nop			; (mov r0, r0)
40022f6c:	e3877008 	orr	r7, r7, #8
40022f70:	ea000004 	b	40022f88 <CyU3PUartSetConfig+0x194>
40022f74:	e1a00000 	nop			; (mov r0, r0)
40022f78:	e3877018 	orr	r7, r7, #24
40022f7c:	ea000001 	b	40022f88 <CyU3PUartSetConfig+0x194>
40022f80:	e1a00000 	nop			; (mov r0, r0)
40022f84:	e1a00000 	nop			; (mov r0, r0)
40022f88:	e1a00000 	nop			; (mov r0, r0)
40022f8c:	e3877807 	orr	r7, r7, #458752	; 0x70000
40022f90:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022f94:	e5807800 	str	r7, [r0, #2048]	; 0x800
40022f98:	e59f0064 	ldr	r0, [pc, #100]	; 40023004 <CyU3PUartSetConfig+0x210>
40022f9c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fa0:	e5810818 	str	r0, [r1, #2072]	; 0x818
40022fa4:	e1a00005 	mov	r0, r5
40022fa8:	ebfffefd 	bl	40022ba4 <CyU3PRegisterUartCallBack>
40022fac:	e3550000 	cmp	r5, #0
40022fb0:	0a000003 	beq	40022fc4 <CyU3PUartSetConfig+0x1d0>
40022fb4:	e59f004c 	ldr	r0, [pc, #76]	; 40023008 <CyU3PUartSetConfig+0x214>
40022fb8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fbc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40022fc0:	ea000002 	b	40022fd0 <CyU3PUartSetConfig+0x1dc>
40022fc4:	e3a00000 	mov	r0, #0
40022fc8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fcc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40022fd0:	e3a00001 	mov	r0, #1
40022fd4:	e59f1030 	ldr	r1, [pc, #48]	; 4002300c <CyU3PUartSetConfig+0x218>
40022fd8:	e5810000 	str	r0, [r1]
40022fdc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022fe0:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40022fe4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022fe8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fec:	e5810800 	str	r0, [r1, #2048]	; 0x800
40022ff0:	ebffff6e 	bl	40022db0 <CyU3PUartReleaseLock>
40022ff4:	e3a00000 	mov	r0, #0
40022ff8:	eaffff86 	b	40022e18 <CyU3PUartSetConfig+0x24>
40022ffc:	40030ee8 	.word	0x40030ee8
40023000:	40030ee0 	.word	0x40030ee0
40023004:	00000603 	.word	0x00000603
40023008:	00000309 	.word	0x00000309
4002300c:	40030ee4 	.word	0x40030ee4

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023010 <CyU3PUartTxSetBlockXfer>:
40023010:	e92d4070 	push	{r4, r5, r6, lr}
40023014:	e1a05000 	mov	r5, r0
40023018:	e59f003c 	ldr	r0, [pc, #60]	; 4002305c <CyU3PUartTxSetBlockXfer+0x4c>
4002301c:	e5900000 	ldr	r0, [r0]
40023020:	e3500000 	cmp	r0, #0
40023024:	1a000001 	bne	40023030 <CyU3PUartTxSetBlockXfer+0x20>
40023028:	e3a00044 	mov	r0, #68	; 0x44
4002302c:	e8bd8070 	pop	{r4, r5, r6, pc}
40023030:	ebfffedf 	bl	40022bb4 <CyU3PUartGetLock>
40023034:	e1a04000 	mov	r4, r0
40023038:	e3540000 	cmp	r4, #0
4002303c:	0a000001 	beq	40023048 <CyU3PUartTxSetBlockXfer+0x38>
40023040:	e1a00004 	mov	r0, r4
40023044:	eafffff8 	b	4002302c <CyU3PUartTxSetBlockXfer+0x1c>
40023048:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002304c:	e5805820 	str	r5, [r0, #2080]	; 0x820
40023050:	ebffff56 	bl	40022db0 <CyU3PUartReleaseLock>
40023054:	e3a00000 	mov	r0, #0
40023058:	eafffff3 	b	4002302c <CyU3PUartTxSetBlockXfer+0x1c>
4002305c:	40030ee0 	.word	0x40030ee0

Disassembly of section i.CyU3PI2cErrorRecovery:

40023060 <CyU3PI2cErrorRecovery>:
40023060:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023064:	e1a04000 	mov	r4, r0
40023068:	e3a07000 	mov	r7, #0
4002306c:	e3a08000 	mov	r8, #0
40023070:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023074:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023078:	e59f1164 	ldr	r1, [pc, #356]	; 400231e4 <CyU3PI2cErrorRecovery+0x184>
4002307c:	e5810000 	str	r0, [r1]
40023080:	e59f5160 	ldr	r5, [pc, #352]	; 400231e8 <CyU3PI2cErrorRecovery+0x188>
40023084:	e1a00000 	nop			; (mov r0, r0)
40023088:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002308c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023090:	e3100201 	tst	r0, #268435456	; 0x10000000
40023094:	0a000002 	beq	400230a4 <CyU3PI2cErrorRecovery+0x44>
40023098:	e1b00005 	movs	r0, r5
4002309c:	e2455001 	sub	r5, r5, #1
400230a0:	1afffff8 	bne	40023088 <CyU3PI2cErrorRecovery+0x28>
400230a4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230a8:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
400230ac:	e3a00000 	mov	r0, #0
400230b0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400230b4:	e581040c 	str	r0, [r1, #1036]	; 0x40c
400230b8:	e3e00000 	mvn	r0, #0
400230bc:	e5810408 	str	r0, [r1, #1032]	; 0x408
400230c0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230c4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400230c8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400230cc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400230d0:	e3a00005 	mov	r0, #5
400230d4:	ebffc0cd 	bl	40013410 <CyU3PBusyWait>
400230d8:	e3540000 	cmp	r4, #0
400230dc:	0a000032 	beq	400231ac <CyU3PI2cErrorRecovery+0x14c>
400230e0:	e3a00000 	mov	r0, #0
400230e4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400230e8:	e5810438 	str	r0, [r1, #1080]	; 0x438
400230ec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230f0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400230f4:	e3100008 	tst	r0, #8
400230f8:	1a000000 	bne	40023100 <CyU3PI2cErrorRecovery+0xa0>
400230fc:	e3a07101 	mov	r7, #1073741824	; 0x40000000
40023100:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023104:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023108:	e3100002 	tst	r0, #2
4002310c:	0a000000 	beq	40023114 <CyU3PI2cErrorRecovery+0xb4>
40023110:	e3a07202 	mov	r7, #536870912	; 0x20000000
40023114:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023118:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002311c:	e1800007 	orr	r0, r0, r7
40023120:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023124:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023128:	e1e05741 	mvn	r5, r1, asr #14
4002312c:	ea000004 	b	40023144 <CyU3PI2cErrorRecovery+0xe4>
40023130:	e1b00005 	movs	r0, r5
40023134:	e2455001 	sub	r5, r5, #1
40023138:	1a000001 	bne	40023144 <CyU3PI2cErrorRecovery+0xe4>
4002313c:	e3a08054 	mov	r8, #84	; 0x54
40023140:	ea000003 	b	40023154 <CyU3PI2cErrorRecovery+0xf4>
40023144:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023148:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002314c:	e3100008 	tst	r0, #8
40023150:	0afffff6 	beq	40023130 <CyU3PI2cErrorRecovery+0xd0>
40023154:	e1a00000 	nop			; (mov r0, r0)
40023158:	e3580000 	cmp	r8, #0
4002315c:	1a00000b 	bne	40023190 <CyU3PI2cErrorRecovery+0x130>
40023160:	e59f5080 	ldr	r5, [pc, #128]	; 400231e8 <CyU3PI2cErrorRecovery+0x188>
40023164:	ea000004 	b	4002317c <CyU3PI2cErrorRecovery+0x11c>
40023168:	e1b00005 	movs	r0, r5
4002316c:	e2455001 	sub	r5, r5, #1
40023170:	1a000001 	bne	4002317c <CyU3PI2cErrorRecovery+0x11c>
40023174:	e3a08054 	mov	r8, #84	; 0x54
40023178:	ea000003 	b	4002318c <CyU3PI2cErrorRecovery+0x12c>
4002317c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023180:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023184:	e3100002 	tst	r0, #2
40023188:	1afffff6 	bne	40023168 <CyU3PI2cErrorRecovery+0x108>
4002318c:	e1a00000 	nop			; (mov r0, r0)
40023190:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023194:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023198:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
4002319c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231a0:	e5810400 	str	r0, [r1, #1024]	; 0x400
400231a4:	e3a00001 	mov	r0, #1
400231a8:	ebffc098 	bl	40013410 <CyU3PBusyWait>
400231ac:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231b0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400231b4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400231b8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231bc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400231c0:	e3a00005 	mov	r0, #5
400231c4:	ebffc091 	bl	40013410 <CyU3PBusyWait>
400231c8:	e3e00000 	mvn	r0, #0
400231cc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231d0:	e5810408 	str	r0, [r1, #1032]	; 0x408
400231d4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231d8:	e580640c 	str	r6, [r0, #1036]	; 0x40c
400231dc:	e1a00008 	mov	r0, r8
400231e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400231e4:	40030f00 	.word	0x40030f00
400231e8:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

400231ec <CyU3PI2cGetLock>:
400231ec:	e92d4010 	push	{r4, lr}
400231f0:	e3a04000 	mov	r4, #0
400231f4:	e59f0044 	ldr	r0, [pc, #68]	; 40023240 <CyU3PI2cGetLock+0x54>
400231f8:	e5900000 	ldr	r0, [r0]
400231fc:	e3500000 	cmp	r0, #0
40023200:	1a000001 	bne	4002320c <CyU3PI2cGetLock+0x20>
40023204:	e3a00044 	mov	r0, #68	; 0x44
40023208:	e8bd8010 	pop	{r4, pc}
4002320c:	ebff953f 	bl	40008710 <_tx_thread_identify>
40023210:	e3500000 	cmp	r0, #0
40023214:	0a000000 	beq	4002321c <CyU3PI2cGetLock+0x30>
40023218:	e3e04000 	mvn	r4, #0
4002321c:	e1a01004 	mov	r1, r4
40023220:	e59f001c 	ldr	r0, [pc, #28]	; 40023244 <CyU3PI2cGetLock+0x58>
40023224:	ebff9b4e 	bl	40009f64 <_txe_mutex_get>
40023228:	e3500000 	cmp	r0, #0
4002322c:	0a000001 	beq	40023238 <CyU3PI2cGetLock+0x4c>
40023230:	e3a0001d 	mov	r0, #29
40023234:	eafffff3 	b	40023208 <CyU3PI2cGetLock+0x1c>
40023238:	e3a00000 	mov	r0, #0
4002323c:	eafffff1 	b	40023208 <CyU3PI2cGetLock+0x1c>
40023240:	40030ef8 	.word	0x40030ef8
40023244:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cInit:

40023248 <CyU3PI2cInit>:
40023248:	e92d4010 	push	{r4, lr}
4002324c:	e3a00000 	mov	r0, #0
40023250:	ebffbe0d 	bl	40012a8c <CyU3PIsLppIOConfigured>
40023254:	e3500000 	cmp	r0, #0
40023258:	1a000001 	bne	40023264 <CyU3PI2cInit+0x1c>
4002325c:	e3a00044 	mov	r0, #68	; 0x44
40023260:	e8bd8010 	pop	{r4, pc}
40023264:	e59f00bc 	ldr	r0, [pc, #188]	; 40023328 <CyU3PI2cInit+0xe0>
40023268:	e5900000 	ldr	r0, [r0]
4002326c:	e3500000 	cmp	r0, #0
40023270:	0a000001 	beq	4002327c <CyU3PI2cInit+0x34>
40023274:	e3a00043 	mov	r0, #67	; 0x43
40023278:	eafffff8 	b	40023260 <CyU3PI2cInit+0x18>
4002327c:	e59f00a8 	ldr	r0, [pc, #168]	; 4002332c <CyU3PI2cInit+0xe4>
40023280:	ebffc1f7 	bl	40013a64 <CyU3PI2cSetClock>
40023284:	e1a04000 	mov	r4, r0
40023288:	e3540000 	cmp	r4, #0
4002328c:	0a000001 	beq	40023298 <CyU3PI2cInit+0x50>
40023290:	e1a00004 	mov	r0, r4
40023294:	eafffff1 	b	40023260 <CyU3PI2cInit+0x18>
40023298:	e59f1090 	ldr	r1, [pc, #144]	; 40023330 <CyU3PI2cInit+0xe8>
4002329c:	e3a00000 	mov	r0, #0
400232a0:	ebffc256 	bl	40013c00 <CyU3PLppInit>
400232a4:	e1a04000 	mov	r4, r0
400232a8:	e3540000 	cmp	r4, #0
400232ac:	0a000001 	beq	400232b8 <CyU3PI2cInit+0x70>
400232b0:	e1a00004 	mov	r0, r4
400232b4:	eaffffe9 	b	40023260 <CyU3PI2cInit+0x18>
400232b8:	e3a03038 	mov	r3, #56	; 0x38
400232bc:	e3a02000 	mov	r2, #0
400232c0:	e1a01002 	mov	r1, r2
400232c4:	e59f0068 	ldr	r0, [pc, #104]	; 40023334 <CyU3PI2cInit+0xec>
400232c8:	ebff9aa7 	bl	40009d6c <_txe_mutex_create>
400232cc:	e3a00000 	mov	r0, #0
400232d0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232d4:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
400232d8:	e3a0000a 	mov	r0, #10
400232dc:	ebffc04b 	bl	40013410 <CyU3PBusyWait>
400232e0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232e4:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
400232e8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400232ec:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232f0:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
400232f4:	e1a00000 	nop			; (mov r0, r0)
400232f8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232fc:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023300:	e3100001 	tst	r0, #1
40023304:	0afffffb 	beq	400232f8 <CyU3PI2cInit+0xb0>
40023308:	e3a00000 	mov	r0, #0
4002330c:	e59f1024 	ldr	r1, [pc, #36]	; 40023338 <CyU3PI2cInit+0xf0>
40023310:	e5810000 	str	r0, [r1]
40023314:	e3a00001 	mov	r0, #1
40023318:	e2411008 	sub	r1, r1, #8
4002331c:	e5810000 	str	r0, [r1]
40023320:	e3a00000 	mov	r0, #0
40023324:	eaffffcd 	b	40023260 <CyU3PI2cInit+0x18>
40023328:	40030ef8 	.word	0x40030ef8
4002332c:	000186a0 	.word	0x000186a0
40023330:	4002333c 	.word	0x4002333c
40023334:	40032e54 	.word	0x40032e54
40023338:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

4002333c <CyU3PI2cInt_ThreadHandler>:
4002333c:	e92d4070 	push	{r4, r5, r6, lr}
40023340:	ebffffa9 	bl	400231ec <CyU3PI2cGetLock>
40023344:	e1a05000 	mov	r5, r0
40023348:	e3550000 	cmp	r5, #0
4002334c:	0a000000 	beq	40023354 <CyU3PI2cInt_ThreadHandler+0x18>
40023350:	e8bd8070 	pop	{r4, r5, r6, pc}
40023354:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023358:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002335c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023360:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
40023364:	e0004001 	and	r4, r0, r1
40023368:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002336c:	e5804408 	str	r4, [r0, #1032]	; 0x408
40023370:	e59f00b0 	ldr	r0, [pc, #176]	; 40023428 <CyU3PI2cInt_ThreadHandler+0xec>
40023374:	e5900000 	ldr	r0, [r0]
40023378:	e3500000 	cmp	r0, #0
4002337c:	1a000001 	bne	40023388 <CyU3PI2cInt_ThreadHandler+0x4c>
40023380:	eb000098 	bl	400235e8 <CyU3PI2cReleaseLock>
40023384:	eafffff1 	b	40023350 <CyU3PI2cInt_ThreadHandler+0x14>
40023388:	e3140001 	tst	r4, #1
4002338c:	0a000004 	beq	400233a4 <CyU3PI2cInt_ThreadHandler+0x68>
40023390:	e3a01000 	mov	r1, #0
40023394:	e1a00001 	mov	r0, r1
40023398:	e59f2088 	ldr	r2, [pc, #136]	; 40023428 <CyU3PI2cInt_ThreadHandler+0xec>
4002339c:	e5922000 	ldr	r2, [r2]
400233a0:	e12fff32 	blx	r2
400233a4:	e3140008 	tst	r4, #8
400233a8:	0a000004 	beq	400233c0 <CyU3PI2cInt_ThreadHandler+0x84>
400233ac:	e3a01000 	mov	r1, #0
400233b0:	e3a00001 	mov	r0, #1
400233b4:	e59f206c 	ldr	r2, [pc, #108]	; 40023428 <CyU3PI2cInt_ThreadHandler+0xec>
400233b8:	e5922000 	ldr	r2, [r2]
400233bc:	e12fff32 	blx	r2
400233c0:	e3140040 	tst	r4, #64	; 0x40
400233c4:	0a000004 	beq	400233dc <CyU3PI2cInt_ThreadHandler+0xa0>
400233c8:	e3a01000 	mov	r1, #0
400233cc:	e3a00002 	mov	r0, #2
400233d0:	e59f2050 	ldr	r2, [pc, #80]	; 40023428 <CyU3PI2cInt_ThreadHandler+0xec>
400233d4:	e5922000 	ldr	r2, [r2]
400233d8:	e12fff32 	blx	r2
400233dc:	e3140080 	tst	r4, #128	; 0x80
400233e0:	0a000004 	beq	400233f8 <CyU3PI2cInt_ThreadHandler+0xbc>
400233e4:	e3a01000 	mov	r1, #0
400233e8:	e3a00003 	mov	r0, #3
400233ec:	e59f2034 	ldr	r2, [pc, #52]	; 40023428 <CyU3PI2cInt_ThreadHandler+0xec>
400233f0:	e5922000 	ldr	r2, [r2]
400233f4:	e12fff32 	blx	r2
400233f8:	e3140c01 	tst	r4, #256	; 0x100
400233fc:	0a000007 	beq	40023420 <CyU3PI2cInt_ThreadHandler+0xe4>
40023400:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023404:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023408:	e200040f 	and	r0, r0, #251658240	; 0xf000000
4002340c:	e1a01c20 	lsr	r1, r0, #24
40023410:	e3a00004 	mov	r0, #4
40023414:	e59f200c 	ldr	r2, [pc, #12]	; 40023428 <CyU3PI2cInt_ThreadHandler+0xec>
40023418:	e5922000 	ldr	r2, [r2]
4002341c:	e12fff32 	blx	r2
40023420:	eb000070 	bl	400235e8 <CyU3PI2cReleaseLock>
40023424:	eaffffc9 	b	40023350 <CyU3PI2cInt_ThreadHandler+0x14>
40023428:	40030efc 	.word	0x40030efc

Disassembly of section i.CyU3PI2cReceiveBytes:

4002342c <CyU3PI2cReceiveBytes>:
4002342c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40023430:	e1a04000 	mov	r4, r0
40023434:	e1a05001 	mov	r5, r1
40023438:	e1a06002 	mov	r6, r2
4002343c:	e1a07003 	mov	r7, r3
40023440:	e59f0194 	ldr	r0, [pc, #404]	; 400235dc <CyU3PI2cReceiveBytes+0x1b0>
40023444:	e5900000 	ldr	r0, [r0]
40023448:	e3500000 	cmp	r0, #0
4002344c:	1a000001 	bne	40023458 <CyU3PI2cReceiveBytes+0x2c>
40023450:	e3a00044 	mov	r0, #68	; 0x44
40023454:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40023458:	e59f0180 	ldr	r0, [pc, #384]	; 400235e0 <CyU3PI2cReceiveBytes+0x1b4>
4002345c:	e5900000 	ldr	r0, [r0]
40023460:	e3500000 	cmp	r0, #0
40023464:	0a000001 	beq	40023470 <CyU3PI2cReceiveBytes+0x44>
40023468:	e3a00044 	mov	r0, #68	; 0x44
4002346c:	eafffff8 	b	40023454 <CyU3PI2cReceiveBytes+0x28>
40023470:	e3550000 	cmp	r5, #0
40023474:	0a000001 	beq	40023480 <CyU3PI2cReceiveBytes+0x54>
40023478:	e3540000 	cmp	r4, #0
4002347c:	1a000001 	bne	40023488 <CyU3PI2cReceiveBytes+0x5c>
40023480:	e3a00041 	mov	r0, #65	; 0x41
40023484:	eafffff2 	b	40023454 <CyU3PI2cReceiveBytes+0x28>
40023488:	e5d40008 	ldrb	r0, [r4, #8]
4002348c:	e3500000 	cmp	r0, #0
40023490:	0a000002 	beq	400234a0 <CyU3PI2cReceiveBytes+0x74>
40023494:	e5d40008 	ldrb	r0, [r4, #8]
40023498:	e3500008 	cmp	r0, #8
4002349c:	da000001 	ble	400234a8 <CyU3PI2cReceiveBytes+0x7c>
400234a0:	e3a00040 	mov	r0, #64	; 0x40
400234a4:	eaffffea 	b	40023454 <CyU3PI2cReceiveBytes+0x28>
400234a8:	e3560000 	cmp	r6, #0
400234ac:	1a000001 	bne	400234b8 <CyU3PI2cReceiveBytes+0x8c>
400234b0:	e3a00000 	mov	r0, #0
400234b4:	eaffffe6 	b	40023454 <CyU3PI2cReceiveBytes+0x28>
400234b8:	ebffff4b 	bl	400231ec <CyU3PI2cGetLock>
400234bc:	e1a08000 	mov	r8, r0
400234c0:	e3580000 	cmp	r8, #0
400234c4:	0a000001 	beq	400234d0 <CyU3PI2cReceiveBytes+0xa4>
400234c8:	e1a00008 	mov	r0, r8
400234cc:	eaffffe0 	b	40023454 <CyU3PI2cReceiveBytes+0x28>
400234d0:	e3a0bd07 	mov	fp, #448	; 0x1c0
400234d4:	e1a00000 	nop			; (mov r0, r0)
400234d8:	e3a02001 	mov	r2, #1
400234dc:	e1a01006 	mov	r1, r6
400234e0:	e1a00004 	mov	r0, r4
400234e4:	eb000166 	bl	40023a84 <MyI2cSendCommand>
400234e8:	e1a08000 	mov	r8, r0
400234ec:	e3580000 	cmp	r8, #0
400234f0:	0a000000 	beq	400234f8 <CyU3PI2cReceiveBytes+0xcc>
400234f4:	ea00002a 	b	400235a4 <CyU3PI2cReceiveBytes+0x178>
400234f8:	e3a0a000 	mov	sl, #0
400234fc:	ea000020 	b	40023584 <CyU3PI2cReceiveBytes+0x158>
40023500:	e59f00dc 	ldr	r0, [pc, #220]	; 400235e4 <CyU3PI2cReceiveBytes+0x1b8>
40023504:	e58d0000 	str	r0, [sp]
40023508:	ea000006 	b	40023528 <CyU3PI2cReceiveBytes+0xfc>
4002350c:	e59d0000 	ldr	r0, [sp]
40023510:	e2401001 	sub	r1, r0, #1
40023514:	e3500000 	cmp	r0, #0
40023518:	e58d1000 	str	r1, [sp]
4002351c:	1a000001 	bne	40023528 <CyU3PI2cReceiveBytes+0xfc>
40023520:	e3a08055 	mov	r8, #85	; 0x55
40023524:	ea000004 	b	4002353c <CyU3PI2cReceiveBytes+0x110>
40023528:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002352c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023530:	e38b1002 	orr	r1, fp, #2
40023534:	e1100001 	tst	r0, r1
40023538:	0afffff3 	beq	4002350c <CyU3PI2cReceiveBytes+0xe0>
4002353c:	e1a00000 	nop			; (mov r0, r0)
40023540:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023544:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023548:	e110000b 	tst	r0, fp
4002354c:	0a000000 	beq	40023554 <CyU3PI2cReceiveBytes+0x128>
40023550:	e3a0804a 	mov	r8, #74	; 0x4a
40023554:	e3580000 	cmp	r8, #0
40023558:	0a000005 	beq	40023574 <CyU3PI2cReceiveBytes+0x148>
4002355c:	e3a00001 	mov	r0, #1
40023560:	ebfffebe 	bl	40023060 <CyU3PI2cErrorRecovery>
40023564:	e3500000 	cmp	r0, #0
40023568:	0a000000 	beq	40023570 <CyU3PI2cReceiveBytes+0x144>
4002356c:	e3a08054 	mov	r8, #84	; 0x54
40023570:	ea000005 	b	4002358c <CyU3PI2cReceiveBytes+0x160>
40023574:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023578:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
4002357c:	e7c5000a 	strb	r0, [r5, sl]
40023580:	e28aa001 	add	sl, sl, #1
40023584:	e15a0006 	cmp	sl, r6
40023588:	3affffdc 	bcc	40023500 <CyU3PI2cReceiveBytes+0xd4>
4002358c:	e1a00000 	nop			; (mov r0, r0)
40023590:	e3580000 	cmp	r8, #0
40023594:	0a000002 	beq	400235a4 <CyU3PI2cReceiveBytes+0x178>
40023598:	e1b00007 	movs	r0, r7
4002359c:	e2477001 	sub	r7, r7, #1
400235a0:	1affffcc 	bne	400234d8 <CyU3PI2cReceiveBytes+0xac>
400235a4:	e1a00000 	nop			; (mov r0, r0)
400235a8:	e358004a 	cmp	r8, #74	; 0x4a
400235ac:	1a000007 	bne	400235d0 <CyU3PI2cReceiveBytes+0x1a4>
400235b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235b4:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
400235b8:	e3190040 	tst	r9, #64	; 0x40
400235bc:	0a000000 	beq	400235c4 <CyU3PI2cReceiveBytes+0x198>
400235c0:	e3a08045 	mov	r8, #69	; 0x45
400235c4:	e3190080 	tst	r9, #128	; 0x80
400235c8:	0a000000 	beq	400235d0 <CyU3PI2cReceiveBytes+0x1a4>
400235cc:	e3a08055 	mov	r8, #85	; 0x55
400235d0:	eb000004 	bl	400235e8 <CyU3PI2cReleaseLock>
400235d4:	e1a00008 	mov	r0, r8
400235d8:	eaffff9d 	b	40023454 <CyU3PI2cReceiveBytes+0x28>
400235dc:	40030ef4 	.word	0x40030ef4
400235e0:	40030ef0 	.word	0x40030ef0
400235e4:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

400235e8 <CyU3PI2cReleaseLock>:
400235e8:	e92d4010 	push	{r4, lr}
400235ec:	e59f0030 	ldr	r0, [pc, #48]	; 40023624 <CyU3PI2cReleaseLock+0x3c>
400235f0:	e5900000 	ldr	r0, [r0]
400235f4:	e3500000 	cmp	r0, #0
400235f8:	1a000001 	bne	40023604 <CyU3PI2cReleaseLock+0x1c>
400235fc:	e3a00044 	mov	r0, #68	; 0x44
40023600:	e8bd8010 	pop	{r4, pc}
40023604:	e59f001c 	ldr	r0, [pc, #28]	; 40023628 <CyU3PI2cReleaseLock+0x40>
40023608:	ebff9a8a 	bl	4000a038 <_txe_mutex_put>
4002360c:	e3500000 	cmp	r0, #0
40023610:	0a000001 	beq	4002361c <CyU3PI2cReleaseLock+0x34>
40023614:	e3a0001d 	mov	r0, #29
40023618:	eafffff8 	b	40023600 <CyU3PI2cReleaseLock+0x18>
4002361c:	e3a00000 	mov	r0, #0
40023620:	eafffff6 	b	40023600 <CyU3PI2cReleaseLock+0x18>
40023624:	40030ef8 	.word	0x40030ef8
40023628:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cSetConfig:

4002362c <CyU3PI2cSetConfig>:
4002362c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023630:	e1a04000 	mov	r4, r0
40023634:	e1a05001 	mov	r5, r1
40023638:	e59f01e0 	ldr	r0, [pc, #480]	; 40023820 <CyU3PI2cSetConfig+0x1f4>
4002363c:	e5900000 	ldr	r0, [r0]
40023640:	e3500000 	cmp	r0, #0
40023644:	1a000001 	bne	40023650 <CyU3PI2cSetConfig+0x24>
40023648:	e3a00042 	mov	r0, #66	; 0x42
4002364c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023650:	e3540000 	cmp	r4, #0
40023654:	1a000001 	bne	40023660 <CyU3PI2cSetConfig+0x34>
40023658:	e3a00041 	mov	r0, #65	; 0x41
4002365c:	eafffffa 	b	4002364c <CyU3PI2cSetConfig+0x20>
40023660:	e5940004 	ldr	r0, [r4, #4]
40023664:	e3500000 	cmp	r0, #0
40023668:	1a000003 	bne	4002367c <CyU3PI2cSetConfig+0x50>
4002366c:	e3550000 	cmp	r5, #0
40023670:	0a000001 	beq	4002367c <CyU3PI2cSetConfig+0x50>
40023674:	e3a00040 	mov	r0, #64	; 0x40
40023678:	eafffff3 	b	4002364c <CyU3PI2cSetConfig+0x20>
4002367c:	ebfffeda 	bl	400231ec <CyU3PI2cGetLock>
40023680:	e1a06000 	mov	r6, r0
40023684:	e3560000 	cmp	r6, #0
40023688:	0a000001 	beq	40023694 <CyU3PI2cSetConfig+0x68>
4002368c:	e1a00006 	mov	r0, r6
40023690:	eaffffed 	b	4002364c <CyU3PI2cSetConfig+0x20>
40023694:	e3a00000 	mov	r0, #0
40023698:	e59f1184 	ldr	r1, [pc, #388]	; 40023824 <CyU3PI2cSetConfig+0x1f8>
4002369c:	e5810000 	str	r0, [r1]
400236a0:	e5940000 	ldr	r0, [r4]
400236a4:	ebffc0ee 	bl	40013a64 <CyU3PI2cSetClock>
400236a8:	e1a06000 	mov	r6, r0
400236ac:	e3560000 	cmp	r6, #0
400236b0:	1a00000e 	bne	400236f0 <CyU3PI2cSetConfig+0xc4>
400236b4:	e3a00206 	mov	r0, #1610612736	; 0x60000000
400236b8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400236bc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400236c0:	e1e07741 	mvn	r7, r1, asr #14
400236c4:	ea000004 	b	400236dc <CyU3PI2cSetConfig+0xb0>
400236c8:	e1b00007 	movs	r0, r7
400236cc:	e2477001 	sub	r7, r7, #1
400236d0:	1a000001 	bne	400236dc <CyU3PI2cSetConfig+0xb0>
400236d4:	e3a06054 	mov	r6, #84	; 0x54
400236d8:	ea000003 	b	400236ec <CyU3PI2cSetConfig+0xc0>
400236dc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236e0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400236e4:	e3100008 	tst	r0, #8
400236e8:	0afffff6 	beq	400236c8 <CyU3PI2cSetConfig+0x9c>
400236ec:	e1a00000 	nop			; (mov r0, r0)
400236f0:	e3560000 	cmp	r6, #0
400236f4:	1a00000b 	bne	40023728 <CyU3PI2cSetConfig+0xfc>
400236f8:	e59f7128 	ldr	r7, [pc, #296]	; 40023828 <CyU3PI2cSetConfig+0x1fc>
400236fc:	ea000004 	b	40023714 <CyU3PI2cSetConfig+0xe8>
40023700:	e1b00007 	movs	r0, r7
40023704:	e2477001 	sub	r7, r7, #1
40023708:	1a000001 	bne	40023714 <CyU3PI2cSetConfig+0xe8>
4002370c:	e3a06054 	mov	r6, #84	; 0x54
40023710:	ea000003 	b	40023724 <CyU3PI2cSetConfig+0xf8>
40023714:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023718:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002371c:	e3100002 	tst	r0, #2
40023720:	1afffff6 	bne	40023700 <CyU3PI2cSetConfig+0xd4>
40023724:	e1a00000 	nop			; (mov r0, r0)
40023728:	e3560000 	cmp	r6, #0
4002372c:	0a000002 	beq	4002373c <CyU3PI2cSetConfig+0x110>
40023730:	ebffffac 	bl	400235e8 <CyU3PI2cReleaseLock>
40023734:	e1a00006 	mov	r0, r6
40023738:	eaffffc3 	b	4002364c <CyU3PI2cSetConfig+0x20>
4002373c:	e3a00000 	mov	r0, #0
40023740:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023744:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023748:	e3a06000 	mov	r6, #0
4002374c:	e5940000 	ldr	r0, [r4]
40023750:	e59f10d4 	ldr	r1, [pc, #212]	; 4002382c <CyU3PI2cSetConfig+0x200>
40023754:	e1500001 	cmp	r0, r1
40023758:	8a000000 	bhi	40023760 <CyU3PI2cSetConfig+0x134>
4002375c:	e3a06004 	mov	r6, #4
40023760:	e5940004 	ldr	r0, [r4, #4]
40023764:	e3500000 	cmp	r0, #0
40023768:	0a000007 	beq	4002378c <CyU3PI2cSetConfig+0x160>
4002376c:	e3866001 	orr	r6, r6, #1
40023770:	e3a00001 	mov	r0, #1
40023774:	e59f10b4 	ldr	r1, [pc, #180]	; 40023830 <CyU3PI2cSetConfig+0x204>
40023778:	e5810000 	str	r0, [r1]
4002377c:	e1d400bc 	ldrh	r0, [r4, #12]
40023780:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023784:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023788:	ea000005 	b	400237a4 <CyU3PI2cSetConfig+0x178>
4002378c:	e3a00000 	mov	r0, #0
40023790:	e59f1098 	ldr	r1, [pc, #152]	; 40023830 <CyU3PI2cSetConfig+0x204>
40023794:	e5810000 	str	r0, [r1]
40023798:	e59f0094 	ldr	r0, [pc, #148]	; 40023834 <CyU3PI2cSetConfig+0x208>
4002379c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237a0:	e5810414 	str	r0, [r1, #1044]	; 0x414
400237a4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400237a8:	e5806400 	str	r6, [r0, #1024]	; 0x400
400237ac:	e59f0084 	ldr	r0, [pc, #132]	; 40023838 <CyU3PI2cSetConfig+0x20c>
400237b0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237b4:	e5810440 	str	r0, [r1, #1088]	; 0x440
400237b8:	e5940008 	ldr	r0, [r4, #8]
400237bc:	e5810410 	str	r0, [r1, #1040]	; 0x410
400237c0:	e3e00000 	mvn	r0, #0
400237c4:	e5810408 	str	r0, [r1, #1032]	; 0x408
400237c8:	e1a00005 	mov	r0, r5
400237cc:	eb0000a8 	bl	40023a74 <CyU3PRegisterI2cCallBack>
400237d0:	e3550000 	cmp	r5, #0
400237d4:	0a000003 	beq	400237e8 <CyU3PI2cSetConfig+0x1bc>
400237d8:	e59f005c 	ldr	r0, [pc, #92]	; 4002383c <CyU3PI2cSetConfig+0x210>
400237dc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237e0:	e581040c 	str	r0, [r1, #1036]	; 0x40c
400237e4:	ea000002 	b	400237f4 <CyU3PI2cSetConfig+0x1c8>
400237e8:	e3a00000 	mov	r0, #0
400237ec:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237f0:	e581040c 	str	r0, [r1, #1036]	; 0x40c
400237f4:	e3a00001 	mov	r0, #1
400237f8:	e59f1040 	ldr	r1, [pc, #64]	; 40023840 <CyU3PI2cSetConfig+0x214>
400237fc:	e5810000 	str	r0, [r1]
40023800:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023804:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023808:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002380c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023810:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023814:	ebffff73 	bl	400235e8 <CyU3PI2cReleaseLock>
40023818:	e3a00000 	mov	r0, #0
4002381c:	eaffff8a 	b	4002364c <CyU3PI2cSetConfig+0x20>
40023820:	40030ef8 	.word	0x40030ef8
40023824:	40030f00 	.word	0x40030f00
40023828:	00007fff 	.word	0x00007fff
4002382c:	000186a0 	.word	0x000186a0
40023830:	40030ef0 	.word	0x40030ef0
40023834:	0000ffff 	.word	0x0000ffff
40023838:	00000502 	.word	0x00000502
4002383c:	000001c9 	.word	0x000001c9
40023840:	40030ef4 	.word	0x40030ef4

Disassembly of section i.CyU3PI2cTransmitBytes:

40023844 <CyU3PI2cTransmitBytes>:
40023844:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023848:	e1a04000 	mov	r4, r0
4002384c:	e1a05001 	mov	r5, r1
40023850:	e1a06002 	mov	r6, r2
40023854:	e59f020c 	ldr	r0, [pc, #524]	; 40023a68 <CyU3PI2cTransmitBytes+0x224>
40023858:	e5900000 	ldr	r0, [r0]
4002385c:	e3500000 	cmp	r0, #0
40023860:	1a000002 	bne	40023870 <CyU3PI2cTransmitBytes+0x2c>
40023864:	e3a00044 	mov	r0, #68	; 0x44
40023868:	e28dd010 	add	sp, sp, #16
4002386c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40023870:	e59f01f4 	ldr	r0, [pc, #500]	; 40023a6c <CyU3PI2cTransmitBytes+0x228>
40023874:	e5900000 	ldr	r0, [r0]
40023878:	e3500000 	cmp	r0, #0
4002387c:	0a000001 	beq	40023888 <CyU3PI2cTransmitBytes+0x44>
40023880:	e3a00044 	mov	r0, #68	; 0x44
40023884:	eafffff7 	b	40023868 <CyU3PI2cTransmitBytes+0x24>
40023888:	e3550000 	cmp	r5, #0
4002388c:	0a000001 	beq	40023898 <CyU3PI2cTransmitBytes+0x54>
40023890:	e3540000 	cmp	r4, #0
40023894:	1a000001 	bne	400238a0 <CyU3PI2cTransmitBytes+0x5c>
40023898:	e3a00041 	mov	r0, #65	; 0x41
4002389c:	eafffff1 	b	40023868 <CyU3PI2cTransmitBytes+0x24>
400238a0:	e5d40008 	ldrb	r0, [r4, #8]
400238a4:	e3500000 	cmp	r0, #0
400238a8:	0a000002 	beq	400238b8 <CyU3PI2cTransmitBytes+0x74>
400238ac:	e5d40008 	ldrb	r0, [r4, #8]
400238b0:	e3500008 	cmp	r0, #8
400238b4:	da000001 	ble	400238c0 <CyU3PI2cTransmitBytes+0x7c>
400238b8:	e3a00040 	mov	r0, #64	; 0x40
400238bc:	eaffffe9 	b	40023868 <CyU3PI2cTransmitBytes+0x24>
400238c0:	e3560000 	cmp	r6, #0
400238c4:	1a000001 	bne	400238d0 <CyU3PI2cTransmitBytes+0x8c>
400238c8:	e3a00000 	mov	r0, #0
400238cc:	eaffffe5 	b	40023868 <CyU3PI2cTransmitBytes+0x24>
400238d0:	ebfffe45 	bl	400231ec <CyU3PI2cGetLock>
400238d4:	e1a07000 	mov	r7, r0
400238d8:	e3570000 	cmp	r7, #0
400238dc:	0a000001 	beq	400238e8 <CyU3PI2cTransmitBytes+0xa4>
400238e0:	e1a00007 	mov	r0, r7
400238e4:	eaffffdf 	b	40023868 <CyU3PI2cTransmitBytes+0x24>
400238e8:	e3a0ad07 	mov	sl, #448	; 0x1c0
400238ec:	e1a00000 	nop			; (mov r0, r0)
400238f0:	e3a07000 	mov	r7, #0
400238f4:	e5d50000 	ldrb	r0, [r5]
400238f8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400238fc:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023900:	e3a02000 	mov	r2, #0
40023904:	e1a01006 	mov	r1, r6
40023908:	e1a00004 	mov	r0, r4
4002390c:	eb00005c 	bl	40023a84 <MyI2cSendCommand>
40023910:	e1a07000 	mov	r7, r0
40023914:	e3570000 	cmp	r7, #0
40023918:	0a000000 	beq	40023920 <CyU3PI2cTransmitBytes+0xdc>
4002391c:	ea000043 	b	40023a30 <CyU3PI2cTransmitBytes+0x1ec>
40023920:	e3a08001 	mov	r8, #1
40023924:	ea000018 	b	4002398c <CyU3PI2cTransmitBytes+0x148>
40023928:	e59f9140 	ldr	r9, [pc, #320]	; 40023a70 <CyU3PI2cTransmitBytes+0x22c>
4002392c:	ea000004 	b	40023944 <CyU3PI2cTransmitBytes+0x100>
40023930:	e1b00009 	movs	r0, r9
40023934:	e2499001 	sub	r9, r9, #1
40023938:	1a000001 	bne	40023944 <CyU3PI2cTransmitBytes+0x100>
4002393c:	e3a07055 	mov	r7, #85	; 0x55
40023940:	ea000004 	b	40023958 <CyU3PI2cTransmitBytes+0x114>
40023944:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023948:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002394c:	e38a1010 	orr	r1, sl, #16
40023950:	e1100001 	tst	r0, r1
40023954:	0afffff5 	beq	40023930 <CyU3PI2cTransmitBytes+0xec>
40023958:	e1a00000 	nop			; (mov r0, r0)
4002395c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023960:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023964:	e110000a 	tst	r0, sl
40023968:	0a000000 	beq	40023970 <CyU3PI2cTransmitBytes+0x12c>
4002396c:	e3a0704a 	mov	r7, #74	; 0x4a
40023970:	e3570000 	cmp	r7, #0
40023974:	0a000000 	beq	4002397c <CyU3PI2cTransmitBytes+0x138>
40023978:	ea000005 	b	40023994 <CyU3PI2cTransmitBytes+0x150>
4002397c:	e7d50008 	ldrb	r0, [r5, r8]
40023980:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023984:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023988:	e2888001 	add	r8, r8, #1
4002398c:	e1580006 	cmp	r8, r6
40023990:	3affffe4 	bcc	40023928 <CyU3PI2cTransmitBytes+0xe4>
40023994:	e1a00000 	nop			; (mov r0, r0)
40023998:	e1560008 	cmp	r6, r8
4002399c:	1a000013 	bne	400239f0 <CyU3PI2cTransmitBytes+0x1ac>
400239a0:	e3570000 	cmp	r7, #0
400239a4:	1a000011 	bne	400239f0 <CyU3PI2cTransmitBytes+0x1ac>
400239a8:	e59f90c0 	ldr	r9, [pc, #192]	; 40023a70 <CyU3PI2cTransmitBytes+0x22c>
400239ac:	ea000004 	b	400239c4 <CyU3PI2cTransmitBytes+0x180>
400239b0:	e1b00009 	movs	r0, r9
400239b4:	e2499001 	sub	r9, r9, #1
400239b8:	1a000001 	bne	400239c4 <CyU3PI2cTransmitBytes+0x180>
400239bc:	e3a07055 	mov	r7, #85	; 0x55
400239c0:	ea000004 	b	400239d8 <CyU3PI2cTransmitBytes+0x194>
400239c4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239c8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400239cc:	e38a1008 	orr	r1, sl, #8
400239d0:	e1100001 	tst	r0, r1
400239d4:	0afffff5 	beq	400239b0 <CyU3PI2cTransmitBytes+0x16c>
400239d8:	e1a00000 	nop			; (mov r0, r0)
400239dc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239e0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239e4:	e110000a 	tst	r0, sl
400239e8:	0a000000 	beq	400239f0 <CyU3PI2cTransmitBytes+0x1ac>
400239ec:	e3a0704a 	mov	r7, #74	; 0x4a
400239f0:	e3570000 	cmp	r7, #0
400239f4:	0a000006 	beq	40023a14 <CyU3PI2cTransmitBytes+0x1d0>
400239f8:	e3a00001 	mov	r0, #1
400239fc:	ebfffd97 	bl	40023060 <CyU3PI2cErrorRecovery>
40023a00:	e3500000 	cmp	r0, #0
40023a04:	0a000002 	beq	40023a14 <CyU3PI2cTransmitBytes+0x1d0>
40023a08:	ebfffef6 	bl	400235e8 <CyU3PI2cReleaseLock>
40023a0c:	e3a00054 	mov	r0, #84	; 0x54
40023a10:	eaffff94 	b	40023868 <CyU3PI2cTransmitBytes+0x24>
40023a14:	e3570000 	cmp	r7, #0
40023a18:	0a000004 	beq	40023a30 <CyU3PI2cTransmitBytes+0x1ec>
40023a1c:	e59d000c 	ldr	r0, [sp, #12]
40023a20:	e2401001 	sub	r1, r0, #1
40023a24:	e3500000 	cmp	r0, #0
40023a28:	e58d100c 	str	r1, [sp, #12]
40023a2c:	1affffaf 	bne	400238f0 <CyU3PI2cTransmitBytes+0xac>
40023a30:	e1a00000 	nop			; (mov r0, r0)
40023a34:	e357004a 	cmp	r7, #74	; 0x4a
40023a38:	1a000007 	bne	40023a5c <CyU3PI2cTransmitBytes+0x218>
40023a3c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a40:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023a44:	e31b0040 	tst	fp, #64	; 0x40
40023a48:	0a000000 	beq	40023a50 <CyU3PI2cTransmitBytes+0x20c>
40023a4c:	e3a07045 	mov	r7, #69	; 0x45
40023a50:	e31b0080 	tst	fp, #128	; 0x80
40023a54:	0a000000 	beq	40023a5c <CyU3PI2cTransmitBytes+0x218>
40023a58:	e3a07055 	mov	r7, #85	; 0x55
40023a5c:	ebfffee1 	bl	400235e8 <CyU3PI2cReleaseLock>
40023a60:	e1a00007 	mov	r0, r7
40023a64:	eaffff7f 	b	40023868 <CyU3PI2cTransmitBytes+0x24>
40023a68:	40030ef4 	.word	0x40030ef4
40023a6c:	40030ef0 	.word	0x40030ef0
40023a70:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023a74 <CyU3PRegisterI2cCallBack>:
40023a74:	e59f1004 	ldr	r1, [pc, #4]	; 40023a80 <CyU3PRegisterI2cCallBack+0xc>
40023a78:	e5810000 	str	r0, [r1]
40023a7c:	e12fff1e 	bx	lr
40023a80:	40030efc 	.word	0x40030efc

Disassembly of section i.MyI2cSendCommand:

40023a84 <MyI2cSendCommand>:
40023a84:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023a88:	e1a04000 	mov	r4, r0
40023a8c:	e1a06001 	mov	r6, r1
40023a90:	e1a07002 	mov	r7, r2
40023a94:	e3a00000 	mov	r0, #0
40023a98:	e59f1108 	ldr	r1, [pc, #264]	; 40023ba8 <MyI2cSendCommand+0x124>
40023a9c:	e5810000 	str	r0, [r1]
40023aa0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023aa4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023aa8:	e3100202 	tst	r0, #536870912	; 0x20000000
40023aac:	0a000006 	beq	40023acc <MyI2cSendCommand+0x48>
40023ab0:	e3a00000 	mov	r0, #0
40023ab4:	ebfffd69 	bl	40023060 <CyU3PI2cErrorRecovery>
40023ab8:	e1a05000 	mov	r5, r0
40023abc:	e3550000 	cmp	r5, #0
40023ac0:	0a000001 	beq	40023acc <MyI2cSendCommand+0x48>
40023ac4:	e1a00005 	mov	r0, r5
40023ac8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023acc:	e59f80d8 	ldr	r8, [pc, #216]	; 40023bac <MyI2cSendCommand+0x128>
40023ad0:	e1a00000 	nop			; (mov r0, r0)
40023ad4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ad8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023adc:	e3100203 	tst	r0, #805306368	; 0x30000000
40023ae0:	0a000002 	beq	40023af0 <MyI2cSendCommand+0x6c>
40023ae4:	e1b00008 	movs	r0, r8
40023ae8:	e2488001 	sub	r8, r8, #1
40023aec:	1afffff8 	bne	40023ad4 <MyI2cSendCommand+0x50>
40023af0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023af4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023af8:	e3100203 	tst	r0, #805306368	; 0x30000000
40023afc:	0a000001 	beq	40023b08 <MyI2cSendCommand+0x84>
40023b00:	e3a00045 	mov	r0, #69	; 0x45
40023b04:	eaffffef 	b	40023ac8 <MyI2cSendCommand+0x44>
40023b08:	e3a00000 	mov	r0, #0
40023b0c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b10:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023b14:	e5d42008 	ldrb	r2, [r4, #8]
40023b18:	e1a01004 	mov	r1, r4
40023b1c:	e1a0000d 	mov	r0, sp
40023b20:	ebff7f6b 	bl	400038d4 <CyU3PMemCopy>
40023b24:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b28:	e59d0000 	ldr	r0, [sp]
40023b2c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023b30:	e59d0004 	ldr	r0, [sp, #4]
40023b34:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023b38:	e3a00000 	mov	r0, #0
40023b3c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023b40:	e3e00000 	mvn	r0, #0
40023b44:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023b48:	e3a00d07 	mov	r0, #448	; 0x1c0
40023b4c:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023b50:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b54:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023b58:	e1d400ba 	ldrh	r0, [r4, #10]
40023b5c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40023b60:	e3570000 	cmp	r7, #0
40023b64:	0a000004 	beq	40023b7c <MyI2cSendCommand+0xf8>
40023b68:	e5d40008 	ldrb	r0, [r4, #8]
40023b6c:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40023b70:	e38000e0 	orr	r0, r0, #224	; 0xe0
40023b74:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023b78:	ea000003 	b	40023b8c <MyI2cSendCommand+0x108>
40023b7c:	e5d40008 	ldrb	r0, [r4, #8]
40023b80:	e38000c0 	orr	r0, r0, #192	; 0xc0
40023b84:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b88:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023b8c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b90:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40023b94:	e3800010 	orr	r0, r0, #16
40023b98:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b9c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023ba0:	e3a00000 	mov	r0, #0
40023ba4:	eaffffc7 	b	40023ac8 <MyI2cSendCommand+0x44>
40023ba8:	40030f00 	.word	0x40030f00
40023bac:	00007fff 	.word	0x00007fff
